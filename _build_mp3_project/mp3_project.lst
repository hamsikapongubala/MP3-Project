
_build_mp3_project/mp3_project.elf:     file format elf32-littlearm
_build_mp3_project/mp3_project.elf
architecture: armv7e-m, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x000000e5

Program Header:
0x70000001 off    0x0001b8f4 vaddr 0x0000b8f4 paddr 0x0000b8f4 align 2**2
         filesz 0x00000008 memsz 0x00000008 flags r--
    LOAD off    0x00010000 vaddr 0x00000000 paddr 0x00000000 align 2**16
         filesz 0x0000b8fc memsz 0x0000b8fc flags r-x
    LOAD off    0x00020000 vaddr 0x10000000 paddr 0x0000b8fc align 2**16
         filesz 0x00000330 memsz 0x00000b88 flags rw-
    LOAD off    0x00030000 vaddr 0x20000000 paddr 0x20000000 align 2**16
         filesz 0x00000000 memsz 0x00000028 flags rw-
private flags = 5000400: [Version5 EABI] [hard-float ABI]

Sections:
Idx Name             Size      VMA       LMA       File off  Algn  Flags
  0 .text            0000b8f4  00000000  00000000  00010000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx       00000008  0000b8f4  0000b8f4  0001b8f4  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data            00000330  10000000  0000b8fc  00020000  2**2  CONTENTS, ALLOC, LOAD, DATA
  3 .bss             00000858  10000330  0000bc2c  00020330  2**3  ALLOC
  4 .persistent_ram2 00000028  20000000  20000000  00030000  2**2  ALLOC
  5 .debug_info      0001f1e4  00000000  00000000  00020330  2**0  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev    00005754  00000000  00000000  0003f514  2**0  CONTENTS, READONLY, DEBUGGING
  7 .debug_aranges   00000ce8  00000000  00000000  00044c68  2**0  CONTENTS, READONLY, DEBUGGING
  8 .debug_ranges    00001668  00000000  00000000  00045950  2**0  CONTENTS, READONLY, DEBUGGING
  9 .debug_line      000107df  00000000  00000000  00046fb8  2**0  CONTENTS, READONLY, DEBUGGING
 10 .debug_str       0000589f  00000000  00000000  00057797  2**0  CONTENTS, READONLY, DEBUGGING
 11 .comment         00000076  00000000  00000000  0005d036  2**0  CONTENTS, READONLY
 12 .ARM.attributes  00000032  00000000  00000000  0005d0ac  2**0  CONTENTS, READONLY
 13 .debug_frame     00003904  00000000  00000000  0005d0e0  2**2  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc       0000f922  00000000  00000000  000609e4  2**0  CONTENTS, READONLY, DEBUGGING
 15 .stab            00000054  00000000  00000000  00070308  2**2  CONTENTS, READONLY, DEBUGGING
 16 .stabstr         000000ab  00000000  00000000  0007035c  2**0  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
0000b8f4 l    d  .ARM.exidx	00000000 .ARM.exidx
10000000 l    d  .data	00000000 .data
10000330 l    d  .bss	00000000 .bss
20000000 l    d  .persistent_ram2	00000000 .persistent_ram2
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .stab	00000000 .stab
00000000 l    d  .stabstr	00000000 .stabstr
00000000 l    df *ABS*	00000000 interrupt_vector_table.c
00000158 l     F .text	0000001a isr_hard_fault
0000016c l       .text	00000000 handler_address
00000174 l     F .text	0000005c halt
0000a4d4 l     O .text	00000040 table.8042
00000000 l    df *ABS*	00000000 entry_point.c
0000a33c l     O .text	0000000c __FUNCTION__.8190
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 crash.c
20000000 l     O .persistent_ram2	00000028 crash_registers
00000000 l    df *ABS*	00000000 syscall.c
10000000 l     O .data	00000004 next_free_heap.5390
10000004 l     O .data	00000004 next_free_heap.5399
00000000 l    df *ABS*	00000000 startup.c
00000000 l    df *ABS*	00000000 acceleration.c
00000000 l    df *ABS*	00000000 sensors.c
00000000 l    df *ABS*	00000000 ff.c
00000426 l     F .text	00000010 ld_dword
00000436 l     F .text	00000010 st_dword
00000446 l     F .text	0000001c mem_cmp
00000462 l     F .text	00000016 clst2sect
00000478 l     F .text	0000001e sum_sfn
00000496 l     F .text	0000002a get_ldnumber
000004c0 l     F .text	00000012 mem_cpy.part.0
000004d2 l     F .text	0000001c ld_clust.isra.3
000004ee l     F .text	00000018 st_clust.isra.4
00000506 l     F .text	00000040 sync_window.part.6
00000546 l     F .text	00000044 move_window
0000058c l     F .text	00000074 check_fs
00000600 l     F .text	000002c0 find_volume
000008c0 l     F .text	000000f8 put_fat
000009b8 l     F .text	000000b4 get_fat.isra.10
00000a6c l     F .text	00000082 dir_sdi
00000aee l     F .text	000000e8 create_chain
00000bd6 l     F .text	0000006e remove_chain
00000c44 l     F .text	00000016 unlock_fs
00000c5a l     F .text	00000050 validate
00000caa l     F .text	0000005c dir_clear
00000d06 l     F .text	000000aa dir_next
00000db0 l     F .text	00000148 dir_find
00000ef8 l     F .text	00000294 follow_path
0000118c l     F .text	000000a0 sync_fs
0000122c l     F .text	00000288 dir_register
10000330 l     O .bss	00000004 FatFs
10000334 l     O .bss	00000002 Fsid
0000a6a4 l     O .text	00000080 ExCvt
0000a724 l     O .text	0000000d LfnOfs
00000000 l    df *ABS*	00000000 ffsystem.c
00000000 l    df *ABS*	00000000 ffunicode.c
0000a74c l     O .text	000001f2 cvt1.8022
0000a93e l     O .text	000000bc cvt2.8023
0000a9fa l     O .text	00000100 uc437
00000000 l    df *ABS*	00000000 disk_glue_logic.c
00000000 l    df *ABS*	00000000 fatfs_time.c
00000000 l    df *ABS*	00000000 sd_card.c
00001b02 l     F .text	00000028 sd_card__wait_for_ready
00001b2c l     F .text	00000020 sd_card__power_off
00001b4c l     F .text	0000005a sd_card__transmit_datablock
00001ba6 l     F .text	00000086 sd_card__send_command
00001c2c l     F .text	00000042 sd_card__read_datablock
10000336 l     O .bss	00000001 g_card_type
10000008 l     O .data	00000001 g_disk_status
00000000 l    df *ABS*	00000000 system_calls.c
00002110 l     F .text	0000001e system_calls__print_and_halt
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 peripherals_init.c
10000337 l     O .bss	00000020 rxq_storage.9212
10000358 l     O .bss	00000050 rxq_struct.9210
100003a8 l     O .bss	00000238 sd_card_drive.9203
100005e0 l     O .bss	00000080 txq_storage.9213
10000660 l     O .bss	00000050 txq_struct.9211
0000ab5f l     O .text	00000011 __FUNCTION__.9191
00000000 l    df *ABS*	00000000 ssp2_mutex.c
100006b0 l     O .bss	00000004 spi2_mutex_handle
100006b4 l     O .bss	00000050 spi2_mutex_memory
00000000 l    df *ABS*	00000000 sys_time.c
000023a8 l     F .text	00000024 sys_time__one_minute_isr
10000704 l     O .bss	00000004 sys_time__one_minute_counter
00000000 l    df *ABS*	00000000 uart_printf.c
00000000 l    df *ABS*	00000000 main.c
10000708 l     O .bss	00000004 mp3_data_q
1000070c l     O .bss	00000004 song_name_q
00000000 l    df *ABS*	00000000 rtos_hooks.c
10000710 l     O .bss	00000008 freertos_run_time_counter_offset
10000718 l     O .bss	00000190 uxIdleTaskStack.7855
100008a8 l     O .bss	0000005c xIdleTaskTCB.7854
00000000 l    df *ABS*	00000000 freertos_interrupt_handlers.c
00000000 l    df *ABS*	00000000 port.c
00002724 l     F .text	00000022 prvPortStartFirstTask
0000274c l     F .text	0000000e vPortEnableVFP
00002760 l     F .text	0000003c prvTaskExitError
000027f0 l       .text	00000000 pxCurrentTCBConst2
000028c0 l       .text	00000000 pxCurrentTCBConst
10000904 l     O .bss	00000001 ucMaxSysCallPriority
10000908 l     O .bss	00000004 ulMaxPRIGROUPValue
1000090c l     O .bss	00000004 uxCriticalNesting
00000000 l    df *ABS*	00000000 heap_3.c
00000000 l    df *ABS*	00000000 list.c
00000000 l    df *ABS*	00000000 queue.c
00002b32 l     F .text	00000016 prvIsQueueEmpty
00002b48 l     F .text	0000006a prvCopyDataToQueue
00002bb2 l     F .text	0000002a prvCopyDataFromQueue
00002bdc l     F .text	00000070 prvUnlockQueue
00000000 l    df *ABS*	00000000 tasks.c
00003430 l     F .text	000000f4 prvAddNewTaskToReadyList
00003524 l     F .text	00000028 prvIdleTask
0000354c l     F .text	00000024 prvResetNextTaskUnblockTime
00003570 l     F .text	00000098 prvInitialiseNewTask.isra.2
00003608 l     F .text	0000008c prvAddCurrentTaskToDelayedList
10000914 l     O .bss	00000004 pxDelayedTaskList
10000918 l     O .bss	00000004 pxOverflowDelayedTaskList
1000091c l     O .bss	000000c8 pxReadyTasksLists
100009e4 l     O .bss	00000004 ulTaskSwitchedInTime
100009e8 l     O .bss	00000004 uxCurrentNumberOfTasks
100009ec l     O .bss	00000004 uxPendedTicks
100009f0 l     O .bss	00000004 uxSchedulerSuspended
100009f4 l     O .bss	00000004 uxTaskNumber
100009f8 l     O .bss	00000004 uxTopReadyPriority
100009fc l     O .bss	00000014 xDelayedTaskList1
10000a10 l     O .bss	00000014 xDelayedTaskList2
10000a24 l     O .bss	00000004 xIdleTaskHandle
10000a28 l     O .bss	00000004 xNextTaskUnblockTime
10000a2c l     O .bss	00000004 xNumOfOverflows
10000a30 l     O .bss	00000014 xPendingReadyList
10000a44 l     O .bss	00000004 xSchedulerRunning
10000a48 l     O .bss	00000014 xSuspendedTaskList
10000a5c l     O .bss	00000004 xTickCount
10000a60 l     O .bss	00000004 xYieldPending
00000000 l    df *ABS*	00000000 board_io.c
10000a64 l     O .bss	00000001 board_io__led0
10000a65 l     O .bss	00000001 board_io__led1
10000a66 l     O .bss	00000001 board_io__led2
10000a67 l     O .bss	00000001 board_io__led3
10000a68 l     O .bss	00000001 board_io__sw0
10000a69 l     O .bss	00000001 board_io__sw1
10000a6a l     O .bss	00000001 board_io__sw2
10000a6b l     O .bss	00000001 board_io__sw3
00000000 l    df *ABS*	00000000 gpio.c
0000b464 l     O .text	00000018 gpio_memory_map
00000000 l    df *ABS*	00000000 hw_timer.c
0000b47c l     O .text	00000030 hw_timers
00000000 l    df *ABS*	00000000 i2c.c
00004328 l     F .text	000000e8 i2c__transfer
00004410 l     F .text	000001d4 i2c__handle_interrupt
000045e4 l     F .text	0000000c i2c2_isr
000045f0 l     F .text	0000000c i2c1_isr
000045fc l     F .text	0000000c i2c0_isr
1000000c l     O .data	0000006c i2c_structs
00000000 l    df *ABS*	00000000 i2c_slave_init.c
10000a6c l     O .bss	00000100 slave_memory
00000000 l    df *ABS*	00000000 lpc_peripherals.c
00004770 l     F .text	00000002 lpc_peripheral__halt_handler
10000b6c l     O .bss	00000004 memory_write_to_avoid_spurious_interrupt.7702
10000078 l     O .data	000000a4 lpc_peripheral__isr_registrations
0000b543 l     O .text	0000005a lpc_peripheral_pconp_bit_map
00000000 l    df *ABS*	00000000 ssp2.c
00004820 l     F .text	00000098 ssp2__dma_transfer_block
00000000 l    df *ABS*	00000000 uart.c
00004948 l     F .text	00000094 uart__isr_common
000049dc l     F .text	0000000c uart3_isr
000049e8 l     F .text	0000000c uart2_isr
000049f4 l     F .text	0000000c uart1_isr
00004a00 l     F .text	0000000c uart0_isr
1000011c l     O .data	00000040 uarts
0000b5b8 l     O .text	00000010 uart__isrs
0000b5c8 l     O .text	00000004 uart_peripheral_ids
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 fputc.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 lock.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 memcpy-stub.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
000052b4 l     F .text	0000002e __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_float.c
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 nano-vfscanf_float.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 setvbuf.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 strncpy.c
00000000 l    df *ABS*	00000000 strtod.c
000065be l     F .text	00000038 sulp
0000b71c l     O .text	00000014 fpi.7522
0000b730 l     O .text	00000014 fpinan.7558
0000b748 l     O .text	00000028 tinytens
00000000 l    df *ABS*	00000000 strtol.c
0000719c l     F .text	000000f0 _strtol_l.isra.0
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00007410 l     F .text	00000112 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00008220 l     F .text	00000048 std
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
00008408 l     F .text	00000074 rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
000088f0 l     F .text	00000024 L_shift
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 lib_a-memchr.o
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 mprec.c
0000b8e8 l     O .text	0000000c p05.7444
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
00000000 l    df *ABS*	00000000 s_nan.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _arm_muldivdf3.o
00000000 l    df *ABS*	00000000 _arm_cmpdf2.o
00000000 l    df *ABS*	00000000 _arm_unorddf2.o
00000000 l    df *ABS*	00000000 _arm_fixdfsi.o
00000000 l    df *ABS*	00000000 _arm_fixunsdfsi.o
00000000 l    df *ABS*	00000000 _arm_truncdfsf2.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 close.c
00000000 l    df *ABS*	00000000 fstat.c
00000000 l    df *ABS*	00000000 lseek.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 impure.c
10000160 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 lnumeric.c
100001c0 l     O .data	00000002 numempty
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 reent.c
00009864 g     F .text	00000010 _malloc_usable_size_r
00005558 g     F .text	000000ba __cvt
00006260 g     F .text	00000028 putchar
0000a144 g     F .text	0000002c .hidden __aeabi_dcmpun
000093b6 g     F .text	00000042 __any_on
00009820 g     F .text	00000020 _isatty_r
0000a108 g     F .text	00000012 .hidden __aeabi_dcmple
00004bdc g     F .text	0000007c uart__put
00006288 g     F .text	000000dc _puts_r
0000a044 g     F .text	0000007a .hidden __cmpdf2
00009840 g     F .text	00000024 _lseek_r
0000a044 g     F .text	0000007a .hidden __eqdf2
000048b8 g     F .text	0000002c ssp2__set_max_clock
00002838 g     F .text	00000028 vPortExitCritical
00000422 g     F .text	00000004 sensors__init
00009bb4 g     F .text	0000005a .hidden __floatdidf
00004a6c g     F .text	00000028 uart__is_initialized
000061a0 g     F .text	00000030 printf
10000b78 g     O .bss	00000001 __lock___atexit_recursive_mutex
000023cc g     F .text	0000002c sys_time__init
00009772 g     F .text	00000024 __sseek
000082d0 g     F .text	00000070 __sinit
00007290 g     F .text	000000a4 __swbuf_r
00008274 g     F .text	0000002c __sfmoreglue
00008bfc g     F .text	0000000c __malloc_unlock
000003e8 g     F .text	00000018 startup__initialize_interrupts
00007190 g     F .text	0000000c _strtod_r
0000253c g     F .text	00000038 mp3_file_reader_task
0000847c g     F .text	0000002a __hexdig_fun
10000b79 g     O .bss	00000001 __lock___arc4random_mutex
00005120 g     F .text	00000034 memmove
000040cc g     F .text	0000000c board_io__get_led3
00002f54 g     F .text	000000bc xQueueGenericSendFromISR
00008c08 g     F .text	00000068 _Balloc
0000b8fc g       .ARM.exidx	00000000 __exidx_end
000047f0 g     F .text	00000030 lpc_peripheral__enable_interrupt
0000a034 g     F .text	0000008a .hidden __gtdf2
00003f60 g     F .text	00000010 vRunTimeStatIsrExit
10000910 g     O .bss	00000004 pxCurrentTCB
0000a2a0 g     F .text	0000002e .hidden __aeabi_d2lz
000097fc g     F .text	00000024 _fstat_r
10000b84 g     O .bss	00000004 errno
00002574 g     F .text	00000018 mp3_file_decoder
0000b8fc g       .ARM.exidx	00000000 _etext
0000258c g     F .text	0000003c play_file_task
0000a0d0 g     F .text	00000010 .hidden __aeabi_cdcmple
00004a0c g     F .text	00000060 uart__init
000019d8 g     F .text	0000008c ff_wtoupper
0000022c g     F .text	00000040 clock__initialize_system_clock_96mhz
00003c78 g     F .text	00000018 vTaskInternalSetTimeOutState
00004318 g     F .text	00000010 hw_timer__set_value
00004b18 g     F .text	00000024 uart__polled_put
00002920 g     F .text	00000100 xPortStartScheduler
00005104 g     F .text	0000001c memcpy
00003bc8 g     F .text	00000030 vTaskPlaceOnEventList
0000893c g     F .text	00000120 __hexnan
0000a0c0 g     F .text	00000020 .hidden __aeabi_cdrcmple
00006394 g     F .text	00000184 setvbuf
00008268 g     F .text	0000000c _cleanup_r
00009518 g     F .text	000001f0 _svfprintf_r
00009b3c g     F .text	00000022 .hidden __floatsidf
000028f0  w    F .text	00000030 vPortSetupTimerInterrupt
0000a03c g     F .text	00000082 .hidden __ltdf2
000028c4 g     F .text	0000002c xPortSysTickHandler
00001a64 g     F .text	0000001c disk_initialize
00004c58 g     F .text	00000000 .hidden __aeabi_uldivmod
00006364 g     F .text	00000010 puts
00002f04 g     F .text	0000002a xQueueCreateMutexStatic
00002a96 g     F .text	0000001a vPortFree
0000931c g     F .text	00000066 __ratio
000040b4 g     F .text	0000000c board_io__get_led1
000031f0 g     F .text	00000180 xQueueSemaphoreTake
00004094 g     F .text	00000014 board_io__sd_card_is_present
0000194a g     F .text	0000000a ff_del_syncobj
000050e4 g     F .text	00000010 malloc
00002a20 g     F .text	00000058 vPortValidateInterruptPriority
000047cc g     F .text	00000024 lpc_peripheral__is_powered_on
0000a31c g     F .text	00000010 _fstat
0000b820 g     O .text	000000c8 __mprec_tens
00004608 g     F .text	000000b4 i2c__initialize
00002860 g     F .text	00000064 xPortPendSVHandler
10000330 g       .bss	00000000 _bss_start
0000a1c0 g     F .text	00000040 .hidden __fixunsdfsi
00002acc g     F .text	00000018 vListInsertEnd
00001a80 g     F .text	0000000a disk_status
00009b1c g     F .text	0000001e .hidden __aeabi_ui2d
00008a5c g     F .text	00000008 _localeconv_r
20008000 g       *ABS*	00000000 __top_ram_32k
00008e30 g     F .text	00000012 __i2b
000041c0 g     F .text	00000020 gpio__set_as_output
00004c88 g     F .text	000002d0 .hidden __udivmoddi4
00009898 g     F .text	00000000 .hidden __aeabi_drsub
00006374 g     F .text	00000020 _sbrk_r
00004174 g     F .text	00000024 gpio__set_as_input
00002720 g     F .text	00000004 xPortSysTickHandler_wrapper
00004102 g     F .text	0000002a gpio__construct_with_function
00009874 g     F .text	00000024 _read_r
00002ac6 g     F .text	00000006 vListInitialiseItem
00001ada g     F .text	00000024 disk_ioctl
0000a0f4 g     F .text	00000012 .hidden __aeabi_dcmplt
000030b4 g     F .text	0000013c xQueueReceive
00009b60 g     F .text	00000042 .hidden __extendsfdf2
00009e64 g     F .text	000001d0 .hidden __aeabi_ddiv
000098a4 g     F .text	00000276 .hidden __adddf3
20008000 g       *ABS*	00000000 _heap_end
000091e0 g     F .text	000000a0 __b2d
0000b8f4 g       .text	00000000 __exidx_start
10000b7a g     O .bss	00000001 __lock___env_recursive_mutex
00009c10 g     F .text	00000254 .hidden __aeabi_dmul
00002130 g     F .text	00000028 _isatty
10000b7b g     O .bss	00000001 __lock___sinit_recursive_mutex
0000b6d0 g     O .text	00000004 _global_impure_ptr
00009414 g     F .text	0000004c _realloc_r
0000414c g     F .text	00000028 gpio__enable_pull_down_resistors
00004aa8 g     F .text	00000070 uart__enable_queues
0000b7f8 g     O .text	00000028 __mprec_bigtens
00008d14 g     F .text	0000007c __s2b
00004248 g     F .text	0000001c gpio__reset
0000422c g     F .text	0000001c gpio__set
00009b1c g     F .text	0000001e .hidden __floatunsidf
00004928 g     F .text	00000014 ssp2__exchange_byte
00000344 g     F .text	00000054 _sbrk
000090a6 g     F .text	00000034 __mcmp
00002a78 g     F .text	0000001e pvPortMalloc
10010000 g       *ABS*	00000000 __end_of_unused_ram64
0000340c g     F .text	00000024 vQueueDelete
00002ab0 g     F .text	00000016 vListInitialise
00002436 g     F .text	0000002a uart_puts__polled
0000a200 g     F .text	0000009e .hidden __aeabi_d2f
00080000 g       *ABS*	00000000 __top_flash
10000b88 g       .bss	00000000 _bss_end
0000a2d0 g     F .text	0000003c .hidden __aeabi_d2ulz
00002da8 g     F .text	0000015c xQueueGenericSend
00001970 g     F .text	00000040 ff_uni2oem
00002350 g     F .text	00000034 spi2_mutex__acquire
000065f8 g     F .text	00000b98 _strtod_l
0000473c g     F .text	00000018 i2c__write_single
00008914 g     F .text	00000028 __match
000042cc g     F .text	00000024 hw_timer__enable_match_isr
00002230 g     F .text	00000120 peripherals_init
00008d90 g     F .text	00000040 __hi0bits
00003f70 g     F .text	00000104 board_io__initialize
0000a170 g     F .text	0000004e .hidden __fixdfsi
00003dd4 g     F .text	0000009c xTaskPriorityDisinherit
20000028 g       .persistent_ram2	00000000 _heap_start
10000b7c g     O .bss	00000001 __lock___malloc_recursive_mutex
00004208 g     F .text	00000024 gpio__get
00001ddc g     F .text	0000008c sd_card__read
00004f80 g     F .text	00000070 _fputc_r
000061d0 g     F .text	00000090 _putc_r
10000b88 g       .bss	00000000 __start_of_unused_ram64
00003bf8 g     F .text	00000080 xTaskRemoveFromEventList
0000268c g     F .text	00000010 vApplicationMallocFailedHook
000001d0 g     F .text	0000004c isr_hard_fault_handler
00004f5c g     F .text	00000024 fprintf
000098a4 g     F .text	00000276 .hidden __aeabi_dadd
0000a03c g     F .text	00000082 .hidden __ledf2
10000000 g       .data	00000000 _bdata_vma
00004764 g     F .text	0000000c i2c_slave_callback__write_memory
00008f64 g     F .text	0000009c __pow5mult
00009ba4 g     F .text	0000006a .hidden __aeabi_ul2d
0000b780 g     O .text	00000020 __sf_fake_stderr
00004284 g     F .text	00000048 hw_timer__enable
000050e0 g     F .text	00000002 __retarget_lock_release_recursive
00000398 g     F .text	0000003c startup__initialize_ram
00001c90 g     F .text	0000013c sd_card__initialize
00009460 g     F .text	000000b6 __ssputs_r
00000224 g     F .text	00000008 clock__get_peripheral_clock_hz
00003f20 g     F .text	00000018 pvTaskIncrementMutexHeldCount
00000284 g     F .text	000000c0 crash__report_if_occurred
0000a130 g     F .text	00000012 .hidden __aeabi_dcmpgt
10010000 g       *ABS*	00000000 __top_ram_64k
000052e2 g     F .text	00000024 __sfputs_r
000082a0 g     F .text	0000000c __sfp_lock_acquire
00008b50 g     F .text	00000000 memchr
00005678  w    F .text	00000454 _printf_float
00003c90 g     F .text	00000074 xTaskCheckForTimeOut
00005164 g     F .text	0000009c _free_r
00003d30 g     F .text	000000a4 xTaskPriorityInherit
0000a11c g     F .text	00000012 .hidden __aeabi_dcmpge
0000190e g     F .text	00000028 f_close
000098a0 g     F .text	0000027a .hidden __aeabi_dsub
000037d0 g     F .text	00000010 vTaskSuspendAll
00009ba4 g     F .text	0000006a .hidden __floatundidf
0000a32c g     F .text	00000010 _lseek
00009000 g     F .text	000000a6 __lshift
00004264 g     F .text	0000001e gpio__toggle
00002b12 g     F .text	00000020 uxListRemove
000016f0 g     F .text	0000017c f_read
000026ac g     F .text	00000040 configASSERT_callback
00006574 g     F .text	00000024 strncmp
00008e42 g     F .text	00000120 __multiply
00003694 g     F .text	0000006c xTaskCreateStatic
00001936 g     F .text	00000014 ff_cre_syncobj
00006598 g     F .text	00000026 strncpy
00009280 g     F .text	0000009c __d2b
00003a38 g     F .text	000000bc vTaskSwitchContext
000046e0 g     F .text	0000001e i2c__read_single
00004198 g     F .text	00000028 gpio__construct_as_input
00002cc8 g     F .text	00000094 xQueueGenericCreateStatic
000097dc g     F .text	00000020 _close_r
00009b3c g     F .text	00000022 .hidden __aeabi_i2d
000026ec g     F .text	00000018 vApplicationGetIdleTaskMemory
00001e68 g     F .text	000000a8 sd_card__write
10000330 g       .data	00000000 _data_end
00007334 g     F .text	000000dc __swsetup_r
0000493c g     F .text	00000006 ssp2__dma_write_block
00002670 g     F .text	0000001c vApplicationStackOverflowHook
00004f58  w    F .text	00000002 .hidden __aeabi_ldiv0
00003af4 g     F .text	000000d4 vTaskSuspend
00009e64 g     F .text	000001d0 .hidden __divdf3
00008340 g     F .text	0000008c __sfp
00009382 g     F .text	00000034 __copybits
000082c4 g     F .text	0000000c __sinit_lock_release
00002424 g     F .text	00000012 sys_time__get_uptime_ms
00000000 g       .text	00000000 __base_flash
00009c10 g     F .text	00000254 .hidden __muldf3
000040c0 g     F .text	0000000c board_io__get_led2
00009718 g     F .text	00000022 __sread
00001afe g     F .text	00000004 get_fattime
00008bf0 g     F .text	0000000c __malloc_lock
000081a8 g     F .text	00000078 _fflush_r
00004b88 g     F .text	00000054 uart__polled_get
000093f8 g     F .text	0000001c _calloc_r
000023f8 g     F .text	0000002c sys_time__get_uptime_us
0000b7a0 g     O .text	00000020 __sf_fake_stdin
000050de g     F .text	00000002 __retarget_lock_acquire_recursive
00005154 g     F .text	00000010 memset
00004724 g     F .text	00000018 i2c__detect
000025c8 g     F .text	000000a8 main
00002460 g     F .text	00000050 CLI_simulator
000050dc g     F .text	00000002 __retarget_lock_init_recursive
00001f10 g     F .text	00000200 sd_card__ioctl
0000186c g     F .text	000000a2 f_sync
10000000 g       .text	00000000 __base_ram_64k
00002ae4 g     F .text	0000002e vListInsert
00009796 g     F .text	00000008 __sclose
0000a200 g     F .text	0000009e .hidden __truncdfsf2
0000728c g     F .text	00000004 _strtol_r
000000e4 g       .text	00000000 __init_array_end
000027d0 g     F .text	00000024 vPortSVCHandler
00007528 g     F .text	00000b74 _dtoa_r
00005200 g     F .text	000000b4 _malloc_r
0000979e g     F .text	0000001a __ascii_wctomb
00009bb4 g     F .text	0000005a .hidden __aeabi_l2d
000014b4 g     F .text	00000070 f_mount
00003370 g     F .text	0000009c xQueueReceiveFromISR
00002d5c g     F .text	0000004c xQueueGenericCreate
00004a94 g     F .text	00000014 uart__is_transmit_queue_initialized
000019b0 g     F .text	00000028 ff_oem2uni
000024b0 g     F .text	0000008c open_mp3_file
000048e4 g     F .text	00000044 ssp2__initialize
00001dcc g     F .text	00000010 sd_card__status
0000a2d0 g     F .text	0000003c .hidden __fixunsdfdi
0000a044 g     F .text	0000007a .hidden __nedf2
0000271c g     F .text	00000004 xPortPendSVHandler_wrapper
000046bc g     F .text	00000024 i2c__read_slave_data
000061a0 g     F .text	00000030 iprintf
00001966 g     F .text	0000000a ff_rel_grant
00003904 g     F .text	000000ec xTaskResumeAll
00006524 g     F .text	00000040 sprintf
00002718 g     F .text	00000004 vPortSVCHandler_wrapper
0000375c g     F .text	00000074 vTaskStartScheduler
00005612 g     F .text	00000064 __exponent
00004774 g     F .text	00000034 lpc_peripheral__interrupt_dispatcher
0000a2a0 g     F .text	0000002e .hidden __fixdfdi
000097b8 g     F .text	00000024 _write_r
0000021c g     F .text	00000008 clock__get_core_clock_hz
00006518 g     F .text	0000000c nanf
00005acc g     F .text	000000ea _printf_common
1000015c g     O .data	00000004 _impure_ptr
0000809c g     F .text	0000010c __sflush_r
000000e4 g       .text	00000000 __preinit_array_end
0000412c g     F .text	00000020 gpio__enable_open_drain
00004074 g     F .text	00000010 board_io__sd_card_cs
00002384 g     F .text	00000024 spi2_mutex__release
00009518 g     F .text	000001f0 _svfiprintf_r
00008b2c g     F .text	00000024 __ascii_mbtowc
00009194 g     F .text	0000004c __ulp
00003d04 g     F .text	0000000c vTaskMissedYield
00004084 g     F .text	00000010 board_io__sd_card_ds
0000b7e0 g     O .text	0000000c _C_numeric_locale
00004ff0 g     F .text	00000010 fputc
0000026c g     F .text	00000018 crash__record_get
00001c70 g     F .text	00000020 sd_card__update_status
0000a1c0 g     F .text	00000040 .hidden __aeabi_d2uiz
00009708 g     F .text	00000010 nan
000037e0 g     F .text	00000124 xTaskIncrementTick
00002704 g     F .text	00000014 freertos_hooks__get_run_time_counter_value
00008a64 g     F .text	00000048 __swhatbuf_r
10010000 g       *ABS*	00000000 _estack
0000a0e0 g     F .text	00000012 .hidden __aeabi_dcmpeq
00000400 g     F .text	00000022 acceleration__init
00002c4c g     F .text	0000007c xQueueGenericReset
00002158 g     F .text	00000070 _write
00002224 g     F .text	0000000c delay__ms
00000000 g     O .text	000000e4 interrupt_vector_table
10000b7d g     O .bss	00000001 __lock___at_quick_exit_mutex
00005000 g     F .text	000000cc _fputs_r
20000000 g       .text	00000000 __base_ram_32k
00003700 g     F .text	0000005a xTaskCreate
0000973a g     F .text	00000038 __swrite
00001524 g     F .text	000001cc f_open
00001ab2 g     F .text	00000028 disk_write
00004f5c g     F .text	00000024 fiprintf
00005308 g     F .text	00000250 _vfiprintf_r
000083cc g     F .text	0000003c _fwalk_reent
000040d8 g     F .text	0000002a gpio__set_function
000090da g     F .text	000000ba __mdiff
0000a170 g     F .text	0000004e .hidden __aeabi_d2iz
00001954 g     F .text	00000012 ff_req_grant
0000b8fc g       *ABS*	00000000 _bdata_lma
000039f0 g     F .text	00000048 vTaskDelay
000082ac g     F .text	0000000c __sfp_lock_release
0000b7c0 g     O .text	00000020 __sf_fake_stdout
00006524 g     F .text	00000040 siprintf
00003d10 g     F .text	00000020 xTaskGetSchedulerState
0000b5cc g     O .text	00000101 _ctype_
00003e70 g     F .text	000000b0 vTaskPriorityDisinheritAfterTimeout
000021c8 g     F .text	0000001c _read
000000e4 g       .text	00000000 __init_array_start
00004f58  w    F .text	00000002 .hidden __aeabi_idiv0
0000a144 g     F .text	0000002c .hidden __unorddf2
000042f0 g     F .text	00000018 hw_timer__acknowledge_interrupt
000003d4 g     F .text	00000014 startup__initialize_fpu
10000b7e g     O .bss	00000001 __lock___dd_hash_mutex
00008aac g     F .text	00000080 __smakebuf_r
10000b7f g     O .bss	00000001 __lock___tz_mutex
00006564 g     F .text	00000010 strlen
00001a8a g     F .text	00000028 disk_read
0000279c g     F .text	0000002c pxPortInitialiseStack
00005bb8 g     F .text	00000228 _printf_i
00004b3c g     F .text	0000004c uart__get
0000a0d0 g     F .text	00000010 .hidden __aeabi_cdcmpeq
000040a8 g     F .text	0000000c board_io__get_led0
0000a034 g     F .text	0000008a .hidden __gedf2
000084a8 g     F .text	00000446 __gethex
10000b74 g     O .bss	00000004 __malloc_sbrk_start
00004700 g     F .text	00000024 i2c__write_slave_data
000021e4 g     F .text	00000040 delay__us
00009b60 g     F .text	00000042 .hidden __aeabi_f2d
000050cc g     F .text	00000010 fputs
000027f4 g     F .text	00000044 vPortEnterCritical
000047a8 g     F .text	00000024 lpc_peripheral__turn_on_power_to
10000b70 g     O .bss	00000004 __malloc_free_list
000098a0 g     F .text	0000027a .hidden __subdf3
00005308 g     F .text	00000250 _vfprintf_r
000000e4 g       .text	00000000 __preinit_array_start
00004308 g     F .text	00000010 hw_timer__get_value
00008dd0 g     F .text	00000060 __lo0bits
00003f38 g     F .text	00000028 vRunTimeStatIsrEntry
000000e4 g     F .text	00000074 entry_point
00004754 g     F .text	00000010 i2c_slave_callback__read_memory
000041e0 g     F .text	00000028 gpio__construct_as_output
00002f2e g     F .text	00000024 xQueueCreateMutex
100001c4 g     O .data	0000016c __global_locale
00004942 g     F .text	00000006 ssp2__dma_read_block
10000b80 g     O .bss	00000001 __lock___sfp_recursive_mutex
00003010 g     F .text	000000a4 xQueueGiveFromISR
0000a30c g     F .text	00000010 _close
000050f4 g     F .text	00000010 free
000082b8 g     F .text	0000000c __sinit_lock_acquire
00005de0  w    F .text	000003c0 _scanf_float
00008c9e g     F .text	00000076 __multadd
00008c70 g     F .text	0000002e _Bfree
0000269c g     F .text	00000010 vApplicationIdleHook



Disassembly of section .text:

00000000 <interrupt_vector_table>:
__base_flash():
       0:	00 00 01 10 e5 00 00 00 75 01 00 00 59 01 00 00     ........u...Y...
      10:	75 01 00 00 75 01 00 00 75 01 00 00 75 01 00 00     u...u...u...u...
      20:	75 01 00 00 75 01 00 00 75 01 00 00 19 27 00 00     u...u...u....'..
      30:	75 01 00 00 75 01 00 00 1d 27 00 00 21 27 00 00     u...u....'..!'..
      40:	75 47 00 00 75 47 00 00 75 47 00 00 75 47 00 00     uG..uG..uG..uG..
      50:	75 47 00 00 75 47 00 00 75 47 00 00 75 47 00 00     uG..uG..uG..uG..
      60:	75 47 00 00 75 47 00 00 75 47 00 00 75 47 00 00     uG..uG..uG..uG..
      70:	75 47 00 00 75 47 00 00 75 47 00 00 75 47 00 00     uG..uG..uG..uG..
      80:	75 47 00 00 75 47 00 00 75 47 00 00 75 47 00 00     uG..uG..uG..uG..
      90:	75 47 00 00 75 47 00 00 75 47 00 00 75 47 00 00     uG..uG..uG..uG..
      a0:	75 47 00 00 75 47 00 00 75 47 00 00 75 47 00 00     uG..uG..uG..uG..
      b0:	75 47 00 00 75 47 00 00 75 47 00 00 75 47 00 00     uG..uG..uG..uG..
      c0:	75 47 00 00 75 47 00 00 75 47 00 00 75 47 00 00     uG..uG..uG..uG..
      d0:	75 47 00 00 75 47 00 00 75 47 00 00 75 47 00 00     uG..uG..uG..uG..
      e0:	75 47 00 00                                         uG..

000000e4 <entry_point>:
entry_point():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/entry_point.c:18
extern void main(void);
static void entry_point__halt(void);
static void entry_point__handle_crash_report(void);
static void entry_point__rtos_trace_init_after_mounting_sd_card(void);

void entry_point(void) {
      e4:	b508      	push	{r3, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/entry_point.c:19
  startup__initialize_ram();
      e6:	f000 f957 	bl	398 <startup__initialize_ram>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/entry_point.c:20
  startup__initialize_fpu();
      ea:	f000 f973 	bl	3d4 <startup__initialize_fpu>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/entry_point.c:21
  startup__initialize_interrupts();
      ee:	f000 f97b 	bl	3e8 <startup__initialize_interrupts>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/entry_point.c:23

  clock__initialize_system_clock_96mhz();
      f2:	f000 f89b 	bl	22c <clock__initialize_system_clock_96mhz>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/entry_point.c:24
  sys_time__init(clock__get_peripheral_clock_hz());
      f6:	f000 f895 	bl	224 <clock__get_peripheral_clock_hz>
      fa:	f002 f967 	bl	23cc <sys_time__init>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/entry_point.c:37
   */
  vTraceEnable(TRC_INIT);

  // Peripherals init initializes UART and then we can print the crash report if
  // applicable
  peripherals_init();
      fe:	f002 f897 	bl	2230 <peripherals_init>
entry_point__handle_crash_report():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/entry_point.c:60
  while (1) {
  }
}

static void entry_point__handle_crash_report(void) {
  if (crash__report_if_occurred()) {
     102:	f000 f8bf 	bl	284 <crash__report_if_occurred>
     106:	b140      	cbz	r0, 11a <entry_point+0x36>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/entry_point.c:61
    while (sys_time__get_uptime_ms() < 5000) {
     108:	f241 3487 	movw	r4, #4999	; 0x1387
     10c:	2500      	movs	r5, #0
     10e:	f002 f989 	bl	2424 <sys_time__get_uptime_ms>
     112:	428d      	cmp	r5, r1
     114:	bf08      	it	eq
     116:	4284      	cmpeq	r4, r0
     118:	d2f9      	bcs.n	10e <entry_point+0x2a>
entry_point():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/entry_point.c:40
  if (!sensors__init()) {
     11a:	f000 f982 	bl	422 <sensors__init>
     11e:	b918      	cbnz	r0, 128 <entry_point+0x44>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/entry_point.c:41
    printf("\n%s(): WARNING: Sensor errors on this board\n", __FUNCTION__);
     120:	4908      	ldr	r1, [pc, #32]	; (144 <entry_point+0x60>)
     122:	4809      	ldr	r0, [pc, #36]	; (148 <entry_point+0x64>)
     124:	f006 f83c 	bl	61a0 <iprintf>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/entry_point.c:46
  printf("\n%s(): Entering main()\n", __FUNCTION__);
     128:	4906      	ldr	r1, [pc, #24]	; (144 <entry_point+0x60>)
     12a:	4808      	ldr	r0, [pc, #32]	; (14c <entry_point+0x68>)
     12c:	f006 f838 	bl	61a0 <iprintf>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/entry_point.c:47
  main();
     130:	f002 fa4a 	bl	25c8 <main>
entry_point__halt():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/entry_point.c:54
  fprintf(stderr, "ERROR: main() should never return, program has been halted");
     134:	4b06      	ldr	r3, [pc, #24]	; (150 <entry_point+0x6c>)
     136:	4807      	ldr	r0, [pc, #28]	; (154 <entry_point+0x70>)
     138:	681b      	ldr	r3, [r3, #0]
     13a:	68d9      	ldr	r1, [r3, #12]
     13c:	f004 ffc6 	bl	50cc <fputs>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/entry_point.c:56
  }
     140:	e7fe      	b.n	140 <entry_point+0x5c>
     142:	bf00      	nop
     144:	0000a33c 	.word	0x0000a33c
     148:	0000a348 	.word	0x0000a348
     14c:	0000a375 	.word	0x0000a375
     150:	1000015c 	.word	0x1000015c
     154:	0000a38d 	.word	0x0000a38d

00000158 <isr_hard_fault>:
isr_hard_fault():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/interrupt_vector_table.c:137
/**
 * Explanation of register usage dictated by ARM's EABI:
 * https://stackoverflow.com/questions/261419/what-registers-to-save-in-the-arm-c-calling-convention
 */
static void isr_hard_fault(void) {
  __asm__ volatile("tst lr, #4                                    \n"
     158:	f01e 0f04 	tst.w	lr, #4
     15c:	bf0c      	ite	eq
     15e:	f3ef 8008 	mrseq	r0, MSP
     162:	f3ef 8009 	mrsne	r0, PSP
     166:	6981      	ldr	r1, [r0, #24]
     168:	4a00      	ldr	r2, [pc, #0]	; (16c <handler_address>)
     16a:	4710      	bx	r2

0000016c <handler_address>:
     16c:	000001d1 	.word	0x000001d1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/interrupt_vector_table.c:145
                   "mrsne r0, psp                                 \n"
                   "ldr r1, [r0, #24]                             \n"
                   "ldr r2, handler_address                       \n"
                   "bx r2                                         \n"
                   "handler_address: .word isr_hard_fault_handler \n");
}
     170:	4770      	bx	lr
handler_address():
     172:	Address 0x0000000000000172 is out of bounds.


00000174 <halt>:
halt():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/interrupt_vector_table.c:106
static void halt(void) {
     174:	b538      	push	{r3, r4, r5, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/interrupt_vector_table.c:111
  fprintf(stderr, "Unexpected CPU exception ");
     176:	4c0f      	ldr	r4, [pc, #60]	; (1b4 <halt+0x40>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/interrupt_vector_table.c:110
  const unsigned isr_num = (*((uint8_t *)0xE000ED04));
     178:	4b0f      	ldr	r3, [pc, #60]	; (1b8 <halt+0x44>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/interrupt_vector_table.c:111
  fprintf(stderr, "Unexpected CPU exception ");
     17a:	4810      	ldr	r0, [pc, #64]	; (1bc <halt+0x48>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/interrupt_vector_table.c:110
  const unsigned isr_num = (*((uint8_t *)0xE000ED04));
     17c:	781d      	ldrb	r5, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/interrupt_vector_table.c:111
  fprintf(stderr, "Unexpected CPU exception ");
     17e:	6823      	ldr	r3, [r4, #0]
     180:	68d9      	ldr	r1, [r3, #12]
     182:	f004 ffa3 	bl	50cc <fputs>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/interrupt_vector_table.c:112
  fprintf(stderr, "%u (interrupt) has occured and the program will now halt\n",
     186:	6823      	ldr	r3, [r4, #0]
     188:	490d      	ldr	r1, [pc, #52]	; (1c0 <halt+0x4c>)
     18a:	68d8      	ldr	r0, [r3, #12]
     18c:	462a      	mov	r2, r5
     18e:	f004 fee5 	bl	4f5c <fiprintf>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/interrupt_vector_table.c:115
  if (isr_num < 16) {
     192:	2d0f      	cmp	r5, #15
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/interrupt_vector_table.c:121
    fprintf(stderr, "Exception appears to be '%s'\n", table[isr_num]);
     194:	6823      	ldr	r3, [r4, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/interrupt_vector_table.c:115
  if (isr_num < 16) {
     196:	d807      	bhi.n	1a8 <halt+0x34>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/interrupt_vector_table.c:121
    fprintf(stderr, "Exception appears to be '%s'\n", table[isr_num]);
     198:	4a0a      	ldr	r2, [pc, #40]	; (1c4 <halt+0x50>)
     19a:	490b      	ldr	r1, [pc, #44]	; (1c8 <halt+0x54>)
     19c:	f852 2025 	ldr.w	r2, [r2, r5, lsl #2]
     1a0:	68d8      	ldr	r0, [r3, #12]
     1a2:	f004 fedb 	bl	4f5c <fiprintf>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/interrupt_vector_table.c:128 (discriminator 1)
    ;
     1a6:	e7fe      	b.n	1a6 <halt+0x32>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/interrupt_vector_table.c:123
    fprintf(stderr, "Did you register the interrupt correctly using "
     1a8:	68d9      	ldr	r1, [r3, #12]
     1aa:	4808      	ldr	r0, [pc, #32]	; (1cc <halt+0x58>)
     1ac:	f004 ff8e 	bl	50cc <fputs>
     1b0:	e7f9      	b.n	1a6 <halt+0x32>
     1b2:	bf00      	nop
     1b4:	1000015c 	.word	0x1000015c
     1b8:	e000ed04 	.word	0xe000ed04
     1bc:	0000a3c8 	.word	0x0000a3c8
     1c0:	0000a3e2 	.word	0x0000a3e2
     1c4:	0000a4d4 	.word	0x0000a4d4
     1c8:	0000a41c 	.word	0x0000a41c
     1cc:	0000a43a 	.word	0x0000a43a

000001d0 <isr_hard_fault_handler>:
isr_hard_fault_handler():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/interrupt_vector_table.c:147

void isr_hard_fault_handler(unsigned long *hardfault_args) {
     1d0:	b510      	push	{r4, lr}
     1d2:	4604      	mov	r4, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/interrupt_vector_table.c:148
  crash__registers_s *c = crash__record_get();
     1d4:	f000 f84a 	bl	26c <crash__record_get>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/interrupt_vector_table.c:150

  c->registers[0] = ((unsigned long)hardfault_args[0]);
     1d8:	6823      	ldr	r3, [r4, #0]
     1da:	6083      	str	r3, [r0, #8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/interrupt_vector_table.c:151
  c->registers[1] = ((unsigned long)hardfault_args[1]);
     1dc:	6863      	ldr	r3, [r4, #4]
     1de:	60c3      	str	r3, [r0, #12]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/interrupt_vector_table.c:152
  c->registers[2] = ((unsigned long)hardfault_args[2]);
     1e0:	68a3      	ldr	r3, [r4, #8]
     1e2:	6103      	str	r3, [r0, #16]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/interrupt_vector_table.c:153
  c->registers[3] = ((unsigned long)hardfault_args[3]);
     1e4:	68e3      	ldr	r3, [r4, #12]
     1e6:	6143      	str	r3, [r0, #20]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/interrupt_vector_table.c:155

  c->r12 = ((unsigned long)hardfault_args[4]);
     1e8:	6923      	ldr	r3, [r4, #16]
     1ea:	6243      	str	r3, [r0, #36]	; 0x24
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/interrupt_vector_table.c:156
  c->lr = ((unsigned long)hardfault_args[5]) - 1;
     1ec:	6963      	ldr	r3, [r4, #20]
     1ee:	3b01      	subs	r3, #1
     1f0:	61c3      	str	r3, [r0, #28]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/interrupt_vector_table.c:157
  c->pc = ((unsigned long)hardfault_args[6]);
     1f2:	69a3      	ldr	r3, [r4, #24]
     1f4:	6183      	str	r3, [r0, #24]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/interrupt_vector_table.c:158
  c->psr = ((unsigned long)hardfault_args[7]);
     1f6:	69e3      	ldr	r3, [r4, #28]
     1f8:	6203      	str	r3, [r0, #32]
__DSB():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/arm-software/cmsis/core/cmsis_gcc.h:946
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
     1fa:	f3bf 8f4f 	dsb	sy
__NVIC_SystemReset():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1938
__NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
{
  __DSB();                                                          /* Ensure all outstanding memory accesses included
                                                                       buffered write are completed before reset */
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
                           (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
     1fe:	4905      	ldr	r1, [pc, #20]	; (214 <isr_hard_fault_handler+0x44>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1937
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
     200:	4b05      	ldr	r3, [pc, #20]	; (218 <isr_hard_fault_handler+0x48>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1938
                           (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
     202:	68ca      	ldr	r2, [r1, #12]
     204:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1937
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
     208:	4313      	orrs	r3, r2
     20a:	60cb      	str	r3, [r1, #12]
__DSB():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/arm-software/cmsis/core/cmsis_gcc.h:946
     20c:	f3bf 8f4f 	dsb	sy
__NVIC_SystemReset():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1944
                            SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchanged */
  __DSB();                                                          /* Ensure completion of memory access */

  for(;;)                                                           /* wait until reset */
  {
    __NOP();
     210:	bf00      	nop
     212:	e7fd      	b.n	210 <isr_hard_fault_handler+0x40>
     214:	e000ed00 	.word	0xe000ed00
     218:	05fa0004 	.word	0x05fa0004

0000021c <clock__get_core_clock_hz>:
clock__get_core_clock_hz():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/clock.c:13
 *
 * We use fixed CPU frequency because clock__initialize_system_clock_96mhz()
 * configures fixed CPU frequency. It is rare that anyone needs to change this
 * (ever).
 */
uint32_t clock__get_core_clock_hz(void) { return (UINT32_C(96) * 1000 * 1000); }
     21c:	4800      	ldr	r0, [pc, #0]	; (220 <clock__get_core_clock_hz+0x4>)
     21e:	4770      	bx	lr
     220:	05b8d800 	.word	0x05b8d800

00000224 <clock__get_peripheral_clock_hz>:
clock__get_peripheral_clock_hz():
     224:	4800      	ldr	r0, [pc, #0]	; (228 <clock__get_peripheral_clock_hz+0x4>)
     226:	4770      	bx	lr
     228:	05b8d800 	.word	0x05b8d800

0000022c <clock__initialize_system_clock_96mhz>:
clock__initialize_system_clock_96mhz():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/clock.c:24

void clock__initialize_system_clock_96mhz(void) {
  // Step 3 from UM: Write PLL new setup values to the PLL CFG register
  const uint8_t multiplier = 8; // 8 * 12Mhz = 96Mhz

  LPC_SC->PLL0CFG = ((multiplier - 1) << 0);
     22c:	4b0e      	ldr	r3, [pc, #56]	; (268 <clock__initialize_system_clock_96mhz+0x3c>)
     22e:	2207      	movs	r2, #7
     230:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/clock.c:28
  LPC_SC->PLL0CON = 1; // PLL enable

  // Necessary feed sequence to ensure the changes are intentional
  LPC_SC->PLL0FEED = 0xAA;
     234:	21aa      	movs	r1, #170	; 0xaa
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/clock.c:25
  LPC_SC->PLL0CON = 1; // PLL enable
     236:	2201      	movs	r2, #1
     238:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/clock.c:28
  LPC_SC->PLL0FEED = 0xAA;
     23c:	f8c3 108c 	str.w	r1, [r3, #140]	; 0x8c
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/clock.c:29
  LPC_SC->PLL0FEED = 0x55;
     240:	2155      	movs	r1, #85	; 0x55
     242:	f8c3 108c 	str.w	r1, [r3, #140]	; 0x8c
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/clock.c:32

  // Step 4 from UM: Setup necessary clock dividers
  LPC_SC->PCLKSEL = 1; // APB peripherals receive clock/1 (divided by 1)
     246:	f8c3 21a8 	str.w	r2, [r3, #424]	; 0x1a8
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/clock.c:36 (discriminator 1)

  // Step 5 from UM: Wait for PLL to lock
  const uint32_t pll_lock_bit_mask = (1 << 10);
  while (!(LPC_SC->PLL0STAT & pll_lock_bit_mask)) {
     24a:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
     24e:	0552      	lsls	r2, r2, #21
     250:	d5fb      	bpl.n	24a <clock__initialize_system_clock_96mhz+0x1e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/clock.c:42
    ;
  }

  // Before we switch to the faster clock, we need to configure flash memory
  // access properly with respect to core clock
  uint32_t flash_cfg = LPC_SC->FLASHCFG;
     252:	681a      	ldr	r2, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/clock.c:43
  flash_cfg &= ~(0xF << 12);
     254:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/clock.c:44
  flash_cfg |= (0x4 << 12); // 5 cpu clocks for use with up to 100Mhz
     258:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/clock.c:45
  LPC_SC->FLASHCFG = flash_cfg;
     25c:	601a      	str	r2, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/clock.c:49

  // Step 6 from UM: Connect the PLL to the CPU
  const uint32_t cpu_on_pll_clock = (1 << 8) | (1 << 0);
  LPC_SC->CCLKSEL = cpu_on_pll_clock; // CPU uses PLL clock (Table 20)
     25e:	f240 1201 	movw	r2, #257	; 0x101
     262:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/clock.c:50
}
     266:	4770      	bx	lr
     268:	400fc000 	.word	0x400fc000

0000026c <crash__record_get>:
crash__record_get():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/crash.c:18

static void crash__clear_record(void);

crash__registers_s *crash__record_get(void) {
  // Record the crash signature first before returning the struct
  crash_registers.signature = crash__signature;
     26c:	4802      	ldr	r0, [pc, #8]	; (278 <crash__record_get+0xc>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/crash.c:19
  crash_registers.signature_inverted = ~crash__signature;
     26e:	4a03      	ldr	r2, [pc, #12]	; (27c <crash__record_get+0x10>)
     270:	4b03      	ldr	r3, [pc, #12]	; (280 <crash__record_get+0x14>)
     272:	e9c0 2300 	strd	r2, r3, [r0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/crash.c:22

  return &crash_registers;
}
     276:	4770      	bx	lr
     278:	20000000 	.word	0x20000000
     27c:	deadbeef 	.word	0xdeadbeef
     280:	21524110 	.word	0x21524110

00000284 <crash__report_if_occurred>:
crash__report_if_occurred():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/crash.c:24

bool crash__report_if_occurred(void) {
     284:	b538      	push	{r3, r4, r5, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/crash.c:27
  bool crash_occured = false;

  if (crash__signature == crash_registers.signature &&
     286:	4c22      	ldr	r4, [pc, #136]	; (310 <crash__report_if_occurred+0x8c>)
     288:	4b22      	ldr	r3, [pc, #136]	; (314 <crash__report_if_occurred+0x90>)
     28a:	6822      	ldr	r2, [r4, #0]
     28c:	429a      	cmp	r2, r3
     28e:	d13d      	bne.n	30c <crash__report_if_occurred+0x88>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/crash.c:27 (discriminator 1)
     290:	6862      	ldr	r2, [r4, #4]
     292:	4b21      	ldr	r3, [pc, #132]	; (318 <crash__report_if_occurred+0x94>)
     294:	429a      	cmp	r2, r3
     296:	d139      	bne.n	30c <crash__report_if_occurred+0x88>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/crash.c:31
      ~crash__signature == crash_registers.signature_inverted) {
    crash_occured = true;

    fprintf(stderr, "----------------------------------------\n"
     298:	4d20      	ldr	r5, [pc, #128]	; (31c <crash__report_if_occurred+0x98>)
     29a:	4821      	ldr	r0, [pc, #132]	; (320 <crash__report_if_occurred+0x9c>)
     29c:	682b      	ldr	r3, [r5, #0]
     29e:	68d9      	ldr	r1, [r3, #12]
     2a0:	f004 ff14 	bl	50cc <fputs>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/crash.c:34
                    "---- WARNING: We crashed previously ----\n");

    fprintf(stderr, "  PC: 0x%08lX\n", crash_registers.pc);
     2a4:	682b      	ldr	r3, [r5, #0]
     2a6:	69a2      	ldr	r2, [r4, #24]
     2a8:	491e      	ldr	r1, [pc, #120]	; (324 <crash__report_if_occurred+0xa0>)
     2aa:	68d8      	ldr	r0, [r3, #12]
     2ac:	f004 fe56 	bl	4f5c <fiprintf>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/crash.c:35
    fprintf(stderr, "  LR: 0x%08lX\n", crash_registers.lr);
     2b0:	682b      	ldr	r3, [r5, #0]
     2b2:	69e2      	ldr	r2, [r4, #28]
     2b4:	491c      	ldr	r1, [pc, #112]	; (328 <crash__report_if_occurred+0xa4>)
     2b6:	68d8      	ldr	r0, [r3, #12]
     2b8:	f004 fe50 	bl	4f5c <fiprintf>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/crash.c:36
    fprintf(stderr, " PSR: 0x%08lX\n", crash_registers.psr);
     2bc:	682b      	ldr	r3, [r5, #0]
     2be:	6a22      	ldr	r2, [r4, #32]
     2c0:	491a      	ldr	r1, [pc, #104]	; (32c <crash__report_if_occurred+0xa8>)
     2c2:	68d8      	ldr	r0, [r3, #12]
     2c4:	f004 fe4a 	bl	4f5c <fiprintf>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/crash.c:38

    fprintf(stderr, "  R0: 0x%08lX\n", crash_registers.registers[0]);
     2c8:	682b      	ldr	r3, [r5, #0]
     2ca:	68a2      	ldr	r2, [r4, #8]
     2cc:	4918      	ldr	r1, [pc, #96]	; (330 <crash__report_if_occurred+0xac>)
     2ce:	68d8      	ldr	r0, [r3, #12]
     2d0:	f004 fe44 	bl	4f5c <fiprintf>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/crash.c:39
    fprintf(stderr, "  R1: 0x%08lX\n", crash_registers.registers[1]);
     2d4:	682b      	ldr	r3, [r5, #0]
     2d6:	68e2      	ldr	r2, [r4, #12]
     2d8:	4916      	ldr	r1, [pc, #88]	; (334 <crash__report_if_occurred+0xb0>)
     2da:	68d8      	ldr	r0, [r3, #12]
     2dc:	f004 fe3e 	bl	4f5c <fiprintf>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/crash.c:40
    fprintf(stderr, "  R2: 0x%08lX\n", crash_registers.registers[2]);
     2e0:	682b      	ldr	r3, [r5, #0]
     2e2:	6922      	ldr	r2, [r4, #16]
     2e4:	4914      	ldr	r1, [pc, #80]	; (338 <crash__report_if_occurred+0xb4>)
     2e6:	68d8      	ldr	r0, [r3, #12]
     2e8:	f004 fe38 	bl	4f5c <fiprintf>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/crash.c:41
    fprintf(stderr, "  R3: 0x%08lX\n", crash_registers.registers[3]);
     2ec:	682b      	ldr	r3, [r5, #0]
     2ee:	6962      	ldr	r2, [r4, #20]
     2f0:	4912      	ldr	r1, [pc, #72]	; (33c <crash__report_if_occurred+0xb8>)
     2f2:	68d8      	ldr	r0, [r3, #12]
     2f4:	f004 fe32 	bl	4f5c <fiprintf>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/crash.c:43

    fprintf(stderr,
     2f8:	682b      	ldr	r3, [r5, #0]
     2fa:	4811      	ldr	r0, [pc, #68]	; (340 <crash__report_if_occurred+0xbc>)
     2fc:	68d9      	ldr	r1, [r3, #12]
     2fe:	f004 fee5 	bl	50cc <fputs>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/crash.c:29
    crash_occured = true;
     302:	2001      	movs	r0, #1
crash__clear_record():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/crash.c:56
  crash__clear_record();
  return crash_occured;
}

static void crash__clear_record(void) {
  crash_registers.signature = 0;
     304:	2300      	movs	r3, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/crash.c:57
  crash_registers.signature_inverted = 0;
     306:	e9c4 3300 	strd	r3, r3, [r4]
crash__report_if_occurred():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/crash.c:53
}
     30a:	bd38      	pop	{r3, r4, r5, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/crash.c:25
  bool crash_occured = false;
     30c:	2000      	movs	r0, #0
     30e:	e7f9      	b.n	304 <crash__report_if_occurred+0x80>
     310:	20000000 	.word	0x20000000
     314:	deadbeef 	.word	0xdeadbeef
     318:	21524110 	.word	0x21524110
     31c:	1000015c 	.word	0x1000015c
     320:	0000a514 	.word	0x0000a514
     324:	0000a567 	.word	0x0000a567
     328:	0000a576 	.word	0x0000a576
     32c:	0000a585 	.word	0x0000a585
     330:	0000a594 	.word	0x0000a594
     334:	0000a5a3 	.word	0x0000a5a3
     338:	0000a5b2 	.word	0x0000a5b2
     33c:	0000a5c1 	.word	0x0000a5c1
     340:	0000a5d0 	.word	0x0000a5d0

00000344 <_sbrk>:
sbrk_ram1():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/newlib/syscall.c:32
  // These symbols are defined by the linker script
  extern uint32_t _heap_start;
  extern uint32_t _heap_end;

  static void *next_free_heap = (void *)&_heap_start;
  void *memory_to_return = next_free_heap;
     344:	4a0e      	ldr	r2, [pc, #56]	; (380 <_sbrk+0x3c>)
     346:	6813      	ldr	r3, [r2, #0]
_sbrk():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/newlib/syscall.c:12
void *_sbrk(size_t requested_byte_count) {
     348:	b510      	push	{r4, lr}
sbrk_ram1():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/newlib/syscall.c:43
   * couple of reasons:
   *   1. Maybe we still have a small chunk we could still serve in the future
   *   2. We do not want to increment next_free_heap and go out of bounds to
   * wrap
   */
  if (!((next_free_heap >= (void *)&_heap_start) &&
     34a:	4c0e      	ldr	r4, [pc, #56]	; (384 <_sbrk+0x40>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/newlib/syscall.c:33
  next_free_heap += requested_byte_count;
     34c:	1819      	adds	r1, r3, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/newlib/syscall.c:43
  if (!((next_free_heap >= (void *)&_heap_start) &&
     34e:	42a1      	cmp	r1, r4
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/newlib/syscall.c:33
  next_free_heap += requested_byte_count;
     350:	6011      	str	r1, [r2, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/newlib/syscall.c:43
  if (!((next_free_heap >= (void *)&_heap_start) &&
     352:	d302      	bcc.n	35a <_sbrk+0x16>
     354:	4c0c      	ldr	r4, [pc, #48]	; (388 <_sbrk+0x44>)
     356:	42a1      	cmp	r1, r4
     358:	d30b      	bcc.n	372 <_sbrk+0x2e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/newlib/syscall.c:46
        (next_free_heap < (void *)&_heap_end))) {
    memory_to_return = NULL;
    next_free_heap -= requested_byte_count;
     35a:	6013      	str	r3, [r2, #0]
sbrk_ram2():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/newlib/syscall.c:57
static void *sbrk_ram2(size_t requested_byte_count) {
  extern uint32_t __start_of_unused_ram64;
  extern uint32_t __end_of_unused_ram64;

  static void *next_free_heap = (void *)&__start_of_unused_ram64;
  void *memory_to_return = next_free_heap;
     35c:	4a0b      	ldr	r2, [pc, #44]	; (38c <_sbrk+0x48>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/newlib/syscall.c:60
  next_free_heap += requested_byte_count;

  if (!((next_free_heap >= (void *)&__start_of_unused_ram64) &&
     35e:	490c      	ldr	r1, [pc, #48]	; (390 <_sbrk+0x4c>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/newlib/syscall.c:57
  void *memory_to_return = next_free_heap;
     360:	6813      	ldr	r3, [r2, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/newlib/syscall.c:58
  next_free_heap += requested_byte_count;
     362:	4418      	add	r0, r3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/newlib/syscall.c:60
  if (!((next_free_heap >= (void *)&__start_of_unused_ram64) &&
     364:	4288      	cmp	r0, r1
     366:	d308      	bcc.n	37a <_sbrk+0x36>
     368:	490a      	ldr	r1, [pc, #40]	; (394 <_sbrk+0x50>)
     36a:	4288      	cmp	r0, r1
     36c:	d205      	bcs.n	37a <_sbrk+0x36>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/newlib/syscall.c:58
  next_free_heap += requested_byte_count;
     36e:	6010      	str	r0, [r2, #0]
     370:	e001      	b.n	376 <_sbrk+0x32>
_sbrk():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/newlib/syscall.c:19
  if (NULL == memory_to_return) {
     372:	2b00      	cmp	r3, #0
     374:	d0f2      	beq.n	35c <_sbrk+0x18>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/newlib/syscall.c:24
}
     376:	4618      	mov	r0, r3
     378:	bd10      	pop	{r4, pc}
sbrk_ram2():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/newlib/syscall.c:62
        (next_free_heap < (void *)&__end_of_unused_ram64))) {
    memory_to_return = NULL;
     37a:	2300      	movs	r3, #0
_sbrk():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/newlib/syscall.c:23
  return memory_to_return;
     37c:	e7fb      	b.n	376 <_sbrk+0x32>
     37e:	bf00      	nop
     380:	10000000 	.word	0x10000000
     384:	20000028 	.word	0x20000028
     388:	20008000 	.word	0x20008000
     38c:	10000004 	.word	0x10000004
     390:	10000b88 	.word	0x10000b88
     394:	10010000 	.word	0x10010000

00000398 <startup__initialize_ram>:
startup__init_data_sram():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/startup/startup.c:62
  extern void *_bdata_vma;
  extern void *_data_end;

  uint8_t *src_flash = (uint8_t *)&_bdata_lma; // Flash
  uint8_t *dest_ram = (uint8_t *)&_bdata_vma;  // RAM
  while (dest_ram < (uint8_t *)&_data_end) {
     398:	4a09      	ldr	r2, [pc, #36]	; (3c0 <startup__initialize_ram+0x28>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/startup/startup.c:61
  uint8_t *dest_ram = (uint8_t *)&_bdata_vma;  // RAM
     39a:	4b0a      	ldr	r3, [pc, #40]	; (3c4 <startup__initialize_ram+0x2c>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/startup/startup.c:62
  while (dest_ram < (uint8_t *)&_data_end) {
     39c:	490a      	ldr	r1, [pc, #40]	; (3c8 <startup__initialize_ram+0x30>)
     39e:	428b      	cmp	r3, r1
     3a0:	d305      	bcc.n	3ae <startup__initialize_ram+0x16>
startup__init_bss_sram():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/startup/startup.c:73

static void startup__init_bss_sram(void) {
  extern void *_bss_start;
  extern void *_bss_end;

  uint8_t *sram_ptr = (uint8_t *)&_bss_start;
     3a2:	4b0a      	ldr	r3, [pc, #40]	; (3cc <startup__initialize_ram+0x34>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/startup/startup.c:74
  while (sram_ptr < (uint8_t *)&_bss_end) {
     3a4:	4a0a      	ldr	r2, [pc, #40]	; (3d0 <startup__initialize_ram+0x38>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/startup/startup.c:75
    *sram_ptr = 0U;
     3a6:	2100      	movs	r1, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/startup/startup.c:74
  while (sram_ptr < (uint8_t *)&_bss_end) {
     3a8:	4293      	cmp	r3, r2
     3aa:	d305      	bcc.n	3b8 <startup__initialize_ram+0x20>
startup__initialize_ram():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/startup/startup.c:14
}
     3ac:	4770      	bx	lr
startup__init_data_sram():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/startup/startup.c:63
    *dest_ram = *src_flash;
     3ae:	f812 0b01 	ldrb.w	r0, [r2], #1
     3b2:	f803 0b01 	strb.w	r0, [r3], #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/startup/startup.c:65
    src_flash++;
     3b6:	e7f2      	b.n	39e <startup__initialize_ram+0x6>
startup__init_bss_sram():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/startup/startup.c:75
    *sram_ptr = 0U;
     3b8:	f803 1b01 	strb.w	r1, [r3], #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/startup/startup.c:76
    sram_ptr++;
     3bc:	e7f4      	b.n	3a8 <startup__initialize_ram+0x10>
     3be:	bf00      	nop
     3c0:	0000b8fc 	.word	0x0000b8fc
     3c4:	10000000 	.word	0x10000000
     3c8:	10000330 	.word	0x10000330
     3cc:	10000330 	.word	0x10000330
     3d0:	10000b88 	.word	0x10000b88

000003d4 <startup__initialize_fpu>:
startup__initialize_fpu():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/startup/startup.c:22
  SCB->CPACR |= (0xF << 20); // Set [23:20]
     3d4:	4a03      	ldr	r2, [pc, #12]	; (3e4 <startup__initialize_fpu+0x10>)
     3d6:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
     3da:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
     3de:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/startup/startup.c:23
}
     3e2:	4770      	bx	lr
     3e4:	e000ed00 	.word	0xe000ed00

000003e8 <startup__initialize_interrupts>:
__NVIC_SetPriority():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1813
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
     3e8:	4804      	ldr	r0, [pc, #16]	; (3fc <startup__initialize_interrupts+0x14>)
startup__initialize_interrupts():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/startup/startup.c:39
  for (int peripheral = first_peripheral; peripheral <= last_peripheral;
     3ea:	2300      	movs	r3, #0
__NVIC_SetPriority():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1813
     3ec:	2120      	movs	r1, #32
     3ee:	18c2      	adds	r2, r0, r3
startup__initialize_interrupts():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/startup/startup.c:40
       peripheral++) {
     3f0:	3301      	adds	r3, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/startup/startup.c:39
  for (int peripheral = first_peripheral; peripheral <= last_peripheral;
     3f2:	2b29      	cmp	r3, #41	; 0x29
__NVIC_SetPriority():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1813
     3f4:	f882 1300 	strb.w	r1, [r2, #768]	; 0x300
startup__initialize_interrupts():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/startup/startup.c:39
     3f8:	d1f9      	bne.n	3ee <startup__initialize_interrupts+0x6>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/startup/startup.c:53
}
     3fa:	4770      	bx	lr
     3fc:	e000e100 	.word	0xe000e100

00000400 <acceleration__init>:
acceleration__init():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sensors/sources/acceleration.c:14
  acceleration__memory_axis_base = 0x01,
  acceleration__memory_control = 0x2A,
  acceleration__memory_who_am_i = 0x0D,
} acceleration__memory_e;

bool acceleration__init(void) {
     400:	b508      	push	{r3, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sensors/sources/acceleration.c:16
  const uint8_t active_mode_with_100Hz = (1 << 0) | (3 << 3);
  i2c__write_single(acceleration__sensor_bus, acceleration__address,
     402:	222a      	movs	r2, #42	; 0x2a
     404:	2319      	movs	r3, #25
     406:	2138      	movs	r1, #56	; 0x38
     408:	2002      	movs	r0, #2
     40a:	f004 f997 	bl	473c <i2c__write_single>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sensors/sources/acceleration.c:21
                    acceleration__memory_control, active_mode_with_100Hz);

  const uint8_t who_am_i_expected_value = 0x2A;
  const uint8_t who_am_i_actual_value =
      i2c__read_single(acceleration__sensor_bus, acceleration__address,
     40e:	220d      	movs	r2, #13
     410:	2138      	movs	r1, #56	; 0x38
     412:	2002      	movs	r0, #2
     414:	f004 f964 	bl	46e0 <i2c__read_single>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sensors/sources/acceleration.c:25
                       acceleration__memory_who_am_i);

  return (who_am_i_expected_value == who_am_i_actual_value);
}
     418:	f1a0 032a 	sub.w	r3, r0, #42	; 0x2a
     41c:	4258      	negs	r0, r3
     41e:	4158      	adcs	r0, r3
     420:	bd08      	pop	{r3, pc}

00000422 <sensors__init>:
sensors__init():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sensors/sources/sensors.c:8
#include "acceleration.h"

bool sensors__init(void) {
  bool status = true;

  status &= acceleration__init();
     422:	f7ff bfed 	b.w	400 <acceleration__init>

00000426 <ld_dword>:
ld_dword():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:594
static DWORD ld_dword (const BYTE* ptr)	/* Load a 4-byte little-endian word */
{
	DWORD rv;

	rv = ptr[3];
	rv = rv << 8 | ptr[2];
     426:	8842      	ldrh	r2, [r0, #2]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:595
	rv = rv << 8 | ptr[1];
     428:	7843      	ldrb	r3, [r0, #1]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:596
	rv = rv << 8 | ptr[0];
     42a:	7800      	ldrb	r0, [r0, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:595
	rv = rv << 8 | ptr[1];
     42c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:598
	return rv;
}
     430:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
     434:	4770      	bx	lr

00000436 <st_dword>:
st_dword():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:626
	*ptr++ = (BYTE)val;
}

static void st_dword (BYTE* ptr, DWORD val)	/* Store a 4-byte word in little-endian */
{
	*ptr++ = (BYTE)val; val >>= 8;
     436:	0a0b      	lsrs	r3, r1, #8
     438:	7001      	strb	r1, [r0, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:627
	*ptr++ = (BYTE)val; val >>= 8;
     43a:	7043      	strb	r3, [r0, #1]
     43c:	0c0b      	lsrs	r3, r1, #16
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:628
	*ptr++ = (BYTE)val; val >>= 8;
     43e:	0e09      	lsrs	r1, r1, #24
     440:	7083      	strb	r3, [r0, #2]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:629
	*ptr++ = (BYTE)val;
     442:	70c1      	strb	r1, [r0, #3]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:630
}
     444:	4770      	bx	lr

00000446 <mem_cmp>:
mem_cmp():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:680
}


/* Compare memory block */
static int mem_cmp (const void* dst, const void* src, UINT cnt)	/* ZR:same, NZ:different */
{
     446:	b510      	push	{r4, lr}
     448:	4402      	add	r2, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:685 (discriminator 2)
	const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
	int r = 0;

	do {
		r = *d++ - *s++;
     44a:	f810 3b01 	ldrb.w	r3, [r0], #1
     44e:	f811 4b01 	ldrb.w	r4, [r1], #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:686 (discriminator 2)
	} while (--cnt && r == 0);
     452:	4290      	cmp	r0, r2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:685 (discriminator 2)
		r = *d++ - *s++;
     454:	eba3 0304 	sub.w	r3, r3, r4
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:686 (discriminator 2)
	} while (--cnt && r == 0);
     458:	d001      	beq.n	45e <mem_cmp+0x18>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:686 (discriminator 1)
     45a:	2b00      	cmp	r3, #0
     45c:	d0f5      	beq.n	44a <mem_cmp+0x4>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:689

	return r;
}
     45e:	4618      	mov	r0, r3
     460:	bd10      	pop	{r4, pc}

00000462 <clst2sect>:
clst2sect():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1138
	FATFS* fs,		/* Filesystem object */
	DWORD clst		/* Cluster# to be converted */
)
{
	clst -= 2;		/* Cluster number is origin from 2 */
	if (clst >= fs->n_fatent - 2) return 0;		/* Is it invalid cluster number? */
     462:	69c3      	ldr	r3, [r0, #28]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1137
	clst -= 2;		/* Cluster number is origin from 2 */
     464:	3902      	subs	r1, #2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1138
	if (clst >= fs->n_fatent - 2) return 0;		/* Is it invalid cluster number? */
     466:	3b02      	subs	r3, #2
     468:	428b      	cmp	r3, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1139
	return fs->database + fs->csize * clst;		/* Start sector number of the cluster */
     46a:	bf83      	ittte	hi
     46c:	8943      	ldrhhi	r3, [r0, #10]
     46e:	6b00      	ldrhi	r0, [r0, #48]	; 0x30
     470:	fb01 0003 	mlahi	r0, r1, r3, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1138
	if (clst >= fs->n_fatent - 2) return 0;		/* Is it invalid cluster number? */
     474:	2000      	movls	r0, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1140
}
     476:	4770      	bx	lr

00000478 <sum_sfn>:
sum_sfn():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2043
/*-----------------------------------------------------------------------*/

static BYTE sum_sfn (
	const BYTE* dir		/* Pointer to the SFN entry */
)
{
     478:	4602      	mov	r2, r0
     47a:	f100 010b 	add.w	r1, r0, #11
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2044
	BYTE sum = 0;
     47e:	2000      	movs	r0, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2048 (discriminator 1)
	UINT n = 11;

	do {
		sum = (sum >> 1) + (sum << 7) + *dir++;
     480:	01c3      	lsls	r3, r0, #7
     482:	ea43 0350 	orr.w	r3, r3, r0, lsr #1
     486:	f812 0b01 	ldrb.w	r0, [r2], #1
     48a:	fa50 f383 	uxtab	r3, r0, r3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2049 (discriminator 1)
	} while (--n);
     48e:	428a      	cmp	r2, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2048 (discriminator 1)
		sum = (sum >> 1) + (sum << 7) + *dir++;
     490:	b2d8      	uxtb	r0, r3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2049 (discriminator 1)
	} while (--n);
     492:	d1f5      	bne.n	480 <sum_sfn+0x8>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2051
	return sum;
}
     494:	4770      	bx	lr

00000496 <get_ldnumber>:
get_ldnumber():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3123
#if FF_STR_VOLUME_ID		/* Find string volume ID */
	const char *sp;
	char c;
#endif

	tt = tp = *path;
     496:	6802      	ldr	r2, [r0, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3124
	if (!tp) return vol;	/* Invalid path name? */
     498:	b14a      	cbz	r2, 4ae <get_ldnumber+0x18>
     49a:	4613      	mov	r3, r2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3125 (discriminator 2)
	do tc = *tt++; while ((UINT)tc >= (FF_USE_LFN ? ' ' : '!') && tc != ':');	/* Find a colon in the path */
     49c:	f813 1b01 	ldrb.w	r1, [r3], #1
     4a0:	291f      	cmp	r1, #31
     4a2:	d90b      	bls.n	4bc <get_ldnumber+0x26>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3125 (discriminator 1)
     4a4:	293a      	cmp	r1, #58	; 0x3a
     4a6:	d1f9      	bne.n	49c <get_ldnumber+0x6>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3129

	if (tc == ':') {	/* DOS/Windows style volume ID? */
		i = FF_VOLUMES;
		if (IsDigit(*tp) && tp + 2 == tt) {	/* Is there a numeric volume ID + colon? */
     4a8:	1c91      	adds	r1, r2, #2
     4aa:	428b      	cmp	r3, r1
     4ac:	d002      	beq.n	4b4 <get_ldnumber+0x1e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3124
	if (!tp) return vol;	/* Invalid path name? */
     4ae:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3176
	vol = CurrVol;	/* Default drive is current drive */
#else
	vol = 0;		/* Default drive is 0 */
#endif
	return vol;		/* Return the default drive */
}
     4b2:	4770      	bx	lr
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3145
		if (i < FF_VOLUMES) {	/* If a volume ID is found, get the drive number and strip it */
     4b4:	7812      	ldrb	r2, [r2, #0]
     4b6:	2a30      	cmp	r2, #48	; 0x30
     4b8:	d1f9      	bne.n	4ae <get_ldnumber+0x18>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3147
			*path = tt;		/* Snip the drive prefix off */
     4ba:	6003      	str	r3, [r0, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3175
	return vol;		/* Return the default drive */
     4bc:	2000      	movs	r0, #0
     4be:	4770      	bx	lr

000004c0 <mem_cpy.part.0>:
mem_cpy():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:654
static void mem_cpy (void* dst, const void* src, UINT cnt)
     4c0:	3801      	subs	r0, #1
     4c2:	440a      	add	r2, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:661
			*d++ = *s++;
     4c4:	f811 3b01 	ldrb.w	r3, [r1], #1
     4c8:	f800 3f01 	strb.w	r3, [r0, #1]!
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:662
		} while (--cnt);
     4cc:	4291      	cmp	r1, r2
     4ce:	d1f9      	bne.n	4c4 <mem_cpy.part.0+0x4>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:664
}
     4d0:	4770      	bx	lr

000004d2 <ld_clust.isra.3>:
ld_word():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     4d2:	7eca      	ldrb	r2, [r1, #27]
     4d4:	7e8b      	ldrb	r3, [r1, #26]
ld_clust():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1842
	if (fs->fs_type == FS_FAT32) {
     4d6:	2803      	cmp	r0, #3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1841
	cl = ld_word(dir + DIR_FstClusLO);
     4d8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
ld_word():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     4dc:	bf01      	itttt	eq
     4de:	7d48      	ldrbeq	r0, [r1, #21]
     4e0:	7d0a      	ldrbeq	r2, [r1, #20]
ld_clust():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1843
		cl |= (DWORD)ld_word(dir + DIR_FstClusHI) << 16;
     4e2:	ea42 2200 	orreq.w	r2, r2, r0, lsl #8
     4e6:	ea43 4302 	orreq.w	r3, r3, r2, lsl #16
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1847
}
     4ea:	4618      	mov	r0, r3
     4ec:	4770      	bx	lr

000004ee <st_clust.isra.4>:
st_word():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:620
	*ptr++ = (BYTE)val; val >>= 8;
     4ee:	f3c2 2307 	ubfx	r3, r2, #8, #8
     4f2:	768a      	strb	r2, [r1, #26]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:621
	*ptr++ = (BYTE)val;
     4f4:	76cb      	strb	r3, [r1, #27]
st_clust():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1858
	if (fs->fs_type == FS_FAT32) {
     4f6:	7803      	ldrb	r3, [r0, #0]
     4f8:	2b03      	cmp	r3, #3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1859
		st_word(dir + DIR_FstClusHI, (WORD)(cl >> 16));
     4fa:	bf01      	itttt	eq
     4fc:	0c12      	lsreq	r2, r2, #16
st_word():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:620
	*ptr++ = (BYTE)val; val >>= 8;
     4fe:	750a      	strbeq	r2, [r1, #20]
     500:	0a12      	lsreq	r2, r2, #8
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:621
	*ptr++ = (BYTE)val;
     502:	754a      	strbeq	r2, [r1, #21]
st_clust():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1861
}
     504:	4770      	bx	lr

00000506 <sync_window.part.6>:
sync_window():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1042
static FRESULT sync_window (	/* Returns FR_OK or FR_DISK_ERR */
     506:	b570      	push	{r4, r5, r6, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1050
		if (disk_write(fs->pdrv, fs->win, fs->winsect, 1) == RES_OK) {	/* Write back the window */
     508:	f100 0638 	add.w	r6, r0, #56	; 0x38
     50c:	6b42      	ldr	r2, [r0, #52]	; 0x34
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1042
static FRESULT sync_window (	/* Returns FR_OK or FR_DISK_ERR */
     50e:	4604      	mov	r4, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1050
		if (disk_write(fs->pdrv, fs->win, fs->winsect, 1) == RES_OK) {	/* Write back the window */
     510:	2301      	movs	r3, #1
     512:	4631      	mov	r1, r6
     514:	7840      	ldrb	r0, [r0, #1]
     516:	f001 facc 	bl	1ab2 <disk_write>
     51a:	4605      	mov	r5, r0
     51c:	b988      	cbnz	r0, 542 <sync_window.part.6+0x3c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1052
			if (fs->winsect - fs->fatbase < fs->fsize) {	/* Is it in the 1st FAT? */
     51e:	6b61      	ldr	r1, [r4, #52]	; 0x34
     520:	6aa3      	ldr	r3, [r4, #40]	; 0x28
     522:	6a22      	ldr	r2, [r4, #32]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1051
			fs->wflag = 0;	/* Clear window dirty flag */
     524:	70e0      	strb	r0, [r4, #3]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1052
			if (fs->winsect - fs->fatbase < fs->fsize) {	/* Is it in the 1st FAT? */
     526:	1acb      	subs	r3, r1, r3
     528:	4293      	cmp	r3, r2
     52a:	d208      	bcs.n	53e <sync_window.part.6+0x38>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1053
				if (fs->n_fats == 2) disk_write(fs->pdrv, fs->win, fs->winsect + fs->fsize, 1);	/* Reflect it to 2nd FAT if needed */
     52c:	78a3      	ldrb	r3, [r4, #2]
     52e:	2b02      	cmp	r3, #2
     530:	d105      	bne.n	53e <sync_window.part.6+0x38>
     532:	440a      	add	r2, r1
     534:	2301      	movs	r3, #1
     536:	4631      	mov	r1, r6
     538:	7860      	ldrb	r0, [r4, #1]
     53a:	f001 faba 	bl	1ab2 <disk_write>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1060
}
     53e:	4628      	mov	r0, r5
     540:	bd70      	pop	{r4, r5, r6, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1056
			res = FR_DISK_ERR;
     542:	2501      	movs	r5, #1
     544:	e7fb      	b.n	53e <sync_window.part.6+0x38>

00000546 <move_window>:
move_window():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1068
{
     546:	b538      	push	{r3, r4, r5, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1072
	if (sector != fs->winsect) {	/* Window offset changed? */
     548:	6b43      	ldr	r3, [r0, #52]	; 0x34
     54a:	428b      	cmp	r3, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1068
{
     54c:	4604      	mov	r4, r0
     54e:	460d      	mov	r5, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1072
	if (sector != fs->winsect) {	/* Window offset changed? */
     550:	d019      	beq.n	586 <move_window+0x40>
sync_window():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1049
	if (fs->wflag) {	/* Is the disk access window dirty */
     552:	78c3      	ldrb	r3, [r0, #3]
     554:	b98b      	cbnz	r3, 57a <move_window+0x34>
move_window():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1077
			if (disk_read(fs->pdrv, fs->win, sector, 1) != RES_OK) {
     556:	2301      	movs	r3, #1
     558:	462a      	mov	r2, r5
     55a:	f104 0138 	add.w	r1, r4, #56	; 0x38
     55e:	7860      	ldrb	r0, [r4, #1]
     560:	f001 fa93 	bl	1a8a <disk_read>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1079
				res = FR_DISK_ERR;
     564:	2800      	cmp	r0, #0
     566:	bf18      	it	ne
     568:	f04f 35ff 	movne.w	r5, #4294967295	; 0xffffffff
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1077
			if (disk_read(fs->pdrv, fs->win, sector, 1) != RES_OK) {
     56c:	4603      	mov	r3, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1081
			fs->winsect = sector;
     56e:	6365      	str	r5, [r4, #52]	; 0x34
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1079
				res = FR_DISK_ERR;
     570:	bf0c      	ite	eq
     572:	4603      	moveq	r3, r0
     574:	2301      	movne	r3, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1085
}
     576:	4618      	mov	r0, r3
     578:	bd38      	pop	{r3, r4, r5, pc}
sync_window():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1085
     57a:	f7ff ffc4 	bl	506 <sync_window.part.6>
move_window():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1076
		if (res == FR_OK) {			/* Fill sector window with new data */
     57e:	4603      	mov	r3, r0
     580:	2800      	cmp	r0, #0
     582:	d1f8      	bne.n	576 <move_window+0x30>
     584:	e7e7      	b.n	556 <move_window+0x10>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1069
	FRESULT res = FR_OK;
     586:	2300      	movs	r3, #0
     588:	e7f5      	b.n	576 <move_window+0x30>
     58a:	Address 0x000000000000058a is out of bounds.


0000058c <check_fs>:
check_fs():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3189

static BYTE check_fs (	/* 0:FAT, 1:exFAT, 2:Valid BS but not FAT, 3:Not a BS, 4:Disk error */
	FATFS* fs,			/* Filesystem object */
	DWORD sect			/* Sector# (lba) to load and check if it is an FAT-VBR or not */
)
{
     58c:	b538      	push	{r3, r4, r5, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3190
	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;		/* Invaidate window */
     58e:	2300      	movs	r3, #0
     590:	70c3      	strb	r3, [r0, #3]
     592:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
     596:	6343      	str	r3, [r0, #52]	; 0x34
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3189
{
     598:	4605      	mov	r5, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3191
	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
     59a:	f7ff ffd4 	bl	546 <move_window>
     59e:	4604      	mov	r4, r0
     5a0:	bb18      	cbnz	r0, 5ea <check_fs+0x5e>
ld_word():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     5a2:	f895 2237 	ldrb.w	r2, [r5, #567]	; 0x237
     5a6:	f895 3236 	ldrb.w	r3, [r5, #566]	; 0x236
     5aa:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
check_fs():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3193

	if (ld_word(fs->win + BS_55AA) != 0xAA55) return 3;	/* Check boot record signature (always here regardless of the sector size) */
     5ae:	f64a 2255 	movw	r2, #43605	; 0xaa55
     5b2:	4293      	cmp	r3, r2
     5b4:	d11b      	bne.n	5ee <check_fs+0x62>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3198

#if FF_FS_EXFAT
	if (!mem_cmp(fs->win + BS_JmpBoot, "\xEB\x76\x90" "EXFAT   ", 11)) return 1;	/* Check if exFAT VBR */
#endif
	if (fs->win[BS_JmpBoot] == 0xE9 || fs->win[BS_JmpBoot] == 0xEB || fs->win[BS_JmpBoot] == 0xE8) {	/* Valid JumpBoot code? */
     5b6:	f895 3038 	ldrb.w	r3, [r5, #56]	; 0x38
     5ba:	2beb      	cmp	r3, #235	; 0xeb
     5bc:	d003      	beq.n	5c6 <check_fs+0x3a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3198 (discriminator 2)
     5be:	3318      	adds	r3, #24
     5c0:	b2db      	uxtb	r3, r3
     5c2:	2b01      	cmp	r3, #1
     5c4:	d815      	bhi.n	5f2 <check_fs+0x66>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3199
		if (!mem_cmp(fs->win + BS_FilSysType, "FAT", 3)) return 0;		/* Is it an FAT VBR? */
     5c6:	2203      	movs	r2, #3
     5c8:	490b      	ldr	r1, [pc, #44]	; (5f8 <check_fs+0x6c>)
     5ca:	f105 006e 	add.w	r0, r5, #110	; 0x6e
     5ce:	f7ff ff3a 	bl	446 <mem_cmp>
     5d2:	b140      	cbz	r0, 5e6 <check_fs+0x5a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3200
		if (!mem_cmp(fs->win + BS_FilSysType32, "FAT32", 5)) return 0;	/* Is it an FAT32 VBR? */
     5d4:	2205      	movs	r2, #5
     5d6:	4909      	ldr	r1, [pc, #36]	; (5fc <check_fs+0x70>)
     5d8:	f105 008a 	add.w	r0, r5, #138	; 0x8a
     5dc:	f7ff ff33 	bl	446 <mem_cmp>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3202
	}
	return 2;	/* Valid BS but not FAT */
     5e0:	2800      	cmp	r0, #0
     5e2:	bf18      	it	ne
     5e4:	2402      	movne	r4, #2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3203
}
     5e6:	4620      	mov	r0, r4
     5e8:	bd38      	pop	{r3, r4, r5, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3191
	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
     5ea:	2404      	movs	r4, #4
     5ec:	e7fb      	b.n	5e6 <check_fs+0x5a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3193
	if (ld_word(fs->win + BS_55AA) != 0xAA55) return 3;	/* Check boot record signature (always here regardless of the sector size) */
     5ee:	2403      	movs	r4, #3
     5f0:	e7f9      	b.n	5e6 <check_fs+0x5a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3202
	return 2;	/* Valid BS but not FAT */
     5f2:	2402      	movs	r4, #2
     5f4:	e7f7      	b.n	5e6 <check_fs+0x5a>
     5f6:	bf00      	nop
     5f8:	0000a731 	.word	0x0000a731
     5fc:	0000a735 	.word	0x0000a735

00000600 <find_volume>:
find_volume():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3217
static FRESULT find_volume (	/* FR_OK(0): successful, !=0: an error occurred */
	const TCHAR** path,			/* Pointer to pointer to the path name (drive number) */
	FATFS** rfs,				/* Pointer to pointer to the found filesystem object */
	BYTE mode					/* !=0: Check write protection for write access */
)
{
     600:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3228
	FATFS *fs;
	UINT i;


	/* Get logical drive number */
	*rfs = 0;
     604:	2300      	movs	r3, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3217
{
     606:	b085      	sub	sp, #20
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3228
	*rfs = 0;
     608:	600b      	str	r3, [r1, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3217
{
     60a:	460f      	mov	r7, r1
     60c:	4615      	mov	r5, r2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3229
	vol = get_ldnumber(path);
     60e:	f7ff ff42 	bl	496 <get_ldnumber>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3230
	if (vol < 0) return FR_INVALID_DRIVE;
     612:	1e06      	subs	r6, r0, #0
     614:	f2c0 8139 	blt.w	88a <find_volume+0x28a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3233

	/* Check if the filesystem object is valid or not */
	fs = FatFs[vol];					/* Get pointer to the filesystem object */
     618:	4ba4      	ldr	r3, [pc, #656]	; (8ac <find_volume+0x2ac>)
     61a:	f853 4026 	ldr.w	r4, [r3, r6, lsl #2]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3234
	if (!fs) return FR_NOT_ENABLED;		/* Is the filesystem object available? */
     61e:	2c00      	cmp	r4, #0
     620:	f000 8135 	beq.w	88e <find_volume+0x28e>
lock_fs():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:911
	return ff_req_grant(fs->sobj);
     624:	6920      	ldr	r0, [r4, #16]
     626:	f001 f995 	bl	1954 <ff_req_grant>
find_volume():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3236
#if FF_FS_REENTRANT
	if (!lock_fs(fs)) return FR_TIMEOUT;	/* Lock the volume */
     62a:	2800      	cmp	r0, #0
     62c:	f000 8131 	beq.w	892 <find_volume+0x292>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3238
#endif
	*rfs = fs;							/* Return pointer to the filesystem object */
     630:	603c      	str	r4, [r7, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3241

	mode &= (BYTE)~FA_READ;				/* Desired access mode, write access or not */
	if (fs->fs_type != 0) {				/* If the volume has been mounted */
     632:	7823      	ldrb	r3, [r4, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3240
	mode &= (BYTE)~FA_READ;				/* Desired access mode, write access or not */
     634:	f005 05fe 	and.w	r5, r5, #254	; 0xfe
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3241
	if (fs->fs_type != 0) {				/* If the volume has been mounted */
     638:	b16b      	cbz	r3, 656 <find_volume+0x56>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3242
		stat = disk_status(fs->pdrv);
     63a:	7860      	ldrb	r0, [r4, #1]
     63c:	f001 fa20 	bl	1a80 <disk_status>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3243
		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
     640:	07c1      	lsls	r1, r0, #31
     642:	d408      	bmi.n	656 <find_volume+0x56>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3244
			if (!FF_FS_READONLY && mode && (stat & STA_PROTECT)) {	/* Check write protection if needed */
     644:	b11d      	cbz	r5, 64e <find_volume+0x4e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3244 (discriminator 1)
     646:	f010 0504 	ands.w	r5, r0, #4
     64a:	d000      	beq.n	64e <find_volume+0x4e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3245
				return FR_WRITE_PROTECTED;
     64c:	250a      	movs	r5, #10
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3444
#endif
#if FF_FS_LOCK != 0			/* Clear file lock semaphores */
	clear_lock(fs);
#endif
	return FR_OK;
}
     64e:	4628      	mov	r0, r5
     650:	b005      	add	sp, #20
     652:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3254
	fs->fs_type = 0;					/* Clear the filesystem object */
     656:	2300      	movs	r3, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3255
	fs->pdrv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
     658:	b2f0      	uxtb	r0, r6
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3254
	fs->fs_type = 0;					/* Clear the filesystem object */
     65a:	7023      	strb	r3, [r4, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3255
	fs->pdrv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
     65c:	7060      	strb	r0, [r4, #1]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3256
	stat = disk_initialize(fs->pdrv);	/* Initialize the physical drive */
     65e:	f001 fa01 	bl	1a64 <disk_initialize>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3257
	if (stat & STA_NOINIT) { 			/* Check if the initialization succeeded */
     662:	07c2      	lsls	r2, r0, #31
     664:	f100 8117 	bmi.w	896 <find_volume+0x296>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3260
	if (!FF_FS_READONLY && mode && (stat & STA_PROTECT)) { /* Check disk write protection if needed */
     668:	b10d      	cbz	r5, 66e <find_volume+0x6e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3260 (discriminator 1)
     66a:	0743      	lsls	r3, r0, #29
     66c:	d4ee      	bmi.n	64c <find_volume+0x4c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3270
	fmt = check_fs(fs, bsect);			/* Load sector 0 and check if it is an FAT-VBR as SFD */
     66e:	2100      	movs	r1, #0
     670:	4620      	mov	r0, r4
     672:	f7ff ff8b 	bl	58c <check_fs>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3271
	if (fmt == 2 || (fmt < 2 && LD2PT(vol) != 0)) {	/* Not an FAT-VBR or forced partition number */
     676:	2802      	cmp	r0, #2
     678:	f040 80ee 	bne.w	858 <find_volume+0x258>
     67c:	466f      	mov	r7, sp
     67e:	f504 71ff 	add.w	r1, r4, #510	; 0x1fe
     682:	f204 263e 	addw	r6, r4, #574	; 0x23e
     686:	463d      	mov	r5, r7
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3274
			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
     688:	f811 0c04 	ldrb.w	r0, [r1, #-4]
     68c:	b110      	cbz	r0, 694 <find_volume+0x94>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3274 (discriminator 1)
     68e:	4608      	mov	r0, r1
     690:	f7ff fec9 	bl	426 <ld_dword>
     694:	3110      	adds	r1, #16
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3272 (discriminator 4)
		for (i = 0; i < 4; i++) {		/* Get partition offset */
     696:	428e      	cmp	r6, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3274 (discriminator 4)
			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
     698:	f845 0b04 	str.w	r0, [r5], #4
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3272 (discriminator 4)
		for (i = 0; i < 4; i++) {		/* Get partition offset */
     69c:	d1f4      	bne.n	688 <find_volume+0x88>
     69e:	2500      	movs	r5, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3279
			bsect = br[i];
     6a0:	f857 6b04 	ldr.w	r6, [r7], #4
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3280
			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
     6a4:	2e00      	cmp	r6, #0
     6a6:	f000 80ce 	beq.w	846 <find_volume+0x246>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3280 (discriminator 1)
     6aa:	4631      	mov	r1, r6
     6ac:	4620      	mov	r0, r4
     6ae:	f7ff ff6d 	bl	58c <check_fs>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3281 (discriminator 1)
		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
     6b2:	2801      	cmp	r0, #1
     6b4:	f200 80c8 	bhi.w	848 <find_volume+0x248>
ld_word():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     6b8:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
     6bc:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
     6c0:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
find_volume():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3352
		if (ld_word(fs->win + BPB_BytsPerSec) != SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_BytsPerSec must be equal to the physical sector size) */
     6c4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
     6c8:	f040 80ca 	bne.w	860 <find_volume+0x260>
ld_word():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     6cc:	f894 304f 	ldrb.w	r3, [r4, #79]	; 0x4f
     6d0:	f894 504e 	ldrb.w	r5, [r4, #78]	; 0x4e
find_volume():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3355
		if (fasize == 0) fasize = ld_dword(fs->win + BPB_FATSz32);
     6d4:	ea55 2503 	orrs.w	r5, r5, r3, lsl #8
     6d8:	d104      	bne.n	6e4 <find_volume+0xe4>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3355 (discriminator 1)
     6da:	f104 005c 	add.w	r0, r4, #92	; 0x5c
     6de:	f7ff fea2 	bl	426 <ld_dword>
     6e2:	4605      	mov	r5, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3358
		fs->n_fats = fs->win[BPB_NumFATs];				/* Number of FATs */
     6e4:	f894 1048 	ldrb.w	r1, [r4, #72]	; 0x48
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3356
		fs->fsize = fasize;
     6e8:	6225      	str	r5, [r4, #32]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3359
		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
     6ea:	1e4b      	subs	r3, r1, #1
     6ec:	2b01      	cmp	r3, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3358
		fs->n_fats = fs->win[BPB_NumFATs];				/* Number of FATs */
     6ee:	70a1      	strb	r1, [r4, #2]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3359
		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
     6f0:	f200 80b6 	bhi.w	860 <find_volume+0x260>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3362
		fs->csize = fs->win[BPB_SecPerClus];			/* Cluster size */
     6f4:	f894 9045 	ldrb.w	r9, [r4, #69]	; 0x45
     6f8:	fa1f f389 	uxth.w	r3, r9
     6fc:	8163      	strh	r3, [r4, #10]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3363
		if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power of 2) */
     6fe:	2b00      	cmp	r3, #0
     700:	f000 80ae 	beq.w	860 <find_volume+0x260>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3363 (discriminator 2)
     704:	f109 33ff 	add.w	r3, r9, #4294967295	; 0xffffffff
     708:	ea13 0f09 	tst.w	r3, r9
     70c:	f040 80a8 	bne.w	860 <find_volume+0x260>
ld_word():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     710:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
     714:	f894 7049 	ldrb.w	r7, [r4, #73]	; 0x49
     718:	ea47 2703 	orr.w	r7, r7, r3, lsl #8
     71c:	b23f      	sxth	r7, r7
     71e:	fa1f f887 	uxth.w	r8, r7
find_volume():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3366
		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
     722:	f018 0f0f 	tst.w	r8, #15
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3365
		fs->n_rootdir = ld_word(fs->win + BPB_RootEntCnt);	/* Number of root directory entries */
     726:	f8a4 8008 	strh.w	r8, [r4, #8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3366
		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
     72a:	f040 8099 	bne.w	860 <find_volume+0x260>
ld_word():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     72e:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
     732:	f894 004b 	ldrb.w	r0, [r4, #75]	; 0x4b
find_volume():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3369
		if (tsect == 0) tsect = ld_dword(fs->win + BPB_TotSec32);
     736:	ea50 2003 	orrs.w	r0, r0, r3, lsl #8
     73a:	d103      	bne.n	744 <find_volume+0x144>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3369 (discriminator 1)
     73c:	f104 0058 	add.w	r0, r4, #88	; 0x58
     740:	f7ff fe71 	bl	426 <ld_dword>
ld_word():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     744:	f894 2047 	ldrb.w	r2, [r4, #71]	; 0x47
     748:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
find_volume():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3372
		if (nrsv == 0) return FR_NO_FILESYSTEM;			/* (Must not be 0) */
     74c:	ea53 2302 	orrs.w	r3, r3, r2, lsl #8
     750:	f000 8086 	beq.w	860 <find_volume+0x260>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3360
		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
     754:	fb05 fc01 	mul.w	ip, r5, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3375
		sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZDIRE);	/* RSV + FAT + DIR */
     758:	eb03 1218 	add.w	r2, r3, r8, lsr #4
     75c:	4462      	add	r2, ip
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3376
		if (tsect < sysect) return FR_NO_FILESYSTEM;	/* (Invalid volume size) */
     75e:	4290      	cmp	r0, r2
     760:	d37e      	bcc.n	860 <find_volume+0x260>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3377
		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
     762:	1a80      	subs	r0, r0, r2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3378
		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
     764:	4548      	cmp	r0, r9
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3377
		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
     766:	fbb0 f1f9 	udiv	r1, r0, r9
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3378
		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
     76a:	d379      	bcc.n	860 <find_volume+0x260>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3380
		if (nclst <= MAX_FAT32) fmt = FS_FAT32;
     76c:	4850      	ldr	r0, [pc, #320]	; (8b0 <find_volume+0x2b0>)
     76e:	4281      	cmp	r1, r0
     770:	d876      	bhi.n	860 <find_volume+0x260>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3381
		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
     772:	f64f 70f5 	movw	r0, #65525	; 0xfff5
     776:	4281      	cmp	r1, r0
     778:	f240 808f 	bls.w	89a <find_volume+0x29a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3380
		if (nclst <= MAX_FAT32) fmt = FS_FAT32;
     77c:	f04f 0903 	mov.w	r9, #3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3386
		fs->n_fatent = nclst + 2;						/* Number of FAT entries */
     780:	3102      	adds	r1, #2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3388
		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
     782:	4433      	add	r3, r6
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3389
		fs->database = bsect + sysect;					/* Data start sector */
     784:	4432      	add	r2, r6
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3390
		if (fmt == FS_FAT32) {
     786:	f1b9 0f03 	cmp.w	r9, #3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3386
		fs->n_fatent = nclst + 2;						/* Number of FAT entries */
     78a:	61e1      	str	r1, [r4, #28]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3387
		fs->volbase = bsect;							/* Volume start sector */
     78c:	6266      	str	r6, [r4, #36]	; 0x24
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3388
		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
     78e:	62a3      	str	r3, [r4, #40]	; 0x28
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3389
		fs->database = bsect + sysect;					/* Data start sector */
     790:	6322      	str	r2, [r4, #48]	; 0x30
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3390
		if (fmt == FS_FAT32) {
     792:	d169      	bne.n	868 <find_volume+0x268>
ld_word():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     794:	f894 2063 	ldrb.w	r2, [r4, #99]	; 0x63
     798:	f894 3062 	ldrb.w	r3, [r4, #98]	; 0x62
     79c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
find_volume():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3391
			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0) */
     7a0:	431f      	orrs	r7, r3
     7a2:	b23f      	sxth	r7, r7
     7a4:	2f00      	cmp	r7, #0
     7a6:	d15b      	bne.n	860 <find_volume+0x260>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3393
			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
     7a8:	f104 0064 	add.w	r0, r4, #100	; 0x64
     7ac:	f7ff fe3b 	bl	426 <ld_dword>
     7b0:	62e0      	str	r0, [r4, #44]	; 0x2c
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3394
			szbfat = fs->n_fatent * 4;					/* (Needed FAT size) */
     7b2:	0089      	lsls	r1, r1, #2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3401
		if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_FATSz must not be less than the size needed) */
     7b4:	f201 11ff 	addw	r1, r1, #511	; 0x1ff
     7b8:	ebb5 2f51 	cmp.w	r5, r1, lsr #9
     7bc:	d350      	bcc.n	860 <find_volume+0x260>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3405
		fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
     7be:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
     7c2:	e9c4 3305 	strd	r3, r3, [r4, #20]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3408
		if (fmt == FS_FAT32				/* Allow to update FSInfo only if BPB_FSInfo32 == 1 */
     7c6:	f1b9 0f03 	cmp.w	r9, #3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3406
		fs->fsi_flag = 0x80;
     7ca:	f04f 0380 	mov.w	r3, #128	; 0x80
     7ce:	7123      	strb	r3, [r4, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3408
		if (fmt == FS_FAT32				/* Allow to update FSInfo only if BPB_FSInfo32 == 1 */
     7d0:	d12f      	bne.n	832 <find_volume+0x232>
ld_word():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     7d2:	f894 2069 	ldrb.w	r2, [r4, #105]	; 0x69
     7d6:	f894 3068 	ldrb.w	r3, [r4, #104]	; 0x68
     7da:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
find_volume():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3409
			&& ld_word(fs->win + BPB_FSInfo32) == 1
     7de:	2b01      	cmp	r3, #1
     7e0:	d127      	bne.n	832 <find_volume+0x232>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3410
			&& move_window(fs, bsect + 1) == FR_OK)
     7e2:	1c71      	adds	r1, r6, #1
     7e4:	4620      	mov	r0, r4
     7e6:	f7ff feae 	bl	546 <move_window>
     7ea:	bb10      	cbnz	r0, 832 <find_volume+0x232>
ld_word():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     7ec:	f894 2237 	ldrb.w	r2, [r4, #567]	; 0x237
     7f0:	f894 3236 	ldrb.w	r3, [r4, #566]	; 0x236
find_volume():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3412
			fs->fsi_flag = 0;
     7f4:	7120      	strb	r0, [r4, #4]
ld_word():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     7f6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
find_volume():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3413
			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSInfo data if available */
     7fa:	f64a 2255 	movw	r2, #43605	; 0xaa55
     7fe:	4293      	cmp	r3, r2
     800:	d117      	bne.n	832 <find_volume+0x232>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3414
				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
     802:	f104 0038 	add.w	r0, r4, #56	; 0x38
     806:	f7ff fe0e 	bl	426 <ld_dword>
     80a:	4b2a      	ldr	r3, [pc, #168]	; (8b4 <find_volume+0x2b4>)
     80c:	4298      	cmp	r0, r3
     80e:	d110      	bne.n	832 <find_volume+0x232>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3415
				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
     810:	f504 7007 	add.w	r0, r4, #540	; 0x21c
     814:	f7ff fe07 	bl	426 <ld_dword>
     818:	4b27      	ldr	r3, [pc, #156]	; (8b8 <find_volume+0x2b8>)
     81a:	4298      	cmp	r0, r3
     81c:	d109      	bne.n	832 <find_volume+0x232>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3418
				fs->free_clst = ld_dword(fs->win + FSI_Free_Count);
     81e:	f504 7008 	add.w	r0, r4, #544	; 0x220
     822:	f7ff fe00 	bl	426 <ld_dword>
     826:	61a0      	str	r0, [r4, #24]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3421
				fs->last_clst = ld_dword(fs->win + FSI_Nxt_Free);
     828:	f504 7009 	add.w	r0, r4, #548	; 0x224
     82c:	f7ff fdfb 	bl	426 <ld_dword>
     830:	6160      	str	r0, [r4, #20]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3430
	fs->id = ++Fsid;		/* Volume mount ID */
     832:	4a22      	ldr	r2, [pc, #136]	; (8bc <find_volume+0x2bc>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3429
	fs->fs_type = fmt;		/* FAT sub-type */
     834:	f884 9000 	strb.w	r9, [r4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3430
	fs->id = ++Fsid;		/* Volume mount ID */
     838:	8813      	ldrh	r3, [r2, #0]
     83a:	3301      	adds	r3, #1
     83c:	b29b      	uxth	r3, r3
     83e:	8013      	strh	r3, [r2, #0]
     840:	80e3      	strh	r3, [r4, #6]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3443
	return FR_OK;
     842:	2500      	movs	r5, #0
     844:	e703      	b.n	64e <find_volume+0x4e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3280
			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
     846:	2003      	movs	r0, #3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3281 (discriminator 1)
		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
     848:	3501      	adds	r5, #1
     84a:	2d04      	cmp	r5, #4
     84c:	f47f af28 	bne.w	6a0 <find_volume+0xa0>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3283
	if (fmt == 4) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
     850:	2804      	cmp	r0, #4
     852:	d105      	bne.n	860 <find_volume+0x260>
     854:	2501      	movs	r5, #1
     856:	e6fa      	b.n	64e <find_volume+0x4e>
     858:	2804      	cmp	r0, #4
     85a:	d0fb      	beq.n	854 <find_volume+0x254>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3284
	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
     85c:	2801      	cmp	r0, #1
     85e:	d901      	bls.n	864 <find_volume+0x264>
     860:	250d      	movs	r5, #13
     862:	e6f4      	b.n	64e <find_volume+0x4e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3269
	bsect = 0;
     864:	2600      	movs	r6, #0
     866:	e727      	b.n	6b8 <find_volume+0xb8>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3396
			if (fs->n_rootdir == 0)	return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must not be 0) */
     868:	f1b8 0f00 	cmp.w	r8, #0
     86c:	d0f8      	beq.n	860 <find_volume+0x260>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3397
			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
     86e:	4463      	add	r3, ip
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3399
				fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
     870:	f1b9 0f02 	cmp.w	r9, #2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3397
			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
     874:	62e3      	str	r3, [r4, #44]	; 0x2c
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3398
			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
     876:	ea4f 0341 	mov.w	r3, r1, lsl #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3399
				fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
     87a:	bf1b      	ittet	ne
     87c:	185b      	addne	r3, r3, r1
     87e:	f001 0101 	andne.w	r1, r1, #1
     882:	4619      	moveq	r1, r3
     884:	eb01 0153 	addne.w	r1, r1, r3, lsr #1
     888:	e794      	b.n	7b4 <find_volume+0x1b4>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3230
	if (vol < 0) return FR_INVALID_DRIVE;
     88a:	250b      	movs	r5, #11
     88c:	e6df      	b.n	64e <find_volume+0x4e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3234
	if (!fs) return FR_NOT_ENABLED;		/* Is the filesystem object available? */
     88e:	250c      	movs	r5, #12
     890:	e6dd      	b.n	64e <find_volume+0x4e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3236
	if (!lock_fs(fs)) return FR_TIMEOUT;	/* Lock the volume */
     892:	250f      	movs	r5, #15
     894:	e6db      	b.n	64e <find_volume+0x4e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3258
		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
     896:	2503      	movs	r5, #3
     898:	e6d9      	b.n	64e <find_volume+0x4e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3382
		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
     89a:	f640 79f5 	movw	r9, #4085	; 0xff5
     89e:	4549      	cmp	r1, r9
     8a0:	bf8c      	ite	hi
     8a2:	f04f 0902 	movhi.w	r9, #2
     8a6:	f04f 0901 	movls.w	r9, #1
     8aa:	e769      	b.n	780 <find_volume+0x180>
     8ac:	10000330 	.word	0x10000330
     8b0:	0ffffff5 	.word	0x0ffffff5
     8b4:	41615252 	.word	0x41615252
     8b8:	61417272 	.word	0x61417272
     8bc:	10000334 	.word	0x10000334

000008c0 <put_fat>:
put_fat():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1237
	if (clst >= 2 && clst < fs->n_fatent) {	/* Check if in valid range */
     8c0:	2901      	cmp	r1, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1231
{
     8c2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
     8c6:	4605      	mov	r5, r0
     8c8:	460c      	mov	r4, r1
     8ca:	4617      	mov	r7, r2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1237
	if (clst >= 2 && clst < fs->n_fatent) {	/* Check if in valid range */
     8cc:	d972      	bls.n	9b4 <put_fat+0xf4>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1237 (discriminator 1)
     8ce:	69c3      	ldr	r3, [r0, #28]
     8d0:	428b      	cmp	r3, r1
     8d2:	d96f      	bls.n	9b4 <put_fat+0xf4>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1238
		switch (fs->fs_type) {
     8d4:	7803      	ldrb	r3, [r0, #0]
     8d6:	2b02      	cmp	r3, #2
     8d8:	d03f      	beq.n	95a <put_fat+0x9a>
     8da:	2b03      	cmp	r3, #3
     8dc:	d050      	beq.n	980 <put_fat+0xc0>
     8de:	2b01      	cmp	r3, #1
     8e0:	d168      	bne.n	9b4 <put_fat+0xf4>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1240
			bc = (UINT)clst; bc += bc / 2;	/* bc: byte offset of the entry */
     8e2:	eb01 0851 	add.w	r8, r1, r1, lsr #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1241
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
     8e6:	6a81      	ldr	r1, [r0, #40]	; 0x28
     8e8:	eb01 2158 	add.w	r1, r1, r8, lsr #9
     8ec:	f7ff fe2b 	bl	546 <move_window>
     8f0:	4606      	mov	r6, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1242
			if (res != FR_OK) break;
     8f2:	bb38      	cbnz	r0, 944 <put_fat+0x84>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1243
			p = fs->win + bc++ % SS(fs);
     8f4:	f105 0938 	add.w	r9, r5, #56	; 0x38
     8f8:	f108 0a01 	add.w	sl, r8, #1
     8fc:	f3c8 0808 	ubfx	r8, r8, #0, #9
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1244
			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;		/* Put 1st byte */
     900:	f014 0401 	ands.w	r4, r4, #1
     904:	bf1f      	itttt	ne
     906:	f819 3008 	ldrbne.w	r3, [r9, r8]
     90a:	f003 020f 	andne.w	r2, r3, #15
     90e:	013b      	lslne	r3, r7, #4
     910:	f003 03f0 	andne.w	r3, r3, #240	; 0xf0
     914:	bf14      	ite	ne
     916:	4313      	orrne	r3, r2
     918:	b2fb      	uxtbeq	r3, r7
     91a:	f809 3008 	strb.w	r3, [r9, r8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1246
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
     91e:	6aa9      	ldr	r1, [r5, #40]	; 0x28
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1245
			fs->wflag = 1;
     920:	2301      	movs	r3, #1
     922:	70eb      	strb	r3, [r5, #3]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1246
			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
     924:	eb01 215a 	add.w	r1, r1, sl, lsr #9
     928:	4628      	mov	r0, r5
     92a:	f7ff fe0c 	bl	546 <move_window>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1247
			if (res != FR_OK) break;
     92e:	4606      	mov	r6, r0
     930:	b940      	cbnz	r0, 944 <put_fat+0x84>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1248
			p = fs->win + bc % SS(fs);
     932:	f3ca 0a08 	ubfx	sl, sl, #0, #9
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1249
			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));	/* Put 2nd byte */
     936:	b144      	cbz	r4, 94a <put_fat+0x8a>
     938:	f3c7 1707 	ubfx	r7, r7, #4, #8
     93c:	f809 700a 	strb.w	r7, [r9, sl]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1270
			fs->wflag = 1;
     940:	2301      	movs	r3, #1
     942:	70eb      	strb	r3, [r5, #3]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1275
}
     944:	4630      	mov	r0, r6
     946:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1249
			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));	/* Put 2nd byte */
     94a:	f819 300a 	ldrb.w	r3, [r9, sl]
     94e:	f3c7 2703 	ubfx	r7, r7, #8, #4
     952:	f023 030f 	bic.w	r3, r3, #15
     956:	431f      	orrs	r7, r3
     958:	e7f0      	b.n	93c <put_fat+0x7c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1254
			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)));
     95a:	6a81      	ldr	r1, [r0, #40]	; 0x28
     95c:	eb01 2114 	add.w	r1, r1, r4, lsr #8
     960:	f7ff fdf1 	bl	546 <move_window>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1255
			if (res != FR_OK) break;
     964:	4606      	mov	r6, r0
     966:	2800      	cmp	r0, #0
     968:	d1ec      	bne.n	944 <put_fat+0x84>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1256
			st_word(fs->win + clst * 2 % SS(fs), (WORD)val);	/* Simple WORD array */
     96a:	0064      	lsls	r4, r4, #1
     96c:	f105 0338 	add.w	r3, r5, #56	; 0x38
     970:	f404 74ff 	and.w	r4, r4, #510	; 0x1fe
     974:	191a      	adds	r2, r3, r4
st_word():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:620
	*ptr++ = (BYTE)val; val >>= 8;
     976:	551f      	strb	r7, [r3, r4]
     978:	f3c7 2707 	ubfx	r7, r7, #8, #8
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:621
	*ptr++ = (BYTE)val;
     97c:	7057      	strb	r7, [r2, #1]
put_fat():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1257
			fs->wflag = 1;
     97e:	e7df      	b.n	940 <put_fat+0x80>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1264
			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)));
     980:	6a81      	ldr	r1, [r0, #40]	; 0x28
     982:	eb01 11d4 	add.w	r1, r1, r4, lsr #7
     986:	f7ff fdde 	bl	546 <move_window>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1265
			if (res != FR_OK) break;
     98a:	4606      	mov	r6, r0
     98c:	2800      	cmp	r0, #0
     98e:	d1d9      	bne.n	944 <put_fat+0x84>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1267
				val = (val & 0x0FFFFFFF) | (ld_dword(fs->win + clst * 4 % SS(fs)) & 0xF0000000);
     990:	00a4      	lsls	r4, r4, #2
     992:	f105 0338 	add.w	r3, r5, #56	; 0x38
     996:	f404 74fe 	and.w	r4, r4, #508	; 0x1fc
     99a:	441c      	add	r4, r3
     99c:	4620      	mov	r0, r4
     99e:	f7ff fd42 	bl	426 <ld_dword>
     9a2:	f027 4770 	bic.w	r7, r7, #4026531840	; 0xf0000000
     9a6:	f000 4170 	and.w	r1, r0, #4026531840	; 0xf0000000
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1269
			st_dword(fs->win + clst * 4 % SS(fs), val);
     9aa:	4339      	orrs	r1, r7
     9ac:	4620      	mov	r0, r4
     9ae:	f7ff fd42 	bl	436 <st_dword>
     9b2:	e7c5      	b.n	940 <put_fat+0x80>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1234
	FRESULT res = FR_INT_ERR;
     9b4:	2602      	movs	r6, #2
     9b6:	e7c5      	b.n	944 <put_fat+0x84>

000009b8 <get_fat.isra.10>:
get_fat():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1159
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check if in valid range */
     9b8:	2901      	cmp	r1, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1149
static DWORD get_fat (		/* 0xFFFFFFFF:Disk error, 1:Internal error, 2..0x7FFFFFFF:Cluster status */
     9ba:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     9bc:	4605      	mov	r5, r0
     9be:	460c      	mov	r4, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1159
	if (clst < 2 || clst >= fs->n_fatent) {	/* Check if in valid range */
     9c0:	d952      	bls.n	a68 <get_fat.isra.10+0xb0>
     9c2:	69c3      	ldr	r3, [r0, #28]
     9c4:	4299      	cmp	r1, r3
     9c6:	d24f      	bcs.n	a68 <get_fat.isra.10+0xb0>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1165
		switch (fs->fs_type) {
     9c8:	7803      	ldrb	r3, [r0, #0]
     9ca:	2b02      	cmp	r3, #2
     9cc:	d029      	beq.n	a22 <get_fat.isra.10+0x6a>
     9ce:	2b03      	cmp	r3, #3
     9d0:	d038      	beq.n	a44 <get_fat.isra.10+0x8c>
     9d2:	2b01      	cmp	r3, #1
     9d4:	d148      	bne.n	a68 <get_fat.isra.10+0xb0>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1167
			bc = (UINT)clst; bc += bc / 2;
     9d6:	eb01 0651 	add.w	r6, r1, r1, lsr #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1168
			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
     9da:	6a81      	ldr	r1, [r0, #40]	; 0x28
     9dc:	eb01 2156 	add.w	r1, r1, r6, lsr #9
     9e0:	f7ff fdb1 	bl	546 <move_window>
     9e4:	b110      	cbz	r0, 9ec <get_fat.isra.10+0x34>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1163
		val = 0xFFFFFFFF;	/* Default value falls on disk error */
     9e6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1216
}
     9ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1169
			wc = fs->win[bc++ % SS(fs)];		/* Get 1st byte of the entry */
     9ec:	1c77      	adds	r7, r6, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1170
			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
     9ee:	6aa9      	ldr	r1, [r5, #40]	; 0x28
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1169
			wc = fs->win[bc++ % SS(fs)];		/* Get 1st byte of the entry */
     9f0:	f3c6 0608 	ubfx	r6, r6, #0, #9
     9f4:	442e      	add	r6, r5
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1170
			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
     9f6:	eb01 2157 	add.w	r1, r1, r7, lsr #9
     9fa:	4628      	mov	r0, r5
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1169
			wc = fs->win[bc++ % SS(fs)];		/* Get 1st byte of the entry */
     9fc:	f896 6038 	ldrb.w	r6, [r6, #56]	; 0x38
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1170
			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
     a00:	f7ff fda1 	bl	546 <move_window>
     a04:	2800      	cmp	r0, #0
     a06:	d1ee      	bne.n	9e6 <get_fat.isra.10+0x2e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1171
			wc |= fs->win[bc % SS(fs)] << 8;	/* Merge 2nd byte of the entry */
     a08:	f3c7 0708 	ubfx	r7, r7, #0, #9
     a0c:	443d      	add	r5, r7
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1172
			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);	/* Adjust bit position */
     a0e:	07e3      	lsls	r3, r4, #31
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1171
			wc |= fs->win[bc % SS(fs)] << 8;	/* Merge 2nd byte of the entry */
     a10:	f895 0038 	ldrb.w	r0, [r5, #56]	; 0x38
     a14:	ea46 2000 	orr.w	r0, r6, r0, lsl #8
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1172
			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);	/* Adjust bit position */
     a18:	bf4c      	ite	mi
     a1a:	0900      	lsrmi	r0, r0, #4
     a1c:	f3c0 000b 	ubfxpl	r0, r0, #0, #12
     a20:	e7e3      	b.n	9ea <get_fat.isra.10+0x32>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1176
			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2))) != FR_OK) break;
     a22:	6a81      	ldr	r1, [r0, #40]	; 0x28
     a24:	eb01 2114 	add.w	r1, r1, r4, lsr #8
     a28:	f7ff fd8d 	bl	546 <move_window>
     a2c:	2800      	cmp	r0, #0
     a2e:	d1da      	bne.n	9e6 <get_fat.isra.10+0x2e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1177
			val = ld_word(fs->win + clst * 2 % SS(fs));		/* Simple WORD array */
     a30:	0064      	lsls	r4, r4, #1
     a32:	3538      	adds	r5, #56	; 0x38
     a34:	f404 74ff 	and.w	r4, r4, #510	; 0x1fe
     a38:	192b      	adds	r3, r5, r4
ld_word():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     a3a:	5d28      	ldrb	r0, [r5, r4]
     a3c:	785b      	ldrb	r3, [r3, #1]
get_fat():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1177
			val = ld_word(fs->win + clst * 2 % SS(fs));		/* Simple WORD array */
     a3e:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1178
			break;
     a42:	e7d2      	b.n	9ea <get_fat.isra.10+0x32>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1181
			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
     a44:	6a81      	ldr	r1, [r0, #40]	; 0x28
     a46:	eb01 11d4 	add.w	r1, r1, r4, lsr #7
     a4a:	f7ff fd7c 	bl	546 <move_window>
     a4e:	2800      	cmp	r0, #0
     a50:	d1c9      	bne.n	9e6 <get_fat.isra.10+0x2e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1182
			val = ld_dword(fs->win + clst * 4 % SS(fs)) & 0x0FFFFFFF;	/* Simple DWORD array but mask out upper 4 bits */
     a52:	00a4      	lsls	r4, r4, #2
     a54:	f105 0038 	add.w	r0, r5, #56	; 0x38
     a58:	f404 74fe 	and.w	r4, r4, #508	; 0x1fc
     a5c:	4420      	add	r0, r4
     a5e:	f7ff fce2 	bl	426 <ld_dword>
     a62:	f020 4070 	bic.w	r0, r0, #4026531840	; 0xf0000000
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1183
			break;
     a66:	e7c0      	b.n	9ea <get_fat.isra.10+0x32>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1211
			val = 1;	/* Internal error */
     a68:	2001      	movs	r0, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1215
	return val;
     a6a:	e7be      	b.n	9ea <get_fat.isra.10+0x32>

00000a6c <dir_sdi>:
dir_sdi():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1692
	if (ofs >= (DWORD)((FF_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR) || ofs % SZDIRE) {	/* Check range of offset and alignment */
     a6c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1687
{
     a70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     a72:	4606      	mov	r6, r0
     a74:	460d      	mov	r5, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1692
	if (ofs >= (DWORD)((FF_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR) || ofs % SZDIRE) {	/* Check range of offset and alignment */
     a76:	d301      	bcc.n	a7c <dir_sdi+0x10>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1693
		return FR_INT_ERR;
     a78:	2002      	movs	r0, #2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1722
}
     a7a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1692 (discriminator 1)
	if (ofs >= (DWORD)((FF_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR) || ofs % SZDIRE) {	/* Check range of offset and alignment */
     a7c:	06ca      	lsls	r2, r1, #27
     a7e:	d1fb      	bne.n	a78 <dir_sdi+0xc>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1696
	clst = dp->obj.sclust;		/* Table start cluster (0:root) */
     a80:	6882      	ldr	r2, [r0, #8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1689
	FATFS *fs = dp->obj.fs;
     a82:	6804      	ldr	r4, [r0, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1695
	dp->dptr = ofs;				/* Set current offset */
     a84:	6131      	str	r1, [r6, #16]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1697
	if (clst == 0 && fs->fs_type >= FS_FAT32) {	/* Replace cluster# 0 with root cluster# */
     a86:	b9ca      	cbnz	r2, abc <dir_sdi+0x50>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1697 (discriminator 1)
     a88:	7823      	ldrb	r3, [r4, #0]
     a8a:	2b02      	cmp	r3, #2
     a8c:	d901      	bls.n	a92 <dir_sdi+0x26>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1698
		clst = fs->dirbase;
     a8e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1702
	if (clst == 0) {	/* Static table (root-directory on the FAT volume) */
     a90:	b99b      	cbnz	r3, aba <dir_sdi+0x4e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1703
		if (ofs / SZDIRE >= fs->n_rootdir) return FR_INT_ERR;	/* Is index out of range? */
     a92:	8923      	ldrh	r3, [r4, #8]
     a94:	ebb3 1f55 	cmp.w	r3, r5, lsr #5
     a98:	d9ee      	bls.n	a78 <dir_sdi+0xc>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1704
		dp->sect = fs->dirbase;
     a9a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
     a9c:	61b3      	str	r3, [r6, #24]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1717
	if (dp->sect == 0) return FR_INT_ERR;
     a9e:	69b3      	ldr	r3, [r6, #24]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1716
	dp->clust = clst;					/* Current cluster# */
     aa0:	6172      	str	r2, [r6, #20]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1717
	if (dp->sect == 0) return FR_INT_ERR;
     aa2:	2b00      	cmp	r3, #0
     aa4:	d0e8      	beq.n	a78 <dir_sdi+0xc>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1718
	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
     aa6:	eb03 2355 	add.w	r3, r3, r5, lsr #9
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1719
	dp->dir = fs->win + (ofs % SS(fs));	/* Pointer to the entry in the win[] */
     aaa:	3438      	adds	r4, #56	; 0x38
     aac:	f3c5 0508 	ubfx	r5, r5, #0, #9
     ab0:	442c      	add	r4, r5
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1718
	dp->sect += ofs / SS(fs);			/* Sector# of the directory entry */
     ab2:	61b3      	str	r3, [r6, #24]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1719
	dp->dir = fs->win + (ofs % SS(fs));	/* Pointer to the entry in the win[] */
     ab4:	61f4      	str	r4, [r6, #28]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1721
	return FR_OK;
     ab6:	2000      	movs	r0, #0
     ab8:	e7df      	b.n	a7a <dir_sdi+0xe>
     aba:	461a      	mov	r2, r3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1707
		csz = (DWORD)fs->csize * SS(fs);	/* Bytes per cluster */
     abc:	8967      	ldrh	r7, [r4, #10]
     abe:	027f      	lsls	r7, r7, #9
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1708
		while (ofs >= csz) {				/* Follow cluster chain */
     ac0:	42bd      	cmp	r5, r7
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1709
			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
     ac2:	4611      	mov	r1, r2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1708
		while (ofs >= csz) {				/* Follow cluster chain */
     ac4:	d204      	bcs.n	ad0 <dir_sdi+0x64>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1714
		dp->sect = clst2sect(fs, clst);
     ac6:	4620      	mov	r0, r4
     ac8:	f7ff fccb 	bl	462 <clst2sect>
     acc:	61b0      	str	r0, [r6, #24]
     ace:	e7e6      	b.n	a9e <dir_sdi+0x32>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1709
			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
     ad0:	6830      	ldr	r0, [r6, #0]
     ad2:	f7ff ff71 	bl	9b8 <get_fat.isra.10>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1710
			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
     ad6:	1c43      	adds	r3, r0, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1709
			clst = get_fat(&dp->obj, clst);				/* Get next cluster */
     ad8:	4602      	mov	r2, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1710
			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
     ada:	d006      	beq.n	aea <dir_sdi+0x7e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1711
			if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Reached to end of table or internal error */
     adc:	2801      	cmp	r0, #1
     ade:	d9cb      	bls.n	a78 <dir_sdi+0xc>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1711 (discriminator 2)
     ae0:	69e3      	ldr	r3, [r4, #28]
     ae2:	4283      	cmp	r3, r0
     ae4:	d9c8      	bls.n	a78 <dir_sdi+0xc>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1712
			ofs -= csz;
     ae6:	1bed      	subs	r5, r5, r7
     ae8:	e7ea      	b.n	ac0 <dir_sdi+0x54>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1710
			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
     aea:	2001      	movs	r0, #1
     aec:	e7c5      	b.n	a7a <dir_sdi+0xe>

00000aee <create_chain>:
create_chain():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1515
{
     aee:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
     af2:	4680      	mov	r8, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1518
	FATFS *fs = obj->fs;
     af4:	6805      	ldr	r5, [r0, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1521
	if (clst == 0) {	/* Create a new chain */
     af6:	460f      	mov	r7, r1
     af8:	b949      	cbnz	r1, b0e <create_chain+0x20>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1522
		scl = fs->last_clst;				/* Suggested cluster to start to find */
     afa:	696e      	ldr	r6, [r5, #20]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1523
		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
     afc:	b1c6      	cbz	r6, b30 <create_chain+0x42>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1523 (discriminator 2)
     afe:	69eb      	ldr	r3, [r5, #28]
     b00:	42b3      	cmp	r3, r6
     b02:	bf98      	it	ls
     b04:	2601      	movls	r6, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1532
	if (fs->free_clst == 0) return 0;		/* No free cluster */
     b06:	69ab      	ldr	r3, [r5, #24]
     b08:	b9a3      	cbnz	r3, b34 <create_chain+0x46>
     b0a:	2400      	movs	r4, #0
     b0c:	e006      	b.n	b1c <create_chain+0x2e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1526
		cs = get_fat(obj, clst);			/* Check the cluster status */
     b0e:	4628      	mov	r0, r5
     b10:	f7ff ff52 	bl	9b8 <get_fat.isra.10>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1527
		if (cs < 2) return 1;				/* Test for insanity */
     b14:	2801      	cmp	r0, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1526
		cs = get_fat(obj, clst);			/* Check the cluster status */
     b16:	4604      	mov	r4, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1527
		if (cs < 2) return 1;				/* Test for insanity */
     b18:	d803      	bhi.n	b22 <create_chain+0x34>
     b1a:	2401      	movs	r4, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1602
}
     b1c:	4620      	mov	r0, r4
     b1e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1528
		if (cs == 0xFFFFFFFF) return cs;	/* Test for disk error */
     b22:	1c42      	adds	r2, r0, #1
     b24:	d051      	beq.n	bca <create_chain+0xdc>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1529
		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
     b26:	69eb      	ldr	r3, [r5, #28]
     b28:	4283      	cmp	r3, r0
     b2a:	d8f7      	bhi.n	b1c <create_chain+0x2e>
     b2c:	463e      	mov	r6, r7
     b2e:	e7ea      	b.n	b06 <create_chain+0x18>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1523
		if (scl == 0 || scl >= fs->n_fatent) scl = 1;
     b30:	2601      	movs	r6, #1
     b32:	e7e8      	b.n	b06 <create_chain+0x18>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1562
		if (scl == clst) {						/* Stretching an existing chain? */
     b34:	42be      	cmp	r6, r7
     b36:	d115      	bne.n	b64 <create_chain+0x76>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1564
			if (ncl >= fs->n_fatent) ncl = 2;
     b38:	69eb      	ldr	r3, [r5, #28]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1565
			cs = get_fat(obj, ncl);				/* Get next cluster status */
     b3a:	f8d8 0000 	ldr.w	r0, [r8]
     b3e:	1c74      	adds	r4, r6, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1564
			if (ncl >= fs->n_fatent) ncl = 2;
     b40:	42a3      	cmp	r3, r4
     b42:	bf98      	it	ls
     b44:	2402      	movls	r4, #2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1565
			cs = get_fat(obj, ncl);				/* Get next cluster status */
     b46:	4621      	mov	r1, r4
     b48:	f7ff ff36 	bl	9b8 <get_fat.isra.10>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1566
			if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* Test for error */
     b4c:	2801      	cmp	r0, #1
     b4e:	d0e4      	beq.n	b1a <create_chain+0x2c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1566 (discriminator 2)
     b50:	1c43      	adds	r3, r0, #1
     b52:	d03a      	beq.n	bca <create_chain+0xdc>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1567
			if (cs != 0) {						/* Not free? */
     b54:	b1d8      	cbz	r0, b8e <create_chain+0xa0>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1568
				cs = fs->last_clst;				/* Start at suggested cluster if it is valid */
     b56:	696b      	ldr	r3, [r5, #20]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1569
				if (cs >= 2 && cs < fs->n_fatent) scl = cs;
     b58:	2b01      	cmp	r3, #1
     b5a:	d903      	bls.n	b64 <create_chain+0x76>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1569 (discriminator 1)
     b5c:	69ea      	ldr	r2, [r5, #28]
     b5e:	4293      	cmp	r3, r2
     b60:	bf38      	it	cc
     b62:	461e      	movcc	r6, r3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1569
     b64:	4634      	mov	r4, r6
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1577
				if (ncl >= fs->n_fatent) {		/* Check wrap-around */
     b66:	69eb      	ldr	r3, [r5, #28]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1576
				ncl++;							/* Next cluster */
     b68:	3401      	adds	r4, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1577
				if (ncl >= fs->n_fatent) {		/* Check wrap-around */
     b6a:	42a3      	cmp	r3, r4
     b6c:	d802      	bhi.n	b74 <create_chain+0x86>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1579
					if (ncl > scl) return 0;	/* No free cluster found? */
     b6e:	2e01      	cmp	r6, #1
     b70:	d9cb      	bls.n	b0a <create_chain+0x1c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1578
					ncl = 2;
     b72:	2402      	movs	r4, #2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1581
				cs = get_fat(obj, ncl);			/* Get the cluster status */
     b74:	4621      	mov	r1, r4
     b76:	f8d8 0000 	ldr.w	r0, [r8]
     b7a:	f7ff ff1d 	bl	9b8 <get_fat.isra.10>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1582
				if (cs == 0) break;				/* Found a free cluster? */
     b7e:	b140      	cbz	r0, b92 <create_chain+0xa4>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1583
				if (cs == 1 || cs == 0xFFFFFFFF) return cs;	/* Test for error */
     b80:	2801      	cmp	r0, #1
     b82:	d0ca      	beq.n	b1a <create_chain+0x2c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1583 (discriminator 2)
     b84:	3001      	adds	r0, #1
     b86:	d020      	beq.n	bca <create_chain+0xdc>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1584
				if (ncl == scl) return 0;		/* No free cluster found? */
     b88:	42b4      	cmp	r4, r6
     b8a:	d1ec      	bne.n	b66 <create_chain+0x78>
     b8c:	e7bd      	b.n	b0a <create_chain+0x1c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1573
		if (ncl == 0) {	/* The new cluster cannot be contiguous and find another fragment */
     b8e:	2c00      	cmp	r4, #0
     b90:	d0e8      	beq.n	b64 <create_chain+0x76>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1587
		res = put_fat(fs, ncl, 0xFFFFFFFF);		/* Mark the new cluster 'EOC' */
     b92:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
     b96:	4621      	mov	r1, r4
     b98:	4628      	mov	r0, r5
     b9a:	f7ff fe91 	bl	8c0 <put_fat>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1588
		if (res == FR_OK && clst != 0) {
     b9e:	b990      	cbnz	r0, bc6 <create_chain+0xd8>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1588 (discriminator 1)
     ba0:	b957      	cbnz	r7, bb8 <create_chain+0xca>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1595
		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
     ba2:	e9d5 3206 	ldrd	r3, r2, [r5, #24]
     ba6:	3a02      	subs	r2, #2
     ba8:	4293      	cmp	r3, r2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1594
		fs->last_clst = ncl;
     baa:	616c      	str	r4, [r5, #20]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1595
		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
     bac:	d910      	bls.n	bd0 <create_chain+0xe2>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1596
		fs->fsi_flag |= 1;
     bae:	792b      	ldrb	r3, [r5, #4]
     bb0:	f043 0301 	orr.w	r3, r3, #1
     bb4:	712b      	strb	r3, [r5, #4]
     bb6:	e7b1      	b.n	b1c <create_chain+0x2e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1589
			res = put_fat(fs, clst, ncl);		/* Link it from the previous one if needed */
     bb8:	4622      	mov	r2, r4
     bba:	4639      	mov	r1, r7
     bbc:	4628      	mov	r0, r5
     bbe:	f7ff fe7f 	bl	8c0 <put_fat>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1593
	if (res == FR_OK) {			/* Update FSINFO if function succeeded. */
     bc2:	2800      	cmp	r0, #0
     bc4:	d0ed      	beq.n	ba2 <create_chain+0xb4>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1598
		ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;	/* Failed. Generate error status */
     bc6:	2801      	cmp	r0, #1
     bc8:	d1a7      	bne.n	b1a <create_chain+0x2c>
     bca:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
     bce:	e7a5      	b.n	b1c <create_chain+0x2e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1595 (discriminator 1)
		if (fs->free_clst <= fs->n_fatent - 2) fs->free_clst--;
     bd0:	3b01      	subs	r3, #1
     bd2:	61ab      	str	r3, [r5, #24]
     bd4:	e7eb      	b.n	bae <create_chain+0xc0>

00000bd6 <remove_chain>:
remove_chain():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1421
{
     bd6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     bd8:	460d      	mov	r5, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1432
	if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Check if in valid range */
     bda:	2d01      	cmp	r5, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1421
{
     bdc:	4607      	mov	r7, r0
     bde:	4611      	mov	r1, r2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1424
	FATFS *fs = obj->fs;
     be0:	6804      	ldr	r4, [r0, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1432
	if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Check if in valid range */
     be2:	d92b      	bls.n	c3c <remove_chain+0x66>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1432 (discriminator 2)
     be4:	69e3      	ldr	r3, [r4, #28]
     be6:	42ab      	cmp	r3, r5
     be8:	d928      	bls.n	c3c <remove_chain+0x66>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1435
	if (pclst != 0 && (!FF_FS_EXFAT || fs->fs_type != FS_EXFAT || obj->stat != 2)) {
     bea:	b12a      	cbz	r2, bf8 <remove_chain+0x22>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1436
		res = put_fat(fs, pclst, 0xFFFFFFFF);
     bec:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
     bf0:	4620      	mov	r0, r4
     bf2:	f7ff fe65 	bl	8c0 <put_fat>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1437
		if (res != FR_OK) return res;
     bf6:	b930      	cbnz	r0, c06 <remove_chain+0x30>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1442
		nxt = get_fat(obj, clst);			/* Get cluster status */
     bf8:	4629      	mov	r1, r5
     bfa:	6838      	ldr	r0, [r7, #0]
     bfc:	f7ff fedc 	bl	9b8 <get_fat.isra.10>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1443
		if (nxt == 0) break;				/* Empty cluster? */
     c00:	4606      	mov	r6, r0
     c02:	b908      	cbnz	r0, c08 <remove_chain+0x32>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1501
	return FR_OK;
     c04:	2000      	movs	r0, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1502
}
     c06:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1444
		if (nxt == 1) return FR_INT_ERR;	/* Internal error? */
     c08:	2801      	cmp	r0, #1
     c0a:	d017      	beq.n	c3c <remove_chain+0x66>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1445
		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
     c0c:	1c43      	adds	r3, r0, #1
     c0e:	d017      	beq.n	c40 <remove_chain+0x6a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1447
			res = put_fat(fs, clst, 0);		/* Mark the cluster 'free' on the FAT */
     c10:	2200      	movs	r2, #0
     c12:	4629      	mov	r1, r5
     c14:	4620      	mov	r0, r4
     c16:	f7ff fe53 	bl	8c0 <put_fat>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1448
			if (res != FR_OK) return res;
     c1a:	2800      	cmp	r0, #0
     c1c:	d1f3      	bne.n	c06 <remove_chain+0x30>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1450
		if (fs->free_clst < fs->n_fatent - 2) {	/* Update FSINFO */
     c1e:	e9d4 3206 	ldrd	r3, r2, [r4, #24]
     c22:	1e91      	subs	r1, r2, #2
     c24:	428b      	cmp	r3, r1
     c26:	d205      	bcs.n	c34 <remove_chain+0x5e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1451
			fs->free_clst++;
     c28:	3301      	adds	r3, #1
     c2a:	61a3      	str	r3, [r4, #24]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1452
			fs->fsi_flag |= 1;
     c2c:	7923      	ldrb	r3, [r4, #4]
     c2e:	f043 0301 	orr.w	r3, r3, #1
     c32:	7123      	strb	r3, [r4, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1473
	} while (clst < fs->n_fatent);	/* Repeat while not the last link */
     c34:	42b2      	cmp	r2, r6
     c36:	4635      	mov	r5, r6
     c38:	d8de      	bhi.n	bf8 <remove_chain+0x22>
     c3a:	e7e3      	b.n	c04 <remove_chain+0x2e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1432
	if (clst < 2 || clst >= fs->n_fatent) return FR_INT_ERR;	/* Check if in valid range */
     c3c:	2002      	movs	r0, #2
     c3e:	e7e2      	b.n	c06 <remove_chain+0x30>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1445
		if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error? */
     c40:	2001      	movs	r0, #1
     c42:	e7e0      	b.n	c06 <remove_chain+0x30>

00000c44 <unlock_fs>:
unlock_fs():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:920
	if (fs && res != FR_NOT_ENABLED && res != FR_INVALID_DRIVE && res != FR_TIMEOUT) {
     c44:	b140      	cbz	r0, c58 <unlock_fs+0x14>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:920 (discriminator 2)
     c46:	f1a1 030b 	sub.w	r3, r1, #11
     c4a:	2b01      	cmp	r3, #1
     c4c:	d904      	bls.n	c58 <unlock_fs+0x14>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:920
     c4e:	290f      	cmp	r1, #15
     c50:	d002      	beq.n	c58 <unlock_fs+0x14>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:921
		ff_rel_grant(fs->sobj);
     c52:	6900      	ldr	r0, [r0, #16]
     c54:	f000 be87 	b.w	1966 <ff_rel_grant>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:923
}
     c58:	4770      	bx	lr

00000c5a <validate>:
validate():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3457

static FRESULT validate (	/* Returns FR_OK or FR_INVALID_OBJECT */
	FFOBJID* obj,			/* Pointer to the FFOBJID, the 1st member in the FIL/DIR object, to check validity */
	FATFS** rfs				/* Pointer to pointer to the owner filesystem object to return */
)
{
     c5a:	b538      	push	{r3, r4, r5, lr}
     c5c:	460d      	mov	r5, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3461
	FRESULT res = FR_INVALID_OBJECT;


	if (obj && obj->fs && obj->fs->fs_type && obj->id == obj->fs->id) {	/* Test if the object is valid */
     c5e:	4604      	mov	r4, r0
     c60:	b1f0      	cbz	r0, ca0 <validate+0x46>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3461 (discriminator 1)
     c62:	6803      	ldr	r3, [r0, #0]
     c64:	b1db      	cbz	r3, c9e <validate+0x44>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3461 (discriminator 2)
     c66:	781a      	ldrb	r2, [r3, #0]
     c68:	b1b2      	cbz	r2, c98 <validate+0x3e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3461 (discriminator 3)
     c6a:	8881      	ldrh	r1, [r0, #4]
     c6c:	88da      	ldrh	r2, [r3, #6]
     c6e:	4291      	cmp	r1, r2
     c70:	d112      	bne.n	c98 <validate+0x3e>
lock_fs():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:911
	return ff_req_grant(fs->sobj);
     c72:	6918      	ldr	r0, [r3, #16]
     c74:	f000 fe6e 	bl	1954 <ff_req_grant>
validate():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3463
#if FF_FS_REENTRANT
		if (lock_fs(obj->fs)) {	/* Obtain the filesystem object */
     c78:	4603      	mov	r3, r0
     c7a:	b198      	cbz	r0, ca4 <validate+0x4a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3464
			if (!(disk_status(obj->fs->pdrv) & STA_NOINIT)) { /* Test if the phsical drive is kept initialized */
     c7c:	6823      	ldr	r3, [r4, #0]
     c7e:	7858      	ldrb	r0, [r3, #1]
     c80:	f000 fefe 	bl	1a80 <disk_status>
     c84:	f010 0001 	ands.w	r0, r0, #1
     c88:	d102      	bne.n	c90 <validate+0x36>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3478
		if (!(disk_status(obj->fs->pdrv) & STA_NOINIT)) { /* Test if the phsical drive is kept initialized */
			res = FR_OK;
		}
#endif
	}
	*rfs = (res == FR_OK) ? obj->fs : 0;	/* Corresponding filesystem object */
     c8a:	6824      	ldr	r4, [r4, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3478 (discriminator 4)
     c8c:	602c      	str	r4, [r5, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3480 (discriminator 4)
	return res;
}
     c8e:	bd38      	pop	{r3, r4, r5, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3467
				unlock_fs(obj->fs, FR_OK);
     c90:	2100      	movs	r1, #0
     c92:	6820      	ldr	r0, [r4, #0]
     c94:	f7ff ffd6 	bl	c44 <unlock_fs>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3458
	FRESULT res = FR_INVALID_OBJECT;
     c98:	2009      	movs	r0, #9
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3478
	*rfs = (res == FR_OK) ? obj->fs : 0;	/* Corresponding filesystem object */
     c9a:	2400      	movs	r4, #0
     c9c:	e7f6      	b.n	c8c <validate+0x32>
     c9e:	461c      	mov	r4, r3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3458
	FRESULT res = FR_INVALID_OBJECT;
     ca0:	2009      	movs	r0, #9
     ca2:	e7f3      	b.n	c8c <validate+0x32>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3470
			res = FR_TIMEOUT;
     ca4:	200f      	movs	r0, #15
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3478
	*rfs = (res == FR_OK) ? obj->fs : 0;	/* Corresponding filesystem object */
     ca6:	461c      	mov	r4, r3
     ca8:	e7f0      	b.n	c8c <validate+0x32>

00000caa <dir_clear>:
dir_clear():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1648
{
     caa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
sync_window():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1049
	if (fs->wflag) {	/* Is the disk access window dirty */
     cac:	78c3      	ldrb	r3, [r0, #3]
dir_clear():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1648
{
     cae:	4604      	mov	r4, r0
     cb0:	460d      	mov	r5, r1
sync_window():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1049
	if (fs->wflag) {	/* Is the disk access window dirty */
     cb2:	b9c3      	cbnz	r3, ce6 <dir_clear+0x3c>
dir_clear():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1655
	sect = clst2sect(fs, clst);		/* Top of the cluster */
     cb4:	4629      	mov	r1, r5
     cb6:	4620      	mov	r0, r4
     cb8:	f7ff fbd3 	bl	462 <clst2sect>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1657
	mem_set(fs->win, 0, sizeof fs->win);	/* Clear window buffer */
     cbc:	f104 0638 	add.w	r6, r4, #56	; 0x38
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1655
	sect = clst2sect(fs, clst);		/* Top of the cluster */
     cc0:	4607      	mov	r7, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1656
	fs->winsect = sect;				/* Set window to top of the cluster */
     cc2:	6360      	str	r0, [r4, #52]	; 0x34
mem_set():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:670
	BYTE *d = (BYTE*)dst;
     cc4:	f504 720e 	add.w	r2, r4, #568	; 0x238
     cc8:	4633      	mov	r3, r6
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:673
		*d++ = (BYTE)val;
     cca:	2100      	movs	r1, #0
     ccc:	f803 1b01 	strb.w	r1, [r3], #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:674
	} while (--cnt);
     cd0:	4293      	cmp	r3, r2
     cd2:	d1fb      	bne.n	ccc <dir_clear+0x22>
dir_clear():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1670
		for (n = 0; n < fs->csize && disk_write(fs->pdrv, ibuf, sect + n, szb) == RES_OK; n += szb) ;	/* Fill the cluster with 0 */
     cd4:	2500      	movs	r5, #0
     cd6:	8963      	ldrh	r3, [r4, #10]
     cd8:	429d      	cmp	r5, r3
     cda:	d30a      	bcc.n	cf2 <dir_clear+0x48>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1672
	return (n == fs->csize) ? FR_OK : FR_DISK_ERR;
     cdc:	8960      	ldrh	r0, [r4, #10]
     cde:	1b40      	subs	r0, r0, r5
     ce0:	bf18      	it	ne
     ce2:	2001      	movne	r0, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1673
}
     ce4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
sync_window():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1673
     ce6:	f7ff fc0e 	bl	506 <sync_window.part.6>
dir_clear():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1654
	if (sync_window(fs) != FR_OK) return FR_DISK_ERR;	/* Flush disk access window */
     cea:	2800      	cmp	r0, #0
     cec:	d0e2      	beq.n	cb4 <dir_clear+0xa>
     cee:	2001      	movs	r0, #1
     cf0:	e7f8      	b.n	ce4 <dir_clear+0x3a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1670
		for (n = 0; n < fs->csize && disk_write(fs->pdrv, ibuf, sect + n, szb) == RES_OK; n += szb) ;	/* Fill the cluster with 0 */
     cf2:	2301      	movs	r3, #1
     cf4:	197a      	adds	r2, r7, r5
     cf6:	4631      	mov	r1, r6
     cf8:	7860      	ldrb	r0, [r4, #1]
     cfa:	f000 feda 	bl	1ab2 <disk_write>
     cfe:	2800      	cmp	r0, #0
     d00:	d1ec      	bne.n	cdc <dir_clear+0x32>
     d02:	3501      	adds	r5, #1
     d04:	e7e7      	b.n	cd6 <dir_clear+0x2c>

00000d06 <dir_next>:
dir_next():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1735
{
     d06:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1740
	ofs = dp->dptr + SZDIRE;	/* Next entry */
     d0a:	6907      	ldr	r7, [r0, #16]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1737
	FATFS *fs = dp->obj.fs;
     d0c:	6805      	ldr	r5, [r0, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1740
	ofs = dp->dptr + SZDIRE;	/* Next entry */
     d0e:	3720      	adds	r7, #32
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1741
	if (ofs >= (DWORD)((FF_FS_EXFAT && fs->fs_type == FS_EXFAT) ? MAX_DIR_EX : MAX_DIR)) dp->sect = 0;	/* Disable it if the offset reached the max value */
     d10:	f5b7 1f00 	cmp.w	r7, #2097152	; 0x200000
     d14:	bf24      	itt	cs
     d16:	2300      	movcs	r3, #0
     d18:	6183      	strcs	r3, [r0, #24]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1742
	if (dp->sect == 0) return FR_NO_FILE;	/* Report EOT if it has been disabled */
     d1a:	6983      	ldr	r3, [r0, #24]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1735
{
     d1c:	4604      	mov	r4, r0
     d1e:	4689      	mov	r9, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1742
	if (dp->sect == 0) return FR_NO_FILE;	/* Report EOT if it has been disabled */
     d20:	b173      	cbz	r3, d40 <dir_next+0x3a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1744
	if (ofs % SS(fs) == 0) {	/* Sector changed? */
     d22:	f3c7 0808 	ubfx	r8, r7, #0, #9
     d26:	f1b8 0f00 	cmp.w	r8, #0
     d2a:	d139      	bne.n	da0 <dir_next+0x9a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1747
		if (dp->clust == 0) {	/* Static table */
     d2c:	6941      	ldr	r1, [r0, #20]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1745
		dp->sect++;				/* Next sector */
     d2e:	3301      	adds	r3, #1
     d30:	6183      	str	r3, [r0, #24]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1747
		if (dp->clust == 0) {	/* Static table */
     d32:	b939      	cbnz	r1, d44 <dir_next+0x3e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1748
			if (ofs / SZDIRE >= fs->n_rootdir) {	/* Report EOT if it reached end of static table */
     d34:	892b      	ldrh	r3, [r5, #8]
     d36:	ebb3 1f57 	cmp.w	r3, r7, lsr #5
     d3a:	d831      	bhi.n	da0 <dir_next+0x9a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1749
				dp->sect = 0; return FR_NO_FILE;
     d3c:	2300      	movs	r3, #0
     d3e:	61a3      	str	r3, [r4, #24]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1742
	if (dp->sect == 0) return FR_NO_FILE;	/* Report EOT if it has been disabled */
     d40:	2004      	movs	r0, #4
     d42:	e00b      	b.n	d5c <dir_next+0x56>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1753
			if ((ofs / SS(fs) & (fs->csize - 1)) == 0) {	/* Cluster changed? */
     d44:	896b      	ldrh	r3, [r5, #10]
     d46:	3b01      	subs	r3, #1
     d48:	ea13 2357 	ands.w	r3, r3, r7, lsr #9
     d4c:	d128      	bne.n	da0 <dir_next+0x9a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1754
				clst = get_fat(&dp->obj, dp->clust);		/* Get next cluster */
     d4e:	4628      	mov	r0, r5
     d50:	f7ff fe32 	bl	9b8 <get_fat.isra.10>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1755
				if (clst <= 1) return FR_INT_ERR;			/* Internal error */
     d54:	2801      	cmp	r0, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1754
				clst = get_fat(&dp->obj, dp->clust);		/* Get next cluster */
     d56:	4606      	mov	r6, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1755
				if (clst <= 1) return FR_INT_ERR;			/* Internal error */
     d58:	d802      	bhi.n	d60 <dir_next+0x5a>
     d5a:	2002      	movs	r0, #2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1782
}
     d5c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1756
				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
     d60:	1c42      	adds	r2, r0, #1
     d62:	d101      	bne.n	d68 <dir_next+0x62>
     d64:	2001      	movs	r0, #1
     d66:	e7f9      	b.n	d5c <dir_next+0x56>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1757
				if (clst >= fs->n_fatent) {					/* It reached end of dynamic table */
     d68:	69eb      	ldr	r3, [r5, #28]
     d6a:	4283      	cmp	r3, r0
     d6c:	d812      	bhi.n	d94 <dir_next+0x8e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1759
					if (!stretch) {								/* If no stretch, report EOT */
     d6e:	f1b9 0f00 	cmp.w	r9, #0
     d72:	d0e3      	beq.n	d3c <dir_next+0x36>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1762
					clst = create_chain(&dp->obj, dp->clust);	/* Allocate a cluster */
     d74:	6961      	ldr	r1, [r4, #20]
     d76:	4620      	mov	r0, r4
     d78:	f7ff feb9 	bl	aee <create_chain>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1763
					if (clst == 0) return FR_DENIED;			/* No free cluster */
     d7c:	4606      	mov	r6, r0
     d7e:	b1a8      	cbz	r0, dac <dir_next+0xa6>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1764
					if (clst == 1) return FR_INT_ERR;			/* Internal error */
     d80:	2801      	cmp	r0, #1
     d82:	d0ea      	beq.n	d5a <dir_next+0x54>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1765
					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
     d84:	1c43      	adds	r3, r0, #1
     d86:	d0ed      	beq.n	d64 <dir_next+0x5e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1766
					if (dir_clear(fs, clst) != FR_OK) return FR_DISK_ERR;	/* Clean up the stretched table */
     d88:	4601      	mov	r1, r0
     d8a:	4628      	mov	r0, r5
     d8c:	f7ff ff8d 	bl	caa <dir_clear>
     d90:	2800      	cmp	r0, #0
     d92:	d1e7      	bne.n	d64 <dir_next+0x5e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1773
				dp->clust = clst;		/* Initialize data for new cluster */
     d94:	6166      	str	r6, [r4, #20]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1774
				dp->sect = clst2sect(fs, clst);
     d96:	4631      	mov	r1, r6
     d98:	4628      	mov	r0, r5
     d9a:	f7ff fb62 	bl	462 <clst2sect>
     d9e:	61a0      	str	r0, [r4, #24]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1779
	dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
     da0:	3538      	adds	r5, #56	; 0x38
     da2:	4445      	add	r5, r8
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1778
	dp->dptr = ofs;						/* Current entry */
     da4:	6127      	str	r7, [r4, #16]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1779
	dp->dir = fs->win + ofs % SS(fs);	/* Pointer to the entry in the win[] */
     da6:	61e5      	str	r5, [r4, #28]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1781
	return FR_OK;
     da8:	2000      	movs	r0, #0
     daa:	e7d7      	b.n	d5c <dir_next+0x56>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1763
					if (clst == 0) return FR_DENIED;			/* No free cluster */
     dac:	2007      	movs	r0, #7
     dae:	e7d5      	b.n	d5c <dir_next+0x56>

00000db0 <dir_find>:
dir_find():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2415
{
     db0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2423
	res = dir_sdi(dp, 0);			/* Rewind directory object */
     db4:	2100      	movs	r1, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2415
{
     db6:	b085      	sub	sp, #20
     db8:	4604      	mov	r4, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2417
	FATFS *fs = dp->obj.fs;
     dba:	f8d0 8000 	ldr.w	r8, [r0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2423
	res = dir_sdi(dp, 0);			/* Rewind directory object */
     dbe:	f7ff fe55 	bl	a6c <dir_sdi>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2424
	if (res != FR_OK) return res;
     dc2:	4681      	mov	r9, r0
     dc4:	2800      	cmp	r0, #0
     dc6:	f040 808c 	bne.w	ee2 <dir_find+0x132>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2447
	ord = sum = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
     dca:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
     dce:	f04f 0aff 	mov.w	sl, #255	; 0xff
     dd2:	62e3      	str	r3, [r4, #44]	; 0x2c
     dd4:	4657      	mov	r7, sl
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2457
			ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
     dd6:	9300      	str	r3, [sp, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2450
		res = move_window(fs, dp->sect);
     dd8:	69a1      	ldr	r1, [r4, #24]
     dda:	4640      	mov	r0, r8
     ddc:	f7ff fbb3 	bl	546 <move_window>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2451
		if (res != FR_OK) break;
     de0:	4681      	mov	r9, r0
     de2:	2800      	cmp	r0, #0
     de4:	d17d      	bne.n	ee2 <dir_find+0x132>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2452
		c = dp->dir[DIR_Name];
     de6:	69e5      	ldr	r5, [r4, #28]
     de8:	782e      	ldrb	r6, [r5, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2453
		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
     dea:	2e00      	cmp	r6, #0
     dec:	d07d      	beq.n	eea <dir_find+0x13a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2455
		dp->obj.attr = a = dp->dir[DIR_Attr] & AM_MASK;
     dee:	7aea      	ldrb	r2, [r5, #11]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2456
		if (c == DDEM || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
     df0:	2ee5      	cmp	r6, #229	; 0xe5
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2455
		dp->obj.attr = a = dp->dir[DIR_Attr] & AM_MASK;
     df2:	f002 033f 	and.w	r3, r2, #63	; 0x3f
     df6:	71a3      	strb	r3, [r4, #6]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2456
		if (c == DDEM || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
     df8:	d003      	beq.n	e02 <dir_find+0x52>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2456 (discriminator 1)
     dfa:	0710      	lsls	r0, r2, #28
     dfc:	d504      	bpl.n	e08 <dir_find+0x58>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2456 (discriminator 2)
     dfe:	2b0f      	cmp	r3, #15
     e00:	d004      	beq.n	e0c <dir_find+0x5c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2472
				ord = 0xFF; dp->blk_ofs = 0xFFFFFFFF;	/* Reset LFN sequence */
     e02:	9b00      	ldr	r3, [sp, #0]
     e04:	62e3      	str	r3, [r4, #44]	; 0x2c
     e06:	e052      	b.n	eae <dir_find+0xfe>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2459
			if (a == AM_LFN) {			/* An LFN entry is found */
     e08:	2b0f      	cmp	r3, #15
     e0a:	d157      	bne.n	ebc <dir_find+0x10c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2460
				if (!(dp->fn[NSFLAG] & NS_NOLFN)) {
     e0c:	f894 302b 	ldrb.w	r3, [r4, #43]	; 0x2b
     e10:	0659      	lsls	r1, r3, #25
     e12:	d442      	bmi.n	e9a <dir_find+0xea>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2461
					if (c & LLEF) {		/* Is it start of LFN sequence? */
     e14:	0672      	lsls	r2, r6, #25
     e16:	d548      	bpl.n	eaa <dir_find+0xfa>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2464
						dp->blk_ofs = dp->dptr;	/* Start offset of LFN */
     e18:	6923      	ldr	r3, [r4, #16]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2462
						sum = dp->dir[LDIR_Chksum];
     e1a:	f895 a00d 	ldrb.w	sl, [r5, #13]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2464
						dp->blk_ofs = dp->dptr;	/* Start offset of LFN */
     e1e:	62e3      	str	r3, [r4, #44]	; 0x2c
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2463
						c &= (BYTE)~LLEF; ord = c;	/* LFN start order */
     e20:	f006 06bf 	and.w	r6, r6, #191	; 0xbf
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2467 (discriminator 1)
					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && cmp_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0xFF;
     e24:	7b6b      	ldrb	r3, [r5, #13]
     e26:	4553      	cmp	r3, sl
     e28:	d141      	bne.n	eae <dir_find+0xfe>
ld_word():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:585 (discriminator 3)
	rv = rv << 8 | ptr[0];
     e2a:	7eea      	ldrb	r2, [r5, #27]
     e2c:	7eab      	ldrb	r3, [r5, #26]
cmp_lfn():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1880 (discriminator 3)
	if (ld_word(dir + LDIR_FstClusLO) != 0) return 0;	/* Check LDIR_FstClusLO */
     e2e:	ea53 2302 	orrs.w	r3, r3, r2, lsl #8
     e32:	d13c      	bne.n	eae <dir_find+0xfe>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1882
	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
     e34:	782f      	ldrb	r7, [r5, #0]
dir_find():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2467
					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && cmp_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0xFF;
     e36:	f8d8 b00c 	ldr.w	fp, [r8, #12]
cmp_lfn():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1882
	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
     e3a:	f007 073f 	and.w	r7, r7, #63	; 0x3f
     e3e:	1e7b      	subs	r3, r7, #1
     e40:	270d      	movs	r7, #13
     e42:	435f      	muls	r7, r3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1884
	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
     e44:	4b2a      	ldr	r3, [pc, #168]	; (ef0 <dir_find+0x140>)
     e46:	2101      	movs	r1, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1885
		uc = ld_word(dir + LfnOfs[s]);		/* Pick an LFN character */
     e48:	f813 2b01 	ldrb.w	r2, [r3], #1
     e4c:	18a8      	adds	r0, r5, r2
ld_word():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     e4e:	f815 9002 	ldrb.w	r9, [r5, r2]
     e52:	7840      	ldrb	r0, [r0, #1]
     e54:	ea49 2900 	orr.w	r9, r9, r0, lsl #8
cmp_lfn():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1886
		if (wc != 0) {
     e58:	b359      	cbz	r1, eb2 <dir_find+0x102>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1887
			if (i >= FF_MAX_LFN || ff_wtoupper(uc) != ff_wtoupper(lfnbuf[i++])) {	/* Compare it */
     e5a:	2f7f      	cmp	r7, #127	; 0x7f
     e5c:	9303      	str	r3, [sp, #12]
     e5e:	d826      	bhi.n	eae <dir_find+0xfe>
     e60:	4648      	mov	r0, r9
     e62:	f000 fdb9 	bl	19d8 <ff_wtoupper>
     e66:	1c7a      	adds	r2, r7, #1
     e68:	9002      	str	r0, [sp, #8]
     e6a:	f83b 0017 	ldrh.w	r0, [fp, r7, lsl #1]
     e6e:	9201      	str	r2, [sp, #4]
     e70:	f000 fdb2 	bl	19d8 <ff_wtoupper>
     e74:	9902      	ldr	r1, [sp, #8]
     e76:	4281      	cmp	r1, r0
     e78:	d119      	bne.n	eae <dir_find+0xfe>
     e7a:	9a01      	ldr	r2, [sp, #4]
     e7c:	9b03      	ldr	r3, [sp, #12]
ld_word():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:585
	rv = rv << 8 | ptr[0];
     e7e:	4649      	mov	r1, r9
cmp_lfn():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1887
			if (i >= FF_MAX_LFN || ff_wtoupper(uc) != ff_wtoupper(lfnbuf[i++])) {	/* Compare it */
     e80:	4617      	mov	r7, r2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1884
	for (wc = 1, s = 0; s < 13; s++) {		/* Process all characters in the entry */
     e82:	4a1c      	ldr	r2, [pc, #112]	; (ef4 <dir_find+0x144>)
     e84:	429a      	cmp	r2, r3
     e86:	d1df      	bne.n	e48 <dir_find+0x98>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1896
	if ((dir[LDIR_Ord] & LLEF) && wc && lfnbuf[i]) return 0;	/* Last segment matched but different length */
     e88:	782b      	ldrb	r3, [r5, #0]
     e8a:	065b      	lsls	r3, r3, #25
     e8c:	d503      	bpl.n	e96 <dir_find+0xe6>
     e8e:	b111      	cbz	r1, e96 <dir_find+0xe6>
     e90:	f83b 3017 	ldrh.w	r3, [fp, r7, lsl #1]
     e94:	b95b      	cbnz	r3, eae <dir_find+0xfe>
dir_find():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2467 (discriminator 5)
					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && cmp_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0xFF;
     e96:	3e01      	subs	r6, #1
     e98:	b2f7      	uxtb	r7, r6
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2479
		res = dir_next(dp, 0);	/* Next entry */
     e9a:	2100      	movs	r1, #0
     e9c:	4620      	mov	r0, r4
     e9e:	f7ff ff32 	bl	d06 <dir_next>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2480
	} while (res == FR_OK);
     ea2:	4681      	mov	r9, r0
     ea4:	2800      	cmp	r0, #0
     ea6:	d097      	beq.n	dd8 <dir_find+0x28>
     ea8:	e01b      	b.n	ee2 <dir_find+0x132>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2467
					ord = (c == ord && sum == dp->dir[LDIR_Chksum] && cmp_lfn(fs->lfnbuf, dp->dir)) ? ord - 1 : 0xFF;
     eaa:	42b7      	cmp	r7, r6
     eac:	d0ba      	beq.n	e24 <dir_find+0x74>
     eae:	27ff      	movs	r7, #255	; 0xff
     eb0:	e7f3      	b.n	e9a <dir_find+0xea>
cmp_lfn():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1892
			if (uc != 0xFFFF) return 0;		/* Check filler */
     eb2:	f64f 72ff 	movw	r2, #65535	; 0xffff
     eb6:	4591      	cmp	r9, r2
     eb8:	d0e3      	beq.n	e82 <dir_find+0xd2>
     eba:	e7f8      	b.n	eae <dir_find+0xfe>
dir_find():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2470
				if (ord == 0 && sum == sum_sfn(dp->dir)) break;	/* LFN matched? */
     ebc:	b927      	cbnz	r7, ec8 <dir_find+0x118>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2470 (discriminator 1)
     ebe:	4628      	mov	r0, r5
     ec0:	f7ff fada 	bl	478 <sum_sfn>
     ec4:	4550      	cmp	r0, sl
     ec6:	d00c      	beq.n	ee2 <dir_find+0x132>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2471
				if (!(dp->fn[NSFLAG] & NS_LOSS) && !mem_cmp(dp->dir, dp->fn, 11)) break;	/* SFN matched? */
     ec8:	f894 902b 	ldrb.w	r9, [r4, #43]	; 0x2b
     ecc:	f019 0901 	ands.w	r9, r9, #1
     ed0:	d197      	bne.n	e02 <dir_find+0x52>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2471 (discriminator 1)
     ed2:	220b      	movs	r2, #11
     ed4:	f104 0120 	add.w	r1, r4, #32
     ed8:	4628      	mov	r0, r5
     eda:	f7ff fab4 	bl	446 <mem_cmp>
     ede:	2800      	cmp	r0, #0
     ee0:	d18f      	bne.n	e02 <dir_find+0x52>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2483
}
     ee2:	4648      	mov	r0, r9
     ee4:	b005      	add	sp, #20
     ee6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2453
		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
     eea:	f04f 0904 	mov.w	r9, #4
     eee:	e7f8      	b.n	ee2 <dir_find+0x132>
     ef0:	0000a724 	.word	0x0000a724
     ef4:	0000a731 	.word	0x0000a731

00000ef8 <follow_path>:
follow_path():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3028
{
     ef8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
     efc:	b085      	sub	sp, #20
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3031
	FATFS *fs = dp->obj.fs;
     efe:	6803      	ldr	r3, [r0, #0]
     f00:	9301      	str	r3, [sp, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3028
{
     f02:	4606      	mov	r6, r0
     f04:	468a      	mov	sl, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3040 (discriminator 1)
		while (*path == '/' || *path == '\\') path++;	/* Strip heading separator */
     f06:	f811 3b01 	ldrb.w	r3, [r1], #1
     f0a:	2b2f      	cmp	r3, #47	; 0x2f
     f0c:	d0fa      	beq.n	f04 <follow_path+0xc>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3040 (discriminator 3)
     f0e:	2b5c      	cmp	r3, #92	; 0x5c
     f10:	d0f8      	beq.n	f04 <follow_path+0xc>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3041
		dp->obj.sclust = 0;					/* Start from root directory */
     f12:	2100      	movs	r1, #0
     f14:	60b1      	str	r1, [r6, #8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3060
	if ((UINT)*path < ' ') {				/* Null path name is the origin directory itself */
     f16:	f89a 3000 	ldrb.w	r3, [sl]
     f1a:	2b1f      	cmp	r3, #31
     f1c:	f200 80cd 	bhi.w	10ba <follow_path+0x1c2>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3061
		dp->fn[NSFLAG] = NS_NONAME;
     f20:	2380      	movs	r3, #128	; 0x80
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3062
		res = dir_sdi(dp, 0);
     f22:	4630      	mov	r0, r6
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3061
		dp->fn[NSFLAG] = NS_NONAME;
     f24:	f886 302b 	strb.w	r3, [r6, #43]	; 0x2b
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3102
}
     f28:	b005      	add	sp, #20
     f2a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3062
		res = dir_sdi(dp, 0);
     f2e:	f7ff bd9d 	b.w	a6c <dir_sdi>
create_name():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2848
		if (wc < 0x80 && chk_chr("\"*:<>\?|\x7F", wc)) return FR_INVALID_NAME;	/* Reject illegal characters for LFN */
     f32:	287f      	cmp	r0, #127	; 0x7f
     f34:	d807      	bhi.n	f46 <follow_path+0x4e>
     f36:	4a92      	ldr	r2, [pc, #584]	; (1180 <follow_path+0x288>)
chk_chr():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:695
	while (*str && *str != chr) str++;
     f38:	f812 3b01 	ldrb.w	r3, [r2], #1
     f3c:	b11b      	cbz	r3, f46 <follow_path+0x4e>
     f3e:	4298      	cmp	r0, r3
     f40:	d1fa      	bne.n	f38 <follow_path+0x40>
create_name():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2892
				cf |= NS_LOSS | NS_LFN;
     f42:	2006      	movs	r0, #6
     f44:	e04e      	b.n	fe4 <follow_path+0xec>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2849
		if (di >= FF_MAX_LFN) return FR_INVALID_NAME;	/* Reject too long name */
     f46:	2d80      	cmp	r5, #128	; 0x80
     f48:	d0fb      	beq.n	f42 <follow_path+0x4a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2850
		lfn[di++] = wc;					/* Store the Unicode character */
     f4a:	f82b 0015 	strh.w	r0, [fp, r5, lsl #1]
     f4e:	3501      	adds	r5, #1
     f50:	e0b7      	b.n	10c2 <follow_path+0x1ca>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2868
		wc = lfn[di - 1];
     f52:	f833 2d02 	ldrh.w	r2, [r3, #-2]!
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2869
		if (wc != ' ' && wc != '.') break;
     f56:	2a20      	cmp	r2, #32
     f58:	d002      	beq.n	f60 <follow_path+0x68>
     f5a:	2a2e      	cmp	r2, #46	; 0x2e
     f5c:	f040 80d4 	bne.w	1108 <follow_path+0x210>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2870
		di--;
     f60:	3d01      	subs	r5, #1
     f62:	e0ce      	b.n	1102 <follow_path+0x20a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2876
	for (si = 0; lfn[si] == ' '; si++) ;	/* Remove leading spaces */
     f64:	4602      	mov	r2, r0
     f66:	e0d7      	b.n	1118 <follow_path+0x220>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2890
		if (i >= ni || si == di) {		/* End of field? */
     f68:	45c8      	cmp	r8, r9
     f6a:	d205      	bcs.n	f78 <follow_path+0x80>
     f6c:	42ab      	cmp	r3, r5
     f6e:	d149      	bne.n	1004 <follow_path+0x10c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2891
			if (ni == 11) {				/* Name extension overflow? */
     f70:	f1b9 0f0b 	cmp.w	r9, #11
     f74:	d13e      	bne.n	ff4 <follow_path+0xfc>
     f76:	e002      	b.n	f7e <follow_path+0x86>
     f78:	f1b9 0f0b 	cmp.w	r9, #11
     f7c:	d135      	bne.n	fea <follow_path+0xf2>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2892
				cf |= NS_LOSS | NS_LFN;
     f7e:	f044 0403 	orr.w	r4, r4, #3
     f82:	f04f 090b 	mov.w	r9, #11
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2939
	if (dp->fn[0] == DDEM) dp->fn[0] = RDDEM;	/* If the first character collides with DDEM, replace it with RDDEM */
     f86:	f896 3020 	ldrb.w	r3, [r6, #32]
     f8a:	2be5      	cmp	r3, #229	; 0xe5
     f8c:	bf04      	itt	eq
     f8e:	2305      	moveq	r3, #5
     f90:	f886 3020 	strbeq.w	r3, [r6, #32]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2941
	if (ni == 8) b <<= 2;				/* Shift capital flags if no extension */
     f94:	f1b9 0f08 	cmp.w	r9, #8
     f98:	bf04      	itt	eq
     f9a:	00bf      	lsleq	r7, r7, #2
     f9c:	b2ff      	uxtbeq	r7, r7
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2942
	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03) cf |= NS_LFN;	/* LFN entry needs to be created if composite capitals */
     f9e:	f007 030c 	and.w	r3, r7, #12
     fa2:	2b0c      	cmp	r3, #12
     fa4:	d003      	beq.n	fae <follow_path+0xb6>
     fa6:	f007 0303 	and.w	r3, r7, #3
     faa:	2b03      	cmp	r3, #3
     fac:	d101      	bne.n	fb2 <follow_path+0xba>
     fae:	f044 0402 	orr.w	r4, r4, #2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2943
	if (!(cf & NS_LFN)) {				/* When LFN is in 8.3 format without extended character, NT flags are created */
     fb2:	07a5      	lsls	r5, r4, #30
     fb4:	d407      	bmi.n	fc6 <follow_path+0xce>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2944
		if (b & 0x01) cf |= NS_EXT;		/* NT flag (Extension has small capital letters only) */
     fb6:	07f8      	lsls	r0, r7, #31
     fb8:	bf48      	it	mi
     fba:	f044 0410 	orrmi.w	r4, r4, #16
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2945
		if (b & 0x04) cf |= NS_BODY;	/* NT flag (Body has small capital letters only) */
     fbe:	0779      	lsls	r1, r7, #29
     fc0:	bf48      	it	mi
     fc2:	f044 0408 	orrmi.w	r4, r4, #8
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2948
	dp->fn[NSFLAG] = cf;	/* SFN is created into dp->fn[] */
     fc6:	f886 402b 	strb.w	r4, [r6, #43]	; 0x2b
follow_path():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3068
			res = dir_find(dp);				/* Find an object with the segment name */
     fca:	4630      	mov	r0, r6
     fcc:	f7ff fef0 	bl	db0 <dir_find>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3069
			ns = dp->fn[NSFLAG];
     fd0:	f896 302b 	ldrb.w	r3, [r6, #43]	; 0x2b
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3070
			if (res != FR_OK) {				/* Failed to find the object */
     fd4:	2800      	cmp	r0, #0
     fd6:	d05f      	beq.n	1098 <follow_path+0x1a0>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3071
				if (res == FR_NO_FILE) {	/* Object is not found */
     fd8:	2804      	cmp	r0, #4
     fda:	d103      	bne.n	fe4 <follow_path+0xec>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3077
						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
     fdc:	f013 0f04 	tst.w	r3, #4
     fe0:	bf08      	it	eq
     fe2:	2005      	moveq	r0, #5
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3102
}
     fe4:	b005      	add	sp, #20
     fe6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
create_name():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2895
			if (si != di) cf |= NS_LOSS | NS_LFN;	/* Name body overflow? */
     fea:	42ab      	cmp	r3, r5
     fec:	d002      	beq.n	ff4 <follow_path+0xfc>
     fee:	f044 0403 	orr.w	r4, r4, #3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2896
			if (si > di) break;						/* No name extension? */
     ff2:	d8c8      	bhi.n	f86 <follow_path+0x8e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2897
			si = di; i = 8; ni = 11; b <<= 2;		/* Enter name extension */
     ff4:	00bf      	lsls	r7, r7, #2
     ff6:	b2ff      	uxtb	r7, r7
     ff8:	462b      	mov	r3, r5
     ffa:	f04f 090b 	mov.w	r9, #11
     ffe:	f04f 0808 	mov.w	r8, #8
    1002:	e0b9      	b.n	1178 <follow_path+0x280>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2901
		if (wc >= 0x80) {	/* Is this a non-ASCII character? */
    1004:	287f      	cmp	r0, #127	; 0x7f
    1006:	d912      	bls.n	102e <follow_path+0x136>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2902
			cf |= NS_LFN;	/* LFN entry needs to be created */
    1008:	f044 0202 	orr.w	r2, r4, #2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2911
			wc = ff_uni2oem(wc, CODEPAGE);			/* Unicode ==> ANSI/OEM code */
    100c:	f240 11b5 	movw	r1, #437	; 0x1b5
    1010:	9303      	str	r3, [sp, #12]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2902
			cf |= NS_LFN;	/* LFN entry needs to be created */
    1012:	9202      	str	r2, [sp, #8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2911
			wc = ff_uni2oem(wc, CODEPAGE);			/* Unicode ==> ANSI/OEM code */
    1014:	f000 fcac 	bl	1970 <ff_uni2oem>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2912
			if (wc & 0x80) wc = ExCvt[wc & 0x7F];	/* Convert extended character to upper (SBCS) */
    1018:	f010 0f80 	tst.w	r0, #128	; 0x80
    101c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
    1020:	d00f      	beq.n	1042 <follow_path+0x14a>
    1022:	f000 007f 	and.w	r0, r0, #127	; 0x7f
    1026:	4957      	ldr	r1, [pc, #348]	; (1184 <follow_path+0x28c>)
    1028:	5c08      	ldrb	r0, [r1, r0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2925
			if (wc == 0 || chk_chr("+,;=[]", wc)) {	/* Replace illegal characters for SFN if needed */
    102a:	4614      	mov	r4, r2
    102c:	b128      	cbz	r0, 103a <follow_path+0x142>
chk_chr():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:695
	while (*str && *str != chr) str++;
    102e:	4956      	ldr	r1, [pc, #344]	; (1188 <follow_path+0x290>)
    1030:	f811 2b01 	ldrb.w	r2, [r1], #1
    1034:	b1f2      	cbz	r2, 1074 <follow_path+0x17c>
    1036:	4282      	cmp	r2, r0
    1038:	d1fa      	bne.n	1030 <follow_path+0x138>
create_name():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2926
				wc = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
    103a:	f044 0403 	orr.w	r4, r4, #3
    103e:	205f      	movs	r0, #95	; 0x5f
    1040:	e011      	b.n	1066 <follow_path+0x16e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2918
		if (wc >= 0x100) {				/* Is this a DBC? */
    1042:	28ff      	cmp	r0, #255	; 0xff
    1044:	d9f1      	bls.n	102a <follow_path+0x132>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2919
			if (i >= ni - 1) {			/* Field overflow? */
    1046:	f109 31ff 	add.w	r1, r9, #4294967295	; 0xffffffff
    104a:	4588      	cmp	r8, r1
    104c:	d303      	bcc.n	1056 <follow_path+0x15e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2920
				cf |= NS_LOSS | NS_LFN;
    104e:	f044 0403 	orr.w	r4, r4, #3
    1052:	46c8      	mov	r8, r9
    1054:	e090      	b.n	1178 <follow_path+0x280>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2923
			dp->fn[i++] = (BYTE)(wc >> 8);	/* Put 1st byte */
    1056:	eb06 0108 	add.w	r1, r6, r8
    105a:	0a04      	lsrs	r4, r0, #8
    105c:	f881 4020 	strb.w	r4, [r1, #32]
    1060:	f108 0801 	add.w	r8, r8, #1
    1064:	4614      	mov	r4, r2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2936
		dp->fn[i++] = (BYTE)wc;
    1066:	eb06 0208 	add.w	r2, r6, r8
    106a:	f108 0801 	add.w	r8, r8, #1
    106e:	f882 0020 	strb.w	r0, [r2, #32]
    1072:	e081      	b.n	1178 <follow_path+0x280>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2928
				if (IsUpper(wc)) {		/* ASCII upper case? */
    1074:	f1a0 0241 	sub.w	r2, r0, #65	; 0x41
    1078:	b292      	uxth	r2, r2
    107a:	2a19      	cmp	r2, #25
    107c:	d802      	bhi.n	1084 <follow_path+0x18c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2929
					b |= 2;
    107e:	f047 0702 	orr.w	r7, r7, #2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2931
				if (IsLower(wc)) {		/* ASCII lower case? */
    1082:	e7f0      	b.n	1066 <follow_path+0x16e>
    1084:	f1a0 0261 	sub.w	r2, r0, #97	; 0x61
    1088:	b292      	uxth	r2, r2
    108a:	2a19      	cmp	r2, #25
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2932
					b |= 1; wc -= 0x20;
    108c:	bf9e      	ittt	ls
    108e:	3820      	subls	r0, #32
    1090:	f047 0701 	orrls.w	r7, r7, #1
    1094:	b280      	uxthls	r0, r0
    1096:	e7e6      	b.n	1066 <follow_path+0x16e>
follow_path():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3082
			if (ns & NS_LAST) break;			/* Last segment matched. Function completed. */
    1098:	075a      	lsls	r2, r3, #29
    109a:	d4a3      	bmi.n	fe4 <follow_path+0xec>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3084
			if (!(dp->obj.attr & AM_DIR)) {		/* It is not a sub-directory and cannot follow */
    109c:	79b3      	ldrb	r3, [r6, #6]
    109e:	06db      	lsls	r3, r3, #27
    10a0:	d56c      	bpl.n	117c <follow_path+0x284>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3096
				dp->obj.sclust = ld_clust(fs, fs->win + dp->dptr % SS(fs));	/* Open next directory */
    10a2:	9b01      	ldr	r3, [sp, #4]
    10a4:	f103 0138 	add.w	r1, r3, #56	; 0x38
    10a8:	6933      	ldr	r3, [r6, #16]
    10aa:	f3c3 0308 	ubfx	r3, r3, #0, #9
    10ae:	4419      	add	r1, r3
    10b0:	9b01      	ldr	r3, [sp, #4]
    10b2:	7818      	ldrb	r0, [r3, #0]
    10b4:	f7ff fa0d 	bl	4d2 <ld_clust.isra.3>
    10b8:	60b0      	str	r0, [r6, #8]
create_name():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2841
	p = *path; lfn = dp->obj.fs->lfnbuf; di = 0;
    10ba:	6833      	ldr	r3, [r6, #0]
    10bc:	f8d3 b00c 	ldr.w	fp, [r3, #12]
    10c0:	2500      	movs	r5, #0
tchar2uni():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:799
	wc = (BYTE)*p++;			/* Get a byte */
    10c2:	f81a 0b01 	ldrb.w	r0, [sl], #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:805
	if (wc != 0) {
    10c6:	b168      	cbz	r0, 10e4 <follow_path+0x1ec>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:806
		wc = ff_oem2uni(wc, CODEPAGE);	/* ANSI/OEM ==> Unicode */
    10c8:	f240 11b5 	movw	r1, #437	; 0x1b5
    10cc:	f000 fc70 	bl	19b0 <ff_oem2uni>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:807
		if (wc == 0) return 0xFFFFFFFF;	/* Invalid code? */
    10d0:	2800      	cmp	r0, #0
    10d2:	f43f af36 	beq.w	f42 <follow_path+0x4a>
create_name():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2847
		if (wc < ' ' || wc == '/' || wc == '\\') break;	/* Break if end of the path or a separator is found */
    10d6:	281f      	cmp	r0, #31
    10d8:	d904      	bls.n	10e4 <follow_path+0x1ec>
    10da:	282f      	cmp	r0, #47	; 0x2f
    10dc:	d002      	beq.n	10e4 <follow_path+0x1ec>
    10de:	285c      	cmp	r0, #92	; 0x5c
    10e0:	f47f af27 	bne.w	f32 <follow_path+0x3a>
    10e4:	4652      	mov	r2, sl
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2852
	while (*p == '/' || *p == '\\') p++;	/* Skip duplicated separators if exist */
    10e6:	7813      	ldrb	r3, [r2, #0]
    10e8:	2b2f      	cmp	r3, #47	; 0x2f
    10ea:	4692      	mov	sl, r2
    10ec:	f102 0201 	add.w	r2, r2, #1
    10f0:	d0f9      	beq.n	10e6 <follow_path+0x1ee>
    10f2:	2b5c      	cmp	r3, #92	; 0x5c
    10f4:	d0f7      	beq.n	10e6 <follow_path+0x1ee>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2854
	cf = (wc < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of the path */
    10f6:	2820      	cmp	r0, #32
    10f8:	bf34      	ite	cc
    10fa:	2404      	movcc	r4, #4
    10fc:	2400      	movcs	r4, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2867
	while (di) {						/* Snip off trailing spaces and dots if exist */
    10fe:	eb0b 0345 	add.w	r3, fp, r5, lsl #1
    1102:	2d00      	cmp	r5, #0
    1104:	f47f af25 	bne.w	f52 <follow_path+0x5a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2872
	lfn[di] = 0;							/* LFN is created into the working buffer */
    1108:	2200      	movs	r2, #0
    110a:	eb0b 0345 	add.w	r3, fp, r5, lsl #1
    110e:	f82b 2015 	strh.w	r2, [fp, r5, lsl #1]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2873
	if (di == 0) return FR_INVALID_NAME;	/* Reject null name */
    1112:	2d00      	cmp	r5, #0
    1114:	f43f af15 	beq.w	f42 <follow_path+0x4a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2876
	for (si = 0; lfn[si] == ' '; si++) ;	/* Remove leading spaces */
    1118:	f83b 1012 	ldrh.w	r1, [fp, r2, lsl #1]
    111c:	2920      	cmp	r1, #32
    111e:	f102 0001 	add.w	r0, r2, #1
    1122:	f43f af1f 	beq.w	f64 <follow_path+0x6c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2877
	if (si > 0 || lfn[si] == '.') cf |= NS_LOSS | NS_LFN;	/* Is there any leading space or dot? */
    1126:	b90a      	cbnz	r2, 112c <follow_path+0x234>
    1128:	292e      	cmp	r1, #46	; 0x2e
    112a:	d101      	bne.n	1130 <follow_path+0x238>
    112c:	f044 0403 	orr.w	r4, r4, #3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2878
	while (di > 0 && lfn[di - 1] != '.') di--;	/* Find last dot (di<=si: no extension) */
    1130:	f833 1d02 	ldrh.w	r1, [r3, #-2]!
    1134:	292e      	cmp	r1, #46	; 0x2e
    1136:	d001      	beq.n	113c <follow_path+0x244>
    1138:	3d01      	subs	r5, #1
    113a:	d1f9      	bne.n	1130 <follow_path+0x238>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2880
	mem_set(dp->fn, ' ', 11);
    113c:	f106 0320 	add.w	r3, r6, #32
mem_set():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:670
	BYTE *d = (BYTE*)dst;
    1140:	f106 012b 	add.w	r1, r6, #43	; 0x2b
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:673
		*d++ = (BYTE)val;
    1144:	2020      	movs	r0, #32
    1146:	f803 0b01 	strb.w	r0, [r3], #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:674
	} while (--cnt);
    114a:	4299      	cmp	r1, r3
    114c:	d1fb      	bne.n	1146 <follow_path+0x24e>
create_name():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2881
	i = b = 0; ni = 8;
    114e:	f04f 0800 	mov.w	r8, #0
    1152:	f04f 0908 	mov.w	r9, #8
    1156:	4647      	mov	r7, r8
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2883
		wc = lfn[si++];					/* Get an LFN character */
    1158:	f83b 0012 	ldrh.w	r0, [fp, r2, lsl #1]
    115c:	1c53      	adds	r3, r2, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2884
		if (wc == 0) break;				/* Break on end of the LFN */
    115e:	2800      	cmp	r0, #0
    1160:	f43f af11 	beq.w	f86 <follow_path+0x8e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2885
		if (wc == ' ' || (wc == '.' && si != di)) {	/* Remove embedded spaces and dots */
    1164:	2820      	cmp	r0, #32
    1166:	d005      	beq.n	1174 <follow_path+0x27c>
    1168:	282e      	cmp	r0, #46	; 0x2e
    116a:	f47f aefd 	bne.w	f68 <follow_path+0x70>
    116e:	42ab      	cmp	r3, r5
    1170:	f43f aefe 	beq.w	f70 <follow_path+0x78>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2886
			cf |= NS_LOSS | NS_LFN;
    1174:	f044 0403 	orr.w	r4, r4, #3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2936
		dp->fn[i++] = (BYTE)wc;
    1178:	461a      	mov	r2, r3
    117a:	e7ed      	b.n	1158 <follow_path+0x260>
follow_path():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3077
						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
    117c:	2005      	movs	r0, #5
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3101
	return res;
    117e:	e731      	b.n	fe4 <follow_path+0xec>
    1180:	0000a73b 	.word	0x0000a73b
    1184:	0000a6a4 	.word	0x0000a6a4
    1188:	0000a744 	.word	0x0000a744

0000118c <sync_fs>:
sync_fs():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1098
{
    118c:	b570      	push	{r4, r5, r6, lr}
sync_window():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1049
	if (fs->wflag) {	/* Is the disk access window dirty */
    118e:	78c3      	ldrb	r3, [r0, #3]
sync_fs():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1098
{
    1190:	4604      	mov	r4, r0
sync_window():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1049
	if (fs->wflag) {	/* Is the disk access window dirty */
    1192:	2b00      	cmp	r3, #0
    1194:	d145      	bne.n	1222 <sync_fs+0x96>
sync_fs():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1104
		if (fs->fs_type == FS_FAT32 && fs->fsi_flag == 1) {	/* FAT32: Update FSInfo sector if needed */
    1196:	7823      	ldrb	r3, [r4, #0]
    1198:	2b03      	cmp	r3, #3
    119a:	d139      	bne.n	1210 <sync_fs+0x84>
    119c:	7923      	ldrb	r3, [r4, #4]
    119e:	2b01      	cmp	r3, #1
    11a0:	d136      	bne.n	1210 <sync_fs+0x84>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1106
			mem_set(fs->win, 0, sizeof fs->win);
    11a2:	f104 0638 	add.w	r6, r4, #56	; 0x38
mem_set():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:670
	BYTE *d = (BYTE*)dst;
    11a6:	f504 720e 	add.w	r2, r4, #568	; 0x238
    11aa:	4633      	mov	r3, r6
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:673
		*d++ = (BYTE)val;
    11ac:	2500      	movs	r5, #0
    11ae:	f803 5b01 	strb.w	r5, [r3], #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:674
	} while (--cnt);
    11b2:	4293      	cmp	r3, r2
    11b4:	d1fb      	bne.n	11ae <sync_fs+0x22>
st_word():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:620
	*ptr++ = (BYTE)val; val >>= 8;
    11b6:	2355      	movs	r3, #85	; 0x55
    11b8:	f884 3236 	strb.w	r3, [r4, #566]	; 0x236
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:621
	*ptr++ = (BYTE)val;
    11bc:	23aa      	movs	r3, #170	; 0xaa
    11be:	f884 3237 	strb.w	r3, [r4, #567]	; 0x237
st_dword():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:626
	*ptr++ = (BYTE)val; val >>= 8;
    11c2:	2352      	movs	r3, #82	; 0x52
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:629
	*ptr++ = (BYTE)val;
    11c4:	2241      	movs	r2, #65	; 0x41
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:626
	*ptr++ = (BYTE)val; val >>= 8;
    11c6:	2172      	movs	r1, #114	; 0x72
    11c8:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:627
	*ptr++ = (BYTE)val; val >>= 8;
    11cc:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:628
	*ptr++ = (BYTE)val; val >>= 8;
    11d0:	2361      	movs	r3, #97	; 0x61
    11d2:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:629
	*ptr++ = (BYTE)val;
    11d6:	f884 203b 	strb.w	r2, [r4, #59]	; 0x3b
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:628
	*ptr++ = (BYTE)val; val >>= 8;
    11da:	f884 221e 	strb.w	r2, [r4, #542]	; 0x21e
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:629
	*ptr++ = (BYTE)val;
    11de:	f884 321f 	strb.w	r3, [r4, #543]	; 0x21f
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:626
	*ptr++ = (BYTE)val; val >>= 8;
    11e2:	f884 121c 	strb.w	r1, [r4, #540]	; 0x21c
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:627
	*ptr++ = (BYTE)val; val >>= 8;
    11e6:	f884 121d 	strb.w	r1, [r4, #541]	; 0x21d
sync_fs():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1110
			st_dword(fs->win + FSI_Free_Count, fs->free_clst);
    11ea:	f504 7008 	add.w	r0, r4, #544	; 0x220
    11ee:	69a1      	ldr	r1, [r4, #24]
    11f0:	f7ff f921 	bl	436 <st_dword>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1111
			st_dword(fs->win + FSI_Nxt_Free, fs->last_clst);
    11f4:	6961      	ldr	r1, [r4, #20]
    11f6:	f504 7009 	add.w	r0, r4, #548	; 0x224
    11fa:	f7ff f91c 	bl	436 <st_dword>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1113
			fs->winsect = fs->volbase + 1;
    11fe:	6a62      	ldr	r2, [r4, #36]	; 0x24
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1114
			disk_write(fs->pdrv, fs->win, fs->winsect, 1);
    1200:	7860      	ldrb	r0, [r4, #1]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1113
			fs->winsect = fs->volbase + 1;
    1202:	3201      	adds	r2, #1
    1204:	6362      	str	r2, [r4, #52]	; 0x34
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1114
			disk_write(fs->pdrv, fs->win, fs->winsect, 1);
    1206:	2301      	movs	r3, #1
    1208:	4631      	mov	r1, r6
    120a:	f000 fc52 	bl	1ab2 <disk_write>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1115
			fs->fsi_flag = 0;
    120e:	7125      	strb	r5, [r4, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1118
		if (disk_ioctl(fs->pdrv, CTRL_SYNC, 0) != RES_OK) res = FR_DISK_ERR;
    1210:	2200      	movs	r2, #0
    1212:	4611      	mov	r1, r2
    1214:	7860      	ldrb	r0, [r4, #1]
    1216:	f000 fc60 	bl	1ada <disk_ioctl>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1102
	res = sync_window(fs);
    121a:	3000      	adds	r0, #0
    121c:	bf18      	it	ne
    121e:	2001      	movne	r0, #1
    1220:	e003      	b.n	122a <sync_fs+0x9e>
sync_window():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1102
    1222:	f7ff f970 	bl	506 <sync_window.part.6>
sync_fs():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1103
	if (res == FR_OK) {
    1226:	2800      	cmp	r0, #0
    1228:	d0b5      	beq.n	1196 <sync_fs+0xa>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1122
}
    122a:	bd70      	pop	{r4, r5, r6, pc}

0000122c <dir_register>:
dir_register():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2496
{
    122c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2504
	if (dp->fn[NSFLAG] & (NS_DOT | NS_NONAME)) return FR_INVALID_NAME;	/* Check name validity */
    1230:	f890 402b 	ldrb.w	r4, [r0, #43]	; 0x2b
    1234:	f014 04a0 	ands.w	r4, r4, #160	; 0xa0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2496
{
    1238:	b089      	sub	sp, #36	; 0x24
    123a:	4605      	mov	r5, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2504
	if (dp->fn[NSFLAG] & (NS_DOT | NS_NONAME)) return FR_INVALID_NAME;	/* Check name validity */
    123c:	f040 808f 	bne.w	135e <dir_register+0x132>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2498
	FATFS *fs = dp->obj.fs;
    1240:	6806      	ldr	r6, [r0, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2505
	for (nlen = 0; fs->lfnbuf[nlen]; nlen++) ;	/* Get lfn length */
    1242:	68f2      	ldr	r2, [r6, #12]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2505 (discriminator 1)
    1244:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
    1248:	2b00      	cmp	r3, #0
    124a:	d166      	bne.n	131a <dir_register+0xee>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2539
	mem_cpy(sn, dp->fn, 12);
    124c:	f105 0720 	add.w	r7, r5, #32
mem_cpy():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:659
	if (cnt != 0) {
    1250:	220c      	movs	r2, #12
    1252:	4639      	mov	r1, r7
    1254:	a805      	add	r0, sp, #20
    1256:	f7ff f933 	bl	4c0 <mem_cpy.part.0>
dir_register():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2540
	if (sn[NSFLAG] & NS_LOSS) {			/* When LFN is out of 8.3 format, generate a numbered name */
    125a:	f89d 301f 	ldrb.w	r3, [sp, #31]
    125e:	07db      	lsls	r3, r3, #31
    1260:	f140 8086 	bpl.w	1370 <dir_register+0x144>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2541
		dp->fn[NSFLAG] = NS_NOLFN;		/* Find only SFN */
    1264:	2340      	movs	r3, #64	; 0x40
gen_numname():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2004
				if (sr & 0x10000) sr ^= 0x11021;
    1266:	f8df 8244 	ldr.w	r8, [pc, #580]	; 14ac <dir_register+0x280>
dir_register():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2541
		dp->fn[NSFLAG] = NS_NOLFN;		/* Find only SFN */
    126a:	f885 302b 	strb.w	r3, [r5, #43]	; 0x2b
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2542
		for (n = 1; n < 100; n++) {
    126e:	f04f 0a01 	mov.w	sl, #1
mem_cpy():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2543
			gen_numname(dp->fn, sn, fs->lfnbuf, n);	/* Generate a numbered name */
    1272:	220b      	movs	r2, #11
    1274:	a905      	add	r1, sp, #20
    1276:	4638      	mov	r0, r7
dir_register():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2543
    1278:	f8d6 900c 	ldr.w	r9, [r6, #12]
mem_cpy():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:659
	if (cnt != 0) {
    127c:	f7ff f920 	bl	4c0 <mem_cpy.part.0>
gen_numname():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1997
	if (seq > 5) {	/* In case of many collisions, generate a hash number instead of sequential number */
    1280:	f1ba 0f05 	cmp.w	sl, #5
    1284:	d95a      	bls.n	133c <dir_register+0x110>
    1286:	f1a9 0102 	sub.w	r1, r9, #2
    128a:	4653      	mov	r3, sl
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1999
		while (*lfn) {	/* Create a CRC as hash value */
    128c:	f831 2f02 	ldrh.w	r2, [r1, #2]!
    1290:	2a00      	cmp	r2, #0
    1292:	d144      	bne.n	131e <dir_register+0xf2>
    1294:	f10d 0013 	add.w	r0, sp, #19
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1997
	if (seq > 5) {	/* In case of many collisions, generate a hash number instead of sequential number */
    1298:	2207      	movs	r2, #7
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2013
		c = (BYTE)((seq % 16) + '0');
    129a:	f003 0c0f 	and.w	ip, r3, #15
    129e:	f10c 0130 	add.w	r1, ip, #48	; 0x30
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2014
		if (c > '9') c += 7;
    12a2:	2939      	cmp	r1, #57	; 0x39
    12a4:	bf88      	it	hi
    12a6:	f10c 0137 	addhi.w	r1, ip, #55	; 0x37
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2017
	} while (seq);
    12aa:	2b0f      	cmp	r3, #15
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2015
		ns[i--] = c;
    12ac:	f800 1901 	strb.w	r1, [r0], #-1
    12b0:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2016
		seq /= 16;
    12b4:	ea4f 1113 	mov.w	r1, r3, lsr #4
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2017
	} while (seq);
    12b8:	d842      	bhi.n	1340 <dir_register+0x114>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2018
	ns[i] = '~';
    12ba:	ab08      	add	r3, sp, #32
    12bc:	4413      	add	r3, r2
    12be:	217e      	movs	r1, #126	; 0x7e
    12c0:	f803 1c14 	strb.w	r1, [r3, #-20]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2021
	for (j = 0; j < i && dst[j] != ' '; j++) {
    12c4:	f105 011f 	add.w	r1, r5, #31
    12c8:	4608      	mov	r0, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2018
	ns[i] = '~';
    12ca:	2300      	movs	r3, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2021
	for (j = 0; j < i && dst[j] != ' '; j++) {
    12cc:	4293      	cmp	r3, r2
    12ce:	d006      	beq.n	12de <dir_register+0xb2>
    12d0:	f810 cf01 	ldrb.w	ip, [r0, #1]!
    12d4:	f1bc 0f20 	cmp.w	ip, #32
    12d8:	f103 0e01 	add.w	lr, r3, #1
    12dc:	d132      	bne.n	1344 <dir_register+0x118>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2028
		dst[j++] = (i < 8) ? ns[i++] : ' ';
    12de:	2a07      	cmp	r2, #7
    12e0:	bf9c      	itt	ls
    12e2:	a808      	addls	r0, sp, #32
    12e4:	1880      	addls	r0, r0, r2
    12e6:	f103 0301 	add.w	r3, r3, #1
    12ea:	bf96      	itet	ls
    12ec:	f810 0c14 	ldrbls.w	r0, [r0, #-20]
    12f0:	2020      	movhi	r0, #32
    12f2:	3201      	addls	r2, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2029
	} while (j < 8);
    12f4:	2b07      	cmp	r3, #7
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2028
		dst[j++] = (i < 8) ? ns[i++] : ' ';
    12f6:	54c8      	strb	r0, [r1, r3]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2029
	} while (j < 8);
    12f8:	d9f1      	bls.n	12de <dir_register+0xb2>
dir_register():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2544
			res = dir_find(dp);				/* Check if the name collides with existing SFN */
    12fa:	4628      	mov	r0, r5
    12fc:	f7ff fd58 	bl	db0 <dir_find>
    1300:	4681      	mov	r9, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2545
			if (res != FR_OK) break;
    1302:	bb78      	cbnz	r0, 1364 <dir_register+0x138>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2542 (discriminator 2)
		for (n = 1; n < 100; n++) {
    1304:	f10a 0a01 	add.w	sl, sl, #1
    1308:	f1ba 0f64 	cmp.w	sl, #100	; 0x64
    130c:	d1b1      	bne.n	1272 <dir_register+0x46>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2547
		if (n == 100) return FR_DENIED;		/* Abort if too many collisions */
    130e:	f04f 0907 	mov.w	r9, #7
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2588
}
    1312:	4648      	mov	r0, r9
    1314:	b009      	add	sp, #36	; 0x24
    1316:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2505 (discriminator 3)
	for (nlen = 0; fs->lfnbuf[nlen]; nlen++) ;	/* Get lfn length */
    131a:	3401      	adds	r4, #1
    131c:	e792      	b.n	1244 <dir_register+0x18>
gen_numname():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1999
		while (*lfn) {	/* Create a CRC as hash value */
    131e:	2010      	movs	r0, #16
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2002
				sr = (sr << 1) + (wc & 1);
    1320:	f002 0c01 	and.w	ip, r2, #1
    1324:	eb0c 0343 	add.w	r3, ip, r3, lsl #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2004
				if (sr & 0x10000) sr ^= 0x11021;
    1328:	f413 3f80 	tst.w	r3, #65536	; 0x10000
    132c:	bf18      	it	ne
    132e:	ea83 0308 	eorne.w	r3, r3, r8
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2001
			for (i = 0; i < 16; i++) {
    1332:	3801      	subs	r0, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2003
				wc >>= 1;
    1334:	ea4f 0252 	mov.w	r2, r2, lsr #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2001
			for (i = 0; i < 16; i++) {
    1338:	d1f2      	bne.n	1320 <dir_register+0xf4>
    133a:	e7a7      	b.n	128c <dir_register+0x60>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1997
	if (seq > 5) {	/* In case of many collisions, generate a hash number instead of sequential number */
    133c:	4653      	mov	r3, sl
    133e:	e7a9      	b.n	1294 <dir_register+0x68>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2016
		seq /= 16;
    1340:	460b      	mov	r3, r1
    1342:	e7aa      	b.n	129a <dir_register+0x6e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2021
	for (j = 0; j < i && dst[j] != ' '; j++) {
    1344:	4673      	mov	r3, lr
    1346:	e7c1      	b.n	12cc <dir_register+0xa0>
dir_alloc():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1815
				n = 0;					/* Not a blank entry. Restart to search */
    1348:	4680      	mov	r8, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1817
			res = dir_next(dp, 1);
    134a:	2101      	movs	r1, #1
    134c:	4628      	mov	r0, r5
    134e:	f7ff fcda 	bl	d06 <dir_next>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1818
		} while (res == FR_OK);	/* Next entry with table stretch enabled */
    1352:	4681      	mov	r9, r0
    1354:	b310      	cbz	r0, 139c <dir_register+0x170>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1821
	if (res == FR_NO_FILE) res = FR_DENIED;	/* No directory entry to allocate */
    1356:	f1b9 0f04 	cmp.w	r9, #4
    135a:	d0d8      	beq.n	130e <dir_register+0xe2>
    135c:	e7d9      	b.n	1312 <dir_register+0xe6>
dir_register():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2504
	if (dp->fn[NSFLAG] & (NS_DOT | NS_NONAME)) return FR_INVALID_NAME;	/* Check name validity */
    135e:	f04f 0906 	mov.w	r9, #6
    1362:	e7d6      	b.n	1312 <dir_register+0xe6>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2548
		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
    1364:	2804      	cmp	r0, #4
    1366:	d1d4      	bne.n	1312 <dir_register+0xe6>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2549
		dp->fn[NSFLAG] = sn[NSFLAG];
    1368:	f89d 301f 	ldrb.w	r3, [sp, #31]
    136c:	f885 302b 	strb.w	r3, [r5, #43]	; 0x2b
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2553
	nent = (sn[NSFLAG] & NS_LFN) ? (nlen + 12) / 13 + 1 : 1;	/* Number of entries to allocate */
    1370:	f89d 301f 	ldrb.w	r3, [sp, #31]
dir_alloc():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1799
	FATFS *fs = dp->obj.fs;
    1374:	f8d5 a000 	ldr.w	sl, [r5]
dir_register():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2553
	nent = (sn[NSFLAG] & NS_LFN) ? (nlen + 12) / 13 + 1 : 1;	/* Number of entries to allocate */
    1378:	079b      	lsls	r3, r3, #30
    137a:	bf48      	it	mi
    137c:	340c      	addmi	r4, #12
dir_alloc():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1802
	res = dir_sdi(dp, 0);
    137e:	f04f 0100 	mov.w	r1, #0
    1382:	4628      	mov	r0, r5
dir_register():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2553
	nent = (sn[NSFLAG] & NS_LFN) ? (nlen + 12) / 13 + 1 : 1;	/* Number of entries to allocate */
    1384:	bf49      	itett	mi
    1386:	230d      	movmi	r3, #13
    1388:	2401      	movpl	r4, #1
    138a:	fbb4 f4f3 	udivmi	r4, r4, r3
    138e:	3401      	addmi	r4, #1
dir_alloc():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1802
	res = dir_sdi(dp, 0);
    1390:	f7ff fb6c 	bl	a6c <dir_sdi>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1803
	if (res == FR_OK) {
    1394:	4681      	mov	r9, r0
    1396:	2800      	cmp	r0, #0
    1398:	d1dd      	bne.n	1356 <dir_register+0x12a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1804
		n = 0;
    139a:	4680      	mov	r8, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1806
			res = move_window(fs, dp->sect);
    139c:	69a9      	ldr	r1, [r5, #24]
    139e:	4650      	mov	r0, sl
    13a0:	f7ff f8d1 	bl	546 <move_window>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1807
			if (res != FR_OK) break;
    13a4:	4681      	mov	r9, r0
    13a6:	2800      	cmp	r0, #0
    13a8:	d1d5      	bne.n	1356 <dir_register+0x12a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1811
			if (dp->dir[DIR_Name] == DDEM || dp->dir[DIR_Name] == 0) {
    13aa:	69eb      	ldr	r3, [r5, #28]
    13ac:	781b      	ldrb	r3, [r3, #0]
    13ae:	2be5      	cmp	r3, #229	; 0xe5
    13b0:	d001      	beq.n	13b6 <dir_register+0x18a>
    13b2:	2b00      	cmp	r3, #0
    13b4:	d1c8      	bne.n	1348 <dir_register+0x11c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1813
				if (++n == nent) break;	/* A block of contiguous free entries is found */
    13b6:	f108 0801 	add.w	r8, r8, #1
    13ba:	4544      	cmp	r4, r8
    13bc:	d1c5      	bne.n	134a <dir_register+0x11e>
dir_register():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2555
	if (res == FR_OK && --nent) {	/* Set LFN entry if needed */
    13be:	3c01      	subs	r4, #1
    13c0:	d055      	beq.n	146e <dir_register+0x242>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2556
		res = dir_sdi(dp, dp->dptr - nent * SZDIRE);
    13c2:	6929      	ldr	r1, [r5, #16]
    13c4:	4628      	mov	r0, r5
    13c6:	eba1 1144 	sub.w	r1, r1, r4, lsl #5
    13ca:	f7ff fb4f 	bl	a6c <dir_sdi>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2557
		if (res == FR_OK) {
    13ce:	4681      	mov	r9, r0
    13d0:	2800      	cmp	r0, #0
    13d2:	d19e      	bne.n	1312 <dir_register+0xe6>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2558
			sum = sum_sfn(dp->fn);	/* Checksum value of the SFN tied to the LFN */
    13d4:	4638      	mov	r0, r7
    13d6:	f7ff f84f 	bl	478 <sum_sfn>
put_lfn():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1964
		if (wc != 0xFFFF) wc = lfn[i++];	/* Get an effective character */
    13da:	f64f 78ff 	movw	r8, #65535	; 0xffff
dir_register():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2558
			sum = sum_sfn(dp->fn);	/* Checksum value of the SFN tied to the LFN */
    13de:	9001      	str	r0, [sp, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2560
				res = move_window(fs, dp->sect);
    13e0:	69a9      	ldr	r1, [r5, #24]
    13e2:	4630      	mov	r0, r6
    13e4:	f7ff f8af 	bl	546 <move_window>
    13e8:	4681      	mov	r9, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2561
				if (res != FR_OK) break;
    13ea:	2800      	cmp	r0, #0
    13ec:	d191      	bne.n	1312 <dir_register+0xe6>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2562
				put_lfn(fs->lfnbuf, dp->dir, (BYTE)nent, sum);
    13ee:	69eb      	ldr	r3, [r5, #28]
put_lfn():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1956
	dir[LDIR_Chksum] = sum;			/* Set checksum */
    13f0:	9a01      	ldr	r2, [sp, #4]
dir_register():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2562
				put_lfn(fs->lfnbuf, dp->dir, (BYTE)nent, sum);
    13f2:	f8d6 e00c 	ldr.w	lr, [r6, #12]
put_lfn():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1956
	dir[LDIR_Chksum] = sum;			/* Set checksum */
    13f6:	735a      	strb	r2, [r3, #13]
    13f8:	b2e1      	uxtb	r1, r4
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1957
	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
    13fa:	f04f 020f 	mov.w	r2, #15
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1961
	i = (ord - 1) * 13;				/* Get offset in the LFN working buffer */
    13fe:	f04f 0c0d 	mov.w	ip, #13
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1957
	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
    1402:	72da      	strb	r2, [r3, #11]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1958
	dir[LDIR_Type] = 0;
    1404:	f8df a0a8 	ldr.w	sl, [pc, #168]	; 14b0 <dir_register+0x284>
    1408:	7318      	strb	r0, [r3, #12]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1961
	i = (ord - 1) * 13;				/* Get offset in the LFN working buffer */
    140a:	1e4a      	subs	r2, r1, #1
    140c:	fb0c f202 	mul.w	r2, ip, r2
st_word():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:620
	*ptr++ = (BYTE)val; val >>= 8;
    1410:	7698      	strb	r0, [r3, #26]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:621
	*ptr++ = (BYTE)val;
    1412:	76d8      	strb	r0, [r3, #27]
put_lfn():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1962
	s = wc = 0;
    1414:	4684      	mov	ip, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1964
		if (wc != 0xFFFF) wc = lfn[i++];	/* Get an effective character */
    1416:	4540      	cmp	r0, r8
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1965
		st_word(dir + LfnOfs[s], wc);		/* Put it */
    1418:	f81a 9b01 	ldrb.w	r9, [sl], #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1964
		if (wc != 0xFFFF) wc = lfn[i++];	/* Get an effective character */
    141c:	bf18      	it	ne
    141e:	f83e 0012 	ldrhne.w	r0, [lr, r2, lsl #1]
st_word():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:620
	*ptr++ = (BYTE)val; val >>= 8;
    1422:	f803 0009 	strb.w	r0, [r3, r9]
put_lfn():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1965
		st_word(dir + LfnOfs[s], wc);		/* Put it */
    1426:	eb03 0b09 	add.w	fp, r3, r9
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1967
	} while (++s < 13);
    142a:	f10c 0c01 	add.w	ip, ip, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1964
		if (wc != 0xFFFF) wc = lfn[i++];	/* Get an effective character */
    142e:	bf18      	it	ne
    1430:	3201      	addne	r2, #1
st_word():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:620
	*ptr++ = (BYTE)val; val >>= 8;
    1432:	ea4f 2910 	mov.w	r9, r0, lsr #8
put_lfn():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1966
		if (wc == 0) wc = 0xFFFF;		/* Padding characters for left locations */
    1436:	2800      	cmp	r0, #0
    1438:	bf08      	it	eq
    143a:	4640      	moveq	r0, r8
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1967
	} while (++s < 13);
    143c:	f1bc 0f0d 	cmp.w	ip, #13
st_word():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:621
	*ptr++ = (BYTE)val;
    1440:	f88b 9001 	strb.w	r9, [fp, #1]
put_lfn():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1967
	} while (++s < 13);
    1444:	d1e7      	bne.n	1416 <dir_register+0x1ea>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1968
	if (wc == 0xFFFF || !lfn[i]) ord |= LLEF;	/* Last LFN part is the start of LFN sequence */
    1446:	4540      	cmp	r0, r8
    1448:	d002      	beq.n	1450 <dir_register+0x224>
    144a:	f83e 2012 	ldrh.w	r2, [lr, r2, lsl #1]
    144e:	b90a      	cbnz	r2, 1454 <dir_register+0x228>
    1450:	f041 0140 	orr.w	r1, r1, #64	; 0x40
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:1969
	dir[LDIR_Ord] = ord;			/* Set the LFN order */
    1454:	7019      	strb	r1, [r3, #0]
dir_register():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2563
				fs->wflag = 1;
    1456:	2301      	movs	r3, #1
    1458:	70f3      	strb	r3, [r6, #3]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2564
				res = dir_next(dp, 0);	/* Next entry */
    145a:	2100      	movs	r1, #0
    145c:	4628      	mov	r0, r5
    145e:	f7ff fc52 	bl	d06 <dir_next>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2565
			} while (res == FR_OK && --nent);
    1462:	4681      	mov	r9, r0
    1464:	2800      	cmp	r0, #0
    1466:	f47f af54 	bne.w	1312 <dir_register+0xe6>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2565 (discriminator 1)
    146a:	3c01      	subs	r4, #1
    146c:	d1b8      	bne.n	13e0 <dir_register+0x1b4>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2576
		res = move_window(fs, dp->sect);
    146e:	69a9      	ldr	r1, [r5, #24]
    1470:	4630      	mov	r0, r6
    1472:	f7ff f868 	bl	546 <move_window>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2577
		if (res == FR_OK) {
    1476:	4681      	mov	r9, r0
    1478:	2800      	cmp	r0, #0
    147a:	f47f af4a 	bne.w	1312 <dir_register+0xe6>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2578
			mem_set(dp->dir, 0, SZDIRE);	/* Clean the entry */
    147e:	69eb      	ldr	r3, [r5, #28]
mem_set():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:673
		*d++ = (BYTE)val;
    1480:	4601      	mov	r1, r0
    1482:	f103 0220 	add.w	r2, r3, #32
    1486:	f803 1b01 	strb.w	r1, [r3], #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:674
	} while (--cnt);
    148a:	4293      	cmp	r3, r2
    148c:	d1fb      	bne.n	1486 <dir_register+0x25a>
mem_cpy():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:659
	if (cnt != 0) {
    148e:	220b      	movs	r2, #11
    1490:	4639      	mov	r1, r7
    1492:	69e8      	ldr	r0, [r5, #28]
    1494:	f7ff f814 	bl	4c0 <mem_cpy.part.0>
dir_register():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2581
			dp->dir[DIR_NTres] = dp->fn[NSFLAG] & (NS_BODY | NS_EXT);	/* Put NT flag */
    1498:	f895 302b 	ldrb.w	r3, [r5, #43]	; 0x2b
    149c:	69ea      	ldr	r2, [r5, #28]
    149e:	f003 0318 	and.w	r3, r3, #24
    14a2:	7313      	strb	r3, [r2, #12]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:2583
			fs->wflag = 1;
    14a4:	2301      	movs	r3, #1
    14a6:	70f3      	strb	r3, [r6, #3]
    14a8:	e733      	b.n	1312 <dir_register+0xe6>
    14aa:	bf00      	nop
    14ac:	00011021 	.word	0x00011021
    14b0:	0000a724 	.word	0x0000a724

000014b4 <f_mount>:
f_mount():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3502
FRESULT f_mount (
	FATFS* fs,			/* Pointer to the filesystem object (NULL:unmount)*/
	const TCHAR* path,	/* Logical drive number to be mounted/unmounted */
	BYTE opt			/* Mode option 0:Do not mount (delayed mount), 1:Mount immediately */
)
{
    14b4:	b5f0      	push	{r4, r5, r6, r7, lr}
    14b6:	b085      	sub	sp, #20
    14b8:	e9cd 1000 	strd	r1, r0, [sp]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3510
	FRESULT res;
	const TCHAR *rp = path;


	/* Get logical drive number */
	vol = get_ldnumber(&rp);
    14bc:	a803      	add	r0, sp, #12
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3502
{
    14be:	4614      	mov	r4, r2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3506
	const TCHAR *rp = path;
    14c0:	9103      	str	r1, [sp, #12]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3510
	vol = get_ldnumber(&rp);
    14c2:	f7fe ffe8 	bl	496 <get_ldnumber>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3511
	if (vol < 0) return FR_INVALID_DRIVE;
    14c6:	1e05      	subs	r5, r0, #0
    14c8:	db28      	blt.n	151c <f_mount+0x68>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3512
	cfs = FatFs[vol];					/* Pointer to fs object */
    14ca:	4f15      	ldr	r7, [pc, #84]	; (1520 <f_mount+0x6c>)
    14cc:	f857 6025 	ldr.w	r6, [r7, r5, lsl #2]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3514

	if (cfs) {
    14d0:	b14e      	cbz	r6, 14e6 <f_mount+0x32>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3519
#if FF_FS_LOCK != 0
		clear_lock(cfs);
#endif
#if FF_FS_REENTRANT						/* Discard sync object of the current volume */
		if (!ff_del_syncobj(cfs->sobj)) return FR_INT_ERR;
    14d2:	6930      	ldr	r0, [r6, #16]
    14d4:	f000 fa39 	bl	194a <ff_del_syncobj>
    14d8:	b918      	cbnz	r0, 14e2 <f_mount+0x2e>
    14da:	2402      	movs	r4, #2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3536 (discriminator 1)

	if (opt == 0) return FR_OK;			/* Do not mount now, it will be mounted later */

	res = find_volume(&path, &fs, 0);	/* Force mounted the volume */
	LEAVE_FF(fs, res);
}
    14dc:	4620      	mov	r0, r4
    14de:	b005      	add	sp, #20
    14e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3521
		cfs->fs_type = 0;				/* Clear old fs object */
    14e2:	2300      	movs	r3, #0
    14e4:	7033      	strb	r3, [r6, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3524
	if (fs) {
    14e6:	9901      	ldr	r1, [sp, #4]
    14e8:	b979      	cbnz	r1, 150a <f_mount+0x56>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3530
	FatFs[vol] = fs;					/* Register new fs object */
    14ea:	9b01      	ldr	r3, [sp, #4]
    14ec:	f847 3025 	str.w	r3, [r7, r5, lsl #2]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3532
	if (opt == 0) return FR_OK;			/* Do not mount now, it will be mounted later */
    14f0:	2c00      	cmp	r4, #0
    14f2:	d0f3      	beq.n	14dc <f_mount+0x28>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3534
	res = find_volume(&path, &fs, 0);	/* Force mounted the volume */
    14f4:	a901      	add	r1, sp, #4
    14f6:	2200      	movs	r2, #0
    14f8:	4668      	mov	r0, sp
    14fa:	f7ff f881 	bl	600 <find_volume>
    14fe:	4604      	mov	r4, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3535
	LEAVE_FF(fs, res);
    1500:	4601      	mov	r1, r0
    1502:	9801      	ldr	r0, [sp, #4]
    1504:	f7ff fb9e 	bl	c44 <unlock_fs>
    1508:	e7e8      	b.n	14dc <f_mount+0x28>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3525
		fs->fs_type = 0;				/* Clear new fs object */
    150a:	2300      	movs	r3, #0
    150c:	f801 3b10 	strb.w	r3, [r1], #16
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3527
		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
    1510:	b2e8      	uxtb	r0, r5
    1512:	f000 fa10 	bl	1936 <ff_cre_syncobj>
    1516:	2800      	cmp	r0, #0
    1518:	d1e7      	bne.n	14ea <f_mount+0x36>
    151a:	e7de      	b.n	14da <f_mount+0x26>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3511
	if (vol < 0) return FR_INVALID_DRIVE;
    151c:	240b      	movs	r4, #11
    151e:	e7dd      	b.n	14dc <f_mount+0x28>
    1520:	10000330 	.word	0x10000330

00001524 <f_open>:
f_open():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3550
FRESULT f_open (
	FIL* fp,			/* Pointer to the blank file object */
	const TCHAR* path,	/* Pointer to the file name */
	BYTE mode			/* Access mode and file open mode flags */
)
{
    1524:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    1528:	b0d0      	sub	sp, #320	; 0x140
    152a:	4617      	mov	r7, r2
    152c:	9101      	str	r1, [sp, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3561
	FSIZE_t ofs;
#endif
	DEF_NAMBUF


	if (!fp) return FR_INVALID_OBJECT;
    152e:	4604      	mov	r4, r0
    1530:	2800      	cmp	r0, #0
    1532:	f000 80db 	beq.w	16ec <f_open+0x1c8>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3564

	/* Get logical drive number */
	mode &= FF_FS_READONLY ? FA_READ : FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_CREATE_NEW | FA_OPEN_ALWAYS | FA_OPEN_APPEND;
    1536:	f002 053f 	and.w	r5, r2, #63	; 0x3f
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3565
	res = find_volume(&path, &fs, mode);
    153a:	462a      	mov	r2, r5
    153c:	a902      	add	r1, sp, #8
    153e:	a801      	add	r0, sp, #4
    1540:	f7ff f85e 	bl	600 <find_volume>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3566
	if (res == FR_OK) {
    1544:	4606      	mov	r6, r0
    1546:	2800      	cmp	r0, #0
    1548:	d14b      	bne.n	15e2 <f_open+0xbe>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3567
		dj.obj.fs = fs;
    154a:	9b02      	ldr	r3, [sp, #8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3569
		INIT_NAMBUF(fs);
		res = follow_path(&dj, path);	/* Follow the file path */
    154c:	9901      	ldr	r1, [sp, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3567
		dj.obj.fs = fs;
    154e:	9303      	str	r3, [sp, #12]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3568
		INIT_NAMBUF(fs);
    1550:	aa0f      	add	r2, sp, #60	; 0x3c
    1552:	60da      	str	r2, [r3, #12]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3569
		res = follow_path(&dj, path);	/* Follow the file path */
    1554:	a803      	add	r0, sp, #12
    1556:	f7ff fccf 	bl	ef8 <follow_path>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3571
#if !FF_FS_READONLY	/* Read/Write configuration */
		if (res == FR_OK) {
    155a:	b920      	cbnz	r0, 1566 <f_open+0x42>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3572
			if (dj.fn[NSFLAG] & NS_NONAME) {	/* Origin directory itself? */
    155c:	f99d 3037 	ldrsb.w	r3, [sp, #55]	; 0x37
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3573
				res = FR_INVALID_NAME;
    1560:	2b00      	cmp	r3, #0
    1562:	bfb8      	it	lt
    1564:	2006      	movlt	r0, #6
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3582
				res = chk_lock(&dj, (mode & ~FA_READ) ? 1 : 0);		/* Check if the file can be used */
			}
#endif
		}
		/* Create or Open a file */
		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
    1566:	f017 0f1c 	tst.w	r7, #28
    156a:	f000 809f 	beq.w	16ac <f_open+0x188>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3583
			if (res != FR_OK) {					/* No file, create new */
    156e:	2800      	cmp	r0, #0
    1570:	d042      	beq.n	15f8 <f_open+0xd4>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3584
				if (res == FR_NO_FILE) {		/* There is no file to open, create a new entry */
    1572:	2804      	cmp	r0, #4
    1574:	d135      	bne.n	15e2 <f_open+0xbe>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3588
#if FF_FS_LOCK != 0
					res = enq_lock() ? dir_register(&dj) : FR_TOO_MANY_OPEN_FILES;
#else
					res = dir_register(&dj);
    1576:	a803      	add	r0, sp, #12
    1578:	f7ff fe58 	bl	122c <dir_register>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3600
					res = FR_DENIED;
				} else {
					if (mode & FA_CREATE_NEW) res = FR_EXIST;	/* Cannot create as new file */
				}
			}
			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate the file if overwrite mode */
    157c:	bb88      	cbnz	r0, 15e2 <f_open+0xbe>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3591
				mode |= FA_CREATE_ALWAYS;		/* File is created */
    157e:	f045 0508 	orr.w	r5, r5, #8
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3621
					}
				} else
#endif
				{
					/* Set directory entry initial state */
					cl = ld_clust(fs, dj.dir);			/* Get current cluster chain */
    1582:	9b02      	ldr	r3, [sp, #8]
    1584:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
    1588:	7818      	ldrb	r0, [r3, #0]
    158a:	4641      	mov	r1, r8
    158c:	f7fe ffa1 	bl	4d2 <ld_clust.isra.3>
    1590:	4607      	mov	r7, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3622
					st_dword(dj.dir + DIR_CrtTime, GET_FATTIME());	/* Set created time */
    1592:	f000 fab4 	bl	1afe <get_fattime>
    1596:	4601      	mov	r1, r0
    1598:	f108 000e 	add.w	r0, r8, #14
    159c:	f7fe ff4b 	bl	436 <st_dword>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3623
					dj.dir[DIR_Attr] = AM_ARC;			/* Reset attribute */
    15a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3624
					st_clust(fs, dj.dir, 0);			/* Reset file allocation info */
    15a2:	9802      	ldr	r0, [sp, #8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3623
					dj.dir[DIR_Attr] = AM_ARC;			/* Reset attribute */
    15a4:	2220      	movs	r2, #32
    15a6:	72da      	strb	r2, [r3, #11]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3624
					st_clust(fs, dj.dir, 0);			/* Reset file allocation info */
    15a8:	990a      	ldr	r1, [sp, #40]	; 0x28
    15aa:	2200      	movs	r2, #0
    15ac:	f7fe ff9f 	bl	4ee <st_clust.isra.4>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3625
					st_dword(dj.dir + DIR_FileSize, 0);
    15b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
st_dword():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:626
	*ptr++ = (BYTE)val; val >>= 8;
    15b2:	2200      	movs	r2, #0
    15b4:	771a      	strb	r2, [r3, #28]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:627
	*ptr++ = (BYTE)val; val >>= 8;
    15b6:	775a      	strb	r2, [r3, #29]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:628
	*ptr++ = (BYTE)val; val >>= 8;
    15b8:	779a      	strb	r2, [r3, #30]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:629
	*ptr++ = (BYTE)val;
    15ba:	77da      	strb	r2, [r3, #31]
f_open():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3626
					fs->wflag = 1;
    15bc:	9b02      	ldr	r3, [sp, #8]
    15be:	2101      	movs	r1, #1
    15c0:	70d9      	strb	r1, [r3, #3]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3627
					if (cl != 0) {						/* Remove the cluster chain if exist */
    15c2:	b317      	cbz	r7, 160a <f_open+0xe6>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3629
						dw = fs->winsect;
						res = remove_chain(&dj.obj, cl, 0);
    15c4:	4639      	mov	r1, r7
    15c6:	a803      	add	r0, sp, #12
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3628
						dw = fs->winsect;
    15c8:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3629
						res = remove_chain(&dj.obj, cl, 0);
    15cc:	f7ff fb03 	bl	bd6 <remove_chain>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3630
						if (res == FR_OK) {
    15d0:	b938      	cbnz	r0, 15e2 <f_open+0xbe>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3631
							res = move_window(fs, dw);
    15d2:	4641      	mov	r1, r8
    15d4:	9802      	ldr	r0, [sp, #8]
    15d6:	f7fe ffb6 	bl	546 <move_window>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3632
							fs->last_clst = cl - 1;		/* Reuse the cluster hole */
    15da:	9b02      	ldr	r3, [sp, #8]
    15dc:	3f01      	subs	r7, #1
    15de:	615f      	str	r7, [r3, #20]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3649
						res = FR_DENIED;
					}
				}
			}
		}
		if (res == FR_OK) {
    15e0:	b198      	cbz	r0, 160a <f_open+0xe6>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3723 (discriminator 1)
		}

		FREE_NAMBUF();
	}

	if (res != FR_OK) fp->obj.fs = 0;	/* Invalidate file object on error */
    15e2:	2300      	movs	r3, #0
    15e4:	6023      	str	r3, [r4, #0]
    15e6:	4606      	mov	r6, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3725

	LEAVE_FF(fs, res);
    15e8:	4631      	mov	r1, r6
    15ea:	9802      	ldr	r0, [sp, #8]
    15ec:	f7ff fb2a 	bl	c44 <unlock_fs>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3726 (discriminator 1)
}
    15f0:	4630      	mov	r0, r6
    15f2:	b050      	add	sp, #320	; 0x140
    15f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3594
				if (dj.obj.attr & (AM_RDO | AM_DIR)) {	/* Cannot overwrite it (R/O or DIR) */
    15f8:	f89d 3012 	ldrb.w	r3, [sp, #18]
    15fc:	f013 0f11 	tst.w	r3, #17
    1600:	d15e      	bne.n	16c0 <f_open+0x19c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3597
					if (mode & FA_CREATE_NEW) res = FR_EXIST;	/* Cannot create as new file */
    1602:	0778      	lsls	r0, r7, #29
    1604:	d46c      	bmi.n	16e0 <f_open+0x1bc>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3600
			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate the file if overwrite mode */
    1606:	0739      	lsls	r1, r7, #28
    1608:	d4bb      	bmi.n	1582 <f_open+0x5e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3651
			fp->dir_sect = fs->winsect;			/* Pointer to the directory entry */
    160a:	f8dd 8008 	ldr.w	r8, [sp, #8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3652
			fp->dir_ptr = dj.dir;
    160e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3651
			fp->dir_sect = fs->winsect;			/* Pointer to the directory entry */
    1610:	f8d8 3034 	ldr.w	r3, [r8, #52]	; 0x34
    1614:	6223      	str	r3, [r4, #32]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3652
			fp->dir_ptr = dj.dir;
    1616:	6267      	str	r7, [r4, #36]	; 0x24
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3680
				fp->obj.sclust = ld_clust(fs, dj.dir);					/* Get object allocation info */
    1618:	f898 0000 	ldrb.w	r0, [r8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3650
			if (mode & FA_CREATE_ALWAYS) mode |= FA_MODIFIED;	/* Set file change flag if created or overwritten */
    161c:	0729      	lsls	r1, r5, #28
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3680
				fp->obj.sclust = ld_clust(fs, dj.dir);					/* Get object allocation info */
    161e:	4639      	mov	r1, r7
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3650
			if (mode & FA_CREATE_ALWAYS) mode |= FA_MODIFIED;	/* Set file change flag if created or overwritten */
    1620:	bf48      	it	mi
    1622:	f045 0540 	orrmi.w	r5, r5, #64	; 0x40
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3680
				fp->obj.sclust = ld_clust(fs, dj.dir);					/* Get object allocation info */
    1626:	f7fe ff54 	bl	4d2 <ld_clust.isra.3>
    162a:	60a0      	str	r0, [r4, #8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3681
				fp->obj.objsize = ld_dword(dj.dir + DIR_FileSize);
    162c:	f107 001c 	add.w	r0, r7, #28
    1630:	f7fe fef9 	bl	426 <ld_dword>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3687
			fp->obj.id = fs->id;
    1634:	f8b8 3006 	ldrh.w	r3, [r8, #6]
    1638:	80a3      	strh	r3, [r4, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3694
			mem_set(fp->buf, 0, sizeof fp->buf);	/* Clear sector buffer */
    163a:	f104 0728 	add.w	r7, r4, #40	; 0x28
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3689
			fp->err = 0;			/* Clear error flag */
    163e:	2300      	movs	r3, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3681
				fp->obj.objsize = ld_dword(dj.dir + DIR_FileSize);
    1640:	60e0      	str	r0, [r4, #12]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3686
			fp->obj.fs = fs;	 	/* Validate the file object */
    1642:	f8c4 8000 	str.w	r8, [r4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3688
			fp->flag = mode;		/* Set file access mode */
    1646:	7425      	strb	r5, [r4, #16]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3689
			fp->err = 0;			/* Clear error flag */
    1648:	7463      	strb	r3, [r4, #17]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3690
			fp->sect = 0;			/* Invalidate current data sector */
    164a:	61e3      	str	r3, [r4, #28]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3691
			fp->fptr = 0;			/* Set file pointer top of the file */
    164c:	6163      	str	r3, [r4, #20]
mem_set():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:670
	BYTE *d = (BYTE*)dst;
    164e:	f504 710a 	add.w	r1, r4, #552	; 0x228
    1652:	463a      	mov	r2, r7
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:673
		*d++ = (BYTE)val;
    1654:	f802 3b01 	strb.w	r3, [r2], #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:674
	} while (--cnt);
    1658:	4291      	cmp	r1, r2
    165a:	d1fb      	bne.n	1654 <f_open+0x130>
f_open():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3696
			if ((mode & FA_SEEKEND) && fp->obj.objsize > 0) {	/* Seek to end of file if FA_OPEN_APPEND is specified */
    165c:	06aa      	lsls	r2, r5, #26
    165e:	d5c3      	bpl.n	15e8 <f_open+0xc4>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3696 (discriminator 1)
    1660:	68e5      	ldr	r5, [r4, #12]
    1662:	2d00      	cmp	r5, #0
    1664:	d0c0      	beq.n	15e8 <f_open+0xc4>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3698
				bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size in byte */
    1666:	f8b8 800a 	ldrh.w	r8, [r8, #10]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3699
				clst = fp->obj.sclust;				/* Follow the cluster chain */
    166a:	68a1      	ldr	r1, [r4, #8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3697
				fp->fptr = fp->obj.objsize;			/* Offset to seek */
    166c:	6165      	str	r5, [r4, #20]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3698
				bcs = (DWORD)fs->csize * SS(fs);	/* Cluster size in byte */
    166e:	ea4f 2848 	mov.w	r8, r8, lsl #9
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3700 (discriminator 3)
				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
    1672:	45a8      	cmp	r8, r5
    1674:	d326      	bcc.n	16c4 <f_open+0x1a0>
    1676:	2000      	movs	r0, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3705
				fp->clust = clst;
    1678:	61a1      	str	r1, [r4, #24]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3706
				if (res == FR_OK && ofs % SS(fs)) {	/* Fill sector buffer if not on the sector boundary */
    167a:	2800      	cmp	r0, #0
    167c:	d1b1      	bne.n	15e2 <f_open+0xbe>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3706 (discriminator 1)
    167e:	f3c5 0308 	ubfx	r3, r5, #0, #9
    1682:	2b00      	cmp	r3, #0
    1684:	d0b0      	beq.n	15e8 <f_open+0xc4>
    1686:	f8dd 8008 	ldr.w	r8, [sp, #8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3707
					if ((sc = clst2sect(fs, clst)) == 0) {
    168a:	4640      	mov	r0, r8
    168c:	f7fe fee9 	bl	462 <clst2sect>
    1690:	b350      	cbz	r0, 16e8 <f_open+0x1c4>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3710
						fp->sect = sc + (DWORD)(ofs / SS(fs));
    1692:	eb00 2255 	add.w	r2, r0, r5, lsr #9
    1696:	61e2      	str	r2, [r4, #28]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3712
						if (disk_read(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) res = FR_DISK_ERR;
    1698:	2301      	movs	r3, #1
    169a:	4639      	mov	r1, r7
    169c:	f898 0001 	ldrb.w	r0, [r8, #1]
    16a0:	f000 f9f3 	bl	1a8a <disk_read>
    16a4:	2800      	cmp	r0, #0
    16a6:	d09f      	beq.n	15e8 <f_open+0xc4>
    16a8:	2001      	movs	r0, #1
    16aa:	e79a      	b.n	15e2 <f_open+0xbe>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3639
			if (res == FR_OK) {					/* Is the object exsiting? */
    16ac:	2800      	cmp	r0, #0
    16ae:	d198      	bne.n	15e2 <f_open+0xbe>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3640
				if (dj.obj.attr & AM_DIR) {		/* File open against a directory */
    16b0:	f89d 3012 	ldrb.w	r3, [sp, #18]
    16b4:	06da      	lsls	r2, r3, #27
    16b6:	d415      	bmi.n	16e4 <f_open+0x1c0>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3643
					if ((mode & FA_WRITE) && (dj.obj.attr & AM_RDO)) { /* Write mode open against R/O file */
    16b8:	07bf      	lsls	r7, r7, #30
    16ba:	d5a6      	bpl.n	160a <f_open+0xe6>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3643 (discriminator 1)
    16bc:	07d8      	lsls	r0, r3, #31
    16be:	d5a4      	bpl.n	160a <f_open+0xe6>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3595
					res = FR_DENIED;
    16c0:	2007      	movs	r0, #7
    16c2:	e78e      	b.n	15e2 <f_open+0xbe>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3701
					clst = get_fat(&fp->obj, clst);
    16c4:	6820      	ldr	r0, [r4, #0]
    16c6:	f7ff f977 	bl	9b8 <get_fat.isra.10>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3702
					if (clst <= 1) res = FR_INT_ERR;
    16ca:	2801      	cmp	r0, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3701
					clst = get_fat(&fp->obj, clst);
    16cc:	4601      	mov	r1, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3702
					if (clst <= 1) res = FR_INT_ERR;
    16ce:	eba5 0508 	sub.w	r5, r5, r8
    16d2:	d903      	bls.n	16dc <f_open+0x1b8>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3700
				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
    16d4:	1c43      	adds	r3, r0, #1
    16d6:	d1cc      	bne.n	1672 <f_open+0x14e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3703
					if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
    16d8:	2001      	movs	r0, #1
    16da:	e7cd      	b.n	1678 <f_open+0x154>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3702
					if (clst <= 1) res = FR_INT_ERR;
    16dc:	2002      	movs	r0, #2
    16de:	e7cb      	b.n	1678 <f_open+0x154>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3597
					if (mode & FA_CREATE_NEW) res = FR_EXIST;	/* Cannot create as new file */
    16e0:	2008      	movs	r0, #8
    16e2:	e77e      	b.n	15e2 <f_open+0xbe>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3641
					res = FR_NO_FILE;
    16e4:	2004      	movs	r0, #4
    16e6:	e77c      	b.n	15e2 <f_open+0xbe>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3708
						res = FR_INT_ERR;
    16e8:	2002      	movs	r0, #2
    16ea:	e77a      	b.n	15e2 <f_open+0xbe>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3561
	if (!fp) return FR_INVALID_OBJECT;
    16ec:	2609      	movs	r6, #9
    16ee:	e77f      	b.n	15f0 <f_open+0xcc>

000016f0 <f_read>:
f_read():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3741
	FIL* fp, 	/* Pointer to the file object */
	void* buff,	/* Pointer to data buffer */
	UINT btr,	/* Number of bytes to read */
	UINT* br	/* Pointer to number of bytes read */
)
{
    16f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    16f4:	469b      	mov	fp, r3
    16f6:	b085      	sub	sp, #20
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3750
	FSIZE_t remain;
	UINT rcnt, cc, csect;
	BYTE *rbuff = (BYTE*)buff;


	*br = 0;	/* Clear read byte counter */
    16f8:	2300      	movs	r3, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3741
{
    16fa:	4689      	mov	r9, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3750
	*br = 0;	/* Clear read byte counter */
    16fc:	f8cb 3000 	str.w	r3, [fp]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3751
	res = validate(&fp->obj, &fs);				/* Check validity of the file object */
    1700:	a903      	add	r1, sp, #12
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3741
{
    1702:	4604      	mov	r4, r0
    1704:	4616      	mov	r6, r2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3751
	res = validate(&fp->obj, &fs);				/* Check validity of the file object */
    1706:	f7ff faa8 	bl	c5a <validate>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3752
	if (res != FR_OK || (res = (FRESULT)fp->err) != FR_OK) LEAVE_FF(fs, res);	/* Check validity */
    170a:	4605      	mov	r5, r0
    170c:	b908      	cbnz	r0, 1712 <f_read+0x22>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3752 (discriminator 2)
    170e:	7c65      	ldrb	r5, [r4, #17]
    1710:	b125      	cbz	r5, 171c <f_read+0x2c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3774 (discriminator 1)
#endif
					{
						clst = get_fat(&fp->obj, fp->clust);	/* Follow cluster chain on the FAT */
					}
				}
				if (clst < 2) ABORT(fs, FR_INT_ERR);
    1712:	4629      	mov	r1, r5
    1714:	9803      	ldr	r0, [sp, #12]
    1716:	f7ff fa95 	bl	c44 <unlock_fs>
    171a:	e008      	b.n	172e <f_read+0x3e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3753 (discriminator 4)
	if (!(fp->flag & FA_READ)) LEAVE_FF(fs, FR_DENIED); /* Check access mode */
    171c:	7c25      	ldrb	r5, [r4, #16]
    171e:	f015 0501 	ands.w	r5, r5, #1
    1722:	d108      	bne.n	1736 <f_read+0x46>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3753 (discriminator 1)
    1724:	2107      	movs	r1, #7
    1726:	9803      	ldr	r0, [sp, #12]
    1728:	f7ff fa8c 	bl	c44 <unlock_fs>
    172c:	2507      	movs	r5, #7
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3825 (discriminator 1)
		mem_cpy(rbuff, fp->buf + fp->fptr % SS(fs), rcnt);	/* Extract partial sector */
#endif
	}

	LEAVE_FF(fs, FR_OK);
}
    172e:	4628      	mov	r0, r5
    1730:	b005      	add	sp, #20
    1732:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3754 (discriminator 2)
	remain = fp->obj.objsize - fp->fptr;
    1736:	68e3      	ldr	r3, [r4, #12]
    1738:	6967      	ldr	r7, [r4, #20]
    173a:	1bdf      	subs	r7, r3, r7
    173c:	42b7      	cmp	r7, r6
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3820 (discriminator 2)
		mem_cpy(rbuff, fp->buf + fp->fptr % SS(fs), rcnt);	/* Extract partial sector */
    173e:	f104 0328 	add.w	r3, r4, #40	; 0x28
    1742:	bf28      	it	cs
    1744:	4637      	movcs	r7, r6
    1746:	9300      	str	r3, [sp, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3757
	for ( ;  btr;								/* Repeat until btr bytes read */
    1748:	b92f      	cbnz	r7, 1756 <f_read+0x66>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3824
	LEAVE_FF(fs, FR_OK);
    174a:	4639      	mov	r1, r7
    174c:	9803      	ldr	r0, [sp, #12]
    174e:	f7ff fa79 	bl	c44 <unlock_fs>
    1752:	463d      	mov	r5, r7
    1754:	e7eb      	b.n	172e <f_read+0x3e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3759
		if (fp->fptr % SS(fs) == 0) {			/* On the sector boundary? */
    1756:	6962      	ldr	r2, [r4, #20]
    1758:	f3c2 0308 	ubfx	r3, r2, #0, #9
    175c:	2b00      	cmp	r3, #0
    175e:	d176      	bne.n	184e <f_read+0x15e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3760
			csect = (UINT)(fp->fptr / SS(fs) & (fs->csize - 1));	/* Sector offset in the cluster */
    1760:	9b03      	ldr	r3, [sp, #12]
    1762:	895b      	ldrh	r3, [r3, #10]
    1764:	3b01      	subs	r3, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3761
			if (csect == 0) {					/* On the cluster boundary? */
    1766:	ea13 2352 	ands.w	r3, r3, r2, lsr #9
    176a:	d113      	bne.n	1794 <f_read+0xa4>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3762
				if (fp->fptr == 0) {			/* On the top of the file? */
    176c:	b92a      	cbnz	r2, 177a <f_read+0x8a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3763
					clst = fp->obj.sclust;		/* Follow cluster chain from the origin */
    176e:	68a0      	ldr	r0, [r4, #8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3774
				if (clst < 2) ABORT(fs, FR_INT_ERR);
    1770:	2801      	cmp	r0, #1
    1772:	d809      	bhi.n	1788 <f_read+0x98>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3774 (discriminator 1)
    1774:	2502      	movs	r5, #2
    1776:	7465      	strb	r5, [r4, #17]
    1778:	e7cb      	b.n	1712 <f_read+0x22>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3771
						clst = get_fat(&fp->obj, fp->clust);	/* Follow cluster chain on the FAT */
    177a:	69a1      	ldr	r1, [r4, #24]
    177c:	6820      	ldr	r0, [r4, #0]
    177e:	9301      	str	r3, [sp, #4]
    1780:	f7ff f91a 	bl	9b8 <get_fat.isra.10>
    1784:	9b01      	ldr	r3, [sp, #4]
    1786:	e7f3      	b.n	1770 <f_read+0x80>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3775 (discriminator 2)
				if (clst == 0xFFFFFFFF) ABORT(fs, FR_DISK_ERR);
    1788:	1c42      	adds	r2, r0, #1
    178a:	d102      	bne.n	1792 <f_read+0xa2>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3809 (discriminator 1)
				if (disk_read(fs->pdrv, fp->buf, sect, 1) != RES_OK)	ABORT(fs, FR_DISK_ERR);	/* Fill sector cache */
    178c:	2101      	movs	r1, #1
    178e:	7461      	strb	r1, [r4, #17]
    1790:	e7c0      	b.n	1714 <f_read+0x24>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3776 (discriminator 2)
				fp->clust = clst;				/* Update current cluster */
    1792:	61a0      	str	r0, [r4, #24]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3778
			sect = clst2sect(fs, fp->clust);	/* Get current sector */
    1794:	f8dd a00c 	ldr.w	sl, [sp, #12]
    1798:	69a1      	ldr	r1, [r4, #24]
    179a:	9301      	str	r3, [sp, #4]
    179c:	4650      	mov	r0, sl
    179e:	f7fe fe60 	bl	462 <clst2sect>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3779
			if (sect == 0) ABORT(fs, FR_INT_ERR);
    17a2:	9b01      	ldr	r3, [sp, #4]
    17a4:	b920      	cbnz	r0, 17b0 <f_read+0xc0>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3779 (discriminator 1)
    17a6:	2502      	movs	r5, #2
    17a8:	7465      	strb	r5, [r4, #17]
    17aa:	4629      	mov	r1, r5
    17ac:	4650      	mov	r0, sl
    17ae:	e7b2      	b.n	1716 <f_read+0x26>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3782 (discriminator 2)
			if (cc > 0) {						/* Read maximum contiguous sectors directly */
    17b0:	f5b7 7f00 	cmp.w	r7, #512	; 0x200
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3780 (discriminator 2)
			sect += csect;
    17b4:	eb03 0800 	add.w	r8, r3, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3782 (discriminator 2)
			if (cc > 0) {						/* Read maximum contiguous sectors directly */
    17b8:	d32b      	bcc.n	1812 <f_read+0x122>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3781
			cc = btr / SS(fs);					/* When remaining bytes >= sector size, */
    17ba:	0a7e      	lsrs	r6, r7, #9
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3783
				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
    17bc:	f8ba 200a 	ldrh.w	r2, [sl, #10]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3786
				if (disk_read(fs->pdrv, rbuff, sect, cc) != RES_OK) ABORT(fs, FR_DISK_ERR);
    17c0:	f89a 0001 	ldrb.w	r0, [sl, #1]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3783
				if (csect + cc > fs->csize) {	/* Clip at cluster boundary */
    17c4:	1999      	adds	r1, r3, r6
    17c6:	4291      	cmp	r1, r2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3784
					cc = fs->csize - csect;
    17c8:	bf88      	it	hi
    17ca:	1ad6      	subhi	r6, r2, r3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3786
				if (disk_read(fs->pdrv, rbuff, sect, cc) != RES_OK) ABORT(fs, FR_DISK_ERR);
    17cc:	4633      	mov	r3, r6
    17ce:	4642      	mov	r2, r8
    17d0:	4649      	mov	r1, r9
    17d2:	f000 f95a 	bl	1a8a <disk_read>
    17d6:	2800      	cmp	r0, #0
    17d8:	d1d8      	bne.n	178c <f_read+0x9c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3793 (discriminator 2)
				if ((fp->flag & FA_DIRTY) && fp->sect - sect < cc) {
    17da:	f994 3010 	ldrsb.w	r3, [r4, #16]
    17de:	2b00      	cmp	r3, #0
    17e0:	da0b      	bge.n	17fa <f_read+0x10a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3793 (discriminator 1)
    17e2:	69e0      	ldr	r0, [r4, #28]
    17e4:	eba0 0008 	sub.w	r0, r0, r8
    17e8:	42b0      	cmp	r0, r6
    17ea:	d206      	bcs.n	17fa <f_read+0x10a>
mem_cpy():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:659
	if (cnt != 0) {
    17ec:	f44f 7200 	mov.w	r2, #512	; 0x200
    17f0:	9900      	ldr	r1, [sp, #0]
    17f2:	eb09 2040 	add.w	r0, r9, r0, lsl #9
    17f6:	f7fe fe63 	bl	4c0 <mem_cpy.part.0>
f_read():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3798
				rcnt = SS(fs) * cc;				/* Number of bytes transferred */
    17fa:	0276      	lsls	r6, r6, #9
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3758
		btr -= rcnt, *br += rcnt, rbuff += rcnt, fp->fptr += rcnt) {
    17fc:	f8db 3000 	ldr.w	r3, [fp]
    1800:	4433      	add	r3, r6
    1802:	f8cb 3000 	str.w	r3, [fp]
    1806:	6963      	ldr	r3, [r4, #20]
    1808:	1bbf      	subs	r7, r7, r6
    180a:	44b1      	add	r9, r6
    180c:	441e      	add	r6, r3
    180e:	6166      	str	r6, [r4, #20]
    1810:	e79a      	b.n	1748 <f_read+0x58>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3802
			if (fp->sect != sect) {			/* Load data sector if not in cache */
    1812:	69e2      	ldr	r2, [r4, #28]
    1814:	4542      	cmp	r2, r8
    1816:	d018      	beq.n	184a <f_read+0x15a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3804
				if (fp->flag & FA_DIRTY) {		/* Write-back dirty sector cache */
    1818:	f994 3010 	ldrsb.w	r3, [r4, #16]
    181c:	2b00      	cmp	r3, #0
    181e:	da0b      	bge.n	1838 <f_read+0x148>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3805
					if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) ABORT(fs, FR_DISK_ERR);
    1820:	2301      	movs	r3, #1
    1822:	9900      	ldr	r1, [sp, #0]
    1824:	f89a 0001 	ldrb.w	r0, [sl, #1]
    1828:	f000 f943 	bl	1ab2 <disk_write>
    182c:	2800      	cmp	r0, #0
    182e:	d1ad      	bne.n	178c <f_read+0x9c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3806 (discriminator 2)
					fp->flag &= (BYTE)~FA_DIRTY;
    1830:	7c23      	ldrb	r3, [r4, #16]
    1832:	f003 037f 	and.w	r3, r3, #127	; 0x7f
    1836:	7423      	strb	r3, [r4, #16]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3809
				if (disk_read(fs->pdrv, fp->buf, sect, 1) != RES_OK)	ABORT(fs, FR_DISK_ERR);	/* Fill sector cache */
    1838:	9803      	ldr	r0, [sp, #12]
    183a:	9900      	ldr	r1, [sp, #0]
    183c:	7840      	ldrb	r0, [r0, #1]
    183e:	2301      	movs	r3, #1
    1840:	4642      	mov	r2, r8
    1842:	f000 f922 	bl	1a8a <disk_read>
    1846:	2800      	cmp	r0, #0
    1848:	d1a0      	bne.n	178c <f_read+0x9c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3812
			fp->sect = sect;
    184a:	f8c4 801c 	str.w	r8, [r4, #28]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3814
		rcnt = SS(fs) - (UINT)fp->fptr % SS(fs);	/* Number of bytes left in the sector */
    184e:	6961      	ldr	r1, [r4, #20]
mem_cpy():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3814
    1850:	9b00      	ldr	r3, [sp, #0]
f_read():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3814
    1852:	f3c1 0108 	ubfx	r1, r1, #0, #9
    1856:	f5c1 7600 	rsb	r6, r1, #512	; 0x200
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3815
		if (rcnt > btr) rcnt = btr;					/* Clip it by btr if needed */
    185a:	42be      	cmp	r6, r7
    185c:	bf28      	it	cs
    185e:	463e      	movcs	r6, r7
mem_cpy():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:659
	if (cnt != 0) {
    1860:	4632      	mov	r2, r6
    1862:	4419      	add	r1, r3
    1864:	4648      	mov	r0, r9
    1866:	f7fe fe2b 	bl	4c0 <mem_cpy.part.0>
    186a:	e7c7      	b.n	17fc <f_read+0x10c>

0000186c <f_sync>:
f_sync():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3959
/*-----------------------------------------------------------------------*/

FRESULT f_sync (
	FIL* fp		/* Pointer to the file object */
)
{
    186c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3966
	FATFS *fs;
	DWORD tm;
	BYTE *dir;


	res = validate(&fp->obj, &fs);	/* Check validity of the file object */
    186e:	a901      	add	r1, sp, #4
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3959
{
    1870:	4604      	mov	r4, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3966
	res = validate(&fp->obj, &fs);	/* Check validity of the file object */
    1872:	f7ff f9f2 	bl	c5a <validate>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3967
	if (res == FR_OK) {
    1876:	4605      	mov	r5, r0
    1878:	2800      	cmp	r0, #0
    187a:	d143      	bne.n	1904 <f_sync+0x98>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3968
		if (fp->flag & FA_MODIFIED) {	/* Is there any change to the file? */
    187c:	7c23      	ldrb	r3, [r4, #16]
    187e:	f013 0540 	ands.w	r5, r3, #64	; 0x40
    1882:	d03f      	beq.n	1904 <f_sync+0x98>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3970
#if !FF_FS_TINY
			if (fp->flag & FA_DIRTY) {	/* Write-back cached data if needed */
    1884:	061b      	lsls	r3, r3, #24
    1886:	d514      	bpl.n	18b2 <f_sync+0x46>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3971
				if (disk_write(fs->pdrv, fp->buf, fp->sect, 1) != RES_OK) LEAVE_FF(fs, FR_DISK_ERR);
    1888:	9801      	ldr	r0, [sp, #4]
    188a:	69e2      	ldr	r2, [r4, #28]
    188c:	7840      	ldrb	r0, [r0, #1]
    188e:	2301      	movs	r3, #1
    1890:	f104 0128 	add.w	r1, r4, #40	; 0x28
    1894:	f000 f90d 	bl	1ab2 <disk_write>
    1898:	b138      	cbz	r0, 18aa <f_sync+0x3e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3971 (discriminator 1)
    189a:	2101      	movs	r1, #1
    189c:	9801      	ldr	r0, [sp, #4]
    189e:	f7ff f9d1 	bl	c44 <unlock_fs>
    18a2:	2501      	movs	r5, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:4026 (discriminator 1)
			}
		}
	}

	LEAVE_FF(fs, res);
}
    18a4:	4628      	mov	r0, r5
    18a6:	b003      	add	sp, #12
    18a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3972 (discriminator 2)
				fp->flag &= (BYTE)~FA_DIRTY;
    18aa:	7c23      	ldrb	r3, [r4, #16]
    18ac:	f003 037f 	and.w	r3, r3, #127	; 0x7f
    18b0:	7423      	strb	r3, [r4, #16]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3976
			tm = GET_FATTIME();				/* Modified time */
    18b2:	f000 f924 	bl	1afe <get_fattime>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:4009
				res = move_window(fs, fp->dir_sect);
    18b6:	6a21      	ldr	r1, [r4, #32]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:3976
			tm = GET_FATTIME();				/* Modified time */
    18b8:	4607      	mov	r7, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:4009
				res = move_window(fs, fp->dir_sect);
    18ba:	9801      	ldr	r0, [sp, #4]
    18bc:	f7fe fe43 	bl	546 <move_window>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:4010
				if (res == FR_OK) {
    18c0:	4605      	mov	r5, r0
    18c2:	b9f8      	cbnz	r0, 1904 <f_sync+0x98>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:4011
					dir = fp->dir_ptr;
    18c4:	6a66      	ldr	r6, [r4, #36]	; 0x24
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:4012
					dir[DIR_Attr] |= AM_ARC;						/* Set archive attribute to indicate that the file has been changed */
    18c6:	7af3      	ldrb	r3, [r6, #11]
    18c8:	f043 0320 	orr.w	r3, r3, #32
    18cc:	72f3      	strb	r3, [r6, #11]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:4013
					st_clust(fp->obj.fs, dir, fp->obj.sclust);		/* Update file allocation information  */
    18ce:	68a2      	ldr	r2, [r4, #8]
    18d0:	6820      	ldr	r0, [r4, #0]
    18d2:	4631      	mov	r1, r6
    18d4:	f7fe fe0b 	bl	4ee <st_clust.isra.4>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:4014
					st_dword(dir + DIR_FileSize, (DWORD)fp->obj.objsize);	/* Update file size */
    18d8:	68e1      	ldr	r1, [r4, #12]
    18da:	f106 001c 	add.w	r0, r6, #28
    18de:	f7fe fdaa 	bl	436 <st_dword>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:4015
					st_dword(dir + DIR_ModTime, tm);				/* Update modified time */
    18e2:	4639      	mov	r1, r7
    18e4:	f106 0016 	add.w	r0, r6, #22
    18e8:	f7fe fda5 	bl	436 <st_dword>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:4017
					fs->wflag = 1;
    18ec:	9801      	ldr	r0, [sp, #4]
st_word():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:620
	*ptr++ = (BYTE)val; val >>= 8;
    18ee:	74b5      	strb	r5, [r6, #18]
f_sync():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:4017
					fs->wflag = 1;
    18f0:	2301      	movs	r3, #1
st_word():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:621
	*ptr++ = (BYTE)val;
    18f2:	74f5      	strb	r5, [r6, #19]
f_sync():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:4017
					fs->wflag = 1;
    18f4:	70c3      	strb	r3, [r0, #3]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:4018
					res = sync_fs(fs);					/* Restore it to the directory */
    18f6:	f7ff fc49 	bl	118c <sync_fs>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:4019
					fp->flag &= (BYTE)~FA_MODIFIED;
    18fa:	7c23      	ldrb	r3, [r4, #16]
    18fc:	f023 0340 	bic.w	r3, r3, #64	; 0x40
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:4018
					res = sync_fs(fs);					/* Restore it to the directory */
    1900:	4605      	mov	r5, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:4019
					fp->flag &= (BYTE)~FA_MODIFIED;
    1902:	7423      	strb	r3, [r4, #16]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:4025
	LEAVE_FF(fs, res);
    1904:	4629      	mov	r1, r5
    1906:	9801      	ldr	r0, [sp, #4]
    1908:	f7ff f99c 	bl	c44 <unlock_fs>
    190c:	e7ca      	b.n	18a4 <f_sync+0x38>

0000190e <f_close>:
f_close():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:4040
/*-----------------------------------------------------------------------*/

FRESULT f_close (
	FIL* fp		/* Pointer to the file object to be closed */
)
{
    190e:	b537      	push	{r0, r1, r2, r4, r5, lr}
    1910:	4605      	mov	r5, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:4045
	FRESULT res;
	FATFS *fs;

#if !FF_FS_READONLY
	res = f_sync(fp);					/* Flush cached data */
    1912:	f7ff ffab 	bl	186c <f_sync>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:4046
	if (res == FR_OK)
    1916:	4604      	mov	r4, r0
    1918:	b950      	cbnz	r0, 1930 <f_close+0x22>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:4049
#endif
	{
		res = validate(&fp->obj, &fs);	/* Lock volume */
    191a:	a901      	add	r1, sp, #4
    191c:	4628      	mov	r0, r5
    191e:	f7ff f99c 	bl	c5a <validate>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:4050
		if (res == FR_OK) {
    1922:	4604      	mov	r4, r0
    1924:	b920      	cbnz	r0, 1930 <f_close+0x22>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:4055
#if FF_FS_LOCK != 0
			res = dec_lock(fp->obj.lockid);		/* Decrement file open counter */
			if (res == FR_OK) fp->obj.fs = 0;	/* Invalidate file object */
#else
			fp->obj.fs = 0;	/* Invalidate file object */
    1926:	6028      	str	r0, [r5, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:4058
#endif
#if FF_FS_REENTRANT
			unlock_fs(fs, FR_OK);		/* Unlock volume */
    1928:	4601      	mov	r1, r0
    192a:	9801      	ldr	r0, [sp, #4]
    192c:	f7ff f98a 	bl	c44 <unlock_fs>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ff.c:4063
#endif
		}
	}
	return res;
}
    1930:	4620      	mov	r0, r4
    1932:	b003      	add	sp, #12
    1934:	bd30      	pop	{r4, r5, pc}

00001936 <ff_cre_syncobj>:
ff_cre_syncobj():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffsystem.c:58

int ff_cre_syncobj (	/* 1:Function succeeded, 0:Could not create the sync object */
	BYTE vol,			/* Corresponding volume (logical drive number) */
	FF_SYNC_t* sobj		/* Pointer to return the created sync object */
)
{
    1936:	b510      	push	{r4, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffsystem.c:74
//	OS_ERR err;
//	*sobj = OSMutexCreate(0, &err);
//	return (int)(err == OS_NO_ERR);

	/* FreeRTOS */
	*sobj = xSemaphoreCreateMutex();
    1938:	2001      	movs	r0, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffsystem.c:58
{
    193a:	460c      	mov	r4, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffsystem.c:74
	*sobj = xSemaphoreCreateMutex();
    193c:	f001 faf7 	bl	2f2e <xQueueCreateMutex>
    1940:	6020      	str	r0, [r4, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffsystem.c:81
	return (int)(*sobj != NULL);

	/* CMSIS-RTOS */
//	*sobj = osMutexCreate(&Mutex[vol]);
//	return (int)(*sobj != NULL);
}
    1942:	3000      	adds	r0, #0
    1944:	bf18      	it	ne
    1946:	2001      	movne	r0, #1
    1948:	bd10      	pop	{r4, pc}

0000194a <ff_del_syncobj>:
ff_del_syncobj():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffsystem.c:95
*/

int ff_del_syncobj (	/* 1:Function succeeded, 0:Could not delete due to an error */
	FF_SYNC_t sobj		/* Sync object tied to the logical drive to be deleted */
)
{
    194a:	b508      	push	{r3, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffsystem.c:108
//	OS_ERR err;
//	OSMutexDel(sobj, OS_DEL_ALWAYS, &err);
//	return (int)(err == OS_NO_ERR);

	/* FreeRTOS */
    vSemaphoreDelete(sobj);
    194c:	f001 fd5e 	bl	340c <vQueueDelete>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffsystem.c:113
	return 1;

	/* CMSIS-RTOS */
//	return (int)(osMutexDelete(sobj) == osOK);
}
    1950:	2001      	movs	r0, #1
    1952:	bd08      	pop	{r3, pc}

00001954 <ff_req_grant>:
ff_req_grant():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffsystem.c:126
*/

int ff_req_grant (	/* 1:Got a grant to access the volume, 0:Could not get a grant */
	FF_SYNC_t sobj	/* Sync object to wait */
)
{
    1954:	b508      	push	{r3, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffsystem.c:139
//	OS_ERR err;
//	OSMutexPend(sobj, FF_FS_TIMEOUT, &err));
//	return (int)(err == OS_NO_ERR);

	/* FreeRTOS */
	return (int)(xSemaphoreTake(sobj, FF_FS_TIMEOUT) == pdTRUE);
    1956:	f640 31b8 	movw	r1, #3000	; 0xbb8
    195a:	f001 fc49 	bl	31f0 <xQueueSemaphoreTake>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffsystem.c:143

	/* CMSIS-RTOS */
//	return (int)(osMutexWait(sobj, FF_FS_TIMEOUT) == osOK);
}
    195e:	1e43      	subs	r3, r0, #1
    1960:	4258      	negs	r0, r3
    1962:	4158      	adcs	r0, r3
    1964:	bd08      	pop	{r3, pc}

00001966 <ff_rel_grant>:
ff_rel_grant():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffsystem.c:166

	/* uC/OS-II */
//	OSMutexPost(sobj);

	/* FreeRTOS */
	xSemaphoreGive(sobj);
    1966:	2300      	movs	r3, #0
    1968:	461a      	mov	r2, r3
    196a:	4619      	mov	r1, r3
    196c:	f001 ba1c 	b.w	2da8 <xQueueGenericSend>

00001970 <ff_uni2oem>:
ff_uni2oem():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15235
{
	WCHAR c = 0;
	const WCHAR *p = CVTBL(uc, FF_CODE_PAGE);


	if (uni < 0x80) {	/* ASCII? */
    1970:	287f      	cmp	r0, #127	; 0x7f
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15230
{
    1972:	b510      	push	{r4, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15235
	if (uni < 0x80) {	/* ASCII? */
    1974:	d801      	bhi.n	197a <ff_uni2oem+0xa>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15236
		c = (WCHAR)uni;
    1976:	b280      	uxth	r0, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15246
			c = (c + 0x80) & 0xFF;
		}
	}

	return c;
}
    1978:	bd10      	pop	{r4, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15239
		if (uni < 0x10000 && cp == FF_CODE_PAGE) {	/* Is it in BMP and valid code page? */
    197a:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
    197e:	d213      	bcs.n	19a8 <ff_uni2oem+0x38>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15239 (discriminator 1)
    1980:	f240 13b5 	movw	r3, #437	; 0x1b5
    1984:	4299      	cmp	r1, r3
    1986:	d10f      	bne.n	19a8 <ff_uni2oem+0x38>
    1988:	4908      	ldr	r1, [pc, #32]	; (19ac <ff_uni2oem+0x3c>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15239
    198a:	2200      	movs	r2, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15240 (discriminator 3)
			for (c = 0; c < 0x80 && uni != p[c]; c++) ;
    198c:	f831 4b02 	ldrh.w	r4, [r1], #2
    1990:	4284      	cmp	r4, r0
    1992:	b293      	uxth	r3, r2
    1994:	d103      	bne.n	199e <ff_uni2oem+0x2e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15241
			c = (c + 0x80) & 0xFF;
    1996:	f103 0080 	add.w	r0, r3, #128	; 0x80
    199a:	b2c0      	uxtb	r0, r0
    199c:	e7ec      	b.n	1978 <ff_uni2oem+0x8>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15240 (discriminator 4)
			for (c = 0; c < 0x80 && uni != p[c]; c++) ;
    199e:	3201      	adds	r2, #1
    19a0:	2a80      	cmp	r2, #128	; 0x80
    19a2:	d1f3      	bne.n	198c <ff_uni2oem+0x1c>
    19a4:	4613      	mov	r3, r2
    19a6:	e7f6      	b.n	1996 <ff_uni2oem+0x26>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15231
	WCHAR c = 0;
    19a8:	2000      	movs	r0, #0
    19aa:	e7e5      	b.n	1978 <ff_uni2oem+0x8>
    19ac:	0000a9fa 	.word	0x0000a9fa

000019b0 <ff_oem2uni>:
ff_oem2uni():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15257
{
	WCHAR c = 0;
	const WCHAR *p = CVTBL(uc, FF_CODE_PAGE);


	if (oem < 0x80) {	/* ASCII? */
    19b0:	287f      	cmp	r0, #127	; 0x7f
    19b2:	d90d      	bls.n	19d0 <ff_oem2uni+0x20>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15261
		c = oem;

	} else {			/* Extended char */
		if (cp == FF_CODE_PAGE) {	/* Is it a valid code page? */
    19b4:	f240 13b5 	movw	r3, #437	; 0x1b5
    19b8:	4299      	cmp	r1, r3
    19ba:	d108      	bne.n	19ce <ff_oem2uni+0x1e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15262
			if (oem < 0x100) c = p[oem - 0x80];
    19bc:	28ff      	cmp	r0, #255	; 0xff
    19be:	d806      	bhi.n	19ce <ff_oem2uni+0x1e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15262 (discriminator 1)
    19c0:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
    19c4:	4b03      	ldr	r3, [pc, #12]	; (19d4 <ff_oem2uni+0x24>)
    19c6:	3880      	subs	r0, #128	; 0x80
    19c8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
    19cc:	4770      	bx	lr
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15253
	WCHAR c = 0;
    19ce:	2000      	movs	r0, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15267
		}
	}

	return c;
}
    19d0:	4770      	bx	lr
    19d2:	bf00      	nop
    19d4:	0000a9fa 	.word	0x0000a9fa

000019d8 <ff_wtoupper>:
ff_wtoupper():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15567

		0x0000	/* EOT */
	};


	if (uni < 0x10000) {	/* Is it in BMP? */
    19d8:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15471
{
    19dc:	b5f0      	push	{r4, r5, r6, r7, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15567
	if (uni < 0x10000) {	/* Is it in BMP? */
    19de:	d221      	bcs.n	1a24 <ff_wtoupper+0x4c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15569
		uc = (WORD)uni;
		p = uc < 0x1000 ? cvt1 : cvt2;
    19e0:	4a1e      	ldr	r2, [pc, #120]	; (1a5c <ff_wtoupper+0x84>)
    19e2:	491f      	ldr	r1, [pc, #124]	; (1a60 <ff_wtoupper+0x88>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15568
		uc = (WORD)uni;
    19e4:	b283      	uxth	r3, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15569
		p = uc < 0x1000 ? cvt1 : cvt2;
    19e6:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
    19ea:	bf28      	it	cs
    19ec:	460a      	movcs	r2, r1
    19ee:	1d14      	adds	r4, r2, #4
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15571
		for (;;) {
			bc = *p++;								/* Get the block base */
    19f0:	f834 2c04 	ldrh.w	r2, [r4, #-4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15572
			if (bc == 0 || uc < bc) break;			/* Not matched? */
    19f4:	4621      	mov	r1, r4
    19f6:	b1a2      	cbz	r2, 1a22 <ff_wtoupper+0x4a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15572 (discriminator 1)
    19f8:	4293      	cmp	r3, r2
    19fa:	d312      	bcc.n	1a22 <ff_wtoupper+0x4a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15573
			nc = *p++; cmd = nc >> 8; nc &= 0xFF;	/* Get processing command and block size */
    19fc:	f834 5c02 	ldrh.w	r5, [r4, #-2]
    1a00:	0a2e      	lsrs	r6, r5, #8
    1a02:	b2ed      	uxtb	r5, r5
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15574
			if (uc < bc + nc) {	/* In the block? */
    1a04:	18af      	adds	r7, r5, r2
    1a06:	42b8      	cmp	r0, r7
    1a08:	da22      	bge.n	1a50 <ff_wtoupper+0x78>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15575
				switch (cmd) {
    1a0a:	2e08      	cmp	r6, #8
    1a0c:	d809      	bhi.n	1a22 <ff_wtoupper+0x4a>
    1a0e:	e8df f006 	tbb	[pc, r6]
    1a12:	0a05      	.short	0x0a05
    1a14:	16141210 	.word	0x16141210
    1a18:	1a18      	.short	0x1a18
    1a1a:	1c          	.byte	0x1c
    1a1b:	00          	.byte	0x00
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15576
				case 0:	uc = p[uc - bc]; break;		/* Table conversion */
    1a1c:	1a80      	subs	r0, r0, r2
    1a1e:	f834 3010 	ldrh.w	r3, [r4, r0, lsl #1]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15590
				}
				break;
			}
			if (cmd == 0) p += nc;	/* Skip table if needed */
		}
		uni = uc;
    1a22:	4618      	mov	r0, r3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15594
	}

	return uni;
}
    1a24:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15577
				case 1:	uc -= (uc - bc) & 1; break;	/* Case pairs */
    1a26:	1a98      	subs	r0, r3, r2
    1a28:	f000 0001 	and.w	r0, r0, #1
    1a2c:	1a1b      	subs	r3, r3, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15584
				case 8:	uc -= 0x1C60; break;		/* Shift -0x1C60 */
    1a2e:	b29b      	uxth	r3, r3
    1a30:	e7f7      	b.n	1a22 <ff_wtoupper+0x4a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15578
				case 2: uc -= 16; break;			/* Shift -16 */
    1a32:	3b10      	subs	r3, #16
    1a34:	e7fb      	b.n	1a2e <ff_wtoupper+0x56>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15579
				case 3:	uc -= 32; break;			/* Shift -32 */
    1a36:	3b20      	subs	r3, #32
    1a38:	e7f9      	b.n	1a2e <ff_wtoupper+0x56>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15580
				case 4:	uc -= 48; break;			/* Shift -48 */
    1a3a:	3b30      	subs	r3, #48	; 0x30
    1a3c:	e7f7      	b.n	1a2e <ff_wtoupper+0x56>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15581
				case 5:	uc -= 26; break;			/* Shift -26 */
    1a3e:	3b1a      	subs	r3, #26
    1a40:	e7f5      	b.n	1a2e <ff_wtoupper+0x56>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15582
				case 6:	uc += 8; break;				/* Shift +8 */
    1a42:	3308      	adds	r3, #8
    1a44:	e7f3      	b.n	1a2e <ff_wtoupper+0x56>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15583
				case 7: uc -= 80; break;			/* Shift -80 */
    1a46:	3b50      	subs	r3, #80	; 0x50
    1a48:	e7f1      	b.n	1a2e <ff_wtoupper+0x56>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15584
				case 8:	uc -= 0x1C60; break;		/* Shift -0x1C60 */
    1a4a:	f5a3 53e3 	sub.w	r3, r3, #7264	; 0x1c60
    1a4e:	e7ee      	b.n	1a2e <ff_wtoupper+0x56>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15588
			if (cmd == 0) p += nc;	/* Skip table if needed */
    1a50:	3404      	adds	r4, #4
    1a52:	2e00      	cmp	r6, #0
    1a54:	d1cc      	bne.n	19f0 <ff_wtoupper+0x18>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/ff13c/source/ffunicode.c:15588 (discriminator 1)
    1a56:	eb01 0245 	add.w	r2, r1, r5, lsl #1
    1a5a:	e7c8      	b.n	19ee <ff_wtoupper+0x16>
    1a5c:	0000a74c 	.word	0x0000a74c
    1a60:	0000a93e 	.word	0x0000a93e

00001a64 <disk_initialize>:
disk_initialize():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:19
 */
typedef enum {
  DRIVE__SD_CARD = 0,
} drive_e;

DSTATUS disk_initialize(BYTE drv) {
    1a64:	b510      	push	{r4, lr}
    1a66:	4604      	mov	r4, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:22
  DSTATUS status = RES_PARERR;

  spi2_mutex__acquire();
    1a68:	f000 fc72 	bl	2350 <spi2_mutex__acquire>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:24
  {
    switch (drv) {
    1a6c:	b934      	cbnz	r4, 1a7c <disk_initialize+0x18>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:26
    case DRIVE__SD_CARD:
      status = sd_card__initialize();
    1a6e:	f000 f90f 	bl	1c90 <sd_card__initialize>
    1a72:	4604      	mov	r4, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:33
    default:
      status = RES_PARERR;
      break;
    }
  }
  spi2_mutex__release();
    1a74:	f000 fc86 	bl	2384 <spi2_mutex__release>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:36

  return status;
}
    1a78:	4620      	mov	r0, r4
    1a7a:	bd10      	pop	{r4, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:29
      status = RES_PARERR;
    1a7c:	2404      	movs	r4, #4
    1a7e:	e7f9      	b.n	1a74 <disk_initialize+0x10>

00001a80 <disk_status>:
disk_status():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:43
DSTATUS disk_status(BYTE drv) {
  DSTATUS status = RES_PARERR;

  // No mutex needed here
  {
    switch (drv) {
    1a80:	b908      	cbnz	r0, 1a86 <disk_status+0x6>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:45
    case DRIVE__SD_CARD:
      status = sd_card__status();
    1a82:	f000 b9a3 	b.w	1dcc <sd_card__status>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:54
      break;
    }
  }

  return status;
}
    1a86:	2004      	movs	r0, #4
    1a88:	4770      	bx	lr

00001a8a <disk_read>:
disk_read():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:56

DRESULT disk_read(BYTE drv, BYTE *buff, DWORD sector, UINT count) {
    1a8a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1a8c:	4607      	mov	r7, r0
    1a8e:	460c      	mov	r4, r1
    1a90:	4615      	mov	r5, r2
    1a92:	461e      	mov	r6, r3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:59
  DSTATUS status = RES_PARERR;

  spi2_mutex__acquire();
    1a94:	f000 fc5c 	bl	2350 <spi2_mutex__acquire>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:61
  {
    switch (drv) {
    1a98:	b94f      	cbnz	r7, 1aae <disk_read+0x24>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:63
    case DRIVE__SD_CARD:
      status = sd_card__read(buff, sector, count);
    1a9a:	4620      	mov	r0, r4
    1a9c:	b2f2      	uxtb	r2, r6
    1a9e:	4629      	mov	r1, r5
    1aa0:	f000 f99c 	bl	1ddc <sd_card__read>
    1aa4:	4604      	mov	r4, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:70
    default:
      status = RES_PARERR;
      break;
    }
  }
  spi2_mutex__release();
    1aa6:	f000 fc6d 	bl	2384 <spi2_mutex__release>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:73

  return status;
}
    1aaa:	4620      	mov	r0, r4
    1aac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:66
      status = RES_PARERR;
    1aae:	2404      	movs	r4, #4
    1ab0:	e7f9      	b.n	1aa6 <disk_read+0x1c>

00001ab2 <disk_write>:
disk_write():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:75

DRESULT disk_write(BYTE drv, const BYTE *buff, DWORD sector, UINT count) {
    1ab2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1ab4:	4607      	mov	r7, r0
    1ab6:	460c      	mov	r4, r1
    1ab8:	4615      	mov	r5, r2
    1aba:	461e      	mov	r6, r3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:78
  DSTATUS status = RES_PARERR;

  spi2_mutex__acquire();
    1abc:	f000 fc48 	bl	2350 <spi2_mutex__acquire>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:80
  {
    switch (drv) {
    1ac0:	b94f      	cbnz	r7, 1ad6 <disk_write+0x24>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:82
    case DRIVE__SD_CARD:
      status = sd_card__write(buff, sector, count);
    1ac2:	4620      	mov	r0, r4
    1ac4:	b2f2      	uxtb	r2, r6
    1ac6:	4629      	mov	r1, r5
    1ac8:	f000 f9ce 	bl	1e68 <sd_card__write>
    1acc:	4604      	mov	r4, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:89
    default:
      status = RES_PARERR;
      break;
    }
  }
  spi2_mutex__release();
    1ace:	f000 fc59 	bl	2384 <spi2_mutex__release>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:92

  return status;
}
    1ad2:	4620      	mov	r0, r4
    1ad4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:85
      status = RES_PARERR;
    1ad6:	2404      	movs	r4, #4
    1ad8:	e7f9      	b.n	1ace <disk_write+0x1c>

00001ada <disk_ioctl>:
disk_ioctl():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:94

DRESULT disk_ioctl(BYTE drv, BYTE ctrl, void *buff) {
    1ada:	b570      	push	{r4, r5, r6, lr}
    1adc:	4606      	mov	r6, r0
    1ade:	460c      	mov	r4, r1
    1ae0:	4615      	mov	r5, r2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:97
  DSTATUS status = RES_PARERR;

  spi2_mutex__acquire();
    1ae2:	f000 fc35 	bl	2350 <spi2_mutex__acquire>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:99
  {
    switch (drv) {
    1ae6:	b946      	cbnz	r6, 1afa <disk_ioctl+0x20>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:101
    case DRIVE__SD_CARD:
      status = sd_card__ioctl(ctrl, buff);
    1ae8:	4620      	mov	r0, r4
    1aea:	4629      	mov	r1, r5
    1aec:	f000 fa10 	bl	1f10 <sd_card__ioctl>
    1af0:	4604      	mov	r4, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:108
    default:
      status = RES_PARERR;
      break;
    }
  }
  spi2_mutex__release();
    1af2:	f000 fc47 	bl	2384 <spi2_mutex__release>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:111

  return status;
}
    1af6:	4620      	mov	r0, r4
    1af8:	bd70      	pop	{r4, r5, r6, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/disk_glue_logic.c:104
      status = RES_PARERR;
    1afa:	2404      	movs	r4, #4
    1afc:	e7f9      	b.n	1af2 <disk_ioctl+0x18>

00001afe <get_fattime>:
get_fattime():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/fatfs_time.c:20
            | ((DWORD) sysTime.hour << 11)
            | ((DWORD) sysTime.min << 5)
            | ((DWORD) sysTime.sec >> 1);
            #endif
            return 0;
    1afe:	2000      	movs	r0, #0
    1b00:	4770      	bx	lr

00001b02 <sd_card__wait_for_ready>:
sd_card__wait_for_ready():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:56
#endif

static volatile DSTATUS g_disk_status = STA_NOINIT; ///< Disk status
static BYTE g_card_type;                            ///< Card type flags

static BYTE sd_card__wait_for_ready(void) {
    1b02:	b538      	push	{r3, r4, r5, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:60
  BYTE res;

  /* Wait for ready in timeout of 500ms */
  const uint32_t timeout = SD_CARD__PLATFORM_GET_MS() + 500;
    1b04:	f000 fc8e 	bl	2424 <sys_time__get_uptime_ms>
    1b08:	f500 75fa 	add.w	r5, r0, #500	; 0x1f4
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:61
  SD_CARD__RECEIVE_BYTE();
    1b0c:	20ff      	movs	r0, #255	; 0xff
    1b0e:	f002 ff0b 	bl	4928 <ssp2__exchange_byte>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:64 (discriminator 2)

  do {
    res = SD_CARD__RECEIVE_BYTE();
    1b12:	20ff      	movs	r0, #255	; 0xff
    1b14:	f002 ff08 	bl	4928 <ssp2__exchange_byte>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:65 (discriminator 2)
  } while ((res != 0xFF) && SD_CARD__PLATFORM_GET_MS() < timeout);
    1b18:	28ff      	cmp	r0, #255	; 0xff
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:64 (discriminator 2)
    res = SD_CARD__RECEIVE_BYTE();
    1b1a:	4604      	mov	r4, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:65 (discriminator 2)
  } while ((res != 0xFF) && SD_CARD__PLATFORM_GET_MS() < timeout);
    1b1c:	d003      	beq.n	1b26 <sd_card__wait_for_ready+0x24>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:65 (discriminator 1)
    1b1e:	f000 fc81 	bl	2424 <sys_time__get_uptime_ms>
    1b22:	4285      	cmp	r5, r0
    1b24:	d8f5      	bhi.n	1b12 <sd_card__wait_for_ready+0x10>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:68

  return res;
}
    1b26:	4620      	mov	r0, r4
    1b28:	bd38      	pop	{r3, r4, r5, pc}
    1b2a:	Address 0x0000000000001b2a is out of bounds.


00001b2c <sd_card__power_off>:
sd_card__power_off():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:74

static void sd_card__power_on(void) {
  // Power on the SD-Card Socket if hardware allows
}

static void sd_card__power_off(void) {
    1b2c:	b508      	push	{r3, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:75
  SD_CARD__SELECT();
    1b2e:	f002 faa1 	bl	4074 <board_io__sd_card_cs>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:76
  sd_card__wait_for_ready();
    1b32:	f7ff ffe6 	bl	1b02 <sd_card__wait_for_ready>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:77
  SD_CARD__DESELECT();
    1b36:	f002 faa5 	bl	4084 <board_io__sd_card_ds>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:80

  // Power off the SD-Card Socket if hardware allows
  g_disk_status |= STA_NOINIT; // Set STA_NOINIT
    1b3a:	4a03      	ldr	r2, [pc, #12]	; (1b48 <sd_card__power_off+0x1c>)
    1b3c:	7813      	ldrb	r3, [r2, #0]
    1b3e:	f043 0301 	orr.w	r3, r3, #1
    1b42:	7013      	strb	r3, [r2, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:81
}
    1b44:	bd08      	pop	{r3, pc}
    1b46:	bf00      	nop
    1b48:	10000008 	.word	0x10000008

00001b4c <sd_card__transmit_datablock>:
sd_card__transmit_datablock():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:129
}

#if SD_CARD__READONLY == 0
static int sd_card__transmit_datablock(const BYTE *buff, /* 512 byte data block to be transmitted */
                                       BYTE token        /* Data/Stop token */
) {
    1b4c:	b538      	push	{r3, r4, r5, lr}
    1b4e:	4605      	mov	r5, r0
    1b50:	460c      	mov	r4, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:132
  BYTE resp;

  if (sd_card__wait_for_ready() != 0xFF) {
    1b52:	f7ff ffd6 	bl	1b02 <sd_card__wait_for_ready>
    1b56:	28ff      	cmp	r0, #255	; 0xff
    1b58:	d121      	bne.n	1b9e <sd_card__transmit_datablock+0x52>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:136
    return 0;
  }

  SD_CARD__TRANSMIT_BYTE(token);
    1b5a:	4620      	mov	r0, r4
    1b5c:	f002 fee4 	bl	4928 <ssp2__exchange_byte>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:138
  /* Xmit data token */
  if (token != 0xFD) { /* Is data token */
    1b60:	2cfd      	cmp	r4, #253	; 0xfd
    1b62:	d01e      	beq.n	1ba2 <sd_card__transmit_datablock+0x56>
    1b64:	1cac      	adds	r4, r5, #2
    1b66:	f205 2502 	addw	r5, r5, #514	; 0x202
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:144 (discriminator 1)
#if OPTIMIZE_SSP_SPI_WRITE
    SD_CARD__WRITE_BLOCK(buff, 512);
#else
    unsigned char wc = 0;
    do { /* Xmit the 512 byte data block to MMC */
      SD_CARD__TRANSMIT_BYTE(*buff++);
    1b6a:	f814 0c02 	ldrb.w	r0, [r4, #-2]
    1b6e:	f002 fedb 	bl	4928 <ssp2__exchange_byte>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:145 (discriminator 1)
      SD_CARD__TRANSMIT_BYTE(*buff++);
    1b72:	3402      	adds	r4, #2
    1b74:	f814 0c03 	ldrb.w	r0, [r4, #-3]
    1b78:	f002 fed6 	bl	4928 <ssp2__exchange_byte>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:146 (discriminator 1)
    } while (--wc);
    1b7c:	42ac      	cmp	r4, r5
    1b7e:	d1f4      	bne.n	1b6a <sd_card__transmit_datablock+0x1e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:149
#endif

    SD_CARD__TRANSMIT_BYTE(0xFF);
    1b80:	20ff      	movs	r0, #255	; 0xff
    1b82:	f002 fed1 	bl	4928 <ssp2__exchange_byte>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:151
    /* CRC (Dummy) */
    SD_CARD__TRANSMIT_BYTE(0xFF);
    1b86:	20ff      	movs	r0, #255	; 0xff
    1b88:	f002 fece 	bl	4928 <ssp2__exchange_byte>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:152
    resp = SD_CARD__RECEIVE_BYTE(); /* Reveive data response */
    1b8c:	20ff      	movs	r0, #255	; 0xff
    1b8e:	f002 fecb 	bl	4928 <ssp2__exchange_byte>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:153
    if ((resp & 0x1F) != 0x05) {      /* If not accepted, return with error */
    1b92:	f000 001f 	and.w	r0, r0, #31
    1b96:	1f43      	subs	r3, r0, #5
    1b98:	4258      	negs	r0, r3
    1b9a:	4158      	adcs	r0, r3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:159
      return 0;
    }
  }

  return 1;
}
    1b9c:	bd38      	pop	{r3, r4, r5, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:133
    return 0;
    1b9e:	2000      	movs	r0, #0
    1ba0:	e7fc      	b.n	1b9c <sd_card__transmit_datablock+0x50>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:158
  return 1;
    1ba2:	2001      	movs	r0, #1
    1ba4:	e7fa      	b.n	1b9c <sd_card__transmit_datablock+0x50>

00001ba6 <sd_card__send_command>:
sd_card__send_command():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:164
#endif /* SD_CARD__READONLY */

static BYTE sd_card__send_command(BYTE cmd, /* Command byte */
                                  DWORD arg /* Argument */
) {
    1ba6:	b537      	push	{r0, r1, r2, r4, r5, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:167
  BYTE n, res;

  if (cmd & 0x80) { /* ACMD<n> is the command sequense of CMD55-CMD<n> */
    1ba8:	0602      	lsls	r2, r0, #24
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:164
) {
    1baa:	4604      	mov	r4, r0
    1bac:	460d      	mov	r5, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:167
  if (cmd & 0x80) { /* ACMD<n> is the command sequense of CMD55-CMD<n> */
    1bae:	d507      	bpl.n	1bc0 <sd_card__send_command+0x1a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:169
    cmd &= 0x7F;
    res = sd_card__send_command(CMD55, 0);
    1bb0:	2100      	movs	r1, #0
    1bb2:	2077      	movs	r0, #119	; 0x77
    1bb4:	f7ff fff7 	bl	1ba6 <sd_card__send_command>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:170
    if (res > 1) {
    1bb8:	2801      	cmp	r0, #1
    1bba:	d831      	bhi.n	1c20 <sd_card__send_command+0x7a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:168
    cmd &= 0x7F;
    1bbc:	f004 047f 	and.w	r4, r4, #127	; 0x7f
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:177
      return res;
    }
  }

  /* Select the card and wait for ready */
  SD_CARD__DESELECT();
    1bc0:	f002 fa60 	bl	4084 <board_io__sd_card_ds>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:178
  SD_CARD__SELECT(); // Wait for card ready
    1bc4:	f002 fa56 	bl	4074 <board_io__sd_card_cs>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:180

  if (sd_card__wait_for_ready() != 0xFF) {
    1bc8:	f7ff ff9b 	bl	1b02 <sd_card__wait_for_ready>
    1bcc:	28ff      	cmp	r0, #255	; 0xff
    1bce:	d12b      	bne.n	1c28 <sd_card__send_command+0x82>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:185
    SD_CARD__DEBUG_PRINTF("ERROR: sd_card__wait_for_ready() did not return 0xFF\n");
    return 0xFF;
  }

  if (cmd == CMD0) {
    1bd0:	2c40      	cmp	r4, #64	; 0x40
    1bd2:	d027      	beq.n	1c24 <sd_card__send_command+0x7e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:191
    n = 0x95; /* Valid CRC for CMD0(0) */
  }
  else if (cmd == CMD8) {
    n = 0x87; /* Valid CRC for CMD8(0x1AA) */
  } else {
    n = 0x01; /* Dummy CRC + Stop */
    1bd4:	2c48      	cmp	r4, #72	; 0x48
    1bd6:	bf0c      	ite	eq
    1bd8:	2387      	moveq	r3, #135	; 0x87
    1bda:	2301      	movne	r3, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:195
  }

  /* Start + Command index + 32-bit arguments */
  const uint8_t bytes_to_transmit[] = {cmd, (BYTE)(arg >> 24), (BYTE)(arg >> 16), (BYTE)(arg >> 8), (BYTE)(arg >> 0), n};
    1bdc:	0e2a      	lsrs	r2, r5, #24
    1bde:	f88d 2001 	strb.w	r2, [sp, #1]
    1be2:	0c2a      	lsrs	r2, r5, #16
    1be4:	f88d 2002 	strb.w	r2, [sp, #2]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:196
  ssp2__dma_write_block(bytes_to_transmit, sizeof(bytes_to_transmit));
    1be8:	2106      	movs	r1, #6
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:195
  const uint8_t bytes_to_transmit[] = {cmd, (BYTE)(arg >> 24), (BYTE)(arg >> 16), (BYTE)(arg >> 8), (BYTE)(arg >> 0), n};
    1bea:	0a2a      	lsrs	r2, r5, #8
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:196
  ssp2__dma_write_block(bytes_to_transmit, sizeof(bytes_to_transmit));
    1bec:	4668      	mov	r0, sp
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:195
  const uint8_t bytes_to_transmit[] = {cmd, (BYTE)(arg >> 24), (BYTE)(arg >> 16), (BYTE)(arg >> 8), (BYTE)(arg >> 0), n};
    1bee:	f88d 4000 	strb.w	r4, [sp]
    1bf2:	f88d 2003 	strb.w	r2, [sp, #3]
    1bf6:	f88d 5004 	strb.w	r5, [sp, #4]
    1bfa:	f88d 3005 	strb.w	r3, [sp, #5]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:196
  ssp2__dma_write_block(bytes_to_transmit, sizeof(bytes_to_transmit));
    1bfe:	f002 fe9d 	bl	493c <ssp2__dma_write_block>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:199

  /* Receive command response */
  if (cmd == CMD12) {
    1c02:	2c4c      	cmp	r4, #76	; 0x4c
    1c04:	d102      	bne.n	1c0c <sd_card__send_command+0x66>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:200
    SD_CARD__RECEIVE_BYTE(); /* Skip a stuff byte when stop reading */
    1c06:	20ff      	movs	r0, #255	; 0xff
    1c08:	f002 fe8e 	bl	4928 <ssp2__exchange_byte>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:191
    n = 0x01; /* Dummy CRC + Stop */
    1c0c:	240a      	movs	r4, #10
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:205
  }
  
  n = 10; /* Wait for a valid response in timeout of 10 attempts */
  do {
    res = SD_CARD__RECEIVE_BYTE();
    1c0e:	20ff      	movs	r0, #255	; 0xff
    1c10:	f002 fe8a 	bl	4928 <ssp2__exchange_byte>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:206
  } while ((res & 0x80) && --n);
    1c14:	0603      	lsls	r3, r0, #24
    1c16:	d503      	bpl.n	1c20 <sd_card__send_command+0x7a>
    1c18:	3c01      	subs	r4, #1
    1c1a:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
    1c1e:	d1f6      	bne.n	1c0e <sd_card__send_command+0x68>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:213
  if (n == 0) {
    SD_CARD__DEBUG_PRINTF("Timeout during card read\n");
  }

  return res; /* Return with the response value */
}
    1c20:	b003      	add	sp, #12
    1c22:	bd30      	pop	{r4, r5, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:186
    n = 0x95; /* Valid CRC for CMD0(0) */
    1c24:	2395      	movs	r3, #149	; 0x95
    1c26:	e7d9      	b.n	1bdc <sd_card__send_command+0x36>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:182
    return 0xFF;
    1c28:	20ff      	movs	r0, #255	; 0xff
    1c2a:	e7f9      	b.n	1c20 <sd_card__send_command+0x7a>

00001c2c <sd_card__read_datablock>:
sd_card__read_datablock():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:85
) {
    1c2c:	b570      	push	{r4, r5, r6, lr}
    1c2e:	4605      	mov	r5, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:87
  const uint32_t time_now = SD_CARD__PLATFORM_GET_MS();
    1c30:	f000 fbf8 	bl	2424 <sys_time__get_uptime_ms>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:88
  const uint32_t timeout = time_now + 100;
    1c34:	f100 0664 	add.w	r6, r0, #100	; 0x64
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:92
    token = SD_CARD__RECEIVE_BYTE();
    1c38:	20ff      	movs	r0, #255	; 0xff
    1c3a:	f002 fe75 	bl	4928 <ssp2__exchange_byte>
    1c3e:	4604      	mov	r4, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:95
    if (SD_CARD__PLATFORM_GET_MS() > timeout) {
    1c40:	f000 fbf0 	bl	2424 <sys_time__get_uptime_ms>
    1c44:	4286      	cmp	r6, r0
    1c46:	d301      	bcc.n	1c4c <sd_card__read_datablock+0x20>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:98
  } while (token == 0xFF);
    1c48:	2cff      	cmp	r4, #255	; 0xff
    1c4a:	d0f5      	beq.n	1c38 <sd_card__read_datablock+0xc>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:100
  if (token != 0xFE) {
    1c4c:	2cfe      	cmp	r4, #254	; 0xfe
    1c4e:	d10c      	bne.n	1c6a <sd_card__read_datablock+0x3e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:109
    SD_CARD__READ_BLOCK(buff, 512);
    1c50:	f44f 7100 	mov.w	r1, #512	; 0x200
    1c54:	4628      	mov	r0, r5
    1c56:	f002 fe74 	bl	4942 <ssp2__dma_read_block>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:120
  SD_CARD__RECEIVE_BYTE(); /* Discard CRC */
    1c5a:	20ff      	movs	r0, #255	; 0xff
    1c5c:	f002 fe64 	bl	4928 <ssp2__exchange_byte>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:121
  SD_CARD__RECEIVE_BYTE();
    1c60:	20ff      	movs	r0, #255	; 0xff
    1c62:	f002 fe61 	bl	4928 <ssp2__exchange_byte>
    1c66:	2001      	movs	r0, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:124
}
    1c68:	bd70      	pop	{r4, r5, r6, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:102
    return 0; /* If not valid data token, return with error */
    1c6a:	2000      	movs	r0, #0
    1c6c:	e7fc      	b.n	1c68 <sd_card__read_datablock+0x3c>
    1c6e:	Address 0x0000000000001c6e is out of bounds.


00001c70 <sd_card__update_status>:
sd_card__update_status():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:527

  return res;
}
#endif /* SD_CARD__USE_IOCTL != 0 */

void sd_card__update_status(void) {
    1c70:	b538      	push	{r3, r4, r5, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:528
  BYTE s = g_disk_status;
    1c72:	4d06      	ldr	r5, [pc, #24]	; (1c8c <sd_card__update_status+0x1c>)
    1c74:	782c      	ldrb	r4, [r5, #0]
    1c76:	b2e4      	uxtb	r4, r4
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:530

  if (SD_CARD__IS_PRESENT()) {
    1c78:	f002 fa0c 	bl	4094 <board_io__sd_card_is_present>
    1c7c:	b118      	cbz	r0, 1c86 <sd_card__update_status+0x16>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:531
    s &= ~STA_NODISK;
    1c7e:	f004 04fd 	and.w	r4, r4, #253	; 0xfd
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:536
  } else {
    s |= (STA_NODISK | STA_NOINIT);
  }

  g_disk_status = s;
    1c82:	702c      	strb	r4, [r5, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:537
}
    1c84:	bd38      	pop	{r3, r4, r5, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:533
    s |= (STA_NODISK | STA_NOINIT);
    1c86:	f044 0403 	orr.w	r4, r4, #3
    1c8a:	e7fa      	b.n	1c82 <sd_card__update_status+0x12>
    1c8c:	10000008 	.word	0x10000008

00001c90 <sd_card__initialize>:
sd_card__initialize():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:215
DSTATUS sd_card__initialize() {
    1c90:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:218
  sd_card__update_status();
    1c94:	f7ff ffec 	bl	1c70 <sd_card__update_status>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:220
  if (g_disk_status & STA_NODISK) {
    1c98:	4b4a      	ldr	r3, [pc, #296]	; (1dc4 <sd_card__initialize+0x134>)
    1c9a:	781a      	ldrb	r2, [r3, #0]
    1c9c:	f012 0f02 	tst.w	r2, #2
    1ca0:	461e      	mov	r6, r3
    1ca2:	d004      	beq.n	1cae <sd_card__initialize+0x1e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:221
    return g_disk_status; /* No card in the socket */
    1ca4:	7818      	ldrb	r0, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:292
  return g_disk_status;
    1ca6:	b2c0      	uxtb	r0, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:293
}
    1ca8:	b002      	add	sp, #8
    1caa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:225
  SD_CARD__SET_SLOW_SPEED();
    1cae:	20c8      	movs	r0, #200	; 0xc8
    1cb0:	f002 fe02 	bl	48b8 <ssp2__set_max_clock>
    1cb4:	250a      	movs	r5, #10
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:227 (discriminator 3)
    SD_CARD__RECEIVE_BYTE(); /* 80 dummy clocks */
    1cb6:	20ff      	movs	r0, #255	; 0xff
    1cb8:	3d01      	subs	r5, #1
    1cba:	f002 fe35 	bl	4928 <ssp2__exchange_byte>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:226 (discriminator 3)
  for (n = 10; n; n--) {
    1cbe:	f015 05ff 	ands.w	r5, r5, #255	; 0xff
    1cc2:	d1f8      	bne.n	1cb6 <sd_card__initialize+0x26>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:230
  SD_CARD__SELECT();
    1cc4:	f002 f9d6 	bl	4074 <board_io__sd_card_cs>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:233
  if (sd_card__send_command(CMD0, 0) == 1) { /* Enter Idle state */
    1cc8:	4629      	mov	r1, r5
    1cca:	2040      	movs	r0, #64	; 0x40
    1ccc:	f7ff ff6b 	bl	1ba6 <sd_card__send_command>
    1cd0:	2801      	cmp	r0, #1
    1cd2:	4604      	mov	r4, r0
    1cd4:	d171      	bne.n	1dba <sd_card__initialize+0x12a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:234
    const uint32_t timeout = SD_CARD__PLATFORM_GET_MS() + 1000;
    1cd6:	f000 fba5 	bl	2424 <sys_time__get_uptime_ms>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:235
    if (sd_card__send_command(CMD8, 0x1AA) == 1) { /* SDHC */\
    1cda:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:234
    const uint32_t timeout = SD_CARD__PLATFORM_GET_MS() + 1000;
    1cde:	f500 777a 	add.w	r7, r0, #1000	; 0x3e8
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:235
    if (sd_card__send_command(CMD8, 0x1AA) == 1) { /* SDHC */\
    1ce2:	2048      	movs	r0, #72	; 0x48
    1ce4:	f7ff ff5f 	bl	1ba6 <sd_card__send_command>
    1ce8:	2801      	cmp	r0, #1
    1cea:	d148      	bne.n	1d7e <sd_card__initialize+0xee>
    1cec:	ad01      	add	r5, sp, #4
    1cee:	46a8      	mov	r8, r5
    1cf0:	2404      	movs	r4, #4
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:239 (discriminator 3)
        ocr[n] = SD_CARD__RECEIVE_BYTE();     /* Get trailing return value of R7 resp */
    1cf2:	20ff      	movs	r0, #255	; 0xff
    1cf4:	f002 fe18 	bl	4928 <ssp2__exchange_byte>
    1cf8:	3c01      	subs	r4, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:238 (discriminator 3)
      for (n = 0; n < 4; n++)
    1cfa:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:239 (discriminator 3)
        ocr[n] = SD_CARD__RECEIVE_BYTE();     /* Get trailing return value of R7 resp */
    1cfe:	f808 0b01 	strb.w	r0, [r8], #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:238 (discriminator 3)
      for (n = 0; n < 4; n++)
    1d02:	d1f6      	bne.n	1cf2 <sd_card__initialize+0x62>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:240
      if (ocr[2] == 0x01 && ocr[3] == 0xAA) { /* The card can work at vdd range of 2.7-3.6V */
    1d04:	f89d 3006 	ldrb.w	r3, [sp, #6]
    1d08:	2b01      	cmp	r3, #1
    1d0a:	d156      	bne.n	1dba <sd_card__initialize+0x12a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:240 (discriminator 1)
    1d0c:	f89d 3007 	ldrb.w	r3, [sp, #7]
    1d10:	2baa      	cmp	r3, #170	; 0xaa
    1d12:	d152      	bne.n	1dba <sd_card__initialize+0x12a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:243 (discriminator 2)
        while (SD_CARD__PLATFORM_GET_MS() < timeout && sd_card__send_command(ACMD41, 1UL << 30)) {
    1d14:	f000 fb86 	bl	2424 <sys_time__get_uptime_ms>
    1d18:	4287      	cmp	r7, r0
    1d1a:	d906      	bls.n	1d2a <sd_card__initialize+0x9a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:243 (discriminator 1)
    1d1c:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    1d20:	20e9      	movs	r0, #233	; 0xe9
    1d22:	f7ff ff40 	bl	1ba6 <sd_card__send_command>
    1d26:	2800      	cmp	r0, #0
    1d28:	d1f4      	bne.n	1d14 <sd_card__initialize+0x84>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:247
        if (SD_CARD__PLATFORM_GET_MS() < timeout &&
    1d2a:	f000 fb7b 	bl	2424 <sys_time__get_uptime_ms>
    1d2e:	4287      	cmp	r7, r0
    1d30:	d943      	bls.n	1dba <sd_card__initialize+0x12a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:248 (discriminator 1)
            sd_card__send_command(CMD58, 0) == 0) { /* Check CCS bit in the OCR */
    1d32:	2100      	movs	r1, #0
    1d34:	207a      	movs	r0, #122	; 0x7a
    1d36:	f7ff ff36 	bl	1ba6 <sd_card__send_command>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:247 (discriminator 1)
        if (SD_CARD__PLATFORM_GET_MS() < timeout &&
    1d3a:	2800      	cmp	r0, #0
    1d3c:	d13d      	bne.n	1dba <sd_card__initialize+0x12a>
    1d3e:	2404      	movs	r4, #4
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:250 (discriminator 3)
            ocr[n] = SD_CARD__RECEIVE_BYTE();
    1d40:	20ff      	movs	r0, #255	; 0xff
    1d42:	f002 fdf1 	bl	4928 <ssp2__exchange_byte>
    1d46:	3c01      	subs	r4, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:249 (discriminator 3)
          for (n = 0; n < 4; n++) {
    1d48:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:250 (discriminator 3)
            ocr[n] = SD_CARD__RECEIVE_BYTE();
    1d4c:	f805 0b01 	strb.w	r0, [r5], #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:249 (discriminator 3)
          for (n = 0; n < 4; n++) {
    1d50:	d1f6      	bne.n	1d40 <sd_card__initialize+0xb0>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:252
          ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;
    1d52:	f89d 3004 	ldrb.w	r3, [sp, #4]
    1d56:	f013 0f40 	tst.w	r3, #64	; 0x40
    1d5a:	bf14      	ite	ne
    1d5c:	240c      	movne	r4, #12
    1d5e:	2404      	moveq	r4, #4
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:282
  g_card_type = ty;
    1d60:	4b19      	ldr	r3, [pc, #100]	; (1dc8 <sd_card__initialize+0x138>)
    1d62:	701c      	strb	r4, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:283
  SD_CARD__DESELECT();
    1d64:	f002 f98e 	bl	4084 <board_io__sd_card_ds>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:285
  if (ty) {                       /* Initialization succeded */
    1d68:	b34c      	cbz	r4, 1dbe <sd_card__initialize+0x12e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:286
    g_disk_status &= ~STA_NOINIT; /* Clear STA_NOINIT */
    1d6a:	7833      	ldrb	r3, [r6, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:287
    SD_CARD__SET_FAST_SPEED();
    1d6c:	f645 50c0 	movw	r0, #24000	; 0x5dc0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:286
    g_disk_status &= ~STA_NOINIT; /* Clear STA_NOINIT */
    1d70:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
    1d74:	7033      	strb	r3, [r6, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:287
    SD_CARD__SET_FAST_SPEED();
    1d76:	f002 fd9f 	bl	48b8 <ssp2__set_max_clock>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:292
  return g_disk_status;
    1d7a:	7830      	ldrb	r0, [r6, #0]
    1d7c:	e793      	b.n	1ca6 <sd_card__initialize+0x16>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:260
      if (sd_card__send_command(ACMD41, 0) <= 1) {
    1d7e:	4629      	mov	r1, r5
    1d80:	20e9      	movs	r0, #233	; 0xe9
    1d82:	f7ff ff10 	bl	1ba6 <sd_card__send_command>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:265
        cmd = CMD1; /* MMC */
    1d86:	2802      	cmp	r0, #2
    1d88:	bf36      	itet	cc
    1d8a:	25e9      	movcc	r5, #233	; 0xe9
    1d8c:	2541      	movcs	r5, #65	; 0x41
    1d8e:	2402      	movcc	r4, #2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:267 (discriminator 2)
      while (SD_CARD__PLATFORM_GET_MS() < timeout && sd_card__send_command(cmd, 0)) {
    1d90:	f000 fb48 	bl	2424 <sys_time__get_uptime_ms>
    1d94:	4287      	cmp	r7, r0
    1d96:	d905      	bls.n	1da4 <sd_card__initialize+0x114>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:267 (discriminator 1)
    1d98:	2100      	movs	r1, #0
    1d9a:	4628      	mov	r0, r5
    1d9c:	f7ff ff03 	bl	1ba6 <sd_card__send_command>
    1da0:	2800      	cmp	r0, #0
    1da2:	d1f5      	bne.n	1d90 <sd_card__initialize+0x100>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:271
      if ((SD_CARD__PLATFORM_GET_MS() < timeout) ||
    1da4:	f000 fb3e 	bl	2424 <sys_time__get_uptime_ms>
    1da8:	4287      	cmp	r7, r0
    1daa:	d806      	bhi.n	1dba <sd_card__initialize+0x12a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:272 (discriminator 1)
          sd_card__send_command(CMD16, 512) != 0) /* Set R/W block length to 512 */
    1dac:	f44f 7100 	mov.w	r1, #512	; 0x200
    1db0:	2050      	movs	r0, #80	; 0x50
    1db2:	f7ff fef8 	bl	1ba6 <sd_card__send_command>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:271 (discriminator 1)
      if ((SD_CARD__PLATFORM_GET_MS() < timeout) ||
    1db6:	2800      	cmp	r0, #0
    1db8:	d0d2      	beq.n	1d60 <sd_card__initialize+0xd0>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:275
        ty = 0;
    1dba:	2400      	movs	r4, #0
    1dbc:	e7d0      	b.n	1d60 <sd_card__initialize+0xd0>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:289
    sd_card__power_off();
    1dbe:	f7ff feb5 	bl	1b2c <sd_card__power_off>
    1dc2:	e7da      	b.n	1d7a <sd_card__initialize+0xea>
    1dc4:	10000008 	.word	0x10000008
    1dc8:	10000336 	.word	0x10000336

00001dcc <sd_card__status>:
sd_card__status():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:295
DSTATUS sd_card__status() {
    1dcc:	b508      	push	{r3, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:296
  sd_card__update_status();
    1dce:	f7ff ff4f 	bl	1c70 <sd_card__update_status>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:297
  return g_disk_status;
    1dd2:	4b01      	ldr	r3, [pc, #4]	; (1dd8 <sd_card__status+0xc>)
    1dd4:	7818      	ldrb	r0, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:298
}
    1dd6:	bd08      	pop	{r3, pc}
    1dd8:	10000008 	.word	0x10000008

00001ddc <sd_card__read>:
sd_card__read():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:303
) {
    1ddc:	b570      	push	{r4, r5, r6, lr}
    1dde:	4614      	mov	r4, r2
    1de0:	4605      	mov	r5, r0
    1de2:	460e      	mov	r6, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:304
  sd_card__update_status();
    1de4:	f7ff ff44 	bl	1c70 <sd_card__update_status>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:306
  if (!count) {
    1de8:	2c00      	cmp	r4, #0
    1dea:	d035      	beq.n	1e58 <sd_card__read+0x7c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:310
  if (g_disk_status & STA_NOINIT) {
    1dec:	4b1c      	ldr	r3, [pc, #112]	; (1e60 <sd_card__read+0x84>)
    1dee:	781b      	ldrb	r3, [r3, #0]
    1df0:	07da      	lsls	r2, r3, #31
    1df2:	d433      	bmi.n	1e5c <sd_card__read+0x80>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:315
  SD_CARD__SELECT();
    1df4:	f002 f93e 	bl	4074 <board_io__sd_card_cs>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:316
  if (!(g_card_type & CT_BLOCK)) {
    1df8:	4b1a      	ldr	r3, [pc, #104]	; (1e64 <sd_card__read+0x88>)
    1dfa:	781b      	ldrb	r3, [r3, #0]
    1dfc:	071b      	lsls	r3, r3, #28
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:317
    sector *= 512; /* Convert to byte address if needed */
    1dfe:	bf58      	it	pl
    1e00:	0276      	lslpl	r6, r6, #9
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:320
  if (count == 1) {                                 /* Single block read */
    1e02:	2c01      	cmp	r4, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:321
    if ((sd_card__send_command(CMD17, sector) == 0)) {
    1e04:	4631      	mov	r1, r6
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:320
  if (count == 1) {                                 /* Single block read */
    1e06:	d111      	bne.n	1e2c <sd_card__read+0x50>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:321
    if ((sd_card__send_command(CMD17, sector) == 0)) {
    1e08:	2051      	movs	r0, #81	; 0x51
    1e0a:	f7ff fecc 	bl	1ba6 <sd_card__send_command>
    1e0e:	b938      	cbnz	r0, 1e20 <sd_card__read+0x44>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:322
      if (sd_card__read_datablock(buff, 512)) {
    1e10:	f44f 7100 	mov.w	r1, #512	; 0x200
    1e14:	4628      	mov	r0, r5
    1e16:	f7ff ff09 	bl	1c2c <sd_card__read_datablock>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:323
        count = 0;
    1e1a:	fab0 f480 	clz	r4, r0
    1e1e:	0964      	lsrs	r4, r4, #5
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:340
  SD_CARD__DESELECT();
    1e20:	f002 f930 	bl	4084 <board_io__sd_card_ds>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:342
  return count ? RES_ERROR : RES_OK;
    1e24:	1c20      	adds	r0, r4, #0
    1e26:	bf18      	it	ne
    1e28:	2001      	movne	r0, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:343
}
    1e2a:	bd70      	pop	{r4, r5, r6, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:331
    if (sd_card__send_command(CMD18, sector) == 0) { /* READ_MULTIPLE_BLOCK */
    1e2c:	2052      	movs	r0, #82	; 0x52
    1e2e:	f7ff feba 	bl	1ba6 <sd_card__send_command>
    1e32:	2800      	cmp	r0, #0
    1e34:	d1f4      	bne.n	1e20 <sd_card__read+0x44>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:333
        if (!sd_card__read_datablock(buff, 512))
    1e36:	f44f 7100 	mov.w	r1, #512	; 0x200
    1e3a:	4628      	mov	r0, r5
    1e3c:	f7ff fef6 	bl	1c2c <sd_card__read_datablock>
    1e40:	b128      	cbz	r0, 1e4e <sd_card__read+0x72>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:336
      } while (--count);
    1e42:	3c01      	subs	r4, #1
    1e44:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:335
        buff += 512;
    1e48:	f505 7500 	add.w	r5, r5, #512	; 0x200
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:336
      } while (--count);
    1e4c:	d1f3      	bne.n	1e36 <sd_card__read+0x5a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:337
      sd_card__send_command(CMD12, 0); /* STOP_TRANSMISSION */
    1e4e:	2100      	movs	r1, #0
    1e50:	204c      	movs	r0, #76	; 0x4c
    1e52:	f7ff fea8 	bl	1ba6 <sd_card__send_command>
    1e56:	e7e3      	b.n	1e20 <sd_card__read+0x44>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:308
    return RES_PARERR;
    1e58:	2004      	movs	r0, #4
    1e5a:	e7e6      	b.n	1e2a <sd_card__read+0x4e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:312
    return RES_NOTRDY;
    1e5c:	2003      	movs	r0, #3
    1e5e:	e7e4      	b.n	1e2a <sd_card__read+0x4e>
    1e60:	10000008 	.word	0x10000008
    1e64:	10000336 	.word	0x10000336

00001e68 <sd_card__write>:
sd_card__write():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:349
) {
    1e68:	b570      	push	{r4, r5, r6, lr}
    1e6a:	4614      	mov	r4, r2
    1e6c:	4605      	mov	r5, r0
    1e6e:	460e      	mov	r6, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:350
  sd_card__update_status();
    1e70:	f7ff fefe 	bl	1c70 <sd_card__update_status>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:352
  if (!count) {
    1e74:	2c00      	cmp	r4, #0
    1e76:	d041      	beq.n	1efc <sd_card__write+0x94>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:355
  if (g_disk_status & STA_NOINIT) {
    1e78:	4b23      	ldr	r3, [pc, #140]	; (1f08 <sd_card__write+0xa0>)
    1e7a:	781a      	ldrb	r2, [r3, #0]
    1e7c:	07d0      	lsls	r0, r2, #31
    1e7e:	d43f      	bmi.n	1f00 <sd_card__write+0x98>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:358
  if (g_disk_status & STA_PROTECT) {
    1e80:	781b      	ldrb	r3, [r3, #0]
    1e82:	0759      	lsls	r1, r3, #29
    1e84:	d43e      	bmi.n	1f04 <sd_card__write+0x9c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:362
  SD_CARD__SELECT();
    1e86:	f002 f8f5 	bl	4074 <board_io__sd_card_cs>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:363
  if (!(g_card_type & CT_BLOCK)) {
    1e8a:	4b20      	ldr	r3, [pc, #128]	; (1f0c <sd_card__write+0xa4>)
    1e8c:	781b      	ldrb	r3, [r3, #0]
    1e8e:	071a      	lsls	r2, r3, #28
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:364
    sector *= 512; /* Convert to byte address if needed */
    1e90:	bf58      	it	pl
    1e92:	0276      	lslpl	r6, r6, #9
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:367
  if (count == 1) { /* Single block write */
    1e94:	2c01      	cmp	r4, #1
    1e96:	d111      	bne.n	1ebc <sd_card__write+0x54>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:368
    if ((sd_card__send_command(CMD24, sector) == 0) && sd_card__transmit_datablock(buff, 0xFE)) {
    1e98:	4631      	mov	r1, r6
    1e9a:	2058      	movs	r0, #88	; 0x58
    1e9c:	f7ff fe83 	bl	1ba6 <sd_card__send_command>
    1ea0:	bb50      	cbnz	r0, 1ef8 <sd_card__write+0x90>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:368 (discriminator 1)
    1ea2:	21fe      	movs	r1, #254	; 0xfe
    1ea4:	4628      	mov	r0, r5
    1ea6:	f7ff fe51 	bl	1b4c <sd_card__transmit_datablock>
    1eaa:	fab0 f480 	clz	r4, r0
    1eae:	0964      	lsrs	r4, r4, #5
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:388
  SD_CARD__DESELECT();
    1eb0:	f002 f8e8 	bl	4084 <board_io__sd_card_ds>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:390
  return count ? RES_ERROR : RES_OK;
    1eb4:	1c20      	adds	r0, r4, #0
    1eb6:	bf18      	it	ne
    1eb8:	2001      	movne	r0, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:391
}
    1eba:	bd70      	pop	{r4, r5, r6, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:372
    if (g_card_type & CT_SDC) {
    1ebc:	f013 0f06 	tst.w	r3, #6
    1ec0:	d003      	beq.n	1eca <sd_card__write+0x62>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:373
      sd_card__send_command(ACMD23, count);
    1ec2:	4621      	mov	r1, r4
    1ec4:	20d7      	movs	r0, #215	; 0xd7
    1ec6:	f7ff fe6e 	bl	1ba6 <sd_card__send_command>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:376
    if (sd_card__send_command(CMD25, sector) == 0) { /* WRITE_MULTIPLE_BLOCK */
    1eca:	4631      	mov	r1, r6
    1ecc:	2059      	movs	r0, #89	; 0x59
    1ece:	f7ff fe6a 	bl	1ba6 <sd_card__send_command>
    1ed2:	2800      	cmp	r0, #0
    1ed4:	d1ec      	bne.n	1eb0 <sd_card__write+0x48>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:378
        if (!sd_card__transmit_datablock(buff, 0xFC)) {
    1ed6:	21fc      	movs	r1, #252	; 0xfc
    1ed8:	4628      	mov	r0, r5
    1eda:	f7ff fe37 	bl	1b4c <sd_card__transmit_datablock>
    1ede:	b128      	cbz	r0, 1eec <sd_card__write+0x84>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:382
      } while (--count);
    1ee0:	3c01      	subs	r4, #1
    1ee2:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:381
        buff += 512;
    1ee6:	f505 7500 	add.w	r5, r5, #512	; 0x200
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:382
      } while (--count);
    1eea:	d1f4      	bne.n	1ed6 <sd_card__write+0x6e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:383
      if (!sd_card__transmit_datablock(0, 0xFD)) {/* STOP_TRAN token */
    1eec:	21fd      	movs	r1, #253	; 0xfd
    1eee:	2000      	movs	r0, #0
    1ef0:	f7ff fe2c 	bl	1b4c <sd_card__transmit_datablock>
    1ef4:	2800      	cmp	r0, #0
    1ef6:	d1db      	bne.n	1eb0 <sd_card__write+0x48>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:384
        count = 1;
    1ef8:	2401      	movs	r4, #1
    1efa:	e7d9      	b.n	1eb0 <sd_card__write+0x48>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:353
    return RES_PARERR;
    1efc:	2004      	movs	r0, #4
    1efe:	e7dc      	b.n	1eba <sd_card__write+0x52>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:356
    return RES_NOTRDY;
    1f00:	2003      	movs	r0, #3
    1f02:	e7da      	b.n	1eba <sd_card__write+0x52>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:359
    return RES_WRPRT;
    1f04:	2002      	movs	r0, #2
    1f06:	e7d8      	b.n	1eba <sd_card__write+0x52>
    1f08:	10000008 	.word	0x10000008
    1f0c:	10000336 	.word	0x10000336

00001f10 <sd_card__ioctl>:
sd_card__ioctl():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:397
) {
    1f10:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    1f12:	4606      	mov	r6, r0
    1f14:	460d      	mov	r5, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:401
  sd_card__update_status();
    1f16:	f7ff feab 	bl	1c70 <sd_card__update_status>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:404
  if (ctrl == CTRL_POWER) {
    1f1a:	2e05      	cmp	r6, #5
    1f1c:	d115      	bne.n	1f4a <sd_card__ioctl+0x3a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:405
    switch (*ptr) {
    1f1e:	782c      	ldrb	r4, [r5, #0]
    1f20:	2c01      	cmp	r4, #1
    1f22:	d010      	beq.n	1f46 <sd_card__ioctl+0x36>
    1f24:	b12c      	cbz	r4, 1f32 <sd_card__ioctl+0x22>
    1f26:	2c02      	cmp	r4, #2
    1f28:	d00a      	beq.n	1f40 <sd_card__ioctl+0x30>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:424
      res = RES_PARERR;
    1f2a:	2404      	movs	r4, #4
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:524
}
    1f2c:	4620      	mov	r0, r4
    1f2e:	b004      	add	sp, #16
    1f30:	bd70      	pop	{r4, r5, r6, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:407
      if (SD_CARD__IS_PRESENT()) {
    1f32:	f002 f8af 	bl	4094 <board_io__sd_card_is_present>
    1f36:	2800      	cmp	r0, #0
    1f38:	d0f8      	beq.n	1f2c <sd_card__ioctl+0x1c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:408
        sd_card__power_off();
    1f3a:	f7ff fdf7 	bl	1b2c <sd_card__power_off>
    1f3e:	e7f5      	b.n	1f2c <sd_card__ioctl+0x1c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:419
      *(ptr + 1) = (BYTE)SD_CARD__IS_PRESENT();
    1f40:	f002 f8a8 	bl	4094 <board_io__sd_card_is_present>
    1f44:	7068      	strb	r0, [r5, #1]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:415
      res = RES_OK;
    1f46:	2400      	movs	r4, #0
    1f48:	e7f0      	b.n	1f2c <sd_card__ioctl+0x1c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:428
    if (g_disk_status & STA_NOINIT) {
    1f4a:	4b6f      	ldr	r3, [pc, #444]	; (2108 <sd_card__ioctl+0x1f8>)
    1f4c:	781c      	ldrb	r4, [r3, #0]
    1f4e:	f014 0401 	ands.w	r4, r4, #1
    1f52:	f040 80d7 	bne.w	2104 <sd_card__ioctl+0x1f4>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:432
    switch (ctrl) {
    1f56:	2e0e      	cmp	r6, #14
    1f58:	f200 80d2 	bhi.w	2100 <sd_card__ioctl+0x1f0>
    1f5c:	e8df f006 	tbb	[pc, r6]
    1f60:	524e1308 	.word	0x524e1308
    1f64:	d0d0d0d0 	.word	0xd0d0d0d0
    1f68:	a19dd0d0 	.word	0xa19dd0d0
    1f6c:	b3b0      	.short	0xb3b0
    1f6e:	c4          	.byte	0xc4
    1f6f:	00          	.byte	0x00
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:434
      SD_CARD__SELECT();
    1f70:	f002 f880 	bl	4074 <board_io__sd_card_cs>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:435
      if (sd_card__wait_for_ready() == 0xFF) {
    1f74:	f7ff fdc5 	bl	1b02 <sd_card__wait_for_ready>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:436
        res = RES_OK;
    1f78:	f1b0 04ff 	subs.w	r4, r0, #255	; 0xff
    1f7c:	bf18      	it	ne
    1f7e:	2401      	movne	r4, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:520
    SD_CARD__DESELECT();
    1f80:	f002 f880 	bl	4084 <board_io__sd_card_ds>
    1f84:	e7d2      	b.n	1f2c <sd_card__ioctl+0x1c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:441
      if ((sd_card__send_command(CMD9, 0) == 0) && sd_card__read_datablock(csd, 16)) {
    1f86:	2100      	movs	r1, #0
    1f88:	2049      	movs	r0, #73	; 0x49
    1f8a:	f7ff fe0c 	bl	1ba6 <sd_card__send_command>
    1f8e:	4604      	mov	r4, r0
    1f90:	b108      	cbz	r0, 1f96 <sd_card__ioctl+0x86>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:402
  DRESULT res = RES_ERROR;
    1f92:	2401      	movs	r4, #1
    1f94:	e7f4      	b.n	1f80 <sd_card__ioctl+0x70>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:441 (discriminator 1)
      if ((sd_card__send_command(CMD9, 0) == 0) && sd_card__read_datablock(csd, 16)) {
    1f96:	2110      	movs	r1, #16
    1f98:	4668      	mov	r0, sp
    1f9a:	f7ff fe47 	bl	1c2c <sd_card__read_datablock>
    1f9e:	2800      	cmp	r0, #0
    1fa0:	d0f7      	beq.n	1f92 <sd_card__ioctl+0x82>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:442
        if ((csd[0] >> 6) == 1) { /* SDC ver 2.00 */
    1fa2:	f89d 3000 	ldrb.w	r3, [sp]
    1fa6:	f89d 1008 	ldrb.w	r1, [sp, #8]
    1faa:	099b      	lsrs	r3, r3, #6
    1fac:	2b01      	cmp	r3, #1
    1fae:	f89d 3009 	ldrb.w	r3, [sp, #9]
    1fb2:	d106      	bne.n	1fc2 <sd_card__ioctl+0xb2>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:443
          csize = csd[9] + ((WORD)csd[8] << 8) + 1;
    1fb4:	1c5a      	adds	r2, r3, #1
    1fb6:	eb02 2201 	add.w	r2, r2, r1, lsl #8
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:444
          *(DWORD *)buff = (DWORD)csize << 10;
    1fba:	b292      	uxth	r2, r2
    1fbc:	0292      	lsls	r2, r2, #10
    1fbe:	602a      	str	r2, [r5, #0]
    1fc0:	e7de      	b.n	1f80 <sd_card__ioctl+0x70>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:447
          csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
    1fc2:	f89d 2007 	ldrb.w	r2, [sp, #7]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:446
          n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
    1fc6:	f89d 000a 	ldrb.w	r0, [sp, #10]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:447
          csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
    1fca:	0092      	lsls	r2, r2, #2
    1fcc:	eb02 1291 	add.w	r2, r2, r1, lsr #6
    1fd0:	f89d 1006 	ldrb.w	r1, [sp, #6]
    1fd4:	0289      	lsls	r1, r1, #10
    1fd6:	f401 6140 	and.w	r1, r1, #3072	; 0xc00
    1fda:	3201      	adds	r2, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:448
          *(DWORD *)buff = (DWORD)csize << (n - 9);
    1fdc:	440a      	add	r2, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:446
          n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
    1fde:	f89d 1005 	ldrb.w	r1, [sp, #5]
    1fe2:	005b      	lsls	r3, r3, #1
    1fe4:	f001 010f 	and.w	r1, r1, #15
    1fe8:	eb01 11d0 	add.w	r1, r1, r0, lsr #7
    1fec:	f003 0306 	and.w	r3, r3, #6
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:448
          *(DWORD *)buff = (DWORD)csize << (n - 9);
    1ff0:	440b      	add	r3, r1
    1ff2:	3b07      	subs	r3, #7
    1ff4:	fa02 f303 	lsl.w	r3, r2, r3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:466
            *(DWORD *)buff = 16UL << (csd[10] >> 4);
    1ff8:	602b      	str	r3, [r5, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:467
            res = RES_OK;
    1ffa:	e7c1      	b.n	1f80 <sd_card__ioctl+0x70>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:455
      *(WORD *)buff = 512;
    1ffc:	f44f 7300 	mov.w	r3, #512	; 0x200
    2000:	802b      	strh	r3, [r5, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:457
      break;
    2002:	e7bd      	b.n	1f80 <sd_card__ioctl+0x70>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:460
      if (g_card_type & CT_SD2) {                    /* SDC ver 2.00 */
    2004:	4e41      	ldr	r6, [pc, #260]	; (210c <sd_card__ioctl+0x1fc>)
    2006:	7831      	ldrb	r1, [r6, #0]
    2008:	f011 0104 	ands.w	r1, r1, #4
    200c:	d01c      	beq.n	2048 <sd_card__ioctl+0x138>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:461
        if (sd_card__send_command(ACMD13, 0) == 0) { /* Read SD status */
    200e:	2100      	movs	r1, #0
    2010:	20cd      	movs	r0, #205	; 0xcd
    2012:	f7ff fdc8 	bl	1ba6 <sd_card__send_command>
    2016:	2800      	cmp	r0, #0
    2018:	d1bb      	bne.n	1f92 <sd_card__ioctl+0x82>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:462
          SD_CARD__RECEIVE_BYTE();
    201a:	20ff      	movs	r0, #255	; 0xff
    201c:	f002 fc84 	bl	4928 <ssp2__exchange_byte>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:463
          if (sd_card__read_datablock(csd, 16)) { /* Read partial block */
    2020:	2110      	movs	r1, #16
    2022:	4668      	mov	r0, sp
    2024:	f7ff fe02 	bl	1c2c <sd_card__read_datablock>
    2028:	2800      	cmp	r0, #0
    202a:	d0b2      	beq.n	1f92 <sd_card__ioctl+0x82>
    202c:	2430      	movs	r4, #48	; 0x30
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:465 (discriminator 3)
              SD_CARD__RECEIVE_BYTE(); /* Purge trailing data */
    202e:	20ff      	movs	r0, #255	; 0xff
    2030:	3c01      	subs	r4, #1
    2032:	f002 fc79 	bl	4928 <ssp2__exchange_byte>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:464 (discriminator 3)
            for (n = 64 - 16; n; n--)
    2036:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
    203a:	d1f8      	bne.n	202e <sd_card__ioctl+0x11e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:466
            *(DWORD *)buff = 16UL << (csd[10] >> 4);
    203c:	f89d 300a 	ldrb.w	r3, [sp, #10]
    2040:	091a      	lsrs	r2, r3, #4
    2042:	2310      	movs	r3, #16
    2044:	4093      	lsls	r3, r2
    2046:	e7d7      	b.n	1ff8 <sd_card__ioctl+0xe8>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:471
        if ((sd_card__send_command(CMD9, 0) == 0) && sd_card__read_datablock(csd, 16)) { /* Read CSD */
    2048:	2049      	movs	r0, #73	; 0x49
    204a:	f7ff fdac 	bl	1ba6 <sd_card__send_command>
    204e:	4604      	mov	r4, r0
    2050:	2800      	cmp	r0, #0
    2052:	d19e      	bne.n	1f92 <sd_card__ioctl+0x82>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:471 (discriminator 1)
    2054:	2110      	movs	r1, #16
    2056:	4668      	mov	r0, sp
    2058:	f7ff fde8 	bl	1c2c <sd_card__read_datablock>
    205c:	2800      	cmp	r0, #0
    205e:	d098      	beq.n	1f92 <sd_card__ioctl+0x82>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:472
          if (g_card_type & CT_SD1) {                                                    /* SDC ver 1.XX */
    2060:	7832      	ldrb	r2, [r6, #0]
    2062:	f89d 300a 	ldrb.w	r3, [sp, #10]
    2066:	f89d 100b 	ldrb.w	r1, [sp, #11]
    206a:	0792      	lsls	r2, r2, #30
    206c:	d50a      	bpl.n	2084 <sd_card__ioctl+0x174>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:473
            *(DWORD *)buff = (((csd[10] & 63) << 1) + ((WORD)(csd[11] & 128) >> 7) + 1) << ((csd[13] >> 6) - 1);
    206e:	005b      	lsls	r3, r3, #1
    2070:	f89d 200d 	ldrb.w	r2, [sp, #13]
    2074:	f003 037e 	and.w	r3, r3, #126	; 0x7e
    2078:	eb03 13d1 	add.w	r3, r3, r1, lsr #7
    207c:	0992      	lsrs	r2, r2, #6
    207e:	3301      	adds	r3, #1
    2080:	3a01      	subs	r2, #1
    2082:	e7df      	b.n	2044 <sd_card__ioctl+0x134>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:475
            *(DWORD *)buff = ((WORD)((csd[10] & 124) >> 2) + 1) * (((csd[11] & 3) << 3) + ((csd[11] & 224) >> 5) + 1);
    2084:	00ca      	lsls	r2, r1, #3
    2086:	f002 0218 	and.w	r2, r2, #24
    208a:	f3c3 0384 	ubfx	r3, r3, #2, #5
    208e:	eb02 1251 	add.w	r2, r2, r1, lsr #5
    2092:	3301      	adds	r3, #1
    2094:	fb02 3303 	mla	r3, r2, r3, r3
    2098:	e7ae      	b.n	1ff8 <sd_card__ioctl+0xe8>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:483
      *ptr = g_card_type;
    209a:	4b1c      	ldr	r3, [pc, #112]	; (210c <sd_card__ioctl+0x1fc>)
    209c:	781b      	ldrb	r3, [r3, #0]
    209e:	702b      	strb	r3, [r5, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:485
      break;
    20a0:	e76e      	b.n	1f80 <sd_card__ioctl+0x70>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:488
      if (sd_card__send_command(CMD9, 0) == 0 /* READ_CSD */
    20a2:	2100      	movs	r1, #0
    20a4:	2049      	movs	r0, #73	; 0x49
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:494
      if (sd_card__send_command(CMD10, 0) == 0 /* READ_CID */
    20a6:	f7ff fd7e 	bl	1ba6 <sd_card__send_command>
    20aa:	2800      	cmp	r0, #0
    20ac:	f47f af71 	bne.w	1f92 <sd_card__ioctl+0x82>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:495
          && sd_card__read_datablock(ptr, 16))
    20b0:	2110      	movs	r1, #16
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:510
        if (sd_card__read_datablock(ptr, 64))
    20b2:	4628      	mov	r0, r5
    20b4:	f7ff fdba 	bl	1c2c <sd_card__read_datablock>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:436
        res = RES_OK;
    20b8:	fab0 f480 	clz	r4, r0
    20bc:	0964      	lsrs	r4, r4, #5
    20be:	e75f      	b.n	1f80 <sd_card__ioctl+0x70>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:494
      if (sd_card__send_command(CMD10, 0) == 0 /* READ_CID */
    20c0:	2100      	movs	r1, #0
    20c2:	204a      	movs	r0, #74	; 0x4a
    20c4:	e7ef      	b.n	20a6 <sd_card__ioctl+0x196>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:500
      if (sd_card__send_command(CMD58, 0) == 0) { /* READ_OCR */
    20c6:	2100      	movs	r1, #0
    20c8:	207a      	movs	r0, #122	; 0x7a
    20ca:	f7ff fd6c 	bl	1ba6 <sd_card__send_command>
    20ce:	4604      	mov	r4, r0
    20d0:	2800      	cmp	r0, #0
    20d2:	f47f af5e 	bne.w	1f92 <sd_card__ioctl+0x82>
    20d6:	1d2e      	adds	r6, r5, #4
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:502 (discriminator 3)
          *ptr++ = SD_CARD__RECEIVE_BYTE();
    20d8:	20ff      	movs	r0, #255	; 0xff
    20da:	f002 fc25 	bl	4928 <ssp2__exchange_byte>
    20de:	f805 0b01 	strb.w	r0, [r5], #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:501 (discriminator 3)
        for (n = 4; n; n--)
    20e2:	42ae      	cmp	r6, r5
    20e4:	d1f8      	bne.n	20d8 <sd_card__ioctl+0x1c8>
    20e6:	e74b      	b.n	1f80 <sd_card__ioctl+0x70>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:508
      if (sd_card__send_command(ACMD13, 0) == 0) { /* SD_STATUS */
    20e8:	2100      	movs	r1, #0
    20ea:	20cd      	movs	r0, #205	; 0xcd
    20ec:	f7ff fd5b 	bl	1ba6 <sd_card__send_command>
    20f0:	2800      	cmp	r0, #0
    20f2:	f47f af4e 	bne.w	1f92 <sd_card__ioctl+0x82>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:509
        SD_CARD__RECEIVE_BYTE();
    20f6:	20ff      	movs	r0, #255	; 0xff
    20f8:	f002 fc16 	bl	4928 <ssp2__exchange_byte>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:510
        if (sd_card__read_datablock(ptr, 64))
    20fc:	2140      	movs	r1, #64	; 0x40
    20fe:	e7d8      	b.n	20b2 <sd_card__ioctl+0x1a2>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:516
      res = RES_PARERR;
    2100:	2404      	movs	r4, #4
    2102:	e73d      	b.n	1f80 <sd_card__ioctl+0x70>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/fatfs/fatfs_glue/sd_card.c:429
      return RES_NOTRDY;
    2104:	2403      	movs	r4, #3
    2106:	e711      	b.n	1f2c <sd_card__ioctl+0x1c>
    2108:	10000008 	.word	0x10000008
    210c:	10000336 	.word	0x10000336

00002110 <system_calls__print_and_halt>:
system_calls__print_and_halt():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/newlib/system_calls.c:46
  for (int i = 0; i < len; i++) {
    uart__polled_put(system_calls__uart_type, ptr[i]);
  }
}

static void system_calls__print_and_halt(const char *string) {
    2110:	b508      	push	{r3, lr}
    2112:	4606      	mov	r6, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/newlib/system_calls.c:47
  system_calls__polled_put(string, strlen(string));
    2114:	f004 fa26 	bl	6564 <strlen>
system_calls__polled_put():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/newlib/system_calls.c:41
  for (int i = 0; i < len; i++) {
    2118:	2400      	movs	r4, #0
system_calls__print_and_halt():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/newlib/system_calls.c:47
  system_calls__polled_put(string, strlen(string));
    211a:	4605      	mov	r5, r0
system_calls__polled_put():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/newlib/system_calls.c:41
  for (int i = 0; i < len; i++) {
    211c:	42a5      	cmp	r5, r4
    211e:	dc00      	bgt.n	2122 <system_calls__print_and_halt+0x12>
system_calls__print_and_halt():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/newlib/system_calls.c:49 (discriminator 1)
  while (1) {
  }
    2120:	e7fe      	b.n	2120 <system_calls__print_and_halt+0x10>
system_calls__polled_put():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/newlib/system_calls.c:42
    uart__polled_put(system_calls__uart_type, ptr[i]);
    2122:	5d31      	ldrb	r1, [r6, r4]
    2124:	2000      	movs	r0, #0
    2126:	f002 fcf7 	bl	4b18 <uart__polled_put>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/newlib/system_calls.c:41
  for (int i = 0; i < len; i++) {
    212a:	3401      	adds	r4, #1
    212c:	e7f6      	b.n	211c <system_calls__print_and_halt+0xc>
system_calls__print_and_halt():
    212e:	Address 0x000000000000212e is out of bounds.


00002130 <_isatty>:
_isatty():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/newlib/system_calls.c:87
 * libc.pdf: 'Query whether output stream is a terminal'
 */
int _isatty(int file_descriptor) {
  int is_atty = 0;

  switch (file_descriptor) {
    2130:	2802      	cmp	r0, #2
    2132:	d90c      	bls.n	214e <_isatty+0x1e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/newlib/system_calls.c:97
    is_atty = 1;
    break;

  // Pointer based values defined by <stdio.h>
  default:
    if ((int)stdin == file_descriptor || (int)stdout == file_descriptor ||
    2134:	4b07      	ldr	r3, [pc, #28]	; (2154 <_isatty+0x24>)
    2136:	681b      	ldr	r3, [r3, #0]
    2138:	685a      	ldr	r2, [r3, #4]
    213a:	4282      	cmp	r2, r0
    213c:	d007      	beq.n	214e <_isatty+0x1e>
    213e:	689a      	ldr	r2, [r3, #8]
    2140:	4282      	cmp	r2, r0
    2142:	d004      	beq.n	214e <_isatty+0x1e>
    2144:	68db      	ldr	r3, [r3, #12]
    2146:	1a1b      	subs	r3, r3, r0
    2148:	4258      	negs	r0, r3
    214a:	4158      	adcs	r0, r3
    214c:	4770      	bx	lr
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/newlib/system_calls.c:99
        (int)stderr == file_descriptor) {
      is_atty = 1;
    214e:	2001      	movs	r0, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/newlib/system_calls.c:104
    }
  }

  return is_atty;
}
    2150:	4770      	bx	lr
    2152:	bf00      	nop
    2154:	1000015c 	.word	0x1000015c

00002158 <_write>:
_write():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/newlib/system_calls.c:118

/**
 * Low level write routine used by standard output (printf) and also file writes
 * after fopen() has been called
 */
int _write(int file_descriptor, const char *ptr, int bytes_to_write) {
    2158:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    215a:	4604      	mov	r4, r0
    215c:	460e      	mov	r6, r1
    215e:	4615      	mov	r5, r2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/newlib/system_calls.c:119
  if (_isatty(file_descriptor)) {
    2160:	f7ff ffe6 	bl	2130 <_isatty>
    2164:	b348      	cbz	r0, 21ba <_write+0x62>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/newlib/system_calls.c:121
    const bool is_standard_error =
        ((int)stderr == file_descriptor || file_id__stderr == file_descriptor);
    2166:	4b16      	ldr	r3, [pc, #88]	; (21c0 <_write+0x68>)
    2168:	681b      	ldr	r3, [r3, #0]
    216a:	68db      	ldr	r3, [r3, #12]
    216c:	42a3      	cmp	r3, r4
    216e:	d010      	beq.n	2192 <_write+0x3a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/newlib/system_calls.c:121 (discriminator 2)
    2170:	1ea3      	subs	r3, r4, #2
    2172:	425c      	negs	r4, r3
    2174:	415c      	adcs	r4, r3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/newlib/system_calls.c:123
    const bool rtos_is_running =
        taskSCHEDULER_RUNNING == xTaskGetSchedulerState();
    2176:	f001 fdcb 	bl	3d10 <xTaskGetSchedulerState>
    217a:	4607      	mov	r7, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/newlib/system_calls.c:125
    const bool transmit_queue_enabled =
        uart__is_transmit_queue_initialized(system_calls__uart_type);
    217c:	2000      	movs	r0, #0
    217e:	f002 fc89 	bl	4a94 <uart__is_transmit_queue_initialized>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/newlib/system_calls.c:131

    /* If the RTOS is running with the UART queue enabled, AND it is not an
     * error printf, then queue the output and return quickly, otherwise there
     * is no choice but to use system_calls__polled_put()
     */
    if (rtos_is_running && transmit_queue_enabled && !is_standard_error) {
    2182:	2f02      	cmp	r7, #2
    2184:	d117      	bne.n	21b6 <_write+0x5e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/newlib/system_calls.c:131 (discriminator 1)
    2186:	b1b0      	cbz	r0, 21b6 <_write+0x5e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/newlib/system_calls.c:131 (discriminator 2)
    2188:	b9ac      	cbnz	r4, 21b6 <_write+0x5e>
system_calls__queued_put():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/newlib/system_calls.c:33
  for (int i = 0; i < len; i++) {
    218a:	42a5      	cmp	r5, r4
    218c:	dc03      	bgt.n	2196 <_write+0x3e>
_write():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/newlib/system_calls.c:142
    system_calls__print_and_halt(
        "ERROR: Call to _write() with an unsupported handle");
  }

  return bytes_to_write;
}
    218e:	4628      	mov	r0, r5
    2190:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/newlib/system_calls.c:121
        ((int)stderr == file_descriptor || file_id__stderr == file_descriptor);
    2192:	2401      	movs	r4, #1
    2194:	e7ef      	b.n	2176 <_write+0x1e>
system_calls__queued_put():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/newlib/system_calls.c:34
    uart__put(system_calls__uart_type, ptr[i], forever_timeout);
    2196:	5d31      	ldrb	r1, [r6, r4]
    2198:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    219c:	2000      	movs	r0, #0
    219e:	f002 fd1d 	bl	4bdc <uart__put>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/newlib/system_calls.c:33
  for (int i = 0; i < len; i++) {
    21a2:	3401      	adds	r4, #1
    21a4:	e7f1      	b.n	218a <_write+0x32>
system_calls__polled_put():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/newlib/system_calls.c:42
    uart__polled_put(system_calls__uart_type, ptr[i]);
    21a6:	5d31      	ldrb	r1, [r6, r4]
    21a8:	2000      	movs	r0, #0
    21aa:	f002 fcb5 	bl	4b18 <uart__polled_put>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/newlib/system_calls.c:41
  for (int i = 0; i < len; i++) {
    21ae:	3401      	adds	r4, #1
    21b0:	42a5      	cmp	r5, r4
    21b2:	dcf8      	bgt.n	21a6 <_write+0x4e>
    21b4:	e7eb      	b.n	218e <_write+0x36>
_write():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/newlib/system_calls.c:41
    21b6:	2400      	movs	r4, #0
    21b8:	e7fa      	b.n	21b0 <_write+0x58>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/newlib/system_calls.c:137
    system_calls__print_and_halt(
    21ba:	4802      	ldr	r0, [pc, #8]	; (21c4 <_write+0x6c>)
    21bc:	f7ff ffa8 	bl	2110 <system_calls__print_and_halt>
    21c0:	1000015c 	.word	0x1000015c
    21c4:	0000ab2c 	.word	0x0000ab2c

000021c8 <_read>:
_read():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/newlib/system_calls.c:148

/**
 * Low level read routine used by standard input (scanf) and also file reads
 * after fopen() has been called
 */
int _read(int file_descriptor, char *ptr, int len) {
    21c8:	b508      	push	{r3, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/newlib/system_calls.c:151
  int bytes_read = 0;

  if (_isatty(file_descriptor)) {
    21ca:	f7ff ffb1 	bl	2130 <_isatty>
    21ce:	b118      	cbz	r0, 21d8 <_read+0x10>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/newlib/system_calls.c:154
    // This is a little awkward but uart__polled_get() will not poll if RTOS is
    // running with UART RX queue enabled
    if (uart__polled_get(system_calls__uart_type, &ptr[0])) {
    21d0:	2000      	movs	r0, #0
    21d2:	f002 fcd9 	bl	4b88 <uart__polled_get>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/newlib/system_calls.c:165
    system_calls__print_and_halt(
        "ERROR: Call to _read() with an unsupported handle");
  }

  return bytes_read;
}
    21d6:	bd08      	pop	{r3, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/newlib/system_calls.c:160
    system_calls__print_and_halt(
    21d8:	4801      	ldr	r0, [pc, #4]	; (21e0 <_read+0x18>)
    21da:	f7ff ff99 	bl	2110 <system_calls__print_and_halt>
    21de:	bf00      	nop
    21e0:	0000aafa 	.word	0x0000aafa

000021e4 <delay__us>:
delay__us():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/delay.c:15
void delay__ms(uint32_t ms) {
  const uint64_t us = UINT64_C(1000) * ms;
  delay__us(us);
}

void delay__us(uint64_t us) {
    21e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    21e6:	4604      	mov	r4, r0
    21e8:	460d      	mov	r5, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/delay.c:16
  const uint64_t time_now_us = sys_time__get_uptime_us();
    21ea:	f000 f905 	bl	23f8 <sys_time__get_uptime_us>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/delay.c:17
  const uint64_t time_to_wait_us = time_now_us + us;
    21ee:	1906      	adds	r6, r0, r4
    21f0:	eb41 0705 	adc.w	r7, r1, r5
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/delay.c:22

  // Use the RTOS for the larger delay period in milliseconds since this will
  // sleep the CPU
  const bool rtos_is_running =
      (taskSCHEDULER_RUNNING == xTaskGetSchedulerState());
    21f4:	f001 fd8c 	bl	3d10 <xTaskGetSchedulerState>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/delay.c:25

  // TODO: This assumes 1Khz OS tick rate
  if (rtos_is_running && us > 1000) {
    21f8:	2802      	cmp	r0, #2
    21fa:	d10c      	bne.n	2216 <delay__us+0x32>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/delay.c:25 (discriminator 1)
    21fc:	2300      	movs	r3, #0
    21fe:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
    2202:	42ab      	cmp	r3, r5
    2204:	bf08      	it	eq
    2206:	42a2      	cmpeq	r2, r4
    2208:	d205      	bcs.n	2216 <delay__us+0x32>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/delay.c:26
    const uint32_t ms = us / 1000;
    220a:	4620      	mov	r0, r4
    220c:	4629      	mov	r1, r5
    220e:	f002 fd23 	bl	4c58 <__aeabi_uldivmod>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/delay.c:27
    vTaskDelay(ms);
    2212:	f001 fbed 	bl	39f0 <vTaskDelay>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/delay.c:31 (discriminator 1)
  }

  // Eat the CPU for the remaining microseconds
  while (sys_time__get_uptime_us() < time_to_wait_us) {
    2216:	f000 f8ef 	bl	23f8 <sys_time__get_uptime_us>
    221a:	42b9      	cmp	r1, r7
    221c:	bf08      	it	eq
    221e:	42b0      	cmpeq	r0, r6
    2220:	d3f9      	bcc.n	2216 <delay__us+0x32>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/delay.c:33
  }
}
    2222:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00002224 <delay__ms>:
delay__ms():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/delay.c:12
  delay__us(us);
    2224:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
    2228:	fba0 0103 	umull	r0, r1, r0, r3
    222c:	f7ff bfda 	b.w	21e4 <delay__us>

00002230 <peripherals_init>:
peripherals_init():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/peripherals_init.c:17
static void peripherals_init__startup_sequence(void);
static const char *peripherals_init__mount_sd_card(void);
static void peripherals_init__uart0_init(void);
static void peripherals_init__i2c_init(void);

void peripherals_init(void) {
    2230:	b530      	push	{r4, r5, lr}
    2232:	b085      	sub	sp, #20
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/peripherals_init.c:18
  board_io__initialize();
    2234:	f001 fe9c 	bl	3f70 <board_io__initialize>
peripherals_init__startup_sequence():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/peripherals_init.c:38

  peripherals_init__i2c_init();
}

static void peripherals_init__startup_sequence(void) {
  const gpio_s leds[] = {board_io__get_led0(), board_io__get_led1(),
    2238:	f001 ff36 	bl	40a8 <board_io__get_led0>
    223c:	f88d 000c 	strb.w	r0, [sp, #12]
    2240:	f001 ff38 	bl	40b4 <board_io__get_led1>
    2244:	f88d 000d 	strb.w	r0, [sp, #13]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/peripherals_init.c:39
                         board_io__get_led2(), board_io__get_led3()};
    2248:	f001 ff3a 	bl	40c0 <board_io__get_led2>
    224c:	f88d 000e 	strb.w	r0, [sp, #14]
    2250:	f001 ff3c 	bl	40cc <board_io__get_led3>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/peripherals_init.c:40
  for (size_t number = 0; number < 32; number++) {
    2254:	2400      	movs	r4, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/peripherals_init.c:39
                         board_io__get_led2(), board_io__get_led3()};
    2256:	f88d 000f 	strb.w	r0, [sp, #15]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/peripherals_init.c:41
    gpio__toggle(leds[number % ARRAY_SIZE(leds)]);
    225a:	aa04      	add	r2, sp, #16
    225c:	f004 0303 	and.w	r3, r4, #3
    2260:	4413      	add	r3, r2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/peripherals_init.c:40
  for (size_t number = 0; number < 32; number++) {
    2262:	3401      	adds	r4, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/peripherals_init.c:41
    gpio__toggle(leds[number % ARRAY_SIZE(leds)]);
    2264:	f813 0c04 	ldrb.w	r0, [r3, #-4]
    2268:	f001 fffc 	bl	4264 <gpio__toggle>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/peripherals_init.c:42
    delay__ms(50);
    226c:	2032      	movs	r0, #50	; 0x32
    226e:	f7ff ffd9 	bl	2224 <delay__ms>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/peripherals_init.c:40
  for (size_t number = 0; number < 32; number++) {
    2272:	2c20      	cmp	r4, #32
    2274:	d1f1      	bne.n	225a <peripherals_init+0x2a>
peripherals_init__uart0_init():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/peripherals_init.c:66
}

static void peripherals_init__uart0_init(void) {
  // Do not do any bufferring for standard input otherwise getchar(), scanf()
  // may not work
  setvbuf(stdin, 0, _IONBF, 0);
    2276:	4b28      	ldr	r3, [pc, #160]	; (2318 <peripherals_init+0xe8>)
    2278:	6818      	ldr	r0, [r3, #0]
    227a:	2300      	movs	r3, #0
    227c:	4619      	mov	r1, r3
    227e:	2202      	movs	r2, #2
    2280:	6840      	ldr	r0, [r0, #4]
    2282:	f004 f887 	bl	6394 <setvbuf>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/peripherals_init.c:70

  // Note: PIN functions are initialized by board_io__initialize() for P0.2(Tx)
  // and P0.3(Rx)
  uart__init(UART__0, clock__get_peripheral_clock_hz(),
    2286:	f7fd ffcd 	bl	224 <clock__get_peripheral_clock_hz>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/peripherals_init.c:87
  static uint8_t rxq_storage[32];
  static uint8_t txq_storage[128];

  // Make UART more efficient by backing it with RTOS queues (optional but
  // highly recommended with RTOS)
  QueueHandle_t rxq_handle = xQueueCreateStatic(
    228a:	2500      	movs	r5, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/peripherals_init.c:70
  uart__init(UART__0, clock__get_peripheral_clock_hz(),
    228c:	4601      	mov	r1, r0
    228e:	f44f 4216 	mov.w	r2, #38400	; 0x9600
    2292:	2000      	movs	r0, #0
    2294:	f002 fbba 	bl	4a0c <uart__init>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/peripherals_init.c:87
  QueueHandle_t rxq_handle = xQueueCreateStatic(
    2298:	9500      	str	r5, [sp, #0]
    229a:	4b20      	ldr	r3, [pc, #128]	; (231c <peripherals_init+0xec>)
    229c:	4a20      	ldr	r2, [pc, #128]	; (2320 <peripherals_init+0xf0>)
    229e:	2101      	movs	r1, #1
    22a0:	4620      	mov	r0, r4
    22a2:	f000 fd11 	bl	2cc8 <xQueueGenericCreateStatic>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/peripherals_init.c:89
      sizeof(rxq_storage), sizeof(char), rxq_storage, &rxq_struct);
  QueueHandle_t txq_handle = xQueueCreateStatic(
    22a6:	4b1f      	ldr	r3, [pc, #124]	; (2324 <peripherals_init+0xf4>)
    22a8:	9500      	str	r5, [sp, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/peripherals_init.c:87
  QueueHandle_t rxq_handle = xQueueCreateStatic(
    22aa:	4604      	mov	r4, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/peripherals_init.c:89
  QueueHandle_t txq_handle = xQueueCreateStatic(
    22ac:	4a1e      	ldr	r2, [pc, #120]	; (2328 <peripherals_init+0xf8>)
    22ae:	2101      	movs	r1, #1
    22b0:	2080      	movs	r0, #128	; 0x80
    22b2:	f000 fd09 	bl	2cc8 <xQueueGenericCreateStatic>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/peripherals_init.c:92
      sizeof(txq_storage), sizeof(char), txq_storage, &txq_struct);

  uart__enable_queues(UART__0, txq_handle, rxq_handle);
    22b6:	4622      	mov	r2, r4
    22b8:	4601      	mov	r1, r0
    22ba:	4628      	mov	r0, r5
    22bc:	f002 fbf4 	bl	4aa8 <uart__enable_queues>
peripherals_init():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/peripherals_init.c:26
  ssp2__initialize(spi_sd_max_speed_khz);
    22c0:	f645 50c0 	movw	r0, #24000	; 0x5dc0
    22c4:	f002 fb0e 	bl	48e4 <ssp2__initialize>
peripherals_init__mount_sd_card():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/peripherals_init.c:54
  if (FR_OK == f_mount(&sd_card_drive, default_drive, option_mount_now)) {
    22c8:	2201      	movs	r2, #1
    22ca:	4918      	ldr	r1, [pc, #96]	; (232c <peripherals_init+0xfc>)
    22cc:	4818      	ldr	r0, [pc, #96]	; (2330 <peripherals_init+0x100>)
    22ce:	f7ff f8f1 	bl	14b4 <f_mount>
peripherals_init():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/peripherals_init.c:32
  printf("\n%s\n%s(): Low level startup\n%s\n", line, __FUNCTION__, mount_info);
    22d2:	4a18      	ldr	r2, [pc, #96]	; (2334 <peripherals_init+0x104>)
    22d4:	4b18      	ldr	r3, [pc, #96]	; (2338 <peripherals_init+0x108>)
    22d6:	4919      	ldr	r1, [pc, #100]	; (233c <peripherals_init+0x10c>)
    22d8:	42a8      	cmp	r0, r5
    22da:	bf08      	it	eq
    22dc:	4613      	moveq	r3, r2
    22de:	4a18      	ldr	r2, [pc, #96]	; (2340 <peripherals_init+0x110>)
    22e0:	4818      	ldr	r0, [pc, #96]	; (2344 <peripherals_init+0x114>)
peripherals_init__i2c_init():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/peripherals_init.c:101
  const uint32_t i2c_speed_hz = UINT32_C(400) * 1000;
  i2c__initialize(I2C__2, i2c_speed_hz, clock__get_peripheral_clock_hz());

  for (unsigned slave_address = 2; slave_address <= 254; slave_address += 2) {
    if (i2c__detect(I2C__2, slave_address)) {
      printf("I2C slave detected at address: 0x%02X\n", slave_address);
    22e2:	4d19      	ldr	r5, [pc, #100]	; (2348 <peripherals_init+0x118>)
peripherals_init():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/peripherals_init.c:32
  printf("\n%s\n%s(): Low level startup\n%s\n", line, __FUNCTION__, mount_info);
    22e4:	f003 ff5c 	bl	61a0 <iprintf>
peripherals_init__i2c_init():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/peripherals_init.c:97
  i2c__initialize(I2C__2, i2c_speed_hz, clock__get_peripheral_clock_hz());
    22e8:	f7fd ff9c 	bl	224 <clock__get_peripheral_clock_hz>
    22ec:	4917      	ldr	r1, [pc, #92]	; (234c <peripherals_init+0x11c>)
    22ee:	4602      	mov	r2, r0
    22f0:	2002      	movs	r0, #2
    22f2:	f002 f989 	bl	4608 <i2c__initialize>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/peripherals_init.c:99
  for (unsigned slave_address = 2; slave_address <= 254; slave_address += 2) {
    22f6:	2402      	movs	r4, #2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/peripherals_init.c:100
    if (i2c__detect(I2C__2, slave_address)) {
    22f8:	b2e1      	uxtb	r1, r4
    22fa:	2002      	movs	r0, #2
    22fc:	f002 fa12 	bl	4724 <i2c__detect>
    2300:	b118      	cbz	r0, 230a <peripherals_init+0xda>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/peripherals_init.c:101
      printf("I2C slave detected at address: 0x%02X\n", slave_address);
    2302:	4621      	mov	r1, r4
    2304:	4628      	mov	r0, r5
    2306:	f003 ff4b 	bl	61a0 <iprintf>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/peripherals_init.c:99
  for (unsigned slave_address = 2; slave_address <= 254; slave_address += 2) {
    230a:	3402      	adds	r4, #2
    230c:	f5b4 7f80 	cmp.w	r4, #256	; 0x100
    2310:	d1f2      	bne.n	22f8 <peripherals_init+0xc8>
peripherals_init():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/peripherals_init.c:35
}
    2312:	b005      	add	sp, #20
    2314:	bd30      	pop	{r4, r5, pc}
    2316:	bf00      	nop
    2318:	1000015c 	.word	0x1000015c
    231c:	10000358 	.word	0x10000358
    2320:	10000337 	.word	0x10000337
    2324:	10000660 	.word	0x10000660
    2328:	100005e0 	.word	0x100005e0
    232c:	0000a439 	.word	0x0000a439
    2330:	100003a8 	.word	0x100003a8
    2334:	0000ab70 	.word	0x0000ab70
    2338:	0000ab8e 	.word	0x0000ab8e
    233c:	0000abb5 	.word	0x0000abb5
    2340:	0000ab5f 	.word	0x0000ab5f
    2344:	0000ac06 	.word	0x0000ac06
    2348:	0000ac26 	.word	0x0000ac26
    234c:	00061a80 	.word	0x00061a80

00002350 <spi2_mutex__acquire>:
spi2_mutex__acquire():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/ssp2_mutex.c:10
#include "task.h"

static StaticSemaphore_t spi2_mutex_memory;
static SemaphoreHandle_t spi2_mutex_handle;

void spi2_mutex__acquire(void) {
    2350:	b510      	push	{r4, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/ssp2_mutex.c:11
  if (!spi2_mutex_handle) {
    2352:	4c0a      	ldr	r4, [pc, #40]	; (237c <spi2_mutex__acquire+0x2c>)
    2354:	6823      	ldr	r3, [r4, #0]
    2356:	b923      	cbnz	r3, 2362 <spi2_mutex__acquire+0x12>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/ssp2_mutex.c:12
    spi2_mutex_handle = xSemaphoreCreateMutexStatic(&spi2_mutex_memory);
    2358:	4909      	ldr	r1, [pc, #36]	; (2380 <spi2_mutex__acquire+0x30>)
    235a:	2001      	movs	r0, #1
    235c:	f000 fdd2 	bl	2f04 <xQueueCreateMutexStatic>
    2360:	6020      	str	r0, [r4, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/ssp2_mutex.c:17
    vTraceSetMutexName(spi2_mutex_handle, "spi2_mutex");
  }

  // Only acquire the mutex if the FreeRTOS is running
  if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
    2362:	f001 fcd5 	bl	3d10 <xTaskGetSchedulerState>
    2366:	2802      	cmp	r0, #2
    2368:	d106      	bne.n	2378 <spi2_mutex__acquire+0x28>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/ssp2_mutex.c:18
    xSemaphoreTake(spi2_mutex_handle, portMAX_DELAY);
    236a:	6820      	ldr	r0, [r4, #0]
    236c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/ssp2_mutex.c:20
  }
}
    2370:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/ssp2_mutex.c:18
    xSemaphoreTake(spi2_mutex_handle, portMAX_DELAY);
    2374:	f000 bf3c 	b.w	31f0 <xQueueSemaphoreTake>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/ssp2_mutex.c:20
}
    2378:	bd10      	pop	{r4, pc}
    237a:	bf00      	nop
    237c:	100006b0 	.word	0x100006b0
    2380:	100006b4 	.word	0x100006b4

00002384 <spi2_mutex__release>:
spi2_mutex__release():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/ssp2_mutex.c:22

void spi2_mutex__release(void) {
    2384:	b510      	push	{r4, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/ssp2_mutex.c:23
  if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
    2386:	f001 fcc3 	bl	3d10 <xTaskGetSchedulerState>
    238a:	2802      	cmp	r0, #2
    238c:	d108      	bne.n	23a0 <spi2_mutex__release+0x1c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/ssp2_mutex.c:24
    xSemaphoreGive(spi2_mutex_handle);
    238e:	4805      	ldr	r0, [pc, #20]	; (23a4 <spi2_mutex__release+0x20>)
    2390:	2300      	movs	r3, #0
    2392:	461a      	mov	r2, r3
    2394:	4619      	mov	r1, r3
    2396:	6800      	ldr	r0, [r0, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/ssp2_mutex.c:26
  }
}
    2398:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/ssp2_mutex.c:24
    xSemaphoreGive(spi2_mutex_handle);
    239c:	f000 bd04 	b.w	2da8 <xQueueGenericSend>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/ssp2_mutex.c:26
}
    23a0:	bd10      	pop	{r4, pc}
    23a2:	bf00      	nop
    23a4:	100006b0 	.word	0x100006b0

000023a8 <sys_time__one_minute_isr>:
sys_time__one_minute_isr():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/sys_time.c:13

static const uint32_t sys_time__us_per_sec = UINT32_C(1) * 1000 * 1000;
static volatile uint32_t sys_time__one_minute_counter = 0;

static void sys_time__one_minute_isr(void) {
  ++sys_time__one_minute_counter;
    23a8:	4a07      	ldr	r2, [pc, #28]	; (23c8 <sys_time__one_minute_isr+0x20>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/sys_time.c:12
static void sys_time__one_minute_isr(void) {
    23aa:	b508      	push	{r3, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/sys_time.c:13
  ++sys_time__one_minute_counter;
    23ac:	6813      	ldr	r3, [r2, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/sys_time.c:16

  // Reset the HW timer manually and then clear the interrupt
  hw_timer__set_value(sys_time__hw_timer, 0);
    23ae:	2100      	movs	r1, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/sys_time.c:13
  ++sys_time__one_minute_counter;
    23b0:	3301      	adds	r3, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/sys_time.c:16
  hw_timer__set_value(sys_time__hw_timer, 0);
    23b2:	4608      	mov	r0, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/sys_time.c:13
  ++sys_time__one_minute_counter;
    23b4:	6013      	str	r3, [r2, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/sys_time.c:16
  hw_timer__set_value(sys_time__hw_timer, 0);
    23b6:	f001 ffaf 	bl	4318 <hw_timer__set_value>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/sys_time.c:17
  hw_timer__acknowledge_interrupt(sys_time__hw_timer, sys_time__hw_timer_mr);
    23ba:	2100      	movs	r1, #0
    23bc:	4608      	mov	r0, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/sys_time.c:18
}
    23be:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/sys_time.c:17
  hw_timer__acknowledge_interrupt(sys_time__hw_timer, sys_time__hw_timer_mr);
    23c2:	f001 bf95 	b.w	42f0 <hw_timer__acknowledge_interrupt>
    23c6:	bf00      	nop
    23c8:	10000704 	.word	0x10000704

000023cc <sys_time__init>:
sys_time__init():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/sys_time.c:26
 *
 *                      P U B L I C    F U N C T I O N S
 *
 ******************************************************************************/

void sys_time__init(uint32_t peripheral_clock_hz) {
    23cc:	b508      	push	{r3, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/sys_time.c:32
  const uint32_t prescalar_for_1us =
      (peripheral_clock_hz / sys_time__us_per_sec) - 1;
  const uint32_t one_minute_in_us = UINT32_C(60) * 1000 * 1000;

  // Enable the timer with 1uS resolution with an interrupt
  hw_timer__enable(sys_time__hw_timer, prescalar_for_1us,
    23ce:	4a07      	ldr	r2, [pc, #28]	; (23ec <sys_time__init+0x20>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/sys_time.c:28
      (peripheral_clock_hz / sys_time__us_per_sec) - 1;
    23d0:	4907      	ldr	r1, [pc, #28]	; (23f0 <sys_time__init+0x24>)
    23d2:	fbb0 f1f1 	udiv	r1, r0, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/sys_time.c:32
  hw_timer__enable(sys_time__hw_timer, prescalar_for_1us,
    23d6:	2000      	movs	r0, #0
    23d8:	3901      	subs	r1, #1
    23da:	f001 ff53 	bl	4284 <hw_timer__enable>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/sys_time.c:34
                   sys_time__one_minute_isr);
  hw_timer__enable_match_isr(sys_time__hw_timer, sys_time__hw_timer_mr,
    23de:	2100      	movs	r1, #0
    23e0:	4a04      	ldr	r2, [pc, #16]	; (23f4 <sys_time__init+0x28>)
    23e2:	4608      	mov	r0, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/sys_time.c:36
                             one_minute_in_us);
}
    23e4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/sys_time.c:34
  hw_timer__enable_match_isr(sys_time__hw_timer, sys_time__hw_timer_mr,
    23e8:	f001 bf70 	b.w	42cc <hw_timer__enable_match_isr>
    23ec:	000023a9 	.word	0x000023a9
    23f0:	000f4240 	.word	0x000f4240
    23f4:	03938700 	.word	0x03938700

000023f8 <sys_time__get_uptime_us>:
sys_time__get_uptime_us():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/sys_time.c:38

uint64_t sys_time__get_uptime_us(void) {
    23f8:	b570      	push	{r4, r5, r6, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/sys_time.c:53
   * and simplifies the logic of reading sys_time__sec_counter and the 32-bit HW
   * timer value.
   */
  do {
    before_us = hw_timer__get_value(sys_time__hw_timer);
    minutes = sys_time__one_minute_counter;
    23fa:	4e08      	ldr	r6, [pc, #32]	; (241c <sys_time__get_uptime_us+0x24>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/sys_time.c:52 (discriminator 1)
    before_us = hw_timer__get_value(sys_time__hw_timer);
    23fc:	2000      	movs	r0, #0
    23fe:	f001 ff83 	bl	4308 <hw_timer__get_value>
    2402:	4605      	mov	r5, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/sys_time.c:54 (discriminator 1)
    after_us = hw_timer__get_value(sys_time__hw_timer);
    2404:	2000      	movs	r0, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/sys_time.c:53 (discriminator 1)
    minutes = sys_time__one_minute_counter;
    2406:	6834      	ldr	r4, [r6, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/sys_time.c:54 (discriminator 1)
    after_us = hw_timer__get_value(sys_time__hw_timer);
    2408:	f001 ff7e 	bl	4308 <hw_timer__get_value>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/sys_time.c:55 (discriminator 1)
  } while (after_us < before_us);
    240c:	4285      	cmp	r5, r0
    240e:	d8f5      	bhi.n	23fc <sys_time__get_uptime_us+0x4>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/sys_time.c:61

  uint64_t uptime_us = after_us;
  uptime_us += ((uint64_t)minutes * 60 * sys_time__us_per_sec);

  return uptime_us;
}
    2410:	4b03      	ldr	r3, [pc, #12]	; (2420 <sys_time__get_uptime_us+0x28>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/sys_time.c:58
  uptime_us += ((uint64_t)minutes * 60 * sys_time__us_per_sec);
    2412:	2100      	movs	r1, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/sys_time.c:61
}
    2414:	fbe3 0104 	umlal	r0, r1, r3, r4
    2418:	bd70      	pop	{r4, r5, r6, pc}
    241a:	bf00      	nop
    241c:	10000704 	.word	0x10000704
    2420:	03938700 	.word	0x03938700

00002424 <sys_time__get_uptime_ms>:
sys_time__get_uptime_ms():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/sys_time.c:63

uint64_t sys_time__get_uptime_ms(void) {
    2424:	b508      	push	{r3, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/sys_time.c:64
  const uint64_t us = sys_time__get_uptime_us();
    2426:	f7ff ffe7 	bl	23f8 <sys_time__get_uptime_us>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/sys_time.c:65
  return (us / 1000);
    242a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
    242e:	2300      	movs	r3, #0
    2430:	f002 fc12 	bl	4c58 <__aeabi_uldivmod>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/sys_time.c:66
}
    2434:	bd08      	pop	{r3, pc}

00002436 <uart_puts__polled>:
uart_puts__polled():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/uart_printf.c:54
  }

  return would_print;
}

void uart_puts__polled(uart_e uart, const char *message) {
    2436:	b570      	push	{r4, r5, r6, lr}
    2438:	4605      	mov	r5, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/uart_printf.c:55
  const size_t message_length = strlen(message);
    243a:	4608      	mov	r0, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/uart_printf.c:54
void uart_puts__polled(uart_e uart, const char *message) {
    243c:	460c      	mov	r4, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/uart_printf.c:55
  const size_t message_length = strlen(message);
    243e:	f004 f891 	bl	6564 <strlen>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/uart_printf.c:56
  for (size_t byte = 0; byte < message_length; byte++) {
    2442:	1826      	adds	r6, r4, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/uart_printf.c:56 (discriminator 1)
    2444:	42b4      	cmp	r4, r6
    2446:	d105      	bne.n	2454 <uart_puts__polled+0x1e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/uart_printf.c:59
    uart__polled_put(uart, message[byte]);
  }
  uart__polled_put(uart, '\n');
    2448:	4628      	mov	r0, r5
    244a:	210a      	movs	r1, #10
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/uart_printf.c:60
    244c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/uart_printf.c:59
  uart__polled_put(uart, '\n');
    2450:	f002 bb62 	b.w	4b18 <uart__polled_put>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l4_io/sources/uart_printf.c:57 (discriminator 3)
    uart__polled_put(uart, message[byte]);
    2454:	f814 1b01 	ldrb.w	r1, [r4], #1
    2458:	4628      	mov	r0, r5
    245a:	f002 fb5d 	bl	4b18 <uart__polled_put>
    245e:	e7f1      	b.n	2444 <uart_puts__polled+0xe>

00002460 <CLI_simulator>:
CLI_simulator():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:22

typedef char song_data_t[512];
typedef char song_name_t[32];

// CLI sends the song name
void CLI_simulator() {
    2460:	b500      	push	{lr}
    2462:	b089      	sub	sp, #36	; 0x24
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:23
  song_name_t song = {};
    2464:	2220      	movs	r2, #32
    2466:	2100      	movs	r1, #0
    2468:	4668      	mov	r0, sp
    246a:	f002 fe73 	bl	5154 <memset>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:24
  strncpy(song, "name.txt", sizeof(song) - 1);
    246e:	221f      	movs	r2, #31
    2470:	490b      	ldr	r1, [pc, #44]	; (24a0 <CLI_simulator+0x40>)
    2472:	4668      	mov	r0, sp
    2474:	f004 f890 	bl	6598 <strncpy>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:25
  if (xQueueSend(song_name_q, song, 0)) { // with &?
    2478:	480a      	ldr	r0, [pc, #40]	; (24a4 <CLI_simulator+0x44>)
    247a:	2300      	movs	r3, #0
    247c:	461a      	mov	r2, r3
    247e:	4669      	mov	r1, sp
    2480:	6800      	ldr	r0, [r0, #0]
    2482:	f000 fc91 	bl	2da8 <xQueueGenericSend>
    2486:	b140      	cbz	r0, 249a <CLI_simulator+0x3a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:26
    puts("Sent songname\n");
    2488:	4807      	ldr	r0, [pc, #28]	; (24a8 <CLI_simulator+0x48>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:28
  } else {
    puts("Couldn't send songname to queue\n");
    248a:	f003 ff6b 	bl	6364 <puts>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:30
  }
  vTaskSuspend(NULL);
    248e:	2000      	movs	r0, #0
    2490:	f001 fb30 	bl	3af4 <vTaskSuspend>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:31
}
    2494:	b009      	add	sp, #36	; 0x24
    2496:	f85d fb04 	ldr.w	pc, [sp], #4
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:28
    puts("Couldn't send songname to queue\n");
    249a:	4804      	ldr	r0, [pc, #16]	; (24ac <CLI_simulator+0x4c>)
    249c:	e7f5      	b.n	248a <CLI_simulator+0x2a>
    249e:	bf00      	nop
    24a0:	0000ac4d 	.word	0x0000ac4d
    24a4:	1000070c 	.word	0x1000070c
    24a8:	0000ac56 	.word	0x0000ac56
    24ac:	0000ac65 	.word	0x0000ac65

000024b0 <open_mp3_file>:
open_mp3_file():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:34

// open file
void open_mp3_file(char *file_name) {
    24b0:	b530      	push	{r4, r5, lr}
    24b2:	f2ad 4d34 	subw	sp, sp, #1076	; 0x434
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:39
  // const char *filename = "file.txt";
  FIL file; // File handle
  UINT bytes_written = 0;
  FRESULT result =
      f_open(&file, file_name, (FA_READ)); // Check what file permissions
    24b6:	4601      	mov	r1, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:37
  UINT bytes_written = 0;
    24b8:	2400      	movs	r4, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:39
      f_open(&file, file_name, (FA_READ)); // Check what file permissions
    24ba:	2201      	movs	r2, #1
    24bc:	a882      	add	r0, sp, #520	; 0x208
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:37
  UINT bytes_written = 0;
    24be:	9401      	str	r4, [sp, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:39
      f_open(&file, file_name, (FA_READ)); // Check what file permissions
    24c0:	f7ff f830 	bl	1524 <f_open>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:40
  song_data_t buffer = {};                 // init to 0
    24c4:	f44f 7200 	mov.w	r2, #512	; 0x200
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:39
      f_open(&file, file_name, (FA_READ)); // Check what file permissions
    24c8:	4605      	mov	r5, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:40
  song_data_t buffer = {};                 // init to 0
    24ca:	4621      	mov	r1, r4
    24cc:	a802      	add	r0, sp, #8
    24ce:	f002 fe41 	bl	5154 <memset>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:41
  if (FR_OK == result) {
    24d2:	bb35      	cbnz	r5, 2522 <open_mp3_file+0x72>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:44

    while (FR_OK == f_read(&file, buffer, strlen(buffer), &bytes_written)) {
      if (xQueueSend(mp3_data_q, buffer, portMAX_DELAY)) {
    24d4:	4c15      	ldr	r4, [pc, #84]	; (252c <open_mp3_file+0x7c>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:47
        ;
      } else {
        puts("mp3_data_q send error\n");
    24d6:	4d16      	ldr	r5, [pc, #88]	; (2530 <open_mp3_file+0x80>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:43
    while (FR_OK == f_read(&file, buffer, strlen(buffer), &bytes_written)) {
    24d8:	a802      	add	r0, sp, #8
    24da:	f004 f843 	bl	6564 <strlen>
    24de:	ab01      	add	r3, sp, #4
    24e0:	4602      	mov	r2, r0
    24e2:	a902      	add	r1, sp, #8
    24e4:	a882      	add	r0, sp, #520	; 0x208
    24e6:	f7ff f903 	bl	16f0 <f_read>
    24ea:	4603      	mov	r3, r0
    24ec:	b140      	cbz	r0, 2500 <open_mp3_file+0x50>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:51
      }
      memset(&buffer[0], 0, sizeof(buffer));
    }
    printf("ERROR: Failed to read data to file\n");
    24ee:	4811      	ldr	r0, [pc, #68]	; (2534 <open_mp3_file+0x84>)
    24f0:	f003 ff38 	bl	6364 <puts>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:52
    f_close(&file);
    24f4:	a882      	add	r0, sp, #520	; 0x208
    24f6:	f7ff fa0a 	bl	190e <f_close>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:56
  } else {
    printf("ERROR: Failed to open: %s\n", buffer);
  }
}
    24fa:	f20d 4d34 	addw	sp, sp, #1076	; 0x434
    24fe:	bd30      	pop	{r4, r5, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:44
      if (xQueueSend(mp3_data_q, buffer, portMAX_DELAY)) {
    2500:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    2504:	a902      	add	r1, sp, #8
    2506:	6820      	ldr	r0, [r4, #0]
    2508:	f000 fc4e 	bl	2da8 <xQueueGenericSend>
    250c:	b910      	cbnz	r0, 2514 <open_mp3_file+0x64>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:47
        puts("mp3_data_q send error\n");
    250e:	4628      	mov	r0, r5
    2510:	f003 ff28 	bl	6364 <puts>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:49
      memset(&buffer[0], 0, sizeof(buffer));
    2514:	f44f 7200 	mov.w	r2, #512	; 0x200
    2518:	2100      	movs	r1, #0
    251a:	a802      	add	r0, sp, #8
    251c:	f002 fe1a 	bl	5154 <memset>
    2520:	e7da      	b.n	24d8 <open_mp3_file+0x28>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:54
    printf("ERROR: Failed to open: %s\n", buffer);
    2522:	a902      	add	r1, sp, #8
    2524:	4804      	ldr	r0, [pc, #16]	; (2538 <open_mp3_file+0x88>)
    2526:	f003 fe3b 	bl	61a0 <iprintf>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:56
}
    252a:	e7e6      	b.n	24fa <open_mp3_file+0x4a>
    252c:	10000708 	.word	0x10000708
    2530:	0000acc1 	.word	0x0000acc1
    2534:	0000acd8 	.word	0x0000acd8
    2538:	0000acfb 	.word	0x0000acfb

0000253c <mp3_file_reader_task>:
mp3_file_reader_task():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:59

// reads mp3 file and receives song name from CLI
void mp3_file_reader_task() {
    253c:	b500      	push	{lr}
    253e:	b089      	sub	sp, #36	; 0x24
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:60
  song_name_t song_name = {};
    2540:	2220      	movs	r2, #32
    2542:	2100      	movs	r1, #0
    2544:	4668      	mov	r0, sp
    2546:	f002 fe05 	bl	5154 <memset>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:63

  while (1) {
    if (xQueueReceive(song_name_q, song_name, 5000)) {
    254a:	4d08      	ldr	r5, [pc, #32]	; (256c <mp3_file_reader_task+0x30>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:66
      open_mp3_file(song_name);
    } else {
      puts("song_name_q receive error\n");
    254c:	4c08      	ldr	r4, [pc, #32]	; (2570 <mp3_file_reader_task+0x34>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:63
    if (xQueueReceive(song_name_q, song_name, 5000)) {
    254e:	6828      	ldr	r0, [r5, #0]
    2550:	f241 3288 	movw	r2, #5000	; 0x1388
    2554:	4669      	mov	r1, sp
    2556:	f000 fdad 	bl	30b4 <xQueueReceive>
    255a:	b118      	cbz	r0, 2564 <mp3_file_reader_task+0x28>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:64
      open_mp3_file(song_name);
    255c:	4668      	mov	r0, sp
    255e:	f7ff ffa7 	bl	24b0 <open_mp3_file>
    2562:	e7f4      	b.n	254e <mp3_file_reader_task+0x12>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:66
      puts("song_name_q receive error\n");
    2564:	4620      	mov	r0, r4
    2566:	f003 fefd 	bl	6364 <puts>
    256a:	e7f0      	b.n	254e <mp3_file_reader_task+0x12>
    256c:	1000070c 	.word	0x1000070c
    2570:	0000aca6 	.word	0x0000aca6

00002574 <mp3_file_decoder>:
mp3_file_decoder():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:71
    }
  }
}

void mp3_file_decoder(song_data_t song_data) {
    2574:	b538      	push	{r3, r4, r5, lr}
    2576:	1e45      	subs	r5, r0, #1
    2578:	f200 14ff 	addw	r4, r0, #511	; 0x1ff
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:72 (discriminator 1)
  for (int i = 0; i < sizeof(song_data_t); i++) {
    257c:	42a5      	cmp	r5, r4
    257e:	d100      	bne.n	2582 <mp3_file_decoder+0xe>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:75
    putchar(song_data[i]);
  }
}
    2580:	bd38      	pop	{r3, r4, r5, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:73 (discriminator 3)
    putchar(song_data[i]);
    2582:	f815 0f01 	ldrb.w	r0, [r5, #1]!
    2586:	f003 fe6b 	bl	6260 <putchar>
    258a:	e7f7      	b.n	257c <mp3_file_decoder+0x8>

0000258c <play_file_task>:
play_file_task():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:78

// plays file
void play_file_task() {
    258c:	b500      	push	{lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:82
  song_data_t song_data = {};
  while (1) {
    memset(&song_data[0], 0, sizeof(song_data_t));
    if (xQueueReceive(mp3_data_q, &song_data[0], portMAX_DELAY)) {
    258e:	4d0c      	ldr	r5, [pc, #48]	; (25c0 <play_file_task+0x34>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:86
      // play pause function
      mp3_file_decoder(song_data);
    } else {
      puts("mp3_data_q receive error\n");
    2590:	4c0c      	ldr	r4, [pc, #48]	; (25c4 <play_file_task+0x38>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:78
void play_file_task() {
    2592:	f5ad 7d01 	sub.w	sp, sp, #516	; 0x204
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:81
    memset(&song_data[0], 0, sizeof(song_data_t));
    2596:	f44f 7200 	mov.w	r2, #512	; 0x200
    259a:	2100      	movs	r1, #0
    259c:	4668      	mov	r0, sp
    259e:	f002 fdd9 	bl	5154 <memset>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:82
    if (xQueueReceive(mp3_data_q, &song_data[0], portMAX_DELAY)) {
    25a2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    25a6:	4669      	mov	r1, sp
    25a8:	6828      	ldr	r0, [r5, #0]
    25aa:	f000 fd83 	bl	30b4 <xQueueReceive>
    25ae:	b118      	cbz	r0, 25b8 <play_file_task+0x2c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:84
      mp3_file_decoder(song_data);
    25b0:	4668      	mov	r0, sp
    25b2:	f7ff ffdf 	bl	2574 <mp3_file_decoder>
    25b6:	e7ee      	b.n	2596 <play_file_task+0xa>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:86
      puts("mp3_data_q receive error\n");
    25b8:	4620      	mov	r0, r4
    25ba:	f003 fed3 	bl	6364 <puts>
    25be:	e7ea      	b.n	2596 <play_file_task+0xa>
    25c0:	10000708 	.word	0x10000708
    25c4:	0000ad16 	.word	0x0000ad16

000025c8 <main>:
main():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:115
  }
  return APP_CLI_STATUS__SUCCESS;
}

int main(void) {
  setvbuf(stdout, 0, _IONBF, 0);
    25c8:	4b1f      	ldr	r3, [pc, #124]	; (2648 <main+0x80>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:114
int main(void) {
    25ca:	b537      	push	{r0, r1, r2, r4, r5, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:115
  setvbuf(stdout, 0, _IONBF, 0);
    25cc:	6818      	ldr	r0, [r3, #0]
    25ce:	2300      	movs	r3, #0
    25d0:	4619      	mov	r1, r3
    25d2:	2202      	movs	r2, #2
    25d4:	6880      	ldr	r0, [r0, #8]
    25d6:	f003 fedd 	bl	6394 <setvbuf>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:117

  mp3_data_q = xQueueCreate(2, sizeof(song_data_t));
    25da:	2200      	movs	r2, #0
    25dc:	f44f 7100 	mov.w	r1, #512	; 0x200
    25e0:	2002      	movs	r0, #2
    25e2:	f000 fbbb 	bl	2d5c <xQueueGenericCreate>
    25e6:	4b19      	ldr	r3, [pc, #100]	; (264c <main+0x84>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:118
  song_name_q = xQueueCreate(1, sizeof(song_data_t));
    25e8:	2200      	movs	r2, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:117
  mp3_data_q = xQueueCreate(2, sizeof(song_data_t));
    25ea:	6018      	str	r0, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:118
  song_name_q = xQueueCreate(1, sizeof(song_data_t));
    25ec:	f44f 7100 	mov.w	r1, #512	; 0x200
    25f0:	2001      	movs	r0, #1
    25f2:	f000 fbb3 	bl	2d5c <xQueueGenericCreate>
    25f6:	4b16      	ldr	r3, [pc, #88]	; (2650 <main+0x88>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:120

  xTaskCreate(CLI_simulator, "CLI", 1024, NULL, PRIORITY_MEDIUM, NULL);
    25f8:	4916      	ldr	r1, [pc, #88]	; (2654 <main+0x8c>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:118
  song_name_q = xQueueCreate(1, sizeof(song_data_t));
    25fa:	6018      	str	r0, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:120
  xTaskCreate(CLI_simulator, "CLI", 1024, NULL, PRIORITY_MEDIUM, NULL);
    25fc:	2400      	movs	r4, #0
    25fe:	2502      	movs	r5, #2
    2600:	4623      	mov	r3, r4
    2602:	e9cd 5400 	strd	r5, r4, [sp]
    2606:	f44f 6280 	mov.w	r2, #1024	; 0x400
    260a:	4813      	ldr	r0, [pc, #76]	; (2658 <main+0x90>)
    260c:	f001 f878 	bl	3700 <xTaskCreate>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:121
  xTaskCreate(mp3_file_reader_task, "reader", 1024, NULL, PRIORITY_MEDIUM,
    2610:	4623      	mov	r3, r4
    2612:	e9cd 5400 	strd	r5, r4, [sp]
    2616:	f44f 6280 	mov.w	r2, #1024	; 0x400
    261a:	4910      	ldr	r1, [pc, #64]	; (265c <main+0x94>)
    261c:	4810      	ldr	r0, [pc, #64]	; (2660 <main+0x98>)
    261e:	f001 f86f 	bl	3700 <xTaskCreate>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:123
              NULL);
  xTaskCreate(play_file_task, "player", 1024, NULL, PRIORITY_HIGH, NULL);
    2622:	2303      	movs	r3, #3
    2624:	f44f 6280 	mov.w	r2, #1024	; 0x400
    2628:	490e      	ldr	r1, [pc, #56]	; (2664 <main+0x9c>)
    262a:	9300      	str	r3, [sp, #0]
    262c:	9401      	str	r4, [sp, #4]
    262e:	4623      	mov	r3, r4
    2630:	480d      	ldr	r0, [pc, #52]	; (2668 <main+0xa0>)
    2632:	f001 f865 	bl	3700 <xTaskCreate>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:125

  puts("Starting RTOS");
    2636:	480d      	ldr	r0, [pc, #52]	; (266c <main+0xa4>)
    2638:	f003 fe94 	bl	6364 <puts>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:126
  vTaskStartScheduler(); // This function never returns unless RTOS scheduler
    263c:	f001 f88e 	bl	375c <vTaskStartScheduler>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/main.c:130
                         // runs out of memory and fails

  return 0;
}
    2640:	4620      	mov	r0, r4
    2642:	b003      	add	sp, #12
    2644:	bd30      	pop	{r4, r5, pc}
    2646:	bf00      	nop
    2648:	1000015c 	.word	0x1000015c
    264c:	10000708 	.word	0x10000708
    2650:	1000070c 	.word	0x1000070c
    2654:	0000ac86 	.word	0x0000ac86
    2658:	00002461 	.word	0x00002461
    265c:	0000ac8a 	.word	0x0000ac8a
    2660:	0000253d 	.word	0x0000253d
    2664:	0000ac91 	.word	0x0000ac91
    2668:	0000258d 	.word	0x0000258d
    266c:	0000ac98 	.word	0x0000ac98

00002670 <vApplicationStackOverflowHook>:
vApplicationStackOverflowHook():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/rtos_hooks.c:27
}

/// Invoked by FreeRTOS when it detects stack overflow: #if (0 !=
/// configCHECK_FOR_STACK_OVERFLOW)
void vApplicationStackOverflowHook(TaskHandle_t task_handle,
                                   signed char *task_name) {
    2670:	460c      	mov	r4, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/rtos_hooks.c:28
  uart_puts__polled(UART__0, "stack overflow by this task:");
    2672:	2000      	movs	r0, #0
    2674:	4904      	ldr	r1, [pc, #16]	; (2688 <vApplicationStackOverflowHook+0x18>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/rtos_hooks.c:27
                                   signed char *task_name) {
    2676:	b508      	push	{r3, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/rtos_hooks.c:28
  uart_puts__polled(UART__0, "stack overflow by this task:");
    2678:	f7ff fedd 	bl	2436 <uart_puts__polled>
halt():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/rtos_hooks.c:19
  uart_puts__polled(UART__0, message);
    267c:	4621      	mov	r1, r4
    267e:	2000      	movs	r0, #0
    2680:	f7ff fed9 	bl	2436 <uart_puts__polled>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/rtos_hooks.c:21
  }
    2684:	e7fe      	b.n	2684 <vApplicationStackOverflowHook+0x14>
    2686:	bf00      	nop
    2688:	0000ae62 	.word	0x0000ae62

0000268c <vApplicationMallocFailedHook>:
vApplicationMallocFailedHook():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/rtos_hooks.c:34
  halt((const char *)task_name);
}

// Invoked by FreeRTOS when there pvPortMalloc() function has encountered NULL
// pointer to memory request #if (0 != configUSE_MALLOC_FAILED_HOOK)
void vApplicationMallocFailedHook(void) {
    268c:	b508      	push	{r3, lr}
halt():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/rtos_hooks.c:19
  uart_puts__polled(UART__0, message);
    268e:	4902      	ldr	r1, [pc, #8]	; (2698 <vApplicationMallocFailedHook+0xc>)
    2690:	2000      	movs	r0, #0
    2692:	f7ff fed0 	bl	2436 <uart_puts__polled>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/rtos_hooks.c:21
  }
    2696:	e7fe      	b.n	2696 <vApplicationMallocFailedHook+0xa>
    2698:	0000ae28 	.word	0x0000ae28

0000269c <vApplicationIdleHook>:
vApplicationIdleHook():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/rtos_hooks.c:44
 * FreeRTOS note:
 * vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES, CALL A FUNCTION
 * THAT MIGHT BLOCK #if (0 != configUSE_IDLE_HOOK)
 */
void vApplicationIdleHook(void) {
  LPC_SC->PCON = 0; // Enter sleep mode
    269c:	4b02      	ldr	r3, [pc, #8]	; (26a8 <vApplicationIdleHook+0xc>)
    269e:	2200      	movs	r2, #0
    26a0:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/rtos_hooks.c:45
  __asm__("WFI");   // Wait for interrupt
    26a4:	bf30      	wfi
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/rtos_hooks.c:46
}
    26a6:	4770      	bx	lr
    26a8:	400fc000 	.word	0x400fc000

000026ac <configASSERT_callback>:
configASSERT_callback():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/rtos_hooks.c:55
void vApplicationTickHook(void) {
  ; // This code is invoked during each RTOS tick interrupt
}

// This is needed when we use '#ifdef configASSERT'
void configASSERT_callback(unsigned line, const char *message) {
    26ac:	b508      	push	{r3, lr}
    26ae:	460c      	mov	r4, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/rtos_hooks.c:56
  uart_puts__polled(UART__0, "FreeRTOS ASSERT() occurred indicating an error "
    26b0:	2000      	movs	r0, #0
    26b2:	490a      	ldr	r1, [pc, #40]	; (26dc <configASSERT_callback+0x30>)
    26b4:	f7ff febf 	bl	2436 <uart_puts__polled>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/rtos_hooks.c:58
                             "condition that should NEVER happen");
  uart_puts__polled(
    26b8:	4909      	ldr	r1, [pc, #36]	; (26e0 <configASSERT_callback+0x34>)
    26ba:	2000      	movs	r0, #0
    26bc:	f7ff febb 	bl	2436 <uart_puts__polled>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/rtos_hooks.c:61
      UART__0,
      " - Did you call a blocking API or non FromISR() API inside an ISR?");
  uart_puts__polled(UART__0,
    26c0:	4908      	ldr	r1, [pc, #32]	; (26e4 <configASSERT_callback+0x38>)
    26c2:	2000      	movs	r0, #0
    26c4:	f7ff feb7 	bl	2436 <uart_puts__polled>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/rtos_hooks.c:63
                    " - Did you forget to use fprintf(stderr) in an ISR?");
  uart_puts__polled(UART__0, "Here is the line of code that halted the CPU: ");
    26c8:	4907      	ldr	r1, [pc, #28]	; (26e8 <configASSERT_callback+0x3c>)
    26ca:	2000      	movs	r0, #0
    26cc:	f7ff feb3 	bl	2436 <uart_puts__polled>
halt():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/rtos_hooks.c:19
  uart_puts__polled(UART__0, message);
    26d0:	4621      	mov	r1, r4
    26d2:	2000      	movs	r0, #0
    26d4:	f7ff feaf 	bl	2436 <uart_puts__polled>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/rtos_hooks.c:21
  }
    26d8:	e7fe      	b.n	26d8 <configASSERT_callback+0x2c>
    26da:	bf00      	nop
    26dc:	0000ad30 	.word	0x0000ad30
    26e0:	0000ad82 	.word	0x0000ad82
    26e4:	0000adc5 	.word	0x0000adc5
    26e8:	0000adf9 	.word	0x0000adf9

000026ec <vApplicationGetIdleTaskMemory>:
vApplicationGetIdleTaskMemory():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/rtos_hooks.c:75
                                   StackType_t **ppxIdleTaskStackBuffer,
                                   uint32_t *pulIdleTaskStackSize) {
  static StaticTask_t xIdleTaskTCB;
  static StackType_t uxIdleTaskStack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer = &xIdleTaskTCB;     // memory for the idle task
    26ec:	4b03      	ldr	r3, [pc, #12]	; (26fc <vApplicationGetIdleTaskMemory+0x10>)
    26ee:	6003      	str	r3, [r0, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/rtos_hooks.c:76
  *ppxIdleTaskStackBuffer = uxIdleTaskStack; // stack memory for the idle task
    26f0:	4b03      	ldr	r3, [pc, #12]	; (2700 <vApplicationGetIdleTaskMemory+0x14>)
    26f2:	600b      	str	r3, [r1, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/rtos_hooks.c:77
  *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE; // stack memory size
    26f4:	2364      	movs	r3, #100	; 0x64
    26f6:	6013      	str	r3, [r2, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/rtos_hooks.c:78
}
    26f8:	4770      	bx	lr
    26fa:	bf00      	nop
    26fc:	100008a8 	.word	0x100008a8
    2700:	10000718 	.word	0x10000718

00002704 <freertos_hooks__get_run_time_counter_value>:
freertos_hooks__get_run_time_counter_value():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/rtos_hooks.c:81

// #if (0 != configGENERATE_RUN_TIME_STATS)
uint32_t freertos_hooks__get_run_time_counter_value(void) {
    2704:	b508      	push	{r3, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/rtos_hooks.c:82
  return (uint32_t)(sys_time__get_uptime_us() -
    2706:	f7ff fe77 	bl	23f8 <sys_time__get_uptime_us>
    270a:	4b02      	ldr	r3, [pc, #8]	; (2714 <freertos_hooks__get_run_time_counter_value+0x10>)
    270c:	681b      	ldr	r3, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l5_application/rtos_hooks.c:84
                    freertos_run_time_counter_offset);
}
    270e:	1ac0      	subs	r0, r0, r3
    2710:	bd08      	pop	{r3, pc}
    2712:	bf00      	nop
    2714:	10000710 	.word	0x10000710

00002718 <vPortSVCHandler_wrapper>:
invoke_function_in_wrapper():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/freertos_interrupt_handlers.c:25
 * Calling ISR in a wrapper causes RTOS crash when a task is using floating-point operations
 * We need to fully investigate it before re-enabling vRunTimeStatIsrEntry() and vRunTimeStatIsrExit()
 */
static void invoke_function_in_wrapper(function__void_f function) {
  // vRunTimeStatIsrEntry();
  function();
    2718:	f000 b85a 	b.w	27d0 <vPortSVCHandler>

0000271c <xPortPendSVHandler_wrapper>:
    271c:	f000 b8a0 	b.w	2860 <xPortPendSVHandler>

00002720 <xPortSysTickHandler_wrapper>:
    2720:	f000 b8d0 	b.w	28c4 <xPortSysTickHandler>

00002724 <prvPortStartFirstTask>:
prvPortStartFirstTask():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:279
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
    2724:	4808      	ldr	r0, [pc, #32]	; (2748 <prvPortStartFirstTask+0x24>)
    2726:	6800      	ldr	r0, [r0, #0]
    2728:	6800      	ldr	r0, [r0, #0]
    272a:	f380 8808 	msr	MSP, r0
    272e:	f04f 0000 	mov.w	r0, #0
    2732:	f380 8814 	msr	CONTROL, r0
    2736:	b662      	cpsie	i
    2738:	b661      	cpsie	f
    273a:	f3bf 8f4f 	dsb	sy
    273e:	f3bf 8f6f 	isb	sy
    2742:	df00      	svc	0
    2744:	bf00      	nop
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:293
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
    2746:	0000      	.short	0x0000
    2748:	e000ed08 	.word	0xe000ed08

0000274c <vPortEnableVFP>:
vPortEnableVFP():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:715
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
    274c:	f8df 000c 	ldr.w	r0, [pc, #12]	; 275c <vPortEnableVFP+0x10>
    2750:	6801      	ldr	r1, [r0, #0]
    2752:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
    2756:	6001      	str	r1, [r0, #0]
    2758:	4770      	bx	lr
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:724
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
    275a:	0000      	.short	0x0000
    275c:	e000ed88 	.word	0xe000ed88

00002760 <prvTaskExitError>:
prvTaskExitError():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:230
{
    2760:	b507      	push	{r0, r1, r2, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:231
volatile uint32_t ulDummy = 0;
    2762:	2300      	movs	r3, #0
    2764:	9301      	str	r3, [sp, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:239
	configASSERT( uxCriticalNesting == ~0UL );
    2766:	4b0b      	ldr	r3, [pc, #44]	; (2794 <prvTaskExitError+0x34>)
    2768:	681b      	ldr	r3, [r3, #0]
    276a:	3301      	adds	r3, #1
    276c:	d004      	beq.n	2778 <prvTaskExitError+0x18>
    276e:	490a      	ldr	r1, [pc, #40]	; (2798 <prvTaskExitError+0x38>)
    2770:	20ef      	movs	r0, #239	; 0xef
    2772:	f7ff ff9b 	bl	26ac <configASSERT_callback>
    2776:	e7fe      	b.n	2776 <prvTaskExitError+0x16>
vPortRaiseBASEPRI():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:195

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
    2778:	f04f 0318 	mov.w	r3, #24
    277c:	f383 8811 	msr	BASEPRI, r3
    2780:	f3bf 8f6f 	isb	sy
    2784:	f3bf 8f4f 	dsb	sy
prvTaskExitError():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:241 (discriminator 1)
	while( ulDummy == 0 )
    2788:	9b01      	ldr	r3, [sp, #4]
    278a:	2b00      	cmp	r3, #0
    278c:	d0fc      	beq.n	2788 <prvTaskExitError+0x28>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:251
}
    278e:	b003      	add	sp, #12
    2790:	f85d fb04 	ldr.w	pc, [sp], #4
    2794:	1000090c 	.word	0x1000090c
    2798:	0000ae7f 	.word	0x0000ae7f

0000279c <pxPortInitialiseStack>:
pxPortInitialiseStack():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:208
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
    279c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
    27a0:	f840 3c04 	str.w	r3, [r0, #-4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:212
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
    27a4:	4b07      	ldr	r3, [pc, #28]	; (27c4 <pxPortInitialiseStack+0x28>)
    27a6:	f840 3c0c 	str.w	r3, [r0, #-12]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:210
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
    27aa:	f021 0101 	bic.w	r1, r1, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:221
	*pxTopOfStack = portINITIAL_EXC_RETURN;
    27ae:	f06f 0302 	mvn.w	r3, #2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:210
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
    27b2:	f840 1c08 	str.w	r1, [r0, #-8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:216
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
    27b6:	f840 2c20 	str.w	r2, [r0, #-32]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:221
	*pxTopOfStack = portINITIAL_EXC_RETURN;
    27ba:	f840 3c24 	str.w	r3, [r0, #-36]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:226
}
    27be:	3844      	subs	r0, #68	; 0x44
    27c0:	4770      	bx	lr
    27c2:	bf00      	nop
    27c4:	00002761 	.word	0x00002761
    27c8:	ffffffff 	.word	0xffffffff
    27cc:	ffffffff 	.word	0xffffffff

000027d0 <vPortSVCHandler>:
vPortSVCHandler():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:256
	__asm volatile (
    27d0:	4b07      	ldr	r3, [pc, #28]	; (27f0 <pxCurrentTCBConst2>)
    27d2:	6819      	ldr	r1, [r3, #0]
    27d4:	6808      	ldr	r0, [r1, #0]
    27d6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    27da:	f380 8809 	msr	PSP, r0
    27de:	f3bf 8f6f 	isb	sy
    27e2:	f04f 0000 	mov.w	r0, #0
    27e6:	f380 8811 	msr	BASEPRI, r0
    27ea:	4770      	bx	lr
    27ec:	f3af 8000 	nop.w

000027f0 <pxCurrentTCBConst2>:
    27f0:	10000910 	.word	0x10000910

000027f4 <vPortEnterCritical>:
vPortEnterCritical():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:416
{
    27f4:	b508      	push	{r3, lr}
vPortRaiseBASEPRI():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:195
    27f6:	f04f 0318 	mov.w	r3, #24
    27fa:	f383 8811 	msr	BASEPRI, r3
    27fe:	f3bf 8f6f 	isb	sy
    2802:	f3bf 8f4f 	dsb	sy
vPortEnterCritical():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:418
	uxCriticalNesting++;
    2806:	4a09      	ldr	r2, [pc, #36]	; (282c <vPortEnterCritical+0x38>)
    2808:	6813      	ldr	r3, [r2, #0]
    280a:	3301      	adds	r3, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:425
	if( uxCriticalNesting == 1 )
    280c:	2b01      	cmp	r3, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:418
	uxCriticalNesting++;
    280e:	6013      	str	r3, [r2, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:425
	if( uxCriticalNesting == 1 )
    2810:	d10a      	bne.n	2828 <vPortEnterCritical+0x34>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:427
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
    2812:	4b07      	ldr	r3, [pc, #28]	; (2830 <vPortEnterCritical+0x3c>)
    2814:	681b      	ldr	r3, [r3, #0]
    2816:	f013 0fff 	tst.w	r3, #255	; 0xff
    281a:	d005      	beq.n	2828 <vPortEnterCritical+0x34>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:427 (discriminator 1)
    281c:	4905      	ldr	r1, [pc, #20]	; (2834 <vPortEnterCritical+0x40>)
    281e:	f240 10ab 	movw	r0, #427	; 0x1ab
    2822:	f7ff ff43 	bl	26ac <configASSERT_callback>
    2826:	e7fe      	b.n	2826 <vPortEnterCritical+0x32>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:429
}
    2828:	bd08      	pop	{r3, pc}
    282a:	bf00      	nop
    282c:	1000090c 	.word	0x1000090c
    2830:	e000ed04 	.word	0xe000ed04
    2834:	0000ae99 	.word	0x0000ae99

00002838 <vPortExitCritical>:
vPortExitCritical():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:434
	configASSERT( uxCriticalNesting );
    2838:	4a07      	ldr	r2, [pc, #28]	; (2858 <vPortExitCritical+0x20>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:433
{
    283a:	b508      	push	{r3, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:434
	configASSERT( uxCriticalNesting );
    283c:	6813      	ldr	r3, [r2, #0]
    283e:	b92b      	cbnz	r3, 284c <vPortExitCritical+0x14>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:434 (discriminator 1)
    2840:	4906      	ldr	r1, [pc, #24]	; (285c <vPortExitCritical+0x24>)
    2842:	f44f 70d9 	mov.w	r0, #434	; 0x1b2
    2846:	f7ff ff31 	bl	26ac <configASSERT_callback>
    284a:	e7fe      	b.n	284a <vPortExitCritical+0x12>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:435
	uxCriticalNesting--;
    284c:	3b01      	subs	r3, #1
    284e:	6013      	str	r3, [r2, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:436
	if( uxCriticalNesting == 0 )
    2850:	b90b      	cbnz	r3, 2856 <vPortExitCritical+0x1e>
vPortSetBASEPRI():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:229
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
    2852:	f383 8811 	msr	BASEPRI, r3
vPortExitCritical():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:440
}
    2856:	bd08      	pop	{r3, pc}
    2858:	1000090c 	.word	0x1000090c
    285c:	0000aece 	.word	0x0000aece

00002860 <xPortPendSVHandler>:
xPortPendSVHandler():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:447
	__asm volatile
    2860:	f3ef 8009 	mrs	r0, PSP
    2864:	f3bf 8f6f 	isb	sy
    2868:	4b15      	ldr	r3, [pc, #84]	; (28c0 <pxCurrentTCBConst>)
    286a:	681a      	ldr	r2, [r3, #0]
    286c:	f01e 0f10 	tst.w	lr, #16
    2870:	bf08      	it	eq
    2872:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
    2876:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    287a:	6010      	str	r0, [r2, #0]
    287c:	e92d 0009 	stmdb	sp!, {r0, r3}
    2880:	f04f 0018 	mov.w	r0, #24
    2884:	f380 8811 	msr	BASEPRI, r0
    2888:	f3bf 8f4f 	dsb	sy
    288c:	f3bf 8f6f 	isb	sy
    2890:	f001 f8d2 	bl	3a38 <vTaskSwitchContext>
    2894:	f04f 0000 	mov.w	r0, #0
    2898:	f380 8811 	msr	BASEPRI, r0
    289c:	bc09      	pop	{r0, r3}
    289e:	6819      	ldr	r1, [r3, #0]
    28a0:	6808      	ldr	r0, [r1, #0]
    28a2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    28a6:	f01e 0f10 	tst.w	lr, #16
    28aa:	bf08      	it	eq
    28ac:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
    28b0:	f380 8809 	msr	PSP, r0
    28b4:	f3bf 8f6f 	isb	sy
    28b8:	4770      	bx	lr
    28ba:	bf00      	nop
    28bc:	f3af 8000 	nop.w

000028c0 <pxCurrentTCBConst>:
    28c0:	10000910 	.word	0x10000910

000028c4 <xPortSysTickHandler>:
xPortSysTickHandler():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:501
{
    28c4:	b508      	push	{r3, lr}
vPortRaiseBASEPRI():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:195
	__asm volatile
    28c6:	f04f 0318 	mov.w	r3, #24
    28ca:	f383 8811 	msr	BASEPRI, r3
    28ce:	f3bf 8f6f 	isb	sy
    28d2:	f3bf 8f4f 	dsb	sy
xPortSysTickHandler():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:509
		if( xTaskIncrementTick() != pdFALSE )
    28d6:	f000 ff83 	bl	37e0 <xTaskIncrementTick>
    28da:	b118      	cbz	r0, 28e4 <xPortSysTickHandler+0x20>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:513
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
    28dc:	4b03      	ldr	r3, [pc, #12]	; (28ec <xPortSysTickHandler+0x28>)
    28de:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    28e2:	601a      	str	r2, [r3, #0]
vPortSetBASEPRI():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:229
	__asm volatile
    28e4:	2300      	movs	r3, #0
    28e6:	f383 8811 	msr	BASEPRI, r3
xPortSysTickHandler():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:517
}
    28ea:	bd08      	pop	{r3, pc}
    28ec:	e000ed04 	.word	0xe000ed04

000028f0 <vPortSetupTimerInterrupt>:
vPortSetupTimerInterrupt():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:692
{
    28f0:	b510      	push	{r4, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:704
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
    28f2:	4a08      	ldr	r2, [pc, #32]	; (2914 <vPortSetupTimerInterrupt+0x24>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:703
	portNVIC_SYSTICK_CTRL_REG = 0UL;
    28f4:	4c08      	ldr	r4, [pc, #32]	; (2918 <vPortSetupTimerInterrupt+0x28>)
    28f6:	2300      	movs	r3, #0
    28f8:	6023      	str	r3, [r4, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:704
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
    28fa:	6013      	str	r3, [r2, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:707
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
    28fc:	f7fd fc8e 	bl	21c <clock__get_core_clock_hz>
    2900:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
    2904:	fbb0 f0f3 	udiv	r0, r0, r3
    2908:	4b04      	ldr	r3, [pc, #16]	; (291c <vPortSetupTimerInterrupt+0x2c>)
    290a:	3801      	subs	r0, #1
    290c:	6018      	str	r0, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:708
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
    290e:	2307      	movs	r3, #7
    2910:	6023      	str	r3, [r4, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:709
}
    2912:	bd10      	pop	{r4, pc}
    2914:	e000e018 	.word	0xe000e018
    2918:	e000e010 	.word	0xe000e010
    291c:	e000e014 	.word	0xe000e014

00002920 <xPortStartScheduler>:
xPortStartScheduler():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:308
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
    2920:	4b33      	ldr	r3, [pc, #204]	; (29f0 <xPortStartScheduler+0xd0>)
    2922:	4a34      	ldr	r2, [pc, #208]	; (29f4 <xPortStartScheduler+0xd4>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:300
{
    2924:	b513      	push	{r0, r1, r4, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:308
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
    2926:	6819      	ldr	r1, [r3, #0]
    2928:	4291      	cmp	r1, r2
    292a:	d105      	bne.n	2938 <xPortStartScheduler+0x18>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:308 (discriminator 1)
    292c:	4932      	ldr	r1, [pc, #200]	; (29f8 <xPortStartScheduler+0xd8>)
    292e:	f44f 709a 	mov.w	r0, #308	; 0x134
    2932:	f7ff febb 	bl	26ac <configASSERT_callback>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:308 (discriminator 2)
    2936:	e7fe      	b.n	2936 <xPortStartScheduler+0x16>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:309
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
    2938:	681a      	ldr	r2, [r3, #0]
    293a:	4b30      	ldr	r3, [pc, #192]	; (29fc <xPortStartScheduler+0xdc>)
    293c:	429a      	cmp	r2, r3
    293e:	d105      	bne.n	294c <xPortStartScheduler+0x2c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:309 (discriminator 1)
    2940:	492f      	ldr	r1, [pc, #188]	; (2a00 <xPortStartScheduler+0xe0>)
    2942:	f240 1035 	movw	r0, #309	; 0x135
    2946:	f7ff feb1 	bl	26ac <configASSERT_callback>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:309 (discriminator 3)
    294a:	e7fe      	b.n	294a <xPortStartScheduler+0x2a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:323
		ulOriginalPriority = *pucFirstUserPriorityRegister;
    294c:	4b2d      	ldr	r3, [pc, #180]	; (2a04 <xPortStartScheduler+0xe4>)
    294e:	781a      	ldrb	r2, [r3, #0]
    2950:	b2d2      	uxtb	r2, r2
    2952:	9201      	str	r2, [sp, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:327
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
    2954:	22ff      	movs	r2, #255	; 0xff
    2956:	701a      	strb	r2, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:330
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
    2958:	781b      	ldrb	r3, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:333
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
    295a:	4a2b      	ldr	r2, [pc, #172]	; (2a08 <xPortStartScheduler+0xe8>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:330
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
    295c:	b2db      	uxtb	r3, r3
    295e:	f88d 3003 	strb.w	r3, [sp, #3]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:333
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
    2962:	f89d 3003 	ldrb.w	r3, [sp, #3]
    2966:	f003 0318 	and.w	r3, r3, #24
    296a:	7013      	strb	r3, [r2, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:337
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
    296c:	4a27      	ldr	r2, [pc, #156]	; (2a0c <xPortStartScheduler+0xec>)
    296e:	2307      	movs	r3, #7
    2970:	6013      	str	r3, [r2, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:338
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
    2972:	2100      	movs	r1, #0
    2974:	f89d 0003 	ldrb.w	r0, [sp, #3]
    2978:	0600      	lsls	r0, r0, #24
    297a:	f103 34ff 	add.w	r4, r3, #4294967295	; 0xffffffff
    297e:	d409      	bmi.n	2994 <xPortStartScheduler+0x74>
    2980:	b111      	cbz	r1, 2988 <xPortStartScheduler+0x68>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:349
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == __NVIC_PRIO_BITS );
    2982:	2b02      	cmp	r3, #2
    2984:	6013      	str	r3, [r2, #0]
    2986:	d00e      	beq.n	29a6 <xPortStartScheduler+0x86>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:349 (discriminator 1)
    2988:	4921      	ldr	r1, [pc, #132]	; (2a10 <xPortStartScheduler+0xf0>)
    298a:	f240 105d 	movw	r0, #349	; 0x15d
    298e:	f7ff fe8d 	bl	26ac <configASSERT_callback>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:349 (discriminator 4)
    2992:	e7fe      	b.n	2992 <xPortStartScheduler+0x72>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:341
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
    2994:	f89d 3003 	ldrb.w	r3, [sp, #3]
    2998:	005b      	lsls	r3, r3, #1
    299a:	b2db      	uxtb	r3, r3
    299c:	f88d 3003 	strb.w	r3, [sp, #3]
    29a0:	2101      	movs	r1, #1
    29a2:	4623      	mov	r3, r4
    29a4:	e7e6      	b.n	2974 <xPortStartScheduler+0x54>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:365
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
    29a6:	f44f 7300 	mov.w	r3, #512	; 0x200
    29aa:	6013      	str	r3, [r2, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:369
		*pucFirstUserPriorityRegister = ulOriginalPriority;
    29ac:	9b01      	ldr	r3, [sp, #4]
    29ae:	4a15      	ldr	r2, [pc, #84]	; (2a04 <xPortStartScheduler+0xe4>)
    29b0:	b2db      	uxtb	r3, r3
    29b2:	7013      	strb	r3, [r2, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:374
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
    29b4:	4b17      	ldr	r3, [pc, #92]	; (2a14 <xPortStartScheduler+0xf4>)
    29b6:	681a      	ldr	r2, [r3, #0]
    29b8:	f442 0278 	orr.w	r2, r2, #16252928	; 0xf80000
    29bc:	601a      	str	r2, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:375
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
    29be:	681a      	ldr	r2, [r3, #0]
    29c0:	f042 4278 	orr.w	r2, r2, #4160749568	; 0xf8000000
    29c4:	601a      	str	r2, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:379
	vPortSetupTimerInterrupt();
    29c6:	f7ff ff93 	bl	28f0 <vPortSetupTimerInterrupt>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:382
	uxCriticalNesting = 0;
    29ca:	4b13      	ldr	r3, [pc, #76]	; (2a18 <xPortStartScheduler+0xf8>)
    29cc:	2400      	movs	r4, #0
    29ce:	601c      	str	r4, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:385
	vPortEnableVFP();
    29d0:	f7ff febc 	bl	274c <vPortEnableVFP>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:388
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
    29d4:	4a11      	ldr	r2, [pc, #68]	; (2a1c <xPortStartScheduler+0xfc>)
    29d6:	6813      	ldr	r3, [r2, #0]
    29d8:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
    29dc:	6013      	str	r3, [r2, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:391
	prvPortStartFirstTask();
    29de:	f7ff fea1 	bl	2724 <prvPortStartFirstTask>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:399
	vTaskSwitchContext();
    29e2:	f001 f829 	bl	3a38 <vTaskSwitchContext>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:400
	prvTaskExitError();
    29e6:	f7ff febb 	bl	2760 <prvTaskExitError>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:404
}
    29ea:	4620      	mov	r0, r4
    29ec:	b002      	add	sp, #8
    29ee:	bd10      	pop	{r4, pc}
    29f0:	e000ed00 	.word	0xe000ed00
    29f4:	410fc271 	.word	0x410fc271
    29f8:	0000af4c 	.word	0x0000af4c
    29fc:	410fc270 	.word	0x410fc270
    2a00:	0000af6f 	.word	0x0000af6f
    2a04:	e000e400 	.word	0xe000e400
    2a08:	10000904 	.word	0x10000904
    2a0c:	10000908 	.word	0x10000908
    2a10:	0000af92 	.word	0x0000af92
    2a14:	e000ed20 	.word	0xe000ed20
    2a18:	1000090c 	.word	0x1000090c
    2a1c:	e000ef34 	.word	0xe000ef34

00002a20 <vPortValidateInterruptPriority>:
vPortValidateInterruptPriority():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:730
/*-----------------------------------------------------------*/

#if( configASSERT_DEFINED == 1 )

	void vPortValidateInterruptPriority( void )
	{
    2a20:	b508      	push	{r3, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:735
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
    2a22:	f3ef 8305 	mrs	r3, IPSR
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:738

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
    2a26:	2b0f      	cmp	r3, #15
    2a28:	d90b      	bls.n	2a42 <vPortValidateInterruptPriority+0x22>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:741
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
    2a2a:	4a0d      	ldr	r2, [pc, #52]	; (2a60 <vPortValidateInterruptPriority+0x40>)
    2a2c:	5c9b      	ldrb	r3, [r3, r2]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:766
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
    2a2e:	4a0d      	ldr	r2, [pc, #52]	; (2a64 <vPortValidateInterruptPriority+0x44>)
    2a30:	7812      	ldrb	r2, [r2, #0]
    2a32:	429a      	cmp	r2, r3
    2a34:	d905      	bls.n	2a42 <vPortValidateInterruptPriority+0x22>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:766 (discriminator 1)
    2a36:	490c      	ldr	r1, [pc, #48]	; (2a68 <vPortValidateInterruptPriority+0x48>)
    2a38:	f240 20fe 	movw	r0, #766	; 0x2fe
    2a3c:	f7ff fe36 	bl	26ac <configASSERT_callback>
    2a40:	e7fe      	b.n	2a40 <vPortValidateInterruptPriority+0x20>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:782
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
    2a42:	4b0a      	ldr	r3, [pc, #40]	; (2a6c <vPortValidateInterruptPriority+0x4c>)
    2a44:	4a0a      	ldr	r2, [pc, #40]	; (2a70 <vPortValidateInterruptPriority+0x50>)
    2a46:	681b      	ldr	r3, [r3, #0]
    2a48:	6812      	ldr	r2, [r2, #0]
    2a4a:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
    2a4e:	4293      	cmp	r3, r2
    2a50:	d905      	bls.n	2a5e <vPortValidateInterruptPriority+0x3e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:782 (discriminator 1)
    2a52:	4908      	ldr	r1, [pc, #32]	; (2a74 <vPortValidateInterruptPriority+0x54>)
    2a54:	f240 300e 	movw	r0, #782	; 0x30e
    2a58:	f7ff fe28 	bl	26ac <configASSERT_callback>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:782 (discriminator 2)
    2a5c:	e7fe      	b.n	2a5c <vPortValidateInterruptPriority+0x3c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/port.c:783
	}
    2a5e:	bd08      	pop	{r3, pc}
    2a60:	e000e3f0 	.word	0xe000e3f0
    2a64:	10000904 	.word	0x10000904
    2a68:	0000aee0 	.word	0x0000aee0
    2a6c:	e000ed0c 	.word	0xe000ed0c
    2a70:	10000908 	.word	0x10000908
    2a74:	0000af0a 	.word	0x0000af0a

00002a78 <pvPortMalloc>:
pvPortMalloc():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/memmang/heap_3.c:59
#endif

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
    2a78:	b510      	push	{r4, lr}
    2a7a:	4604      	mov	r4, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/memmang/heap_3.c:62
void *pvReturn;

	vTaskSuspendAll();
    2a7c:	f000 fea8 	bl	37d0 <vTaskSuspendAll>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/memmang/heap_3.c:64
	{
		pvReturn = malloc( xWantedSize );
    2a80:	4620      	mov	r0, r4
    2a82:	f002 fb2f 	bl	50e4 <malloc>
    2a86:	4604      	mov	r4, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/memmang/heap_3.c:67
		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
    2a88:	f000 ff3c 	bl	3904 <xTaskResumeAll>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/memmang/heap_3.c:71

	#if( configUSE_MALLOC_FAILED_HOOK == 1 )
	{
		if( pvReturn == NULL )
    2a8c:	b90c      	cbnz	r4, 2a92 <pvPortMalloc+0x1a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/memmang/heap_3.c:74
		{
			extern void vApplicationMallocFailedHook( void );
			vApplicationMallocFailedHook();
    2a8e:	f7ff fdfd 	bl	268c <vApplicationMallocFailedHook>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/memmang/heap_3.c:80
		}
	}
	#endif

	return pvReturn;
}
    2a92:	4620      	mov	r0, r4
    2a94:	bd10      	pop	{r4, pc}

00002a96 <vPortFree>:
vPortFree():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/memmang/heap_3.c:84
/*-----------------------------------------------------------*/

void vPortFree( void *pv )
{
    2a96:	b510      	push	{r4, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/memmang/heap_3.c:85
	if( pv )
    2a98:	4604      	mov	r4, r0
    2a9a:	b140      	cbz	r0, 2aae <vPortFree+0x18>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/memmang/heap_3.c:87
	{
		vTaskSuspendAll();
    2a9c:	f000 fe98 	bl	37d0 <vTaskSuspendAll>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/memmang/heap_3.c:89
		{
			free( pv );
    2aa0:	4620      	mov	r0, r4
    2aa2:	f002 fb27 	bl	50f4 <free>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/memmang/heap_3.c:94
			traceFREE( pv, 0 );
		}
		( void ) xTaskResumeAll();
	}
}
    2aa6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/memmang/heap_3.c:92
		( void ) xTaskResumeAll();
    2aaa:	f000 bf2b 	b.w	3904 <xTaskResumeAll>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/memmang/heap_3.c:94
}
    2aae:	bd10      	pop	{r4, pc}

00002ab0 <vListInitialise>:
vListInitialise():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:42
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
    2ab0:	f100 0308 	add.w	r3, r0, #8
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:46

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
    2ab4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:42
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
    2ab8:	6043      	str	r3, [r0, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:50

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
    2aba:	e9c0 2302 	strd	r2, r3, [r0, #8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:51
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
    2abe:	6103      	str	r3, [r0, #16]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:53

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
    2ac0:	2300      	movs	r3, #0
    2ac2:	6003      	str	r3, [r0, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:59

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
    2ac4:	4770      	bx	lr

00002ac6 <vListInitialiseItem>:
vListInitialiseItem():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:65
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
    2ac6:	2300      	movs	r3, #0
    2ac8:	6103      	str	r3, [r0, #16]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:71

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
    2aca:	4770      	bx	lr

00002acc <vListInsertEnd>:
vListInsertEnd():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:76
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
    2acc:	6843      	ldr	r3, [r0, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:87
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
    2ace:	604b      	str	r3, [r1, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:88
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
    2ad0:	689a      	ldr	r2, [r3, #8]
    2ad2:	608a      	str	r2, [r1, #8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:93

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
    2ad4:	689a      	ldr	r2, [r3, #8]
    2ad6:	6051      	str	r1, [r2, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:94
	pxIndex->pxPrevious = pxNewListItem;
    2ad8:	6099      	str	r1, [r3, #8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:99

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
    2ada:	6803      	ldr	r3, [r0, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:97
	pxNewListItem->pxContainer = pxList;
    2adc:	6108      	str	r0, [r1, #16]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:99
	( pxList->uxNumberOfItems )++;
    2ade:	3301      	adds	r3, #1
    2ae0:	6003      	str	r3, [r0, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:100
}
    2ae2:	4770      	bx	lr

00002ae4 <vListInsert>:
vListInsert():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:106
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
    2ae4:	680a      	ldr	r2, [r1, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:122
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
    2ae6:	1c53      	adds	r3, r2, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:104
{
    2ae8:	b530      	push	{r4, r5, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:122
	if( xValueOfInsertion == portMAX_DELAY )
    2aea:	d10a      	bne.n	2b02 <vListInsert+0x1e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:124
	{
		pxIterator = pxList->xListEnd.pxPrevious;
    2aec:	6903      	ldr	r3, [r0, #16]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:157
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
    2aee:	685a      	ldr	r2, [r3, #4]
    2af0:	604a      	str	r2, [r1, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:158
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
    2af2:	6091      	str	r1, [r2, #8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:159
	pxNewListItem->pxPrevious = pxIterator;
    2af4:	608b      	str	r3, [r1, #8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:160
	pxIterator->pxNext = pxNewListItem;
    2af6:	6059      	str	r1, [r3, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:166

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
    2af8:	6803      	ldr	r3, [r0, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:164
	pxNewListItem->pxContainer = pxList;
    2afa:	6108      	str	r0, [r1, #16]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:166
	( pxList->uxNumberOfItems )++;
    2afc:	3301      	adds	r3, #1
    2afe:	6003      	str	r3, [r0, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:167
}
    2b00:	bd30      	pop	{r4, r5, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:150
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
    2b02:	f100 0308 	add.w	r3, r0, #8
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:150 (discriminator 1)
    2b06:	685c      	ldr	r4, [r3, #4]
    2b08:	6825      	ldr	r5, [r4, #0]
    2b0a:	4295      	cmp	r5, r2
    2b0c:	d8ef      	bhi.n	2aee <vListInsert+0xa>
    2b0e:	4623      	mov	r3, r4
    2b10:	e7f9      	b.n	2b06 <vListInsert+0x22>

00002b12 <uxListRemove>:
uxListRemove():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:176
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
    2b12:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:174
List_t * const pxList = pxItemToRemove->pxContainer;
    2b16:	6903      	ldr	r3, [r0, #16]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:176
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
    2b18:	608a      	str	r2, [r1, #8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:177
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
    2b1a:	6051      	str	r1, [r2, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:183

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
    2b1c:	6859      	ldr	r1, [r3, #4]
    2b1e:	4281      	cmp	r1, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:185
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
    2b20:	bf08      	it	eq
    2b22:	605a      	streq	r2, [r3, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:192
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
    2b24:	2200      	movs	r2, #0
    2b26:	6102      	str	r2, [r0, #16]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:193
	( pxList->uxNumberOfItems )--;
    2b28:	681a      	ldr	r2, [r3, #0]
    2b2a:	3a01      	subs	r2, #1
    2b2c:	601a      	str	r2, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:195

	return pxList->uxNumberOfItems;
    2b2e:	6818      	ldr	r0, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/list.c:196
}
    2b30:	4770      	bx	lr

00002b32 <prvIsQueueEmpty>:
prvIsQueueEmpty():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2288
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
    2b32:	b510      	push	{r4, lr}
    2b34:	4604      	mov	r4, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2291
BaseType_t xReturn;

	taskENTER_CRITICAL();
    2b36:	f7ff fe5d 	bl	27f4 <vPortEnterCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2293
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
    2b3a:	6ba4      	ldr	r4, [r4, #56]	; 0x38
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2302
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
    2b3c:	f7ff fe7c 	bl	2838 <vPortExitCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2305

	return xReturn;
}
    2b40:	fab4 f084 	clz	r0, r4
    2b44:	0940      	lsrs	r0, r0, #5
    2b46:	bd10      	pop	{r4, pc}

00002b48 <prvCopyDataToQueue>:
prvCopyDataToQueue():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2071
{
    2b48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2b4a:	4615      	mov	r5, r2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2079
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
    2b4c:	6c02      	ldr	r2, [r0, #64]	; 0x40
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2077
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
    2b4e:	6b86      	ldr	r6, [r0, #56]	; 0x38
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2071
{
    2b50:	4604      	mov	r4, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2079
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
    2b52:	b952      	cbnz	r2, 2b6a <prvCopyDataToQueue+0x22>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2083
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
    2b54:	6807      	ldr	r7, [r0, #0]
    2b56:	bb47      	cbnz	r7, 2baa <prvCopyDataToQueue+0x62>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2086
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
    2b58:	6880      	ldr	r0, [r0, #8]
    2b5a:	f001 f93b 	bl	3dd4 <xTaskPriorityDisinherit>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2087
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
    2b5e:	60a7      	str	r7, [r4, #8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2086
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
    2b60:	4605      	mov	r5, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2143
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
    2b62:	3601      	adds	r6, #1
    2b64:	63a6      	str	r6, [r4, #56]	; 0x38
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2146
}
    2b66:	4628      	mov	r0, r5
    2b68:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2096
	else if( xPosition == queueSEND_TO_BACK )
    2b6a:	b965      	cbnz	r5, 2b86 <prvCopyDataToQueue+0x3e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2098
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
    2b6c:	6840      	ldr	r0, [r0, #4]
    2b6e:	f002 fac9 	bl	5104 <memcpy>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2099
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
    2b72:	6863      	ldr	r3, [r4, #4]
    2b74:	6c22      	ldr	r2, [r4, #64]	; 0x40
    2b76:	4413      	add	r3, r2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2100
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
    2b78:	68a2      	ldr	r2, [r4, #8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2099
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
    2b7a:	6063      	str	r3, [r4, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2100
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
    2b7c:	4293      	cmp	r3, r2
    2b7e:	d3f0      	bcc.n	2b62 <prvCopyDataToQueue+0x1a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2102
			pxQueue->pcWriteTo = pxQueue->pcHead;
    2b80:	6823      	ldr	r3, [r4, #0]
    2b82:	6063      	str	r3, [r4, #4]
    2b84:	e7ed      	b.n	2b62 <prvCopyDataToQueue+0x1a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2111
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
    2b86:	68c0      	ldr	r0, [r0, #12]
    2b88:	f002 fabc 	bl	5104 <memcpy>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2112
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
    2b8c:	6c23      	ldr	r3, [r4, #64]	; 0x40
    2b8e:	68e2      	ldr	r2, [r4, #12]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2113
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
    2b90:	6821      	ldr	r1, [r4, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2112
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
    2b92:	425b      	negs	r3, r3
    2b94:	441a      	add	r2, r3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2113
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
    2b96:	428a      	cmp	r2, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2112
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
    2b98:	60e2      	str	r2, [r4, #12]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2115
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
    2b9a:	bf3e      	ittt	cc
    2b9c:	68a2      	ldrcc	r2, [r4, #8]
    2b9e:	189b      	addcc	r3, r3, r2
    2ba0:	60e3      	strcc	r3, [r4, #12]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2122
		if( xPosition == queueOVERWRITE )
    2ba2:	2d02      	cmp	r5, #2
    2ba4:	d101      	bne.n	2baa <prvCopyDataToQueue+0x62>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2124
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
    2ba6:	b116      	cbz	r6, 2bae <prvCopyDataToQueue+0x66>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2130
				--uxMessagesWaiting;
    2ba8:	3e01      	subs	r6, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2072
BaseType_t xReturn = pdFALSE;
    2baa:	2500      	movs	r5, #0
    2bac:	e7d9      	b.n	2b62 <prvCopyDataToQueue+0x1a>
    2bae:	4635      	mov	r5, r6
    2bb0:	e7d7      	b.n	2b62 <prvCopyDataToQueue+0x1a>

00002bb2 <prvCopyDataFromQueue>:
prvCopyDataFromQueue():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2150
{
    2bb2:	4603      	mov	r3, r0
    2bb4:	b410      	push	{r4}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2151
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
    2bb6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2150
{
    2bb8:	4608      	mov	r0, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2151
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
    2bba:	b162      	cbz	r2, 2bd6 <prvCopyDataFromQueue+0x24>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2153
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
    2bbc:	68d9      	ldr	r1, [r3, #12]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2154
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
    2bbe:	689c      	ldr	r4, [r3, #8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2153
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
    2bc0:	4411      	add	r1, r2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2154
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
    2bc2:	42a1      	cmp	r1, r4
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2153
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
    2bc4:	60d9      	str	r1, [r3, #12]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2156
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
    2bc6:	bf24      	itt	cs
    2bc8:	6819      	ldrcs	r1, [r3, #0]
    2bca:	60d9      	strcs	r1, [r3, #12]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2162
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
    2bcc:	68d9      	ldr	r1, [r3, #12]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2164
}
    2bce:	f85d 4b04 	ldr.w	r4, [sp], #4
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2162
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
    2bd2:	f002 ba97 	b.w	5104 <memcpy>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2164
}
    2bd6:	f85d 4b04 	ldr.w	r4, [sp], #4
    2bda:	4770      	bx	lr

00002bdc <prvUnlockQueue>:
prvUnlockQueue():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2168
{
    2bdc:	b570      	push	{r4, r5, r6, lr}
    2bde:	4604      	mov	r4, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2175
	taskENTER_CRITICAL();
    2be0:	f7ff fe08 	bl	27f4 <vPortEnterCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2177
		int8_t cTxLock = pxQueue->cTxLock;
    2be4:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2230
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
    2be8:	f104 0624 	add.w	r6, r4, #36	; 0x24
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2177
		int8_t cTxLock = pxQueue->cTxLock;
    2bec:	b26d      	sxtb	r5, r5
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2180
		while( cTxLock > queueLOCKED_UNMODIFIED )
    2bee:	2d00      	cmp	r5, #0
    2bf0:	dc14      	bgt.n	2c1c <prvUnlockQueue+0x40>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2251
		pxQueue->cTxLock = queueUNLOCKED;
    2bf2:	23ff      	movs	r3, #255	; 0xff
    2bf4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2253
	taskEXIT_CRITICAL();
    2bf8:	f7ff fe1e 	bl	2838 <vPortExitCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2256
	taskENTER_CRITICAL();
    2bfc:	f7ff fdfa 	bl	27f4 <vPortEnterCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2258
		int8_t cRxLock = pxQueue->cRxLock;
    2c00:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2264
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
    2c04:	f104 0610 	add.w	r6, r4, #16
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2258
		int8_t cRxLock = pxQueue->cRxLock;
    2c08:	b26d      	sxtb	r5, r5
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2260
		while( cRxLock > queueLOCKED_UNMODIFIED )
    2c0a:	2d00      	cmp	r5, #0
    2c0c:	dc12      	bgt.n	2c34 <prvUnlockQueue+0x58>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2281
		pxQueue->cRxLock = queueUNLOCKED;
    2c0e:	23ff      	movs	r3, #255	; 0xff
    2c10:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2284
}
    2c14:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2283
	taskEXIT_CRITICAL();
    2c18:	f7ff be0e 	b.w	2838 <vPortExitCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2228
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
    2c1c:	6a63      	ldr	r3, [r4, #36]	; 0x24
    2c1e:	2b00      	cmp	r3, #0
    2c20:	d0e7      	beq.n	2bf2 <prvUnlockQueue+0x16>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2230
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
    2c22:	4630      	mov	r0, r6
    2c24:	f000 ffe8 	bl	3bf8 <xTaskRemoveFromEventList>
    2c28:	b108      	cbz	r0, 2c2e <prvUnlockQueue+0x52>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2234
						vTaskMissedYield();
    2c2a:	f001 f86b 	bl	3d04 <vTaskMissedYield>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2248
			--cTxLock;
    2c2e:	3d01      	subs	r5, #1
    2c30:	b26d      	sxtb	r5, r5
    2c32:	e7dc      	b.n	2bee <prvUnlockQueue+0x12>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2262
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
    2c34:	6923      	ldr	r3, [r4, #16]
    2c36:	2b00      	cmp	r3, #0
    2c38:	d0e9      	beq.n	2c0e <prvUnlockQueue+0x32>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2264
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
    2c3a:	4630      	mov	r0, r6
    2c3c:	f000 ffdc 	bl	3bf8 <xTaskRemoveFromEventList>
    2c40:	b108      	cbz	r0, 2c46 <prvUnlockQueue+0x6a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2266
					vTaskMissedYield();
    2c42:	f001 f85f 	bl	3d04 <vTaskMissedYield>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2273
				--cRxLock;
    2c46:	3d01      	subs	r5, #1
    2c48:	b26d      	sxtb	r5, r5
    2c4a:	e7de      	b.n	2c0a <prvUnlockQueue+0x2e>

00002c4c <xQueueGenericReset>:
xQueueGenericReset():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:256
{
    2c4c:	b538      	push	{r3, r4, r5, lr}
    2c4e:	460d      	mov	r5, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:259
	configASSERT( pxQueue );
    2c50:	4604      	mov	r4, r0
    2c52:	b928      	cbnz	r0, 2c60 <xQueueGenericReset+0x14>
    2c54:	491a      	ldr	r1, [pc, #104]	; (2cc0 <xQueueGenericReset+0x74>)
    2c56:	f240 1003 	movw	r0, #259	; 0x103
    2c5a:	f7ff fd27 	bl	26ac <configASSERT_callback>
    2c5e:	e7fe      	b.n	2c5e <xQueueGenericReset+0x12>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:261
	taskENTER_CRITICAL();
    2c60:	f7ff fdc8 	bl	27f4 <vPortEnterCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:263
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
    2c64:	e9d4 300f 	ldrd	r3, r0, [r4, #60]	; 0x3c
    2c68:	6822      	ldr	r2, [r4, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:265
		pxQueue->pcWriteTo = pxQueue->pcHead;
    2c6a:	6062      	str	r2, [r4, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:263
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
    2c6c:	4343      	muls	r3, r0
    2c6e:	18d1      	adds	r1, r2, r3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:266
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
    2c70:	1a1b      	subs	r3, r3, r0
    2c72:	4413      	add	r3, r2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:263
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
    2c74:	60a1      	str	r1, [r4, #8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:266
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
    2c76:	60e3      	str	r3, [r4, #12]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:264
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
    2c78:	2100      	movs	r1, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:267
		pxQueue->cRxLock = queueUNLOCKED;
    2c7a:	23ff      	movs	r3, #255	; 0xff
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:264
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
    2c7c:	63a1      	str	r1, [r4, #56]	; 0x38
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:267
		pxQueue->cRxLock = queueUNLOCKED;
    2c7e:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:268
		pxQueue->cTxLock = queueUNLOCKED;
    2c82:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:270
		if( xNewQueue == pdFALSE )
    2c86:	b995      	cbnz	r5, 2cae <xQueueGenericReset+0x62>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:277
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
    2c88:	6923      	ldr	r3, [r4, #16]
    2c8a:	b163      	cbz	r3, 2ca6 <xQueueGenericReset+0x5a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:279
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
    2c8c:	f104 0010 	add.w	r0, r4, #16
    2c90:	f000 ffb2 	bl	3bf8 <xTaskRemoveFromEventList>
    2c94:	b138      	cbz	r0, 2ca6 <xQueueGenericReset+0x5a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:281
					queueYIELD_IF_USING_PREEMPTION();
    2c96:	4b0b      	ldr	r3, [pc, #44]	; (2cc4 <xQueueGenericReset+0x78>)
    2c98:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    2c9c:	601a      	str	r2, [r3, #0]
    2c9e:	f3bf 8f4f 	dsb	sy
    2ca2:	f3bf 8f6f 	isb	sy
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:300
	taskEXIT_CRITICAL();
    2ca6:	f7ff fdc7 	bl	2838 <vPortExitCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:305
}
    2caa:	2001      	movs	r0, #1
    2cac:	bd38      	pop	{r3, r4, r5, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:296
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
    2cae:	f104 0010 	add.w	r0, r4, #16
    2cb2:	f7ff fefd 	bl	2ab0 <vListInitialise>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:297
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
    2cb6:	f104 0024 	add.w	r0, r4, #36	; 0x24
    2cba:	f7ff fef9 	bl	2ab0 <vListInitialise>
    2cbe:	e7f2      	b.n	2ca6 <xQueueGenericReset+0x5a>
    2cc0:	0000b098 	.word	0x0000b098
    2cc4:	e000ed04 	.word	0xe000ed04

00002cc8 <xQueueGenericCreateStatic>:
xQueueGenericCreateStatic():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:311
	{
    2cc8:	b513      	push	{r0, r1, r4, lr}
    2cca:	461c      	mov	r4, r3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:314
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
    2ccc:	b928      	cbnz	r0, 2cda <xQueueGenericCreateStatic+0x12>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:314 (discriminator 1)
    2cce:	491e      	ldr	r1, [pc, #120]	; (2d48 <xQueueGenericCreateStatic+0x80>)
    2cd0:	f44f 709d 	mov.w	r0, #314	; 0x13a
    2cd4:	f7ff fcea 	bl	26ac <configASSERT_callback>
    2cd8:	e7fe      	b.n	2cd8 <xQueueGenericCreateStatic+0x10>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:318
		configASSERT( pxStaticQueue != NULL );
    2cda:	b92b      	cbnz	r3, 2ce8 <xQueueGenericCreateStatic+0x20>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:318 (discriminator 1)
    2cdc:	491b      	ldr	r1, [pc, #108]	; (2d4c <xQueueGenericCreateStatic+0x84>)
    2cde:	f44f 709f 	mov.w	r0, #318	; 0x13e
    2ce2:	f7ff fce3 	bl	26ac <configASSERT_callback>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:318 (discriminator 2)
    2ce6:	e7fe      	b.n	2ce6 <xQueueGenericCreateStatic+0x1e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:322
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
    2ce8:	b132      	cbz	r2, 2cf8 <xQueueGenericCreateStatic+0x30>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:322 (discriminator 1)
    2cea:	b961      	cbnz	r1, 2d06 <xQueueGenericCreateStatic+0x3e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:322 (discriminator 2)
    2cec:	4918      	ldr	r1, [pc, #96]	; (2d50 <xQueueGenericCreateStatic+0x88>)
    2cee:	f44f 70a1 	mov.w	r0, #322	; 0x142
    2cf2:	f7ff fcdb 	bl	26ac <configASSERT_callback>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:322 (discriminator 3)
    2cf6:	e7fe      	b.n	2cf6 <xQueueGenericCreateStatic+0x2e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:323 (discriminator 1)
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
    2cf8:	b129      	cbz	r1, 2d06 <xQueueGenericCreateStatic+0x3e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:323
    2cfa:	4916      	ldr	r1, [pc, #88]	; (2d54 <xQueueGenericCreateStatic+0x8c>)
    2cfc:	f240 1043 	movw	r0, #323	; 0x143
    2d00:	f7ff fcd4 	bl	26ac <configASSERT_callback>
    2d04:	e7fe      	b.n	2d04 <xQueueGenericCreateStatic+0x3c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:330
			volatile size_t xSize = sizeof( StaticQueue_t );
    2d06:	2350      	movs	r3, #80	; 0x50
    2d08:	9301      	str	r3, [sp, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:331
			configASSERT( xSize == sizeof( Queue_t ) );
    2d0a:	9b01      	ldr	r3, [sp, #4]
    2d0c:	2b50      	cmp	r3, #80	; 0x50
    2d0e:	d005      	beq.n	2d1c <xQueueGenericCreateStatic+0x54>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:331 (discriminator 1)
    2d10:	4911      	ldr	r1, [pc, #68]	; (2d58 <xQueueGenericCreateStatic+0x90>)
    2d12:	f240 104b 	movw	r0, #331	; 0x14b
    2d16:	f7ff fcc9 	bl	26ac <configASSERT_callback>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:331 (discriminator 5)
    2d1a:	e7fe      	b.n	2d1a <xQueueGenericCreateStatic+0x52>
prvInitialiseNewQueue():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:435
	if( uxItemSize == ( UBaseType_t ) 0 )
    2d1c:	2900      	cmp	r1, #0
    2d1e:	bf08      	it	eq
    2d20:	4622      	moveq	r2, r4
xQueueGenericCreateStatic():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:332
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
    2d22:	9b01      	ldr	r3, [sp, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:348
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
    2d24:	6022      	str	r2, [r4, #0]
    2d26:	2301      	movs	r3, #1
prvInitialiseNewQueue():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:452
	pxNewQueue->uxItemSize = uxItemSize;
    2d28:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
xQueueGenericCreateStatic():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:348
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
    2d2c:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
prvInitialiseNewQueue():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:453
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
    2d30:	4619      	mov	r1, r3
    2d32:	4620      	mov	r0, r4
    2d34:	f7ff ff8a 	bl	2c4c <xQueueGenericReset>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:457
		pxNewQueue->ucQueueType = ucQueueType;
    2d38:	f89d 3010 	ldrb.w	r3, [sp, #16]
    2d3c:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
xQueueGenericCreateStatic():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:361
	}
    2d40:	4620      	mov	r0, r4
    2d42:	b002      	add	sp, #8
    2d44:	bd10      	pop	{r4, pc}
    2d46:	bf00      	nop
    2d48:	0000afd5 	.word	0x0000afd5
    2d4c:	0000aff7 	.word	0x0000aff7
    2d50:	0000b00d 	.word	0x0000b00d
    2d54:	0000b045 	.word	0x0000b045
    2d58:	0000b07d 	.word	0x0000b07d

00002d5c <xQueueGenericCreate>:
xQueueGenericCreate():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:369
	{
    2d5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2d5e:	460d      	mov	r5, r1
    2d60:	4617      	mov	r7, r2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:374
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
    2d62:	4606      	mov	r6, r0
    2d64:	b928      	cbnz	r0, 2d72 <xQueueGenericCreate+0x16>
    2d66:	490f      	ldr	r1, [pc, #60]	; (2da4 <xQueueGenericCreate+0x48>)
    2d68:	f44f 70bb 	mov.w	r0, #374	; 0x176
    2d6c:	f7ff fc9e 	bl	26ac <configASSERT_callback>
    2d70:	e7fe      	b.n	2d70 <xQueueGenericCreate+0x14>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:385
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    2d72:	4348      	muls	r0, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:397
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
    2d74:	3050      	adds	r0, #80	; 0x50
    2d76:	f7ff fe7f 	bl	2a78 <pvPortMalloc>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:399
		if( pxNewQueue != NULL )
    2d7a:	4604      	mov	r4, r0
    2d7c:	b170      	cbz	r0, 2d9c <xQueueGenericCreate+0x40>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:411
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
    2d7e:	2300      	movs	r3, #0
    2d80:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
prvInitialiseNewQueue():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:435
	if( uxItemSize == ( UBaseType_t ) 0 )
    2d84:	b165      	cbz	r5, 2da0 <xQueueGenericCreate+0x44>
xQueueGenericCreate():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:404
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
    2d86:	f100 0350 	add.w	r3, r0, #80	; 0x50
prvInitialiseNewQueue():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:446
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
    2d8a:	6023      	str	r3, [r4, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:452
	pxNewQueue->uxItemSize = uxItemSize;
    2d8c:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:453
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
    2d90:	2101      	movs	r1, #1
    2d92:	4620      	mov	r0, r4
    2d94:	f7ff ff5a 	bl	2c4c <xQueueGenericReset>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:457
		pxNewQueue->ucQueueType = ucQueueType;
    2d98:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
xQueueGenericCreate():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:424
	}
    2d9c:	4620      	mov	r0, r4
    2d9e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
prvInitialiseNewQueue():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:435
	if( uxItemSize == ( UBaseType_t ) 0 )
    2da0:	4603      	mov	r3, r0
    2da2:	e7f2      	b.n	2d8a <xQueueGenericCreate+0x2e>
    2da4:	0000afd5 	.word	0x0000afd5

00002da8 <xQueueGenericSend>:
xQueueGenericSend():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:748
{
    2da8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
    2dac:	4688      	mov	r8, r1
    2dae:	9201      	str	r2, [sp, #4]
    2db0:	461f      	mov	r7, r3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:753
	configASSERT( pxQueue );
    2db2:	4604      	mov	r4, r0
    2db4:	b928      	cbnz	r0, 2dc2 <xQueueGenericSend+0x1a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:753 (discriminator 1)
    2db6:	494e      	ldr	r1, [pc, #312]	; (2ef0 <xQueueGenericSend+0x148>)
    2db8:	f240 20f1 	movw	r0, #753	; 0x2f1
    2dbc:	f7ff fc76 	bl	26ac <configASSERT_callback>
    2dc0:	e7fe      	b.n	2dc0 <xQueueGenericSend+0x18>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:754
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
    2dc2:	b939      	cbnz	r1, 2dd4 <xQueueGenericSend+0x2c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:754 (discriminator 1)
    2dc4:	6c03      	ldr	r3, [r0, #64]	; 0x40
    2dc6:	b12b      	cbz	r3, 2dd4 <xQueueGenericSend+0x2c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:754 (discriminator 2)
    2dc8:	494a      	ldr	r1, [pc, #296]	; (2ef4 <xQueueGenericSend+0x14c>)
    2dca:	f240 20f2 	movw	r0, #754	; 0x2f2
    2dce:	f7ff fc6d 	bl	26ac <configASSERT_callback>
    2dd2:	e7fe      	b.n	2dd2 <xQueueGenericSend+0x2a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:755
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
    2dd4:	2f02      	cmp	r7, #2
    2dd6:	d108      	bne.n	2dea <xQueueGenericSend+0x42>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:755 (discriminator 1)
    2dd8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    2dda:	2b01      	cmp	r3, #1
    2ddc:	d005      	beq.n	2dea <xQueueGenericSend+0x42>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:755 (discriminator 2)
    2dde:	4946      	ldr	r1, [pc, #280]	; (2ef8 <xQueueGenericSend+0x150>)
    2de0:	f240 20f3 	movw	r0, #755	; 0x2f3
    2de4:	f7ff fc62 	bl	26ac <configASSERT_callback>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:755 (discriminator 3)
    2de8:	e7fe      	b.n	2de8 <xQueueGenericSend+0x40>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:758
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
    2dea:	f000 ff91 	bl	3d10 <xTaskGetSchedulerState>
    2dee:	4606      	mov	r6, r0
    2df0:	b938      	cbnz	r0, 2e02 <xQueueGenericSend+0x5a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:758 (discriminator 1)
    2df2:	9b01      	ldr	r3, [sp, #4]
    2df4:	b133      	cbz	r3, 2e04 <xQueueGenericSend+0x5c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:758 (discriminator 2)
    2df6:	4941      	ldr	r1, [pc, #260]	; (2efc <xQueueGenericSend+0x154>)
    2df8:	f240 20f6 	movw	r0, #758	; 0x2f6
    2dfc:	f7ff fc56 	bl	26ac <configASSERT_callback>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:758 (discriminator 4)
    2e00:	e7fe      	b.n	2e00 <xQueueGenericSend+0x58>
    2e02:	2600      	movs	r6, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:910
		prvLockQueue( pxQueue );
    2e04:	f04f 0900 	mov.w	r9, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:934
					portYIELD_WITHIN_API();
    2e08:	f8df a0f4 	ldr.w	sl, [pc, #244]	; 2f00 <xQueueGenericSend+0x158>
    2e0c:	e037      	b.n	2e7e <xQueueGenericSend+0xd6>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:879
				if( xTicksToWait == ( TickType_t ) 0 )
    2e0e:	9d01      	ldr	r5, [sp, #4]
    2e10:	b91d      	cbnz	r5, 2e1a <xQueueGenericSend+0x72>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:883
					taskEXIT_CRITICAL();
    2e12:	f7ff fd11 	bl	2838 <vPortExitCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:951
			return errQUEUE_FULL;
    2e16:	2000      	movs	r0, #0
    2e18:	e050      	b.n	2ebc <xQueueGenericSend+0x114>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:890
				else if( xEntryTimeSet == pdFALSE )
    2e1a:	b916      	cbnz	r6, 2e22 <xQueueGenericSend+0x7a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:894
					vTaskInternalSetTimeOutState( &xTimeOut );
    2e1c:	a802      	add	r0, sp, #8
    2e1e:	f000 ff2b 	bl	3c78 <vTaskInternalSetTimeOutState>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:904
		taskEXIT_CRITICAL();
    2e22:	f7ff fd09 	bl	2838 <vPortExitCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:909
		vTaskSuspendAll();
    2e26:	f000 fcd3 	bl	37d0 <vTaskSuspendAll>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:910
		prvLockQueue( pxQueue );
    2e2a:	f7ff fce3 	bl	27f4 <vPortEnterCritical>
    2e2e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
    2e32:	2bff      	cmp	r3, #255	; 0xff
    2e34:	bf08      	it	eq
    2e36:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
    2e3a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
    2e3e:	2bff      	cmp	r3, #255	; 0xff
    2e40:	bf08      	it	eq
    2e42:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
    2e46:	f7ff fcf7 	bl	2838 <vPortExitCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:913
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
    2e4a:	a901      	add	r1, sp, #4
    2e4c:	a802      	add	r0, sp, #8
    2e4e:	f000 ff1f 	bl	3c90 <xTaskCheckForTimeOut>
    2e52:	2800      	cmp	r0, #0
    2e54:	d146      	bne.n	2ee4 <xQueueGenericSend+0x13c>
prvIsQueueFull():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2331

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
    2e56:	f7ff fccd 	bl	27f4 <vPortEnterCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2333
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
    2e5a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
    2e5c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    2e5e:	429a      	cmp	r2, r3
    2e60:	d12f      	bne.n	2ec2 <xQueueGenericSend+0x11a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2342
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
    2e62:	f7ff fce9 	bl	2838 <vPortExitCritical>
xQueueGenericSend():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:918
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
    2e66:	9901      	ldr	r1, [sp, #4]
    2e68:	f104 0010 	add.w	r0, r4, #16
    2e6c:	f000 feac 	bl	3bc8 <vTaskPlaceOnEventList>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:925
				prvUnlockQueue( pxQueue );
    2e70:	4620      	mov	r0, r4
    2e72:	f7ff feb3 	bl	2bdc <prvUnlockQueue>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:932
				if( xTaskResumeAll() == pdFALSE )
    2e76:	f000 fd45 	bl	3904 <xTaskResumeAll>
    2e7a:	b350      	cbz	r0, 2ed2 <xQueueGenericSend+0x12a>
    2e7c:	2601      	movs	r6, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:768
		taskENTER_CRITICAL();
    2e7e:	f7ff fcb9 	bl	27f4 <vPortEnterCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:774
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
    2e82:	6ba2      	ldr	r2, [r4, #56]	; 0x38
    2e84:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    2e86:	429a      	cmp	r2, r3
    2e88:	d301      	bcc.n	2e8e <xQueueGenericSend+0xe6>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:774 (discriminator 1)
    2e8a:	2f02      	cmp	r7, #2
    2e8c:	d1bf      	bne.n	2e0e <xQueueGenericSend+0x66>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:840
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
    2e8e:	463a      	mov	r2, r7
    2e90:	4641      	mov	r1, r8
    2e92:	4620      	mov	r0, r4
    2e94:	f7ff fe58 	bl	2b48 <prvCopyDataToQueue>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:844
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
    2e98:	6a63      	ldr	r3, [r4, #36]	; 0x24
    2e9a:	b11b      	cbz	r3, 2ea4 <xQueueGenericSend+0xfc>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:846
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
    2e9c:	f104 0024 	add.w	r0, r4, #36	; 0x24
    2ea0:	f000 feaa 	bl	3bf8 <xTaskRemoveFromEventList>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:859
					else if( xYieldRequired != pdFALSE )
    2ea4:	b138      	cbz	r0, 2eb6 <xQueueGenericSend+0x10e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:865
						queueYIELD_IF_USING_PREEMPTION();
    2ea6:	4b16      	ldr	r3, [pc, #88]	; (2f00 <xQueueGenericSend+0x158>)
    2ea8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    2eac:	601a      	str	r2, [r3, #0]
    2eae:	f3bf 8f4f 	dsb	sy
    2eb2:	f3bf 8f6f 	isb	sy
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:874
				taskEXIT_CRITICAL();
    2eb6:	f7ff fcbf 	bl	2838 <vPortExitCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:875
				return pdPASS;
    2eba:	2001      	movs	r0, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:954
}
    2ebc:	b004      	add	sp, #16
    2ebe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
prvIsQueueFull():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2342
	taskEXIT_CRITICAL();
    2ec2:	f7ff fcb9 	bl	2838 <vPortExitCritical>
xQueueGenericSend():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:940
				prvUnlockQueue( pxQueue );
    2ec6:	4620      	mov	r0, r4
    2ec8:	f7ff fe88 	bl	2bdc <prvUnlockQueue>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:941
				( void ) xTaskResumeAll();
    2ecc:	f000 fd1a 	bl	3904 <xTaskResumeAll>
    2ed0:	e7d4      	b.n	2e7c <xQueueGenericSend+0xd4>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:934
					portYIELD_WITHIN_API();
    2ed2:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
    2ed6:	f8ca 3000 	str.w	r3, [sl]
    2eda:	f3bf 8f4f 	dsb	sy
    2ede:	f3bf 8f6f 	isb	sy
    2ee2:	e7cb      	b.n	2e7c <xQueueGenericSend+0xd4>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:947
			prvUnlockQueue( pxQueue );
    2ee4:	4620      	mov	r0, r4
    2ee6:	f7ff fe79 	bl	2bdc <prvUnlockQueue>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:948
			( void ) xTaskResumeAll();
    2eea:	f000 fd0b 	bl	3904 <xTaskResumeAll>
    2eee:	e792      	b.n	2e16 <xQueueGenericSend+0x6e>
    2ef0:	0000b098 	.word	0x0000b098
    2ef4:	0000b0a0 	.word	0x0000b0a0
    2ef8:	0000b0f0 	.word	0x0000b0f0
    2efc:	0000b137 	.word	0x0000b137
    2f00:	e000ed04 	.word	0xe000ed04

00002f04 <xQueueCreateMutexStatic>:
xQueueCreateMutexStatic():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:520
	{
    2f04:	b513      	push	{r0, r1, r4, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:528
		xNewQueue = xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQueue, ucQueueType );
    2f06:	2200      	movs	r2, #0
    2f08:	9000      	str	r0, [sp, #0]
    2f0a:	460b      	mov	r3, r1
    2f0c:	2001      	movs	r0, #1
    2f0e:	4611      	mov	r1, r2
    2f10:	f7ff feda 	bl	2cc8 <xQueueGenericCreateStatic>
prvInitialiseMutex():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:475
		if( pxNewQueue != NULL )
    2f14:	4604      	mov	r4, r0
    2f16:	b138      	cbz	r0, 2f28 <xQueueCreateMutexStatic+0x24>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:481
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
    2f18:	2300      	movs	r3, #0
    2f1a:	6083      	str	r3, [r0, #8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:482
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
    2f1c:	6003      	str	r3, [r0, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:485
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
    2f1e:	60c3      	str	r3, [r0, #12]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:490
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
    2f20:	461a      	mov	r2, r3
    2f22:	4619      	mov	r1, r3
    2f24:	f7ff ff40 	bl	2da8 <xQueueGenericSend>
xQueueCreateMutexStatic():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:532
	}
    2f28:	4620      	mov	r0, r4
    2f2a:	b002      	add	sp, #8
    2f2c:	bd10      	pop	{r4, pc}

00002f2e <xQueueCreateMutex>:
xQueueCreateMutex():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:504
	{
    2f2e:	b510      	push	{r4, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:508
		xNewQueue = xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
    2f30:	4602      	mov	r2, r0
    2f32:	2100      	movs	r1, #0
    2f34:	2001      	movs	r0, #1
    2f36:	f7ff ff11 	bl	2d5c <xQueueGenericCreate>
prvInitialiseMutex():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:475
		if( pxNewQueue != NULL )
    2f3a:	4604      	mov	r4, r0
    2f3c:	b138      	cbz	r0, 2f4e <xQueueCreateMutex+0x20>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:481
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
    2f3e:	2300      	movs	r3, #0
    2f40:	6083      	str	r3, [r0, #8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:482
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
    2f42:	6003      	str	r3, [r0, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:485
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
    2f44:	60c3      	str	r3, [r0, #12]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:490
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
    2f46:	461a      	mov	r2, r3
    2f48:	4619      	mov	r1, r3
    2f4a:	f7ff ff2d 	bl	2da8 <xQueueGenericSend>
xQueueCreateMutex():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:512
	}
    2f4e:	4620      	mov	r0, r4
    2f50:	bd10      	pop	{r4, pc}
    2f52:	Address 0x0000000000002f52 is out of bounds.


00002f54 <xQueueGenericSendFromISR>:
xQueueGenericSendFromISR():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:958
{
    2f54:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    2f58:	4689      	mov	r9, r1
    2f5a:	4690      	mov	r8, r2
    2f5c:	461f      	mov	r7, r3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:963
	configASSERT( pxQueue );
    2f5e:	4604      	mov	r4, r0
    2f60:	b928      	cbnz	r0, 2f6e <xQueueGenericSendFromISR+0x1a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:963 (discriminator 1)
    2f62:	4928      	ldr	r1, [pc, #160]	; (3004 <xQueueGenericSendFromISR+0xb0>)
    2f64:	f240 30c3 	movw	r0, #963	; 0x3c3
    2f68:	f7ff fba0 	bl	26ac <configASSERT_callback>
    2f6c:	e7fe      	b.n	2f6c <xQueueGenericSendFromISR+0x18>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:964
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
    2f6e:	b939      	cbnz	r1, 2f80 <xQueueGenericSendFromISR+0x2c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:964 (discriminator 1)
    2f70:	6c03      	ldr	r3, [r0, #64]	; 0x40
    2f72:	b12b      	cbz	r3, 2f80 <xQueueGenericSendFromISR+0x2c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:964 (discriminator 2)
    2f74:	4924      	ldr	r1, [pc, #144]	; (3008 <xQueueGenericSendFromISR+0xb4>)
    2f76:	f44f 7071 	mov.w	r0, #964	; 0x3c4
    2f7a:	f7ff fb97 	bl	26ac <configASSERT_callback>
    2f7e:	e7fe      	b.n	2f7e <xQueueGenericSendFromISR+0x2a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:965
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
    2f80:	2f02      	cmp	r7, #2
    2f82:	d108      	bne.n	2f96 <xQueueGenericSendFromISR+0x42>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:965 (discriminator 1)
    2f84:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    2f86:	2b01      	cmp	r3, #1
    2f88:	d005      	beq.n	2f96 <xQueueGenericSendFromISR+0x42>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:965 (discriminator 2)
    2f8a:	4920      	ldr	r1, [pc, #128]	; (300c <xQueueGenericSendFromISR+0xb8>)
    2f8c:	f240 30c5 	movw	r0, #965	; 0x3c5
    2f90:	f7ff fb8c 	bl	26ac <configASSERT_callback>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:965 (discriminator 3)
    2f94:	e7fe      	b.n	2f94 <xQueueGenericSendFromISR+0x40>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:981
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
    2f96:	f7ff fd43 	bl	2a20 <vPortValidateInterruptPriority>
ulPortRaiseBASEPRI():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:211
	__asm volatile
    2f9a:	f3ef 8611 	mrs	r6, BASEPRI
    2f9e:	f04f 0318 	mov.w	r3, #24
    2fa2:	f383 8811 	msr	BASEPRI, r3
    2fa6:	f3bf 8f6f 	isb	sy
    2faa:	f3bf 8f4f 	dsb	sy
xQueueGenericSendFromISR():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:990
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
    2fae:	6ba2      	ldr	r2, [r4, #56]	; 0x38
    2fb0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    2fb2:	429a      	cmp	r2, r3
    2fb4:	d301      	bcc.n	2fba <xQueueGenericSendFromISR+0x66>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:990 (discriminator 1)
    2fb6:	2f02      	cmp	r7, #2
    2fb8:	d122      	bne.n	3000 <xQueueGenericSendFromISR+0xac>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:992
			const int8_t cTxLock = pxQueue->cTxLock;
    2fba:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1001
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
    2fbe:	463a      	mov	r2, r7
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:992
			const int8_t cTxLock = pxQueue->cTxLock;
    2fc0:	b26d      	sxtb	r5, r5
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1001
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
    2fc2:	4649      	mov	r1, r9
    2fc4:	4620      	mov	r0, r4
    2fc6:	f7ff fdbf 	bl	2b48 <prvCopyDataToQueue>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1005
			if( cTxLock == queueUNLOCKED )
    2fca:	1c6b      	adds	r3, r5, #1
    2fcc:	d113      	bne.n	2ff6 <xQueueGenericSendFromISR+0xa2>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1060
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
    2fce:	6a63      	ldr	r3, [r4, #36]	; 0x24
    2fd0:	b90b      	cbnz	r3, 2fd6 <xQueueGenericSendFromISR+0x82>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1094
			xReturn = pdPASS;
    2fd2:	2001      	movs	r0, #1
    2fd4:	e00b      	b.n	2fee <xQueueGenericSendFromISR+0x9a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1062
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
    2fd6:	f104 0024 	add.w	r0, r4, #36	; 0x24
    2fda:	f000 fe0d 	bl	3bf8 <xTaskRemoveFromEventList>
    2fde:	2800      	cmp	r0, #0
    2fe0:	d0f7      	beq.n	2fd2 <xQueueGenericSendFromISR+0x7e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1066
							if( pxHigherPriorityTaskWoken != NULL )
    2fe2:	f1b8 0f00 	cmp.w	r8, #0
    2fe6:	d0f4      	beq.n	2fd2 <xQueueGenericSendFromISR+0x7e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1068
								*pxHigherPriorityTaskWoken = pdTRUE;
    2fe8:	2001      	movs	r0, #1
    2fea:	f8c8 0000 	str.w	r0, [r8]
vPortSetBASEPRI():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:229
	__asm volatile
    2fee:	f386 8811 	msr	BASEPRI, r6
xQueueGenericSendFromISR():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1105
}
    2ff2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1091
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
    2ff6:	3501      	adds	r5, #1
    2ff8:	b26d      	sxtb	r5, r5
    2ffa:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
    2ffe:	e7e8      	b.n	2fd2 <xQueueGenericSendFromISR+0x7e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1099
			xReturn = errQUEUE_FULL;
    3000:	2000      	movs	r0, #0
    3002:	e7f4      	b.n	2fee <xQueueGenericSendFromISR+0x9a>
    3004:	0000b098 	.word	0x0000b098
    3008:	0000b0a0 	.word	0x0000b0a0
    300c:	0000b0f0 	.word	0x0000b0f0

00003010 <xQueueGiveFromISR>:
xQueueGiveFromISR():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1109
{
    3010:	b570      	push	{r4, r5, r6, lr}
    3012:	460d      	mov	r5, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1120
	configASSERT( pxQueue );
    3014:	4604      	mov	r4, r0
    3016:	b928      	cbnz	r0, 3024 <xQueueGiveFromISR+0x14>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1120 (discriminator 1)
    3018:	4923      	ldr	r1, [pc, #140]	; (30a8 <xQueueGiveFromISR+0x98>)
    301a:	f44f 608c 	mov.w	r0, #1120	; 0x460
    301e:	f7ff fb45 	bl	26ac <configASSERT_callback>
    3022:	e7fe      	b.n	3022 <xQueueGiveFromISR+0x12>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1124
	configASSERT( pxQueue->uxItemSize == 0 );
    3024:	6c03      	ldr	r3, [r0, #64]	; 0x40
    3026:	b12b      	cbz	r3, 3034 <xQueueGiveFromISR+0x24>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1124 (discriminator 1)
    3028:	4920      	ldr	r1, [pc, #128]	; (30ac <xQueueGiveFromISR+0x9c>)
    302a:	f240 4064 	movw	r0, #1124	; 0x464
    302e:	f7ff fb3d 	bl	26ac <configASSERT_callback>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1124 (discriminator 2)
    3032:	e7fe      	b.n	3032 <xQueueGiveFromISR+0x22>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1129
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
    3034:	6803      	ldr	r3, [r0, #0]
    3036:	b93b      	cbnz	r3, 3048 <xQueueGiveFromISR+0x38>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1129 (discriminator 1)
    3038:	6883      	ldr	r3, [r0, #8]
    303a:	b12b      	cbz	r3, 3048 <xQueueGiveFromISR+0x38>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1129 (discriminator 2)
    303c:	491c      	ldr	r1, [pc, #112]	; (30b0 <xQueueGiveFromISR+0xa0>)
    303e:	f240 4069 	movw	r0, #1129	; 0x469
    3042:	f7ff fb33 	bl	26ac <configASSERT_callback>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1129 (discriminator 3)
    3046:	e7fe      	b.n	3046 <xQueueGiveFromISR+0x36>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1145
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
    3048:	f7ff fcea 	bl	2a20 <vPortValidateInterruptPriority>
ulPortRaiseBASEPRI():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:211
	__asm volatile
    304c:	f3ef 8611 	mrs	r6, BASEPRI
    3050:	f04f 0318 	mov.w	r3, #24
    3054:	f383 8811 	msr	BASEPRI, r3
    3058:	f3bf 8f6f 	isb	sy
    305c:	f3bf 8f4f 	dsb	sy
xQueueGiveFromISR():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1149
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
    3060:	6ba2      	ldr	r2, [r4, #56]	; 0x38
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1154
		if( uxMessagesWaiting < pxQueue->uxLength )
    3062:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    3064:	4293      	cmp	r3, r2
    3066:	d91c      	bls.n	30a2 <xQueueGiveFromISR+0x92>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1156
			const int8_t cTxLock = pxQueue->cTxLock;
    3068:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1166
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
    306c:	3201      	adds	r2, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1156
			const int8_t cTxLock = pxQueue->cTxLock;
    306e:	b25b      	sxtb	r3, r3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1166
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
    3070:	63a2      	str	r2, [r4, #56]	; 0x38
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1170
			if( cTxLock == queueUNLOCKED )
    3072:	1c5a      	adds	r2, r3, #1
    3074:	d110      	bne.n	3098 <xQueueGiveFromISR+0x88>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1225
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
    3076:	6a63      	ldr	r3, [r4, #36]	; 0x24
    3078:	b90b      	cbnz	r3, 307e <xQueueGiveFromISR+0x6e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1259
			xReturn = pdPASS;
    307a:	2001      	movs	r0, #1
    307c:	e009      	b.n	3092 <xQueueGiveFromISR+0x82>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1227
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
    307e:	f104 0024 	add.w	r0, r4, #36	; 0x24
    3082:	f000 fdb9 	bl	3bf8 <xTaskRemoveFromEventList>
    3086:	2800      	cmp	r0, #0
    3088:	d0f7      	beq.n	307a <xQueueGiveFromISR+0x6a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1231
							if( pxHigherPriorityTaskWoken != NULL )
    308a:	2d00      	cmp	r5, #0
    308c:	d0f5      	beq.n	307a <xQueueGiveFromISR+0x6a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1233
								*pxHigherPriorityTaskWoken = pdTRUE;
    308e:	2001      	movs	r0, #1
    3090:	6028      	str	r0, [r5, #0]
vPortSetBASEPRI():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:229
	__asm volatile
    3092:	f386 8811 	msr	BASEPRI, r6
xQueueGiveFromISR():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1270
}
    3096:	bd70      	pop	{r4, r5, r6, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1256
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
    3098:	3301      	adds	r3, #1
    309a:	b25b      	sxtb	r3, r3
    309c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
    30a0:	e7eb      	b.n	307a <xQueueGiveFromISR+0x6a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1264
			xReturn = errQUEUE_FULL;
    30a2:	2000      	movs	r0, #0
    30a4:	e7f5      	b.n	3092 <xQueueGiveFromISR+0x82>
    30a6:	bf00      	nop
    30a8:	0000b098 	.word	0x0000b098
    30ac:	0000b18d 	.word	0x0000b18d
    30b0:	0000b1a6 	.word	0x0000b1a6

000030b4 <xQueueReceive>:
xQueueReceive():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1274
{
    30b4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    30b8:	b085      	sub	sp, #20
    30ba:	460f      	mov	r7, r1
    30bc:	9201      	str	r2, [sp, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1280
	configASSERT( ( pxQueue ) );
    30be:	4604      	mov	r4, r0
    30c0:	b928      	cbnz	r0, 30ce <xQueueReceive+0x1a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1280 (discriminator 1)
    30c2:	4947      	ldr	r1, [pc, #284]	; (31e0 <xQueueReceive+0x12c>)
    30c4:	f44f 60a0 	mov.w	r0, #1280	; 0x500
    30c8:	f7ff faf0 	bl	26ac <configASSERT_callback>
    30cc:	e7fe      	b.n	30cc <xQueueReceive+0x18>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1284
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
    30ce:	b939      	cbnz	r1, 30e0 <xQueueReceive+0x2c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1284 (discriminator 1)
    30d0:	6c03      	ldr	r3, [r0, #64]	; 0x40
    30d2:	b12b      	cbz	r3, 30e0 <xQueueReceive+0x2c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1284 (discriminator 2)
    30d4:	4943      	ldr	r1, [pc, #268]	; (31e4 <xQueueReceive+0x130>)
    30d6:	f240 5004 	movw	r0, #1284	; 0x504
    30da:	f7ff fae7 	bl	26ac <configASSERT_callback>
    30de:	e7fe      	b.n	30de <xQueueReceive+0x2a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1289
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
    30e0:	f000 fe16 	bl	3d10 <xTaskGetSchedulerState>
    30e4:	4606      	mov	r6, r0
    30e6:	b938      	cbnz	r0, 30f8 <xQueueReceive+0x44>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1289 (discriminator 1)
    30e8:	9b01      	ldr	r3, [sp, #4]
    30ea:	b133      	cbz	r3, 30fa <xQueueReceive+0x46>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1289 (discriminator 2)
    30ec:	493e      	ldr	r1, [pc, #248]	; (31e8 <xQueueReceive+0x134>)
    30ee:	f240 5009 	movw	r0, #1289	; 0x509
    30f2:	f7ff fadb 	bl	26ac <configASSERT_callback>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1289 (discriminator 3)
    30f6:	e7fe      	b.n	30f6 <xQueueReceive+0x42>
    30f8:	2600      	movs	r6, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1364
		prvLockQueue( pxQueue );
    30fa:	f04f 0800 	mov.w	r8, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1378
					portYIELD_WITHIN_API();
    30fe:	f8df 90ec 	ldr.w	r9, [pc, #236]	; 31ec <xQueueReceive+0x138>
    3102:	e03b      	b.n	317c <xQueueReceive+0xc8>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1336
				if( xTicksToWait == ( TickType_t ) 0 )
    3104:	9d01      	ldr	r5, [sp, #4]
    3106:	b91d      	cbnz	r5, 3110 <xQueueReceive+0x5c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1340
					taskEXIT_CRITICAL();
    3108:	f7ff fb96 	bl	2838 <vPortExitCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1403
				return errQUEUE_EMPTY;
    310c:	2000      	movs	r0, #0
    310e:	e052      	b.n	31b6 <xQueueReceive+0x102>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1344
				else if( xEntryTimeSet == pdFALSE )
    3110:	b916      	cbnz	r6, 3118 <xQueueReceive+0x64>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1348
					vTaskInternalSetTimeOutState( &xTimeOut );
    3112:	a802      	add	r0, sp, #8
    3114:	f000 fdb0 	bl	3c78 <vTaskInternalSetTimeOutState>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1358
		taskEXIT_CRITICAL();
    3118:	f7ff fb8e 	bl	2838 <vPortExitCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1363
		vTaskSuspendAll();
    311c:	f000 fb58 	bl	37d0 <vTaskSuspendAll>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1364
		prvLockQueue( pxQueue );
    3120:	f7ff fb68 	bl	27f4 <vPortEnterCritical>
    3124:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
    3128:	2bff      	cmp	r3, #255	; 0xff
    312a:	bf08      	it	eq
    312c:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
    3130:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
    3134:	2bff      	cmp	r3, #255	; 0xff
    3136:	bf08      	it	eq
    3138:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
    313c:	f7ff fb7c 	bl	2838 <vPortExitCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1367
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
    3140:	a901      	add	r1, sp, #4
    3142:	a802      	add	r0, sp, #8
    3144:	f000 fda4 	bl	3c90 <xTaskCheckForTimeOut>
    3148:	2800      	cmp	r0, #0
    314a:	d13d      	bne.n	31c8 <xQueueReceive+0x114>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1371
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
    314c:	4620      	mov	r0, r4
    314e:	f7ff fcf0 	bl	2b32 <prvIsQueueEmpty>
    3152:	b398      	cbz	r0, 31bc <xQueueReceive+0x108>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1374
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
    3154:	9901      	ldr	r1, [sp, #4]
    3156:	f104 0024 	add.w	r0, r4, #36	; 0x24
    315a:	f000 fd35 	bl	3bc8 <vTaskPlaceOnEventList>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1375
				prvUnlockQueue( pxQueue );
    315e:	4620      	mov	r0, r4
    3160:	f7ff fd3c 	bl	2bdc <prvUnlockQueue>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1376
				if( xTaskResumeAll() == pdFALSE )
    3164:	f000 fbce 	bl	3904 <xTaskResumeAll>
    3168:	b938      	cbnz	r0, 317a <xQueueReceive+0xc6>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1378
					portYIELD_WITHIN_API();
    316a:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
    316e:	f8c9 3000 	str.w	r3, [r9]
    3172:	f3bf 8f4f 	dsb	sy
    3176:	f3bf 8f6f 	isb	sy
    317a:	2601      	movs	r6, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1299
		taskENTER_CRITICAL();
    317c:	f7ff fb3a 	bl	27f4 <vPortEnterCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1301
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
    3180:	6ba5      	ldr	r5, [r4, #56]	; 0x38
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1305
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
    3182:	2d00      	cmp	r5, #0
    3184:	d0be      	beq.n	3104 <xQueueReceive+0x50>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1308
				prvCopyDataFromQueue( pxQueue, pvBuffer );
    3186:	4639      	mov	r1, r7
    3188:	4620      	mov	r0, r4
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1310
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
    318a:	3d01      	subs	r5, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1308
				prvCopyDataFromQueue( pxQueue, pvBuffer );
    318c:	f7ff fd11 	bl	2bb2 <prvCopyDataFromQueue>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1310
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
    3190:	63a5      	str	r5, [r4, #56]	; 0x38
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1315
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
    3192:	6923      	ldr	r3, [r4, #16]
    3194:	b163      	cbz	r3, 31b0 <xQueueReceive+0xfc>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1317
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
    3196:	f104 0010 	add.w	r0, r4, #16
    319a:	f000 fd2d 	bl	3bf8 <xTaskRemoveFromEventList>
    319e:	b138      	cbz	r0, 31b0 <xQueueReceive+0xfc>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1319
						queueYIELD_IF_USING_PREEMPTION();
    31a0:	4b12      	ldr	r3, [pc, #72]	; (31ec <xQueueReceive+0x138>)
    31a2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    31a6:	601a      	str	r2, [r3, #0]
    31a8:	f3bf 8f4f 	dsb	sy
    31ac:	f3bf 8f6f 	isb	sy
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1331
				taskEXIT_CRITICAL();
    31b0:	f7ff fb42 	bl	2838 <vPortExitCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1332
				return pdPASS;
    31b4:	2001      	movs	r0, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1411
}
    31b6:	b005      	add	sp, #20
    31b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1389
				prvUnlockQueue( pxQueue );
    31bc:	4620      	mov	r0, r4
    31be:	f7ff fd0d 	bl	2bdc <prvUnlockQueue>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1390
				( void ) xTaskResumeAll();
    31c2:	f000 fb9f 	bl	3904 <xTaskResumeAll>
    31c6:	e7d8      	b.n	317a <xQueueReceive+0xc6>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1397
			prvUnlockQueue( pxQueue );
    31c8:	4620      	mov	r0, r4
    31ca:	f7ff fd07 	bl	2bdc <prvUnlockQueue>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1398
			( void ) xTaskResumeAll();
    31ce:	f000 fb99 	bl	3904 <xTaskResumeAll>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1400
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
    31d2:	4620      	mov	r0, r4
    31d4:	f7ff fcad 	bl	2b32 <prvIsQueueEmpty>
    31d8:	2800      	cmp	r0, #0
    31da:	d0ce      	beq.n	317a <xQueueReceive+0xc6>
    31dc:	e796      	b.n	310c <xQueueReceive+0x58>
    31de:	bf00      	nop
    31e0:	0000b20d 	.word	0x0000b20d
    31e4:	0000b219 	.word	0x0000b219
    31e8:	0000b137 	.word	0x0000b137
    31ec:	e000ed04 	.word	0xe000ed04

000031f0 <xQueueSemaphoreTake>:
xQueueSemaphoreTake():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1415
{
    31f0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1425
	configASSERT( ( pxQueue ) );
    31f4:	4604      	mov	r4, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1415
{
    31f6:	9101      	str	r1, [sp, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1425
	configASSERT( ( pxQueue ) );
    31f8:	b928      	cbnz	r0, 3206 <xQueueSemaphoreTake+0x16>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1425 (discriminator 1)
    31fa:	4958      	ldr	r1, [pc, #352]	; (335c <xQueueSemaphoreTake+0x16c>)
    31fc:	f240 5091 	movw	r0, #1425	; 0x591
    3200:	f7ff fa54 	bl	26ac <configASSERT_callback>
    3204:	e7fe      	b.n	3204 <xQueueSemaphoreTake+0x14>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1429
	configASSERT( pxQueue->uxItemSize == 0 );
    3206:	6c05      	ldr	r5, [r0, #64]	; 0x40
    3208:	b12d      	cbz	r5, 3216 <xQueueSemaphoreTake+0x26>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1429 (discriminator 1)
    320a:	4955      	ldr	r1, [pc, #340]	; (3360 <xQueueSemaphoreTake+0x170>)
    320c:	f240 5095 	movw	r0, #1429	; 0x595
    3210:	f7ff fa4c 	bl	26ac <configASSERT_callback>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1429 (discriminator 2)
    3214:	e7fe      	b.n	3214 <xQueueSemaphoreTake+0x24>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1434
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
    3216:	f000 fd7b 	bl	3d10 <xTaskGetSchedulerState>
    321a:	4606      	mov	r6, r0
    321c:	b938      	cbnz	r0, 322e <xQueueSemaphoreTake+0x3e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1434 (discriminator 1)
    321e:	9b01      	ldr	r3, [sp, #4]
    3220:	b153      	cbz	r3, 3238 <xQueueSemaphoreTake+0x48>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1434 (discriminator 2)
    3222:	4950      	ldr	r1, [pc, #320]	; (3364 <xQueueSemaphoreTake+0x174>)
    3224:	f240 509a 	movw	r0, #1434	; 0x59a
    3228:	f7ff fa40 	bl	26ac <configASSERT_callback>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1434 (discriminator 3)
    322c:	e7fe      	b.n	322c <xQueueSemaphoreTake+0x3c>
    322e:	462e      	mov	r6, r5
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1535
		prvLockQueue( pxQueue );
    3230:	2700      	movs	r7, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1569
					portYIELD_WITHIN_API();
    3232:	f8df 8138 	ldr.w	r8, [pc, #312]	; 336c <xQueueSemaphoreTake+0x17c>
    3236:	e04e      	b.n	32d6 <xQueueSemaphoreTake+0xe6>
    3238:	4605      	mov	r5, r0
    323a:	e7f9      	b.n	3230 <xQueueSemaphoreTake+0x40>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1498
				if( xTicksToWait == ( TickType_t ) 0 )
    323c:	9b01      	ldr	r3, [sp, #4]
    323e:	b94b      	cbnz	r3, 3254 <xQueueSemaphoreTake+0x64>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1505
						configASSERT( xInheritanceOccurred == pdFALSE );
    3240:	b12d      	cbz	r5, 324e <xQueueSemaphoreTake+0x5e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1505 (discriminator 1)
    3242:	4949      	ldr	r1, [pc, #292]	; (3368 <xQueueSemaphoreTake+0x178>)
    3244:	f240 50e1 	movw	r0, #1505	; 0x5e1
    3248:	f7ff fa30 	bl	26ac <configASSERT_callback>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1505 (discriminator 4)
    324c:	e7fe      	b.n	324c <xQueueSemaphoreTake+0x5c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1511
					taskEXIT_CRITICAL();
    324e:	f7ff faf3 	bl	2838 <vPortExitCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1513
					return errQUEUE_EMPTY;
    3252:	e05e      	b.n	3312 <xQueueSemaphoreTake+0x122>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1515
				else if( xEntryTimeSet == pdFALSE )
    3254:	b916      	cbnz	r6, 325c <xQueueSemaphoreTake+0x6c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1519
					vTaskInternalSetTimeOutState( &xTimeOut );
    3256:	a802      	add	r0, sp, #8
    3258:	f000 fd0e 	bl	3c78 <vTaskInternalSetTimeOutState>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1529
		taskEXIT_CRITICAL();
    325c:	f7ff faec 	bl	2838 <vPortExitCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1534
		vTaskSuspendAll();
    3260:	f000 fab6 	bl	37d0 <vTaskSuspendAll>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1535
		prvLockQueue( pxQueue );
    3264:	f7ff fac6 	bl	27f4 <vPortEnterCritical>
    3268:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
    326c:	2bff      	cmp	r3, #255	; 0xff
    326e:	bf08      	it	eq
    3270:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
    3274:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
    3278:	2bff      	cmp	r3, #255	; 0xff
    327a:	bf08      	it	eq
    327c:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
    3280:	f7ff fada 	bl	2838 <vPortExitCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1538
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
    3284:	a901      	add	r1, sp, #4
    3286:	a802      	add	r0, sp, #8
    3288:	f000 fd02 	bl	3c90 <xTaskCheckForTimeOut>
    328c:	2800      	cmp	r0, #0
    328e:	d14a      	bne.n	3326 <xQueueSemaphoreTake+0x136>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1544
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
    3290:	4620      	mov	r0, r4
    3292:	f7ff fc4e 	bl	2b32 <prvIsQueueEmpty>
    3296:	2800      	cmp	r0, #0
    3298:	d03f      	beq.n	331a <xQueueSemaphoreTake+0x12a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1550
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
    329a:	6823      	ldr	r3, [r4, #0]
    329c:	b93b      	cbnz	r3, 32ae <xQueueSemaphoreTake+0xbe>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1552
						taskENTER_CRITICAL();
    329e:	f7ff faa9 	bl	27f4 <vPortEnterCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1554
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
    32a2:	68a0      	ldr	r0, [r4, #8]
    32a4:	f000 fd44 	bl	3d30 <xTaskPriorityInherit>
    32a8:	4605      	mov	r5, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1556
						taskEXIT_CRITICAL();
    32aa:	f7ff fac5 	bl	2838 <vPortExitCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1565
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
    32ae:	9901      	ldr	r1, [sp, #4]
    32b0:	f104 0024 	add.w	r0, r4, #36	; 0x24
    32b4:	f000 fc88 	bl	3bc8 <vTaskPlaceOnEventList>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1566
				prvUnlockQueue( pxQueue );
    32b8:	4620      	mov	r0, r4
    32ba:	f7ff fc8f 	bl	2bdc <prvUnlockQueue>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1567
				if( xTaskResumeAll() == pdFALSE )
    32be:	f000 fb21 	bl	3904 <xTaskResumeAll>
    32c2:	b938      	cbnz	r0, 32d4 <xQueueSemaphoreTake+0xe4>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1569
					portYIELD_WITHIN_API();
    32c4:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
    32c8:	f8c8 3000 	str.w	r3, [r8]
    32cc:	f3bf 8f4f 	dsb	sy
    32d0:	f3bf 8f6f 	isb	sy
    32d4:	2601      	movs	r6, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1444
		taskENTER_CRITICAL();
    32d6:	f7ff fa8d 	bl	27f4 <vPortEnterCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1448
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
    32da:	6ba3      	ldr	r3, [r4, #56]	; 0x38
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1452
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
    32dc:	2b00      	cmp	r3, #0
    32de:	d0ad      	beq.n	323c <xQueueSemaphoreTake+0x4c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1458
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
    32e0:	3b01      	subs	r3, #1
    32e2:	63a3      	str	r3, [r4, #56]	; 0x38
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1462
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
    32e4:	6823      	ldr	r3, [r4, #0]
    32e6:	b913      	cbnz	r3, 32ee <xQueueSemaphoreTake+0xfe>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1466
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
    32e8:	f000 fe1a 	bl	3f20 <pvTaskIncrementMutexHeldCount>
    32ec:	60a0      	str	r0, [r4, #8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1477
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
    32ee:	6923      	ldr	r3, [r4, #16]
    32f0:	b163      	cbz	r3, 330c <xQueueSemaphoreTake+0x11c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1479
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
    32f2:	f104 0010 	add.w	r0, r4, #16
    32f6:	f000 fc7f 	bl	3bf8 <xTaskRemoveFromEventList>
    32fa:	b138      	cbz	r0, 330c <xQueueSemaphoreTake+0x11c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1481
						queueYIELD_IF_USING_PREEMPTION();
    32fc:	4b1b      	ldr	r3, [pc, #108]	; (336c <xQueueSemaphoreTake+0x17c>)
    32fe:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    3302:	601a      	str	r2, [r3, #0]
    3304:	f3bf 8f4f 	dsb	sy
    3308:	f3bf 8f6f 	isb	sy
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1493
				taskEXIT_CRITICAL();
    330c:	f7ff fa94 	bl	2838 <vPortExitCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1494
				return pdPASS;
    3310:	2501      	movs	r5, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1629
}
    3312:	4628      	mov	r0, r5
    3314:	b004      	add	sp, #16
    3316:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1580
				prvUnlockQueue( pxQueue );
    331a:	4620      	mov	r0, r4
    331c:	f7ff fc5e 	bl	2bdc <prvUnlockQueue>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1581
				( void ) xTaskResumeAll();
    3320:	f000 faf0 	bl	3904 <xTaskResumeAll>
    3324:	e7d6      	b.n	32d4 <xQueueSemaphoreTake+0xe4>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1587
			prvUnlockQueue( pxQueue );
    3326:	4620      	mov	r0, r4
    3328:	f7ff fc58 	bl	2bdc <prvUnlockQueue>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1588
			( void ) xTaskResumeAll();
    332c:	f000 faea 	bl	3904 <xTaskResumeAll>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1594
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
    3330:	4620      	mov	r0, r4
    3332:	f7ff fbfe 	bl	2b32 <prvIsQueueEmpty>
    3336:	2800      	cmp	r0, #0
    3338:	d0cc      	beq.n	32d4 <xQueueSemaphoreTake+0xe4>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1601
					if( xInheritanceOccurred != pdFALSE )
    333a:	2d00      	cmp	r5, #0
    333c:	d0e9      	beq.n	3312 <xQueueSemaphoreTake+0x122>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1603
						taskENTER_CRITICAL();
    333e:	f7ff fa59 	bl	27f4 <vPortEnterCritical>
prvGetDisinheritPriorityAfterTimeout():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2055
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
    3342:	6a61      	ldr	r1, [r4, #36]	; 0x24
    3344:	b119      	cbz	r1, 334e <xQueueSemaphoreTake+0x15e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2057
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
    3346:	6b23      	ldr	r3, [r4, #48]	; 0x30
    3348:	6819      	ldr	r1, [r3, #0]
    334a:	f1c1 010a 	rsb	r1, r1, #10
xQueueSemaphoreTake():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1613
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
    334e:	68a0      	ldr	r0, [r4, #8]
    3350:	f000 fd8e 	bl	3e70 <vTaskPriorityDisinheritAfterTimeout>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1621
				return errQUEUE_EMPTY;
    3354:	2500      	movs	r5, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1615
						taskEXIT_CRITICAL();
    3356:	f7ff fa6f 	bl	2838 <vPortExitCritical>
    335a:	e7da      	b.n	3312 <xQueueSemaphoreTake+0x122>
    335c:	0000b20d 	.word	0x0000b20d
    3360:	0000b18d 	.word	0x0000b18d
    3364:	0000b137 	.word	0x0000b137
    3368:	0000b2b7 	.word	0x0000b2b7
    336c:	e000ed04 	.word	0xe000ed04

00003370 <xQueueReceiveFromISR>:
xQueueReceiveFromISR():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1782
{
    3370:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    3374:	4689      	mov	r9, r1
    3376:	4690      	mov	r8, r2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1787
	configASSERT( pxQueue );
    3378:	4605      	mov	r5, r0
    337a:	b928      	cbnz	r0, 3388 <xQueueReceiveFromISR+0x18>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1787 (discriminator 1)
    337c:	4921      	ldr	r1, [pc, #132]	; (3404 <xQueueReceiveFromISR+0x94>)
    337e:	f240 60fb 	movw	r0, #1787	; 0x6fb
    3382:	f7ff f993 	bl	26ac <configASSERT_callback>
    3386:	e7fe      	b.n	3386 <xQueueReceiveFromISR+0x16>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1788
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
    3388:	b939      	cbnz	r1, 339a <xQueueReceiveFromISR+0x2a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1788 (discriminator 1)
    338a:	6c03      	ldr	r3, [r0, #64]	; 0x40
    338c:	b12b      	cbz	r3, 339a <xQueueReceiveFromISR+0x2a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1788 (discriminator 2)
    338e:	491e      	ldr	r1, [pc, #120]	; (3408 <xQueueReceiveFromISR+0x98>)
    3390:	f240 60fc 	movw	r0, #1788	; 0x6fc
    3394:	f7ff f98a 	bl	26ac <configASSERT_callback>
    3398:	e7fe      	b.n	3398 <xQueueReceiveFromISR+0x28>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1804
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
    339a:	f7ff fb41 	bl	2a20 <vPortValidateInterruptPriority>
ulPortRaiseBASEPRI():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:211
	__asm volatile
    339e:	f3ef 8711 	mrs	r7, BASEPRI
    33a2:	f04f 0318 	mov.w	r3, #24
    33a6:	f383 8811 	msr	BASEPRI, r3
    33aa:	f3bf 8f6f 	isb	sy
    33ae:	f3bf 8f4f 	dsb	sy
xQueueReceiveFromISR():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1808
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
    33b2:	6bac      	ldr	r4, [r5, #56]	; 0x38
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1811
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
    33b4:	b31c      	cbz	r4, 33fe <xQueueReceiveFromISR+0x8e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1813
			const int8_t cRxLock = pxQueue->cRxLock;
    33b6:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1817
			prvCopyDataFromQueue( pxQueue, pvBuffer );
    33ba:	4649      	mov	r1, r9
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1813
			const int8_t cRxLock = pxQueue->cRxLock;
    33bc:	b276      	sxtb	r6, r6
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1817
			prvCopyDataFromQueue( pxQueue, pvBuffer );
    33be:	4628      	mov	r0, r5
    33c0:	f7ff fbf7 	bl	2bb2 <prvCopyDataFromQueue>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1818
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
    33c4:	3c01      	subs	r4, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1824
			if( cRxLock == queueUNLOCKED )
    33c6:	1c73      	adds	r3, r6, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1818
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
    33c8:	63ac      	str	r4, [r5, #56]	; 0x38
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1824
			if( cRxLock == queueUNLOCKED )
    33ca:	d113      	bne.n	33f4 <xQueueReceiveFromISR+0x84>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1826
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
    33cc:	692b      	ldr	r3, [r5, #16]
    33ce:	b90b      	cbnz	r3, 33d4 <xQueueReceiveFromISR+0x64>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1858
			xReturn = pdPASS;
    33d0:	2001      	movs	r0, #1
    33d2:	e00b      	b.n	33ec <xQueueReceiveFromISR+0x7c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1828
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
    33d4:	f105 0010 	add.w	r0, r5, #16
    33d8:	f000 fc0e 	bl	3bf8 <xTaskRemoveFromEventList>
    33dc:	2800      	cmp	r0, #0
    33de:	d0f7      	beq.n	33d0 <xQueueReceiveFromISR+0x60>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1832
						if( pxHigherPriorityTaskWoken != NULL )
    33e0:	f1b8 0f00 	cmp.w	r8, #0
    33e4:	d0f4      	beq.n	33d0 <xQueueReceiveFromISR+0x60>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1834
							*pxHigherPriorityTaskWoken = pdTRUE;
    33e6:	2001      	movs	r0, #1
    33e8:	f8c8 0000 	str.w	r0, [r8]
vPortSetBASEPRI():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:229
	__asm volatile
    33ec:	f387 8811 	msr	BASEPRI, r7
xQueueReceiveFromISR():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1869
}
    33f0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1855
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
    33f4:	3601      	adds	r6, #1
    33f6:	b276      	sxtb	r6, r6
    33f8:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
    33fc:	e7e8      	b.n	33d0 <xQueueReceiveFromISR+0x60>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1862
			xReturn = pdFAIL;
    33fe:	4620      	mov	r0, r4
    3400:	e7f4      	b.n	33ec <xQueueReceiveFromISR+0x7c>
    3402:	bf00      	nop
    3404:	0000b098 	.word	0x0000b098
    3408:	0000b26c 	.word	0x0000b26c

0000340c <vQueueDelete>:
vQueueDelete():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1972
{
    340c:	b508      	push	{r3, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1975
	configASSERT( pxQueue );
    340e:	b928      	cbnz	r0, 341c <vQueueDelete+0x10>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1975 (discriminator 1)
    3410:	4906      	ldr	r1, [pc, #24]	; (342c <vQueueDelete+0x20>)
    3412:	f240 70b7 	movw	r0, #1975	; 0x7b7
    3416:	f7ff f949 	bl	26ac <configASSERT_callback>
    341a:	e7fe      	b.n	341a <vQueueDelete+0xe>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1994
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
    341c:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
    3420:	b91b      	cbnz	r3, 342a <vQueueDelete+0x1e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2010
}
    3422:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:1996
			vPortFree( pxQueue );
    3426:	f7ff bb36 	b.w	2a96 <vPortFree>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/queue.c:2010
}
    342a:	bd08      	pop	{r3, pc}
    342c:	0000b098 	.word	0x0000b098

00003430 <prvAddNewTaskToReadyList>:
prvAddNewTaskToReadyList():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1073
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
    3430:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    3434:	4604      	mov	r4, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1076
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
    3436:	f7ff f9dd 	bl	27f4 <vPortEnterCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1078
	{
		uxCurrentNumberOfTasks++;
    343a:	4b2d      	ldr	r3, [pc, #180]	; (34f0 <prvAddNewTaskToReadyList+0xc0>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1079
		if( pxCurrentTCB == NULL )
    343c:	4d2d      	ldr	r5, [pc, #180]	; (34f4 <prvAddNewTaskToReadyList+0xc4>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1078
		uxCurrentNumberOfTasks++;
    343e:	681a      	ldr	r2, [r3, #0]
    3440:	4f2d      	ldr	r7, [pc, #180]	; (34f8 <prvAddNewTaskToReadyList+0xc8>)
    3442:	3201      	adds	r2, #1
    3444:	601a      	str	r2, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1079
		if( pxCurrentTCB == NULL )
    3446:	682e      	ldr	r6, [r5, #0]
    3448:	2e00      	cmp	r6, #0
    344a:	d146      	bne.n	34da <prvAddNewTaskToReadyList+0xaa>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1083
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
    344c:	602c      	str	r4, [r5, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1085

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
    344e:	681b      	ldr	r3, [r3, #0]
    3450:	2b01      	cmp	r3, #1
    3452:	d11c      	bne.n	348e <prvAddNewTaskToReadyList+0x5e>
    3454:	46b8      	mov	r8, r7
prvInitialiseTaskLists():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3552
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
    3456:	4640      	mov	r0, r8
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3550
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
    3458:	3601      	adds	r6, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3552
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
    345a:	f7ff fb29 	bl	2ab0 <vListInitialise>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3550
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
    345e:	2e0a      	cmp	r6, #10
    3460:	f108 0814 	add.w	r8, r8, #20
    3464:	d1f7      	bne.n	3456 <prvAddNewTaskToReadyList+0x26>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3555
	}

	vListInitialise( &xDelayedTaskList1 );
    3466:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 3520 <prvAddNewTaskToReadyList+0xf0>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3556
	vListInitialise( &xDelayedTaskList2 );
    346a:	4e24      	ldr	r6, [pc, #144]	; (34fc <prvAddNewTaskToReadyList+0xcc>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3555
	vListInitialise( &xDelayedTaskList1 );
    346c:	4640      	mov	r0, r8
    346e:	f7ff fb1f 	bl	2ab0 <vListInitialise>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3556
	vListInitialise( &xDelayedTaskList2 );
    3472:	4630      	mov	r0, r6
    3474:	f7ff fb1c 	bl	2ab0 <vListInitialise>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3557
	vListInitialise( &xPendingReadyList );
    3478:	4821      	ldr	r0, [pc, #132]	; (3500 <prvAddNewTaskToReadyList+0xd0>)
    347a:	f7ff fb19 	bl	2ab0 <vListInitialise>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3567
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
    347e:	4821      	ldr	r0, [pc, #132]	; (3504 <prvAddNewTaskToReadyList+0xd4>)
    3480:	f7ff fb16 	bl	2ab0 <vListInitialise>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3573
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
    3484:	4b20      	ldr	r3, [pc, #128]	; (3508 <prvAddNewTaskToReadyList+0xd8>)
    3486:	f8c3 8000 	str.w	r8, [r3]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3574
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
    348a:	4b20      	ldr	r3, [pc, #128]	; (350c <prvAddNewTaskToReadyList+0xdc>)
    348c:	601e      	str	r6, [r3, #0]
prvAddNewTaskToReadyList():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1119
		uxTaskNumber++;
    348e:	4a20      	ldr	r2, [pc, #128]	; (3510 <prvAddNewTaskToReadyList+0xe0>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1129
		prvAddTaskToReadyList( pxNewTCB );
    3490:	4920      	ldr	r1, [pc, #128]	; (3514 <prvAddNewTaskToReadyList+0xe4>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1119
		uxTaskNumber++;
    3492:	6813      	ldr	r3, [r2, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1129
		prvAddTaskToReadyList( pxNewTCB );
    3494:	6808      	ldr	r0, [r1, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1119
		uxTaskNumber++;
    3496:	3301      	adds	r3, #1
    3498:	6013      	str	r3, [r2, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1129
		prvAddTaskToReadyList( pxNewTCB );
    349a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1124
			pxNewTCB->uxTCBNumber = uxTaskNumber;
    349c:	6423      	str	r3, [r4, #64]	; 0x40
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1129
		prvAddTaskToReadyList( pxNewTCB );
    349e:	2301      	movs	r3, #1
    34a0:	4093      	lsls	r3, r2
    34a2:	4303      	orrs	r3, r0
    34a4:	2014      	movs	r0, #20
    34a6:	600b      	str	r3, [r1, #0]
    34a8:	fb00 7002 	mla	r0, r0, r2, r7
    34ac:	1d21      	adds	r1, r4, #4
    34ae:	f7ff fb0d 	bl	2acc <vListInsertEnd>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1133
	taskEXIT_CRITICAL();
    34b2:	f7ff f9c1 	bl	2838 <vPortExitCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1135
	if( xSchedulerRunning != pdFALSE )
    34b6:	4b18      	ldr	r3, [pc, #96]	; (3518 <prvAddNewTaskToReadyList+0xe8>)
    34b8:	681b      	ldr	r3, [r3, #0]
    34ba:	b163      	cbz	r3, 34d6 <prvAddNewTaskToReadyList+0xa6>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1139
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
    34bc:	682b      	ldr	r3, [r5, #0]
    34be:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    34c0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    34c2:	429a      	cmp	r2, r3
    34c4:	d207      	bcs.n	34d6 <prvAddNewTaskToReadyList+0xa6>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1141
			taskYIELD_IF_USING_PREEMPTION();
    34c6:	4b15      	ldr	r3, [pc, #84]	; (351c <prvAddNewTaskToReadyList+0xec>)
    34c8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    34cc:	601a      	str	r2, [r3, #0]
    34ce:	f3bf 8f4f 	dsb	sy
    34d2:	f3bf 8f6f 	isb	sy
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1152
}
    34d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1102
			if( xSchedulerRunning == pdFALSE )
    34da:	4b0f      	ldr	r3, [pc, #60]	; (3518 <prvAddNewTaskToReadyList+0xe8>)
    34dc:	681b      	ldr	r3, [r3, #0]
    34de:	2b00      	cmp	r3, #0
    34e0:	d1d5      	bne.n	348e <prvAddNewTaskToReadyList+0x5e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1104
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
    34e2:	682b      	ldr	r3, [r5, #0]
    34e4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    34e6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    34e8:	429a      	cmp	r2, r3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1106
					pxCurrentTCB = pxNewTCB;
    34ea:	bf98      	it	ls
    34ec:	602c      	strls	r4, [r5, #0]
    34ee:	e7ce      	b.n	348e <prvAddNewTaskToReadyList+0x5e>
    34f0:	100009e8 	.word	0x100009e8
    34f4:	10000910 	.word	0x10000910
    34f8:	1000091c 	.word	0x1000091c
    34fc:	10000a10 	.word	0x10000a10
    3500:	10000a30 	.word	0x10000a30
    3504:	10000a48 	.word	0x10000a48
    3508:	10000914 	.word	0x10000914
    350c:	10000918 	.word	0x10000918
    3510:	100009f4 	.word	0x100009f4
    3514:	100009f8 	.word	0x100009f8
    3518:	10000a44 	.word	0x10000a44
    351c:	e000ed04 	.word	0xe000ed04
    3520:	100009fc 	.word	0x100009fc

00003524 <prvIdleTask>:
prvIdleTask():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3335
{
    3524:	b508      	push	{r3, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3374
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
    3526:	4c07      	ldr	r4, [pc, #28]	; (3544 <prvIdleTask+0x20>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3376
				taskYIELD();
    3528:	4d07      	ldr	r5, [pc, #28]	; (3548 <prvIdleTask+0x24>)
    352a:	f04f 5680 	mov.w	r6, #268435456	; 0x10000000
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3374
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
    352e:	6823      	ldr	r3, [r4, #0]
    3530:	2b01      	cmp	r3, #1
    3532:	d904      	bls.n	353e <prvIdleTask+0x1a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3376
				taskYIELD();
    3534:	602e      	str	r6, [r5, #0]
    3536:	f3bf 8f4f 	dsb	sy
    353a:	f3bf 8f6f 	isb	sy
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3394
			vApplicationIdleHook();
    353e:	f7ff f8ad 	bl	269c <vApplicationIdleHook>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3351
		prvCheckTasksWaitingTermination();
    3542:	e7f4      	b.n	352e <prvIdleTask+0xa>
    3544:	1000091c 	.word	0x1000091c
    3548:	e000ed04 	.word	0xe000ed04

0000354c <prvResetNextTaskUnblockTime>:
prvResetNextTaskUnblockTime():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3884

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
    354c:	4a06      	ldr	r2, [pc, #24]	; (3568 <prvResetNextTaskUnblockTime+0x1c>)
    354e:	6813      	ldr	r3, [r2, #0]
    3550:	6819      	ldr	r1, [r3, #0]
    3552:	4b06      	ldr	r3, [pc, #24]	; (356c <prvResetNextTaskUnblockTime+0x20>)
    3554:	b919      	cbnz	r1, 355e <prvResetNextTaskUnblockTime+0x12>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3890
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
    3556:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3899
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
    355a:	601a      	str	r2, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3901
	}
}
    355c:	4770      	bx	lr
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3898
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    355e:	6812      	ldr	r2, [r2, #0]
    3560:	68d2      	ldr	r2, [r2, #12]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3899
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
    3562:	68d2      	ldr	r2, [r2, #12]
    3564:	6852      	ldr	r2, [r2, #4]
    3566:	e7f8      	b.n	355a <prvResetNextTaskUnblockTime+0xe>
    3568:	10000914 	.word	0x10000914
    356c:	10000a28 	.word	0x10000a28

00003570 <prvInitialiseNewTask.isra.2>:
prvInitialiseNewTask():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:821
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
    3570:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    3574:	e9dd 6409 	ldrd	r6, r4, [sp, #36]	; 0x24
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:851
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
    3578:	ea4f 0982 	mov.w	r9, r2, lsl #2
    357c:	464a      	mov	r2, r9
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:821
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
    357e:	4607      	mov	r7, r0
    3580:	460d      	mov	r5, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:851
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
    3582:	6b20      	ldr	r0, [r4, #48]	; 0x30
    3584:	21a5      	movs	r1, #165	; 0xa5
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:821
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
    3586:	4698      	mov	r8, r3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:851
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
    3588:	f001 fde4 	bl	5154 <memset>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:861
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
    358c:	6b23      	ldr	r3, [r4, #48]	; 0x30
    358e:	f1a9 0904 	sub.w	r9, r9, #4
    3592:	4499      	add	r9, r3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:862
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
    3594:	f029 0907 	bic.w	r9, r9, #7
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:889
	if( pcName != NULL )
    3598:	b39d      	cbz	r5, 3602 <prvInitialiseNewTask.isra.2+0x92>
    359a:	1e6b      	subs	r3, r5, #1
    359c:	f104 0234 	add.w	r2, r4, #52	; 0x34
    35a0:	350b      	adds	r5, #11
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:893
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
    35a2:	f813 1f01 	ldrb.w	r1, [r3, #1]!
    35a6:	f802 1b01 	strb.w	r1, [r2], #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:898
			if( pcName[ x ] == ( char ) 0x00 )
    35aa:	b109      	cbz	r1, 35b0 <prvInitialiseNewTask.isra.2+0x40>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:891
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
    35ac:	42ab      	cmp	r3, r5
    35ae:	d1f8      	bne.n	35a2 <prvInitialiseNewTask.isra.2+0x32>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:910
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
    35b0:	2300      	movs	r3, #0
    35b2:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:921
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
    35b6:	9d08      	ldr	r5, [sp, #32]
    35b8:	2d09      	cmp	r5, #9
    35ba:	bf28      	it	cs
    35bc:	2509      	movcs	r5, #9
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:934
		pxNewTCB->uxMutexesHeld = 0;
    35be:	f04f 0a00 	mov.w	sl, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:930
	pxNewTCB->uxPriority = uxPriority;
    35c2:	62e5      	str	r5, [r4, #44]	; 0x2c
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:933
		pxNewTCB->uxBasePriority = uxPriority;
    35c4:	64a5      	str	r5, [r4, #72]	; 0x48
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:938
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
    35c6:	1d20      	adds	r0, r4, #4
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:934
		pxNewTCB->uxMutexesHeld = 0;
    35c8:	f8c4 a04c 	str.w	sl, [r4, #76]	; 0x4c
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:938
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
    35cc:	f7ff fa7b 	bl	2ac6 <vListInitialiseItem>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:946
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    35d0:	f1c5 050a 	rsb	r5, r5, #10
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:939
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
    35d4:	f104 0018 	add.w	r0, r4, #24
    35d8:	f7ff fa75 	bl	2ac6 <vListInitialiseItem>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:989
		pxNewTCB->ulNotifiedValue = 0;
    35dc:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:943
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
    35e0:	6124      	str	r4, [r4, #16]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:946
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    35e2:	61a5      	str	r5, [r4, #24]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:947
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
    35e4:	6264      	str	r4, [r4, #36]	; 0x24
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:963
		pxNewTCB->ulRunTimeCounter = 0UL;
    35e6:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:990
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
    35ea:	f884 a058 	strb.w	sl, [r4, #88]	; 0x58
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1053
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
    35ee:	4642      	mov	r2, r8
    35f0:	4639      	mov	r1, r7
    35f2:	4648      	mov	r0, r9
    35f4:	f7ff f8d2 	bl	279c <pxPortInitialiseStack>
    35f8:	6020      	str	r0, [r4, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1059
	if( pxCreatedTask != NULL )
    35fa:	b106      	cbz	r6, 35fe <prvInitialiseNewTask.isra.2+0x8e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1063
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
    35fc:	6034      	str	r4, [r6, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1069
}
    35fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:916
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
    3602:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
    3606:	e7d6      	b.n	35b6 <prvInitialiseNewTask.isra.2+0x46>

00003608 <prvAddCurrentTaskToDelayedList>:
prvAddCurrentTaskToDelayedList():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:5082
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
    3608:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:5084
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
    360a:	4b1b      	ldr	r3, [pc, #108]	; (3678 <prvAddCurrentTaskToDelayedList+0x70>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:5097
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    360c:	4e1b      	ldr	r6, [pc, #108]	; (367c <prvAddCurrentTaskToDelayedList+0x74>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:5084
const TickType_t xConstTickCount = xTickCount;
    360e:	681c      	ldr	r4, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:5082
{
    3610:	4605      	mov	r5, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:5097
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    3612:	6830      	ldr	r0, [r6, #0]
    3614:	3004      	adds	r0, #4
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:5082
{
    3616:	460f      	mov	r7, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:5097
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    3618:	f7ff fa7b 	bl	2b12 <uxListRemove>
    361c:	4633      	mov	r3, r6
    361e:	b940      	cbnz	r0, 3632 <prvAddCurrentTaskToDelayedList+0x2a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:5101
	{
		/* The current task must be in a ready list, so there is no need to
		check, and the port reset macro can be called directly. */
		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority ); /*lint !e931 pxCurrentTCB cannot change as it is the calling task.  pxCurrentTCB->uxPriority and uxTopReadyPriority cannot change as called with scheduler suspended or in a critical section. */
    3620:	6831      	ldr	r1, [r6, #0]
    3622:	4e17      	ldr	r6, [pc, #92]	; (3680 <prvAddCurrentTaskToDelayedList+0x78>)
    3624:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
    3626:	6832      	ldr	r2, [r6, #0]
    3628:	2001      	movs	r0, #1
    362a:	4088      	lsls	r0, r1
    362c:	ea22 0200 	bic.w	r2, r2, r0
    3630:	6032      	str	r2, [r6, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:5110
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
    3632:	1c6a      	adds	r2, r5, #1
    3634:	d107      	bne.n	3646 <prvAddCurrentTaskToDelayedList+0x3e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:5110 (discriminator 1)
    3636:	b137      	cbz	r7, 3646 <prvAddCurrentTaskToDelayedList+0x3e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:5115
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
    3638:	6819      	ldr	r1, [r3, #0]
    363a:	4812      	ldr	r0, [pc, #72]	; (3684 <prvAddCurrentTaskToDelayedList+0x7c>)
    363c:	3104      	adds	r1, #4
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:5190

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
    363e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:5115
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
    3642:	f7ff ba43 	b.w	2acc <vListInsertEnd>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:5125
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
    3646:	681a      	ldr	r2, [r3, #0]
    3648:	1964      	adds	r4, r4, r5
    364a:	6054      	str	r4, [r2, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:5127
			if( xTimeToWake < xConstTickCount )
    364c:	d307      	bcc.n	365e <prvAddCurrentTaskToDelayedList+0x56>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:5131
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
    364e:	4a0e      	ldr	r2, [pc, #56]	; (3688 <prvAddCurrentTaskToDelayedList+0x80>)
    3650:	6810      	ldr	r0, [r2, #0]
    3652:	6819      	ldr	r1, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:5190
}
    3654:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:5131
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
    3658:	3104      	adds	r1, #4
    365a:	f7ff ba43 	b.w	2ae4 <vListInsert>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:5137
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
    365e:	4a0b      	ldr	r2, [pc, #44]	; (368c <prvAddCurrentTaskToDelayedList+0x84>)
    3660:	6810      	ldr	r0, [r2, #0]
    3662:	6819      	ldr	r1, [r3, #0]
    3664:	3104      	adds	r1, #4
    3666:	f7ff fa3d 	bl	2ae4 <vListInsert>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:5142
				if( xTimeToWake < xNextTaskUnblockTime )
    366a:	4b09      	ldr	r3, [pc, #36]	; (3690 <prvAddCurrentTaskToDelayedList+0x88>)
    366c:	681a      	ldr	r2, [r3, #0]
    366e:	42a2      	cmp	r2, r4
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:5144
					xNextTaskUnblockTime = xTimeToWake;
    3670:	bf88      	it	hi
    3672:	601c      	strhi	r4, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:5190
}
    3674:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    3676:	bf00      	nop
    3678:	10000a5c 	.word	0x10000a5c
    367c:	10000910 	.word	0x10000910
    3680:	100009f8 	.word	0x100009f8
    3684:	10000a48 	.word	0x10000a48
    3688:	10000918 	.word	0x10000918
    368c:	10000914 	.word	0x10000914
    3690:	10000a28 	.word	0x10000a28

00003694 <xTaskCreateStatic>:
xTaskCreateStatic():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:585
	{
    3694:	b570      	push	{r4, r5, r6, lr}
    3696:	b086      	sub	sp, #24
    3698:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:589
		configASSERT( puxStackBuffer != NULL );
    369c:	b92d      	cbnz	r5, 36aa <xTaskCreateStatic+0x16>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:589 (discriminator 1)
    369e:	4915      	ldr	r1, [pc, #84]	; (36f4 <xTaskCreateStatic+0x60>)
    36a0:	f240 204d 	movw	r0, #589	; 0x24d
    36a4:	f7ff f802 	bl	26ac <configASSERT_callback>
    36a8:	e7fe      	b.n	36a8 <xTaskCreateStatic+0x14>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:590
		configASSERT( pxTaskBuffer != NULL );
    36aa:	b92c      	cbnz	r4, 36b8 <xTaskCreateStatic+0x24>
    36ac:	4912      	ldr	r1, [pc, #72]	; (36f8 <xTaskCreateStatic+0x64>)
    36ae:	f240 204e 	movw	r0, #590	; 0x24e
    36b2:	f7fe fffb 	bl	26ac <configASSERT_callback>
    36b6:	e7fe      	b.n	36b6 <xTaskCreateStatic+0x22>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:597
			volatile size_t xSize = sizeof( StaticTask_t );
    36b8:	265c      	movs	r6, #92	; 0x5c
    36ba:	9605      	str	r6, [sp, #20]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:598
			configASSERT( xSize == sizeof( TCB_t ) );
    36bc:	9e05      	ldr	r6, [sp, #20]
    36be:	2e5c      	cmp	r6, #92	; 0x5c
    36c0:	d005      	beq.n	36ce <xTaskCreateStatic+0x3a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:598 (discriminator 1)
    36c2:	490e      	ldr	r1, [pc, #56]	; (36fc <xTaskCreateStatic+0x68>)
    36c4:	f240 2056 	movw	r0, #598	; 0x256
    36c8:	f7fe fff0 	bl	26ac <configASSERT_callback>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:598 (discriminator 3)
    36cc:	e7fe      	b.n	36cc <xTaskCreateStatic+0x38>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:609
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
    36ce:	6325      	str	r5, [r4, #48]	; 0x30
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:615
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
    36d0:	2502      	movs	r5, #2
    36d2:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:619
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
    36d6:	ad04      	add	r5, sp, #16
    36d8:	9501      	str	r5, [sp, #4]
    36da:	9d0a      	ldr	r5, [sp, #40]	; 0x28
    36dc:	9402      	str	r4, [sp, #8]
    36de:	9500      	str	r5, [sp, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:599
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
    36e0:	9e05      	ldr	r6, [sp, #20]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:619
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
    36e2:	f7ff ff45 	bl	3570 <prvInitialiseNewTask.isra.2>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:620
			prvAddNewTaskToReadyList( pxNewTCB );
    36e6:	4620      	mov	r0, r4
    36e8:	f7ff fea2 	bl	3430 <prvAddNewTaskToReadyList>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:628
	}
    36ec:	9804      	ldr	r0, [sp, #16]
    36ee:	b006      	add	sp, #24
    36f0:	bd70      	pop	{r4, r5, r6, pc}
    36f2:	bf00      	nop
    36f4:	0000b3a2 	.word	0x0000b3a2
    36f8:	0000b3b9 	.word	0x0000b3b9
    36fc:	0000b3ce 	.word	0x0000b3ce

00003700 <xTaskCreate>:
xTaskCreate():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:736
	{
    3700:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    3704:	4607      	mov	r7, r0
    3706:	b085      	sub	sp, #20
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:770
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
    3708:	0090      	lsls	r0, r2, #2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:736
	{
    370a:	4688      	mov	r8, r1
    370c:	4616      	mov	r6, r2
    370e:	4699      	mov	r9, r3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:770
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
    3710:	f7ff f9b2 	bl	2a78 <pvPortMalloc>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:772
			if( pxStack != NULL )
    3714:	4605      	mov	r5, r0
    3716:	b1e8      	cbz	r0, 3754 <xTaskCreate+0x54>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:775
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
    3718:	205c      	movs	r0, #92	; 0x5c
    371a:	f7ff f9ad 	bl	2a78 <pvPortMalloc>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:777
				if( pxNewTCB != NULL )
    371e:	4604      	mov	r4, r0
    3720:	b1a8      	cbz	r0, 374e <xTaskCreate+0x4e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:802
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
    3722:	2300      	movs	r3, #0
    3724:	f880 3059 	strb.w	r3, [r0, #89]	; 0x59
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:806
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
    3728:	9b0d      	ldr	r3, [sp, #52]	; 0x34
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:780
					pxNewTCB->pxStack = pxStack;
    372a:	6305      	str	r5, [r0, #48]	; 0x30
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:806
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
    372c:	9301      	str	r3, [sp, #4]
    372e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    3730:	9002      	str	r0, [sp, #8]
    3732:	9300      	str	r3, [sp, #0]
    3734:	4632      	mov	r2, r6
    3736:	464b      	mov	r3, r9
    3738:	4641      	mov	r1, r8
    373a:	4638      	mov	r0, r7
    373c:	f7ff ff18 	bl	3570 <prvInitialiseNewTask.isra.2>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:807
			prvAddNewTaskToReadyList( pxNewTCB );
    3740:	4620      	mov	r0, r4
    3742:	f7ff fe75 	bl	3430 <prvAddNewTaskToReadyList>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:808
			xReturn = pdPASS;
    3746:	2001      	movs	r0, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:816
	}
    3748:	b005      	add	sp, #20
    374a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:786
					vPortFree( pxStack );
    374e:	4628      	mov	r0, r5
    3750:	f7ff f9a1 	bl	2a96 <vPortFree>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:812
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
    3754:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:815
		return xReturn;
    3758:	e7f6      	b.n	3748 <xTaskCreate+0x48>
    375a:	Address 0x000000000000375a is out of bounds.


0000375c <vTaskStartScheduler>:
vTaskStartScheduler():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1968
{
    375c:	b510      	push	{r4, lr}
    375e:	b088      	sub	sp, #32
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1974
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
    3760:	2400      	movs	r4, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1980
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
    3762:	aa07      	add	r2, sp, #28
    3764:	a906      	add	r1, sp, #24
    3766:	a805      	add	r0, sp, #20
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1975
		StackType_t *pxIdleTaskStackBuffer = NULL;
    3768:	e9cd 4405 	strd	r4, r4, [sp, #20]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1980
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
    376c:	f7fe ffbe 	bl	26ec <vApplicationGetIdleTaskMemory>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1981
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
    3770:	9b05      	ldr	r3, [sp, #20]
    3772:	9302      	str	r3, [sp, #8]
    3774:	9b06      	ldr	r3, [sp, #24]
    3776:	9a07      	ldr	r2, [sp, #28]
    3778:	490f      	ldr	r1, [pc, #60]	; (37b8 <vTaskStartScheduler+0x5c>)
    377a:	4810      	ldr	r0, [pc, #64]	; (37bc <vTaskStartScheduler+0x60>)
    377c:	e9cd 4300 	strd	r4, r3, [sp]
    3780:	4623      	mov	r3, r4
    3782:	f7ff ff87 	bl	3694 <xTaskCreateStatic>
    3786:	4b0e      	ldr	r3, [pc, #56]	; (37c0 <vTaskStartScheduler+0x64>)
    3788:	6018      	str	r0, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1989
		if( xIdleTaskHandle != NULL )
    378a:	b190      	cbz	r0, 37b2 <vTaskStartScheduler+0x56>
vPortRaiseBASEPRI():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:195
	__asm volatile
    378c:	f04f 0318 	mov.w	r3, #24
    3790:	f383 8811 	msr	BASEPRI, r3
    3794:	f3bf 8f6f 	isb	sy
    3798:	f3bf 8f4f 	dsb	sy
vTaskStartScheduler():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2049
		xNextTaskUnblockTime = portMAX_DELAY;
    379c:	4b09      	ldr	r3, [pc, #36]	; (37c4 <vTaskStartScheduler+0x68>)
    379e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    37a2:	601a      	str	r2, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2050
		xSchedulerRunning = pdTRUE;
    37a4:	4b08      	ldr	r3, [pc, #32]	; (37c8 <vTaskStartScheduler+0x6c>)
    37a6:	2201      	movs	r2, #1
    37a8:	601a      	str	r2, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2051
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
    37aa:	4b08      	ldr	r3, [pc, #32]	; (37cc <vTaskStartScheduler+0x70>)
    37ac:	601c      	str	r4, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2065
		if( xPortStartScheduler() != pdFALSE )
    37ae:	f7ff f8b7 	bl	2920 <xPortStartScheduler>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2086
}
    37b2:	b008      	add	sp, #32
    37b4:	bd10      	pop	{r4, pc}
    37b6:	bf00      	nop
    37b8:	0000b348 	.word	0x0000b348
    37bc:	00003525 	.word	0x00003525
    37c0:	10000a24 	.word	0x10000a24
    37c4:	10000a28 	.word	0x10000a28
    37c8:	10000a44 	.word	0x10000a44
    37cc:	10000a5c 	.word	0x10000a5c

000037d0 <vTaskSuspendAll>:
vTaskSuspendAll():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2106
	++uxSchedulerSuspended;
    37d0:	4a02      	ldr	r2, [pc, #8]	; (37dc <vTaskSuspendAll+0xc>)
    37d2:	6813      	ldr	r3, [r2, #0]
    37d4:	3301      	adds	r3, #1
    37d6:	6013      	str	r3, [r2, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2108
}
    37d8:	4770      	bx	lr
    37da:	bf00      	nop
    37dc:	100009f0 	.word	0x100009f0

000037e0 <xTaskIncrementTick>:
xTaskIncrementTick():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2666
{
    37e0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2675
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
    37e4:	4b3b      	ldr	r3, [pc, #236]	; (38d4 <xTaskIncrementTick+0xf4>)
    37e6:	681b      	ldr	r3, [r3, #0]
    37e8:	2b00      	cmp	r3, #0
    37ea:	d16b      	bne.n	38c4 <xTaskIncrementTick+0xe4>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2679
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
    37ec:	4b3a      	ldr	r3, [pc, #232]	; (38d8 <xTaskIncrementTick+0xf8>)
    37ee:	681c      	ldr	r4, [r3, #0]
    37f0:	3401      	adds	r4, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2683
		xTickCount = xConstTickCount;
    37f2:	601c      	str	r4, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2685
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
    37f4:	b9a4      	cbnz	r4, 3820 <xTaskIncrementTick+0x40>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2687
			taskSWITCH_DELAYED_LISTS();
    37f6:	4b39      	ldr	r3, [pc, #228]	; (38dc <xTaskIncrementTick+0xfc>)
    37f8:	681a      	ldr	r2, [r3, #0]
    37fa:	6812      	ldr	r2, [r2, #0]
    37fc:	b12a      	cbz	r2, 380a <xTaskIncrementTick+0x2a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2687 (discriminator 1)
    37fe:	4938      	ldr	r1, [pc, #224]	; (38e0 <xTaskIncrementTick+0x100>)
    3800:	f640 207f 	movw	r0, #2687	; 0xa7f
    3804:	f7fe ff52 	bl	26ac <configASSERT_callback>
    3808:	e7fe      	b.n	3808 <xTaskIncrementTick+0x28>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2687 (discriminator 2)
    380a:	4a36      	ldr	r2, [pc, #216]	; (38e4 <xTaskIncrementTick+0x104>)
    380c:	6819      	ldr	r1, [r3, #0]
    380e:	6810      	ldr	r0, [r2, #0]
    3810:	6018      	str	r0, [r3, #0]
    3812:	6011      	str	r1, [r2, #0]
    3814:	4a34      	ldr	r2, [pc, #208]	; (38e8 <xTaskIncrementTick+0x108>)
    3816:	6813      	ldr	r3, [r2, #0]
    3818:	3301      	adds	r3, #1
    381a:	6013      	str	r3, [r2, #0]
    381c:	f7ff fe96 	bl	354c <prvResetNextTaskUnblockTime>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2698
		if( xConstTickCount >= xNextTaskUnblockTime )
    3820:	4d32      	ldr	r5, [pc, #200]	; (38ec <xTaskIncrementTick+0x10c>)
    3822:	4f33      	ldr	r7, [pc, #204]	; (38f0 <xTaskIncrementTick+0x110>)
    3824:	682b      	ldr	r3, [r5, #0]
    3826:	42a3      	cmp	r3, r4
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2669
BaseType_t xSwitchRequired = pdFALSE;
    3828:	f04f 0b00 	mov.w	fp, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2698
		if( xConstTickCount >= xNextTaskUnblockTime )
    382c:	d911      	bls.n	3852 <xTaskIncrementTick+0x72>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2781
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
    382e:	683a      	ldr	r2, [r7, #0]
    3830:	4b30      	ldr	r3, [pc, #192]	; (38f4 <xTaskIncrementTick+0x114>)
    3832:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
    3834:	2214      	movs	r2, #20
    3836:	434a      	muls	r2, r1
    3838:	589a      	ldr	r2, [r3, r2]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2783
				xSwitchRequired = pdTRUE;
    383a:	2a02      	cmp	r2, #2
    383c:	bf28      	it	cs
    383e:	f04f 0b01 	movcs.w	fp, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2822
		if( xYieldPending != pdFALSE )
    3842:	4a2d      	ldr	r2, [pc, #180]	; (38f8 <xTaskIncrementTick+0x118>)
    3844:	6812      	ldr	r2, [r2, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2824
			xSwitchRequired = pdTRUE;
    3846:	2a00      	cmp	r2, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2834
}
    3848:	bf0c      	ite	eq
    384a:	4658      	moveq	r0, fp
    384c:	2001      	movne	r0, #1
    384e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2702
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
    3852:	f8df a088 	ldr.w	sl, [pc, #136]	; 38dc <xTaskIncrementTick+0xfc>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2752
					prvAddTaskToReadyList( pxTCB );
    3856:	f8df 90a8 	ldr.w	r9, [pc, #168]	; 3900 <xTaskIncrementTick+0x120>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2702
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
    385a:	f8da 2000 	ldr.w	r2, [sl]
    385e:	6812      	ldr	r2, [r2, #0]
    3860:	b91a      	cbnz	r2, 386a <xTaskIncrementTick+0x8a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2709
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    3862:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    3866:	602a      	str	r2, [r5, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2710
					break;
    3868:	e7e1      	b.n	382e <xTaskIncrementTick+0x4e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2718
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    386a:	f8da 2000 	ldr.w	r2, [sl]
    386e:	68d2      	ldr	r2, [r2, #12]
    3870:	68d6      	ldr	r6, [r2, #12]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2719
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
    3872:	6871      	ldr	r1, [r6, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2721
					if( xConstTickCount < xItemValue )
    3874:	428c      	cmp	r4, r1
    3876:	d201      	bcs.n	387c <xTaskIncrementTick+0x9c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2728
						xNextTaskUnblockTime = xItemValue;
    3878:	6029      	str	r1, [r5, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2729
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
    387a:	e7d8      	b.n	382e <xTaskIncrementTick+0x4e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2737
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
    387c:	f106 0804 	add.w	r8, r6, #4
    3880:	4640      	mov	r0, r8
    3882:	f7ff f946 	bl	2b12 <uxListRemove>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2741
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
    3886:	6ab1      	ldr	r1, [r6, #40]	; 0x28
    3888:	b119      	cbz	r1, 3892 <xTaskIncrementTick+0xb2>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2743
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
    388a:	f106 0018 	add.w	r0, r6, #24
    388e:	f7ff f940 	bl	2b12 <uxListRemove>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2752
					prvAddTaskToReadyList( pxTCB );
    3892:	6af0      	ldr	r0, [r6, #44]	; 0x2c
    3894:	f8d9 3000 	ldr.w	r3, [r9]
    3898:	2201      	movs	r2, #1
    389a:	fa02 f100 	lsl.w	r1, r2, r0
    389e:	4319      	orrs	r1, r3
    38a0:	4b14      	ldr	r3, [pc, #80]	; (38f4 <xTaskIncrementTick+0x114>)
    38a2:	f8c9 1000 	str.w	r1, [r9]
    38a6:	f04f 0c14 	mov.w	ip, #20
    38aa:	4641      	mov	r1, r8
    38ac:	fb0c 3000 	mla	r0, ip, r0, r3
    38b0:	f7ff f90c 	bl	2acc <vListInsertEnd>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2762
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
    38b4:	6838      	ldr	r0, [r7, #0]
    38b6:	6af1      	ldr	r1, [r6, #44]	; 0x2c
    38b8:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2764
							xSwitchRequired = pdTRUE;
    38ba:	4291      	cmp	r1, r2
    38bc:	bf28      	it	cs
    38be:	f04f 0b01 	movcs.w	fp, #1
    38c2:	e7ca      	b.n	385a <xTaskIncrementTick+0x7a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2809
		++uxPendedTicks;
    38c4:	4a0d      	ldr	r2, [pc, #52]	; (38fc <xTaskIncrementTick+0x11c>)
    38c6:	6813      	ldr	r3, [r2, #0]
    38c8:	3301      	adds	r3, #1
    38ca:	6013      	str	r3, [r2, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2669
BaseType_t xSwitchRequired = pdFALSE;
    38cc:	f04f 0b00 	mov.w	fp, #0
    38d0:	e7b7      	b.n	3842 <xTaskIncrementTick+0x62>
    38d2:	bf00      	nop
    38d4:	100009f0 	.word	0x100009f0
    38d8:	10000a5c 	.word	0x10000a5c
    38dc:	10000914 	.word	0x10000914
    38e0:	0000b3e7 	.word	0x0000b3e7
    38e4:	10000918 	.word	0x10000918
    38e8:	10000a2c 	.word	0x10000a2c
    38ec:	10000a28 	.word	0x10000a28
    38f0:	10000910 	.word	0x10000910
    38f4:	1000091c 	.word	0x1000091c
    38f8:	10000a60 	.word	0x10000a60
    38fc:	100009ec 	.word	0x100009ec
    3900:	100009f8 	.word	0x100009f8

00003904 <xTaskResumeAll>:
xTaskResumeAll():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2175
{
    3904:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2181
	configASSERT( uxSchedulerSuspended );
    3908:	4c2f      	ldr	r4, [pc, #188]	; (39c8 <xTaskResumeAll+0xc4>)
    390a:	6823      	ldr	r3, [r4, #0]
    390c:	b92b      	cbnz	r3, 391a <xTaskResumeAll+0x16>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2181 (discriminator 1)
    390e:	492f      	ldr	r1, [pc, #188]	; (39cc <xTaskResumeAll+0xc8>)
    3910:	f640 0085 	movw	r0, #2181	; 0x885
    3914:	f7fe feca 	bl	26ac <configASSERT_callback>
    3918:	e7fe      	b.n	3918 <xTaskResumeAll+0x14>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2188
	taskENTER_CRITICAL();
    391a:	f7fe ff6b 	bl	27f4 <vPortEnterCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2190
		--uxSchedulerSuspended;
    391e:	6823      	ldr	r3, [r4, #0]
    3920:	3b01      	subs	r3, #1
    3922:	6023      	str	r3, [r4, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2192
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
    3924:	6824      	ldr	r4, [r4, #0]
    3926:	b12c      	cbz	r4, 3934 <xTaskResumeAll+0x30>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2177
BaseType_t xAlreadyYielded = pdFALSE;
    3928:	2400      	movs	r4, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2278
	taskEXIT_CRITICAL();
    392a:	f7fe ff85 	bl	2838 <vPortExitCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2281
}
    392e:	4620      	mov	r0, r4
    3930:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2194
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
    3934:	4b26      	ldr	r3, [pc, #152]	; (39d0 <xTaskResumeAll+0xcc>)
    3936:	681b      	ldr	r3, [r3, #0]
    3938:	2b00      	cmp	r3, #0
    393a:	d0f5      	beq.n	3928 <xTaskResumeAll+0x24>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2198
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
    393c:	4d25      	ldr	r5, [pc, #148]	; (39d4 <xTaskResumeAll+0xd0>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2203
					prvAddTaskToReadyList( pxTCB );
    393e:	4e26      	ldr	r6, [pc, #152]	; (39d8 <xTaskResumeAll+0xd4>)
    3940:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 39ec <xTaskResumeAll+0xe8>
    3944:	e01f      	b.n	3986 <xTaskResumeAll+0x82>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2200
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    3946:	68eb      	ldr	r3, [r5, #12]
    3948:	68dc      	ldr	r4, [r3, #12]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2202
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
    394a:	f104 0904 	add.w	r9, r4, #4
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2201
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
    394e:	f104 0018 	add.w	r0, r4, #24
    3952:	f7ff f8de 	bl	2b12 <uxListRemove>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2202
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
    3956:	4648      	mov	r0, r9
    3958:	f7ff f8db 	bl	2b12 <uxListRemove>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2203
					prvAddTaskToReadyList( pxTCB );
    395c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    395e:	6831      	ldr	r1, [r6, #0]
    3960:	2701      	movs	r7, #1
    3962:	fa07 f302 	lsl.w	r3, r7, r2
    3966:	2014      	movs	r0, #20
    3968:	430b      	orrs	r3, r1
    396a:	fb00 8002 	mla	r0, r0, r2, r8
    396e:	4649      	mov	r1, r9
    3970:	6033      	str	r3, [r6, #0]
    3972:	f7ff f8ab 	bl	2acc <vListInsertEnd>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2207
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
    3976:	4b19      	ldr	r3, [pc, #100]	; (39dc <xTaskResumeAll+0xd8>)
    3978:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    397a:	681b      	ldr	r3, [r3, #0]
    397c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    397e:	429a      	cmp	r2, r3
    3980:	d301      	bcc.n	3986 <xTaskResumeAll+0x82>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2209
						xYieldPending = pdTRUE;
    3982:	4b17      	ldr	r3, [pc, #92]	; (39e0 <xTaskResumeAll+0xdc>)
    3984:	601f      	str	r7, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2198
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
    3986:	682b      	ldr	r3, [r5, #0]
    3988:	2b00      	cmp	r3, #0
    398a:	d1dc      	bne.n	3946 <xTaskResumeAll+0x42>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2217
				if( pxTCB != NULL )
    398c:	b10c      	cbz	r4, 3992 <xTaskResumeAll+0x8e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2225
					prvResetNextTaskUnblockTime();
    398e:	f7ff fddd 	bl	354c <prvResetNextTaskUnblockTime>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2233
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
    3992:	4d14      	ldr	r5, [pc, #80]	; (39e4 <xTaskResumeAll+0xe0>)
    3994:	682c      	ldr	r4, [r5, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2235
					if( uxPendedCounts > ( UBaseType_t ) 0U )
    3996:	b144      	cbz	r4, 39aa <xTaskResumeAll+0xa6>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2241
								xYieldPending = pdTRUE;
    3998:	4e11      	ldr	r6, [pc, #68]	; (39e0 <xTaskResumeAll+0xdc>)
    399a:	2701      	movs	r7, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2239
							if( xTaskIncrementTick() != pdFALSE )
    399c:	f7ff ff20 	bl	37e0 <xTaskIncrementTick>
    39a0:	b100      	cbz	r0, 39a4 <xTaskResumeAll+0xa0>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2241
								xYieldPending = pdTRUE;
    39a2:	6037      	str	r7, [r6, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2248
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
    39a4:	3c01      	subs	r4, #1
    39a6:	d1f9      	bne.n	399c <xTaskResumeAll+0x98>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2250
						uxPendedTicks = 0;
    39a8:	602c      	str	r4, [r5, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2258
				if( xYieldPending != pdFALSE )
    39aa:	4b0d      	ldr	r3, [pc, #52]	; (39e0 <xTaskResumeAll+0xdc>)
    39ac:	681b      	ldr	r3, [r3, #0]
    39ae:	2b00      	cmp	r3, #0
    39b0:	d0ba      	beq.n	3928 <xTaskResumeAll+0x24>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2265
					taskYIELD_IF_USING_PREEMPTION();
    39b2:	4b0d      	ldr	r3, [pc, #52]	; (39e8 <xTaskResumeAll+0xe4>)
    39b4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    39b8:	601a      	str	r2, [r3, #0]
    39ba:	f3bf 8f4f 	dsb	sy
    39be:	f3bf 8f6f 	isb	sy
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2262
						xAlreadyYielded = pdTRUE;
    39c2:	2401      	movs	r4, #1
    39c4:	e7b1      	b.n	392a <xTaskResumeAll+0x26>
    39c6:	bf00      	nop
    39c8:	100009f0 	.word	0x100009f0
    39cc:	0000b44c 	.word	0x0000b44c
    39d0:	100009e8 	.word	0x100009e8
    39d4:	10000a30 	.word	0x10000a30
    39d8:	100009f8 	.word	0x100009f8
    39dc:	10000910 	.word	0x10000910
    39e0:	10000a60 	.word	0x10000a60
    39e4:	100009ec 	.word	0x100009ec
    39e8:	e000ed04 	.word	0xe000ed04
    39ec:	1000091c 	.word	0x1000091c

000039f0 <vTaskDelay>:
vTaskDelay():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1334
	{
    39f0:	b508      	push	{r3, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1338
		if( xTicksToDelay > ( TickType_t ) 0U )
    39f2:	b940      	cbnz	r0, 3a06 <vTaskDelay+0x16>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1365
			portYIELD_WITHIN_API();
    39f4:	4b0d      	ldr	r3, [pc, #52]	; (3a2c <vTaskDelay+0x3c>)
    39f6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    39fa:	601a      	str	r2, [r3, #0]
    39fc:	f3bf 8f4f 	dsb	sy
    3a00:	f3bf 8f6f 	isb	sy
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1371
	}
    3a04:	bd08      	pop	{r3, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1340
			configASSERT( uxSchedulerSuspended == 0 );
    3a06:	4b0a      	ldr	r3, [pc, #40]	; (3a30 <vTaskDelay+0x40>)
    3a08:	6819      	ldr	r1, [r3, #0]
    3a0a:	b129      	cbz	r1, 3a18 <vTaskDelay+0x28>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1340 (discriminator 1)
    3a0c:	4909      	ldr	r1, [pc, #36]	; (3a34 <vTaskDelay+0x44>)
    3a0e:	f240 503c 	movw	r0, #1340	; 0x53c
    3a12:	f7fe fe4b 	bl	26ac <configASSERT_callback>
    3a16:	e7fe      	b.n	3a16 <vTaskDelay+0x26>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1341
			vTaskSuspendAll();
    3a18:	f7ff feda 	bl	37d0 <vTaskSuspendAll>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1352
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
    3a1c:	f7ff fdf4 	bl	3608 <prvAddCurrentTaskToDelayedList>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1354
			xAlreadyYielded = xTaskResumeAll();
    3a20:	f7ff ff70 	bl	3904 <xTaskResumeAll>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1363
		if( xAlreadyYielded == pdFALSE )
    3a24:	2800      	cmp	r0, #0
    3a26:	d0e5      	beq.n	39f4 <vTaskDelay+0x4>
    3a28:	e7ec      	b.n	3a04 <vTaskDelay+0x14>
    3a2a:	bf00      	nop
    3a2c:	e000ed04 	.word	0xe000ed04
    3a30:	100009f0 	.word	0x100009f0
    3a34:	0000b302 	.word	0x0000b302

00003a38 <vTaskSwitchContext>:
vTaskSwitchContext():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2948
{
    3a38:	b538      	push	{r3, r4, r5, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2949
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
    3a3a:	4b27      	ldr	r3, [pc, #156]	; (3ad8 <vTaskSwitchContext+0xa0>)
    3a3c:	681a      	ldr	r2, [r3, #0]
    3a3e:	4b27      	ldr	r3, [pc, #156]	; (3adc <vTaskSwitchContext+0xa4>)
    3a40:	b112      	cbz	r2, 3a48 <vTaskSwitchContext+0x10>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2953
		xYieldPending = pdTRUE;
    3a42:	2201      	movs	r2, #1
    3a44:	601a      	str	r2, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3017
}
    3a46:	bd38      	pop	{r3, r4, r5, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2957
		xYieldPending = pdFALSE;
    3a48:	601a      	str	r2, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2965
				ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
    3a4a:	f7fe fe5b 	bl	2704 <freertos_hooks__get_run_time_counter_value>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2975
			if( ulTotalRunTime > ulTaskSwitchedInTime )
    3a4e:	4a24      	ldr	r2, [pc, #144]	; (3ae0 <vTaskSwitchContext+0xa8>)
    3a50:	4c24      	ldr	r4, [pc, #144]	; (3ae4 <vTaskSwitchContext+0xac>)
    3a52:	6815      	ldr	r5, [r2, #0]
    3a54:	42a8      	cmp	r0, r5
    3a56:	d904      	bls.n	3a62 <vTaskSwitchContext+0x2a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2977
				pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
    3a58:	6821      	ldr	r1, [r4, #0]
    3a5a:	6d0b      	ldr	r3, [r1, #80]	; 0x50
    3a5c:	1b5b      	subs	r3, r3, r5
    3a5e:	4403      	add	r3, r0
    3a60:	650b      	str	r3, [r1, #80]	; 0x50
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2988
		taskCHECK_FOR_STACK_OVERFLOW();
    3a62:	6823      	ldr	r3, [r4, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2983
			ulTaskSwitchedInTime = ulTotalRunTime;
    3a64:	6010      	str	r0, [r2, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2988
		taskCHECK_FOR_STACK_OVERFLOW();
    3a66:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    3a68:	681a      	ldr	r2, [r3, #0]
    3a6a:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
    3a6e:	d10b      	bne.n	3a88 <vTaskSwitchContext+0x50>
    3a70:	685a      	ldr	r2, [r3, #4]
    3a72:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
    3a76:	d107      	bne.n	3a88 <vTaskSwitchContext+0x50>
    3a78:	689a      	ldr	r2, [r3, #8]
    3a7a:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
    3a7e:	d103      	bne.n	3a88 <vTaskSwitchContext+0x50>
    3a80:	68db      	ldr	r3, [r3, #12]
    3a82:	f1b3 3fa5 	cmp.w	r3, #2779096485	; 0xa5a5a5a5
    3a86:	d004      	beq.n	3a92 <vTaskSwitchContext+0x5a>
    3a88:	6820      	ldr	r0, [r4, #0]
    3a8a:	6821      	ldr	r1, [r4, #0]
    3a8c:	3134      	adds	r1, #52	; 0x34
    3a8e:	f7fe fdef 	bl	2670 <vApplicationStackOverflowHook>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2999
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    3a92:	4b15      	ldr	r3, [pc, #84]	; (3ae8 <vTaskSwitchContext+0xb0>)
    3a94:	681b      	ldr	r3, [r3, #0]
ucPortCountLeadingZeros():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:134
		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
    3a96:	fab3 f383 	clz	r3, r3
    3a9a:	b2db      	uxtb	r3, r3
vTaskSwitchContext():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:2999
    3a9c:	f1c3 031f 	rsb	r3, r3, #31
    3aa0:	2214      	movs	r2, #20
    3aa2:	4912      	ldr	r1, [pc, #72]	; (3aec <vTaskSwitchContext+0xb4>)
    3aa4:	435a      	muls	r2, r3
    3aa6:	1888      	adds	r0, r1, r2
    3aa8:	588d      	ldr	r5, [r1, r2]
    3aaa:	b92d      	cbnz	r5, 3ab8 <vTaskSwitchContext+0x80>
    3aac:	4910      	ldr	r1, [pc, #64]	; (3af0 <vTaskSwitchContext+0xb8>)
    3aae:	f640 30b7 	movw	r0, #2999	; 0xbb7
    3ab2:	f7fe fdfb 	bl	26ac <configASSERT_callback>
    3ab6:	e7fe      	b.n	3ab6 <vTaskSwitchContext+0x7e>
    3ab8:	6845      	ldr	r5, [r0, #4]
    3aba:	3208      	adds	r2, #8
    3abc:	686d      	ldr	r5, [r5, #4]
    3abe:	6045      	str	r5, [r0, #4]
    3ac0:	440a      	add	r2, r1
    3ac2:	4295      	cmp	r5, r2
    3ac4:	bf04      	itt	eq
    3ac6:	686a      	ldreq	r2, [r5, #4]
    3ac8:	6042      	streq	r2, [r0, #4]
    3aca:	2214      	movs	r2, #20
    3acc:	fb02 1303 	mla	r3, r2, r3, r1
    3ad0:	685b      	ldr	r3, [r3, #4]
    3ad2:	68db      	ldr	r3, [r3, #12]
    3ad4:	6023      	str	r3, [r4, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3017
}
    3ad6:	e7b6      	b.n	3a46 <vTaskSwitchContext+0xe>
    3ad8:	100009f0 	.word	0x100009f0
    3adc:	10000a60 	.word	0x10000a60
    3ae0:	100009e4 	.word	0x100009e4
    3ae4:	10000910 	.word	0x10000910
    3ae8:	100009f8 	.word	0x100009f8
    3aec:	1000091c 	.word	0x1000091c
    3af0:	0000b34d 	.word	0x0000b34d

00003af4 <vTaskSuspend>:
vTaskSuspend():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1697
	{
    3af4:	b570      	push	{r4, r5, r6, lr}
    3af6:	4604      	mov	r4, r0
    3af8:	4e2a      	ldr	r6, [pc, #168]	; (3ba4 <vTaskSuspend+0xb0>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1700
		taskENTER_CRITICAL();
    3afa:	f7fe fe7b 	bl	27f4 <vPortEnterCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1704
			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
    3afe:	b904      	cbnz	r4, 3b02 <vTaskSuspend+0xe>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1704 (discriminator 1)
    3b00:	6834      	ldr	r4, [r6, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1710 (discriminator 4)
			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    3b02:	1d25      	adds	r5, r4, #4
    3b04:	4628      	mov	r0, r5
    3b06:	f7ff f804 	bl	2b12 <uxListRemove>
    3b0a:	b960      	cbnz	r0, 3b26 <vTaskSuspend+0x32>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1712
				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
    3b0c:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
    3b0e:	4b26      	ldr	r3, [pc, #152]	; (3ba8 <vTaskSuspend+0xb4>)
    3b10:	2114      	movs	r1, #20
    3b12:	4341      	muls	r1, r0
    3b14:	585b      	ldr	r3, [r3, r1]
    3b16:	b933      	cbnz	r3, 3b26 <vTaskSuspend+0x32>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1712 (discriminator 1)
    3b18:	4924      	ldr	r1, [pc, #144]	; (3bac <vTaskSuspend+0xb8>)
    3b1a:	2201      	movs	r2, #1
    3b1c:	680b      	ldr	r3, [r1, #0]
    3b1e:	4082      	lsls	r2, r0
    3b20:	ea23 0302 	bic.w	r3, r3, r2
    3b24:	600b      	str	r3, [r1, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1720
			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
    3b26:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    3b28:	b11b      	cbz	r3, 3b32 <vTaskSuspend+0x3e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1722
				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
    3b2a:	f104 0018 	add.w	r0, r4, #24
    3b2e:	f7fe fff0 	bl	2b12 <uxListRemove>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1729
			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
    3b32:	4629      	mov	r1, r5
    3b34:	481e      	ldr	r0, [pc, #120]	; (3bb0 <vTaskSuspend+0xbc>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1744
		if( xSchedulerRunning != pdFALSE )
    3b36:	4d1f      	ldr	r5, [pc, #124]	; (3bb4 <vTaskSuspend+0xc0>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1729
			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
    3b38:	f7fe ffc8 	bl	2acc <vListInsertEnd>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1733
				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
    3b3c:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
    3b40:	2b01      	cmp	r3, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1737
					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
    3b42:	bf04      	itt	eq
    3b44:	2300      	moveq	r3, #0
    3b46:	f884 3058 	strbeq.w	r3, [r4, #88]	; 0x58
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1742
		taskEXIT_CRITICAL();
    3b4a:	f7fe fe75 	bl	2838 <vPortExitCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1744
		if( xSchedulerRunning != pdFALSE )
    3b4e:	682a      	ldr	r2, [r5, #0]
    3b50:	b12a      	cbz	r2, 3b5e <vTaskSuspend+0x6a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1748
			taskENTER_CRITICAL();
    3b52:	f7fe fe4f 	bl	27f4 <vPortEnterCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1750
				prvResetNextTaskUnblockTime();
    3b56:	f7ff fcf9 	bl	354c <prvResetNextTaskUnblockTime>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1752
			taskEXIT_CRITICAL();
    3b5a:	f7fe fe6d 	bl	2838 <vPortExitCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1759
		if( pxTCB == pxCurrentTCB )
    3b5e:	6833      	ldr	r3, [r6, #0]
    3b60:	42a3      	cmp	r3, r4
    3b62:	d112      	bne.n	3b8a <vTaskSuspend+0x96>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1761
			if( xSchedulerRunning != pdFALSE )
    3b64:	682b      	ldr	r3, [r5, #0]
    3b66:	b18b      	cbz	r3, 3b8c <vTaskSuspend+0x98>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1764
				configASSERT( uxSchedulerSuspended == 0 );
    3b68:	4b13      	ldr	r3, [pc, #76]	; (3bb8 <vTaskSuspend+0xc4>)
    3b6a:	681b      	ldr	r3, [r3, #0]
    3b6c:	b12b      	cbz	r3, 3b7a <vTaskSuspend+0x86>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1764 (discriminator 1)
    3b6e:	4913      	ldr	r1, [pc, #76]	; (3bbc <vTaskSuspend+0xc8>)
    3b70:	f240 60e4 	movw	r0, #1764	; 0x6e4
    3b74:	f7fe fd9a 	bl	26ac <configASSERT_callback>
    3b78:	e7fe      	b.n	3b78 <vTaskSuspend+0x84>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1765
				portYIELD_WITHIN_API();
    3b7a:	4b11      	ldr	r3, [pc, #68]	; (3bc0 <vTaskSuspend+0xcc>)
    3b7c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    3b80:	601a      	str	r2, [r3, #0]
    3b82:	f3bf 8f4f 	dsb	sy
    3b86:	f3bf 8f6f 	isb	sy
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1790
	}
    3b8a:	bd70      	pop	{r4, r5, r6, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1772
				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks ) /*lint !e931 Right has no side effect, just volatile. */
    3b8c:	4a08      	ldr	r2, [pc, #32]	; (3bb0 <vTaskSuspend+0xbc>)
    3b8e:	6811      	ldr	r1, [r2, #0]
    3b90:	4a0c      	ldr	r2, [pc, #48]	; (3bc4 <vTaskSuspend+0xd0>)
    3b92:	6812      	ldr	r2, [r2, #0]
    3b94:	4291      	cmp	r1, r2
    3b96:	d101      	bne.n	3b9c <vTaskSuspend+0xa8>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1778
					pxCurrentTCB = NULL;
    3b98:	6033      	str	r3, [r6, #0]
    3b9a:	e7f6      	b.n	3b8a <vTaskSuspend+0x96>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1790
	}
    3b9c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:1782
					vTaskSwitchContext();
    3ba0:	f7ff bf4a 	b.w	3a38 <vTaskSwitchContext>
    3ba4:	10000910 	.word	0x10000910
    3ba8:	1000091c 	.word	0x1000091c
    3bac:	100009f8 	.word	0x100009f8
    3bb0:	10000a48 	.word	0x10000a48
    3bb4:	10000a44 	.word	0x10000a44
    3bb8:	100009f0 	.word	0x100009f0
    3bbc:	0000b302 	.word	0x0000b302
    3bc0:	e000ed04 	.word	0xe000ed04
    3bc4:	100009e8 	.word	0x100009e8

00003bc8 <vTaskPlaceOnEventList>:
vTaskPlaceOnEventList():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3021
{
    3bc8:	b510      	push	{r4, lr}
    3bca:	460c      	mov	r4, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3022
	configASSERT( pxEventList );
    3bcc:	b928      	cbnz	r0, 3bda <vTaskPlaceOnEventList+0x12>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3022 (discriminator 1)
    3bce:	4908      	ldr	r1, [pc, #32]	; (3bf0 <vTaskPlaceOnEventList+0x28>)
    3bd0:	f640 30ce 	movw	r0, #3022	; 0xbce
    3bd4:	f7fe fd6a 	bl	26ac <configASSERT_callback>
    3bd8:	e7fe      	b.n	3bd8 <vTaskPlaceOnEventList+0x10>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3031
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
    3bda:	4b06      	ldr	r3, [pc, #24]	; (3bf4 <vTaskPlaceOnEventList+0x2c>)
    3bdc:	6819      	ldr	r1, [r3, #0]
    3bde:	3118      	adds	r1, #24
    3be0:	f7fe ff80 	bl	2ae4 <vListInsert>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3033
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
    3be4:	4620      	mov	r0, r4
    3be6:	2101      	movs	r1, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3034
}
    3be8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3033
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
    3bec:	f7ff bd0c 	b.w	3608 <prvAddCurrentTaskToDelayedList>
    3bf0:	0000b31c 	.word	0x0000b31c
    3bf4:	10000910 	.word	0x10000910

00003bf8 <xTaskRemoveFromEventList>:
xTaskRemoveFromEventList():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3095
{
    3bf8:	b538      	push	{r3, r4, r5, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3112
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    3bfa:	68c3      	ldr	r3, [r0, #12]
    3bfc:	68dc      	ldr	r4, [r3, #12]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3113
	configASSERT( pxUnblockedTCB );
    3bfe:	b92c      	cbnz	r4, 3c0c <xTaskRemoveFromEventList+0x14>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3113 (discriminator 1)
    3c00:	4916      	ldr	r1, [pc, #88]	; (3c5c <xTaskRemoveFromEventList+0x64>)
    3c02:	f640 4029 	movw	r0, #3113	; 0xc29
    3c06:	f7fe fd51 	bl	26ac <configASSERT_callback>
    3c0a:	e7fe      	b.n	3c0a <xTaskRemoveFromEventList+0x12>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3114
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
    3c0c:	f104 0518 	add.w	r5, r4, #24
    3c10:	4628      	mov	r0, r5
    3c12:	f7fe ff7e 	bl	2b12 <uxListRemove>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3116
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
    3c16:	4b12      	ldr	r3, [pc, #72]	; (3c60 <xTaskRemoveFromEventList+0x68>)
    3c18:	681b      	ldr	r3, [r3, #0]
    3c1a:	b9e3      	cbnz	r3, 3c56 <xTaskRemoveFromEventList+0x5e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3118
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
    3c1c:	1d25      	adds	r5, r4, #4
    3c1e:	4628      	mov	r0, r5
    3c20:	f7fe ff77 	bl	2b12 <uxListRemove>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3119
		prvAddTaskToReadyList( pxUnblockedTCB );
    3c24:	490f      	ldr	r1, [pc, #60]	; (3c64 <xTaskRemoveFromEventList+0x6c>)
    3c26:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    3c28:	6808      	ldr	r0, [r1, #0]
    3c2a:	2301      	movs	r3, #1
    3c2c:	4093      	lsls	r3, r2
    3c2e:	4303      	orrs	r3, r0
    3c30:	600b      	str	r3, [r1, #0]
    3c32:	4b0d      	ldr	r3, [pc, #52]	; (3c68 <xTaskRemoveFromEventList+0x70>)
    3c34:	2014      	movs	r0, #20
    3c36:	4629      	mov	r1, r5
    3c38:	fb00 3002 	mla	r0, r0, r2, r3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3139
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
    3c3c:	f7fe ff46 	bl	2acc <vListInsertEnd>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3142
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
    3c40:	4b0a      	ldr	r3, [pc, #40]	; (3c6c <xTaskRemoveFromEventList+0x74>)
    3c42:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    3c44:	681b      	ldr	r3, [r3, #0]
    3c46:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    3c48:	429a      	cmp	r2, r3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3151
		xYieldPending = pdTRUE;
    3c4a:	bf83      	ittte	hi
    3c4c:	4b08      	ldrhi	r3, [pc, #32]	; (3c70 <xTaskRemoveFromEventList+0x78>)
    3c4e:	2001      	movhi	r0, #1
    3c50:	6018      	strhi	r0, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3155
		xReturn = pdFALSE;
    3c52:	2000      	movls	r0, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3159
}
    3c54:	bd38      	pop	{r3, r4, r5, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3139
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
    3c56:	4629      	mov	r1, r5
    3c58:	4806      	ldr	r0, [pc, #24]	; (3c74 <xTaskRemoveFromEventList+0x7c>)
    3c5a:	e7ef      	b.n	3c3c <xTaskRemoveFromEventList+0x44>
    3c5c:	0000b43d 	.word	0x0000b43d
    3c60:	100009f0 	.word	0x100009f0
    3c64:	100009f8 	.word	0x100009f8
    3c68:	1000091c 	.word	0x1000091c
    3c6c:	10000910 	.word	0x10000910
    3c70:	10000a60 	.word	0x10000a60
    3c74:	10000a30 	.word	0x10000a30

00003c78 <vTaskInternalSetTimeOutState>:
vTaskInternalSetTimeOutState():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3211
	pxTimeOut->xOverflowCount = xNumOfOverflows;
    3c78:	4b03      	ldr	r3, [pc, #12]	; (3c88 <vTaskInternalSetTimeOutState+0x10>)
    3c7a:	681b      	ldr	r3, [r3, #0]
    3c7c:	6003      	str	r3, [r0, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3212
	pxTimeOut->xTimeOnEntering = xTickCount;
    3c7e:	4b03      	ldr	r3, [pc, #12]	; (3c8c <vTaskInternalSetTimeOutState+0x14>)
    3c80:	681b      	ldr	r3, [r3, #0]
    3c82:	6043      	str	r3, [r0, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3213
}
    3c84:	4770      	bx	lr
    3c86:	bf00      	nop
    3c88:	10000a2c 	.word	0x10000a2c
    3c8c:	10000a5c 	.word	0x10000a5c

00003c90 <xTaskCheckForTimeOut>:
xTaskCheckForTimeOut():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3217
{
    3c90:	b570      	push	{r4, r5, r6, lr}
    3c92:	460c      	mov	r4, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3220
	configASSERT( pxTimeOut );
    3c94:	4605      	mov	r5, r0
    3c96:	b928      	cbnz	r0, 3ca4 <xTaskCheckForTimeOut+0x14>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3220 (discriminator 1)
    3c98:	4916      	ldr	r1, [pc, #88]	; (3cf4 <xTaskCheckForTimeOut+0x64>)
    3c9a:	f640 4094 	movw	r0, #3220	; 0xc94
    3c9e:	f7fe fd05 	bl	26ac <configASSERT_callback>
    3ca2:	e7fe      	b.n	3ca2 <xTaskCheckForTimeOut+0x12>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3221
	configASSERT( pxTicksToWait );
    3ca4:	b929      	cbnz	r1, 3cb2 <xTaskCheckForTimeOut+0x22>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3221 (discriminator 1)
    3ca6:	4914      	ldr	r1, [pc, #80]	; (3cf8 <xTaskCheckForTimeOut+0x68>)
    3ca8:	f640 4095 	movw	r0, #3221	; 0xc95
    3cac:	f7fe fcfe 	bl	26ac <configASSERT_callback>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3221 (discriminator 2)
    3cb0:	e7fe      	b.n	3cb0 <xTaskCheckForTimeOut+0x20>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3223
	taskENTER_CRITICAL();
    3cb2:	f7fe fd9f 	bl	27f4 <vPortEnterCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3226
		const TickType_t xConstTickCount = xTickCount;
    3cb6:	4b11      	ldr	r3, [pc, #68]	; (3cfc <xTaskCheckForTimeOut+0x6c>)
    3cb8:	6819      	ldr	r1, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3241
			if( *pxTicksToWait == portMAX_DELAY )
    3cba:	6823      	ldr	r3, [r4, #0]
    3cbc:	1c5a      	adds	r2, r3, #1
    3cbe:	d010      	beq.n	3ce2 <xTaskCheckForTimeOut+0x52>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3251
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
    3cc0:	480f      	ldr	r0, [pc, #60]	; (3d00 <xTaskCheckForTimeOut+0x70>)
    3cc2:	682e      	ldr	r6, [r5, #0]
    3cc4:	6800      	ldr	r0, [r0, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3227
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
    3cc6:	686a      	ldr	r2, [r5, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3251
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
    3cc8:	4286      	cmp	r6, r0
    3cca:	d001      	beq.n	3cd0 <xTaskCheckForTimeOut+0x40>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3251 (discriminator 1)
    3ccc:	428a      	cmp	r2, r1
    3cce:	d90f      	bls.n	3cf0 <xTaskCheckForTimeOut+0x60>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3227
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
    3cd0:	1a88      	subs	r0, r1, r2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3260
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
    3cd2:	4283      	cmp	r3, r0
    3cd4:	d90a      	bls.n	3cec <xTaskCheckForTimeOut+0x5c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3263
			*pxTicksToWait -= xElapsedTime;
    3cd6:	1a5b      	subs	r3, r3, r1
    3cd8:	4413      	add	r3, r2
    3cda:	6023      	str	r3, [r4, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3264
			vTaskInternalSetTimeOutState( pxTimeOut );
    3cdc:	4628      	mov	r0, r5
    3cde:	f7ff ffcb 	bl	3c78 <vTaskInternalSetTimeOutState>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3246
				xReturn = pdFALSE;
    3ce2:	2400      	movs	r4, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3273
	taskEXIT_CRITICAL();
    3ce4:	f7fe fda8 	bl	2838 <vPortExitCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3276
}
    3ce8:	4620      	mov	r0, r4
    3cea:	bd70      	pop	{r4, r5, r6, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3269
			*pxTicksToWait = 0;
    3cec:	2300      	movs	r3, #0
    3cee:	6023      	str	r3, [r4, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3258
			xReturn = pdTRUE;
    3cf0:	2401      	movs	r4, #1
    3cf2:	e7f7      	b.n	3ce4 <xTaskCheckForTimeOut+0x54>
    3cf4:	0000b33e 	.word	0x0000b33e
    3cf8:	0000b394 	.word	0x0000b394
    3cfc:	10000a5c 	.word	0x10000a5c
    3d00:	10000a2c 	.word	0x10000a2c

00003d04 <vTaskMissedYield>:
vTaskMissedYield():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3281
	xYieldPending = pdTRUE;
    3d04:	4b01      	ldr	r3, [pc, #4]	; (3d0c <vTaskMissedYield+0x8>)
    3d06:	2201      	movs	r2, #1
    3d08:	601a      	str	r2, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3282
}
    3d0a:	4770      	bx	lr
    3d0c:	10000a60 	.word	0x10000a60

00003d10 <xTaskGetSchedulerState>:
xTaskGetSchedulerState():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3927
		if( xSchedulerRunning == pdFALSE )
    3d10:	4b05      	ldr	r3, [pc, #20]	; (3d28 <xTaskGetSchedulerState+0x18>)
    3d12:	681b      	ldr	r3, [r3, #0]
    3d14:	b133      	cbz	r3, 3d24 <xTaskGetSchedulerState+0x14>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3933
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
    3d16:	4b05      	ldr	r3, [pc, #20]	; (3d2c <xTaskGetSchedulerState+0x1c>)
    3d18:	681b      	ldr	r3, [r3, #0]
    3d1a:	2b00      	cmp	r3, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3939
				xReturn = taskSCHEDULER_SUSPENDED;
    3d1c:	bf0c      	ite	eq
    3d1e:	2002      	moveq	r0, #2
    3d20:	2000      	movne	r0, #0
    3d22:	4770      	bx	lr
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3929
			xReturn = taskSCHEDULER_NOT_STARTED;
    3d24:	2001      	movs	r0, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3944
	}
    3d26:	4770      	bx	lr
    3d28:	10000a44 	.word	0x10000a44
    3d2c:	100009f0 	.word	0x100009f0

00003d30 <xTaskPriorityInherit>:
xTaskPriorityInherit():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3952
	{
    3d30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3959
		if( pxMutexHolder != NULL )
    3d34:	4604      	mov	r4, r0
    3d36:	2800      	cmp	r0, #0
    3d38:	d035      	beq.n	3da6 <xTaskPriorityInherit+0x76>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3964
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
    3d3a:	4a23      	ldr	r2, [pc, #140]	; (3dc8 <xTaskPriorityInherit+0x98>)
    3d3c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
    3d3e:	6811      	ldr	r1, [r2, #0]
    3d40:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
    3d42:	428b      	cmp	r3, r1
    3d44:	4617      	mov	r7, r2
    3d46:	d236      	bcs.n	3db6 <xTaskPriorityInherit+0x86>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3969
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
    3d48:	6982      	ldr	r2, [r0, #24]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3980
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
    3d4a:	4d20      	ldr	r5, [pc, #128]	; (3dcc <xTaskPriorityInherit+0x9c>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3969
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
    3d4c:	2a00      	cmp	r2, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3971
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    3d4e:	bfa1      	itttt	ge
    3d50:	683a      	ldrge	r2, [r7, #0]
    3d52:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
    3d54:	f1c2 020a 	rsbge	r2, r2, #10
    3d58:	6182      	strge	r2, [r0, #24]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3980
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
    3d5a:	2614      	movs	r6, #20
    3d5c:	6942      	ldr	r2, [r0, #20]
    3d5e:	fb06 5303 	mla	r3, r6, r3, r5
    3d62:	429a      	cmp	r2, r3
    3d64:	d121      	bne.n	3daa <xTaskPriorityInherit+0x7a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3982
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    3d66:	f100 0804 	add.w	r8, r0, #4
    3d6a:	4640      	mov	r0, r8
    3d6c:	f7fe fed1 	bl	2b12 <uxListRemove>
    3d70:	4b17      	ldr	r3, [pc, #92]	; (3dd0 <xTaskPriorityInherit+0xa0>)
    3d72:	b948      	cbnz	r0, 3d88 <xTaskPriorityInherit+0x58>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3984
						taskRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority );
    3d74:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
    3d76:	4346      	muls	r6, r0
    3d78:	59aa      	ldr	r2, [r5, r6]
    3d7a:	b92a      	cbnz	r2, 3d88 <xTaskPriorityInherit+0x58>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3984 (discriminator 1)
    3d7c:	681a      	ldr	r2, [r3, #0]
    3d7e:	2101      	movs	r1, #1
    3d80:	4081      	lsls	r1, r0
    3d82:	ea22 0201 	bic.w	r2, r2, r1
    3d86:	601a      	str	r2, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3992
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
    3d88:	683a      	ldr	r2, [r7, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3993
					prvAddTaskToReadyList( pxMutexHolderTCB );
    3d8a:	6819      	ldr	r1, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3992
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
    3d8c:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
    3d8e:	62e2      	str	r2, [r4, #44]	; 0x2c
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3993
					prvAddTaskToReadyList( pxMutexHolderTCB );
    3d90:	2401      	movs	r4, #1
    3d92:	fa04 f002 	lsl.w	r0, r4, r2
    3d96:	4308      	orrs	r0, r1
    3d98:	6018      	str	r0, [r3, #0]
    3d9a:	2014      	movs	r0, #20
    3d9c:	4641      	mov	r1, r8
    3d9e:	fb00 5002 	mla	r0, r0, r2, r5
    3da2:	f7fe fe93 	bl	2acc <vListInsertEnd>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3954
	BaseType_t xReturn = pdFALSE;
    3da6:	4620      	mov	r0, r4
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4030
		return xReturn;
    3da8:	e003      	b.n	3db2 <xTaskPriorityInherit+0x82>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:3998
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
    3daa:	683b      	ldr	r3, [r7, #0]
    3dac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    3dae:	62c3      	str	r3, [r0, #44]	; 0x2c
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4004
				xReturn = pdTRUE;
    3db0:	2001      	movs	r0, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4031
	}
    3db2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4008
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
    3db6:	6813      	ldr	r3, [r2, #0]
    3db8:	6c80      	ldr	r0, [r0, #72]	; 0x48
    3dba:	6adc      	ldr	r4, [r3, #44]	; 0x2c
    3dbc:	42a0      	cmp	r0, r4
    3dbe:	bf2c      	ite	cs
    3dc0:	2000      	movcs	r0, #0
    3dc2:	2001      	movcc	r0, #1
    3dc4:	e7f5      	b.n	3db2 <xTaskPriorityInherit+0x82>
    3dc6:	bf00      	nop
    3dc8:	10000910 	.word	0x10000910
    3dcc:	1000091c 	.word	0x1000091c
    3dd0:	100009f8 	.word	0x100009f8

00003dd4 <xTaskPriorityDisinherit>:
xTaskPriorityDisinherit():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4039
	{
    3dd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4043
		if( pxMutexHolder != NULL )
    3dd6:	4604      	mov	r4, r0
    3dd8:	b908      	cbnz	r0, 3dde <xTaskPriorityDisinherit+0xa>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4041
	BaseType_t xReturn = pdFALSE;
    3dda:	2000      	movs	r0, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4111
	}
    3ddc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4049
			configASSERT( pxTCB == pxCurrentTCB );
    3dde:	4b1f      	ldr	r3, [pc, #124]	; (3e5c <xTaskPriorityDisinherit+0x88>)
    3de0:	681b      	ldr	r3, [r3, #0]
    3de2:	4283      	cmp	r3, r0
    3de4:	d005      	beq.n	3df2 <xTaskPriorityDisinherit+0x1e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4049 (discriminator 1)
    3de6:	491e      	ldr	r1, [pc, #120]	; (3e60 <xTaskPriorityDisinherit+0x8c>)
    3de8:	f640 70d1 	movw	r0, #4049	; 0xfd1
    3dec:	f7fe fc5e 	bl	26ac <configASSERT_callback>
    3df0:	e7fe      	b.n	3df0 <xTaskPriorityDisinherit+0x1c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4050
			configASSERT( pxTCB->uxMutexesHeld );
    3df2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    3df4:	b92b      	cbnz	r3, 3e02 <xTaskPriorityDisinherit+0x2e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4050 (discriminator 1)
    3df6:	491b      	ldr	r1, [pc, #108]	; (3e64 <xTaskPriorityDisinherit+0x90>)
    3df8:	f640 70d2 	movw	r0, #4050	; 0xfd2
    3dfc:	f7fe fc56 	bl	26ac <configASSERT_callback>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4050 (discriminator 2)
    3e00:	e7fe      	b.n	3e00 <xTaskPriorityDisinherit+0x2c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4055
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
    3e02:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
    3e04:	6c82      	ldr	r2, [r0, #72]	; 0x48
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4051
			( pxTCB->uxMutexesHeld )--;
    3e06:	3b01      	subs	r3, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4055
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
    3e08:	4291      	cmp	r1, r2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4051
			( pxTCB->uxMutexesHeld )--;
    3e0a:	64c3      	str	r3, [r0, #76]	; 0x4c
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4055
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
    3e0c:	d0e5      	beq.n	3dda <xTaskPriorityDisinherit+0x6>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4058
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
    3e0e:	2b00      	cmp	r3, #0
    3e10:	d1e3      	bne.n	3dda <xTaskPriorityDisinherit+0x6>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4065
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    3e12:	1d05      	adds	r5, r0, #4
    3e14:	4628      	mov	r0, r5
    3e16:	f7fe fe7c 	bl	2b12 <uxListRemove>
    3e1a:	4e13      	ldr	r6, [pc, #76]	; (3e68 <xTaskPriorityDisinherit+0x94>)
    3e1c:	4a13      	ldr	r2, [pc, #76]	; (3e6c <xTaskPriorityDisinherit+0x98>)
    3e1e:	b950      	cbnz	r0, 3e36 <xTaskPriorityDisinherit+0x62>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4067
						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
    3e20:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
    3e22:	2114      	movs	r1, #20
    3e24:	4379      	muls	r1, r7
    3e26:	5873      	ldr	r3, [r6, r1]
    3e28:	b92b      	cbnz	r3, 3e36 <xTaskPriorityDisinherit+0x62>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4067 (discriminator 1)
    3e2a:	6813      	ldr	r3, [r2, #0]
    3e2c:	2001      	movs	r0, #1
    3e2e:	40b8      	lsls	r0, r7
    3e30:	ea23 0300 	bic.w	r3, r3, r0
    3e34:	6013      	str	r3, [r2, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4077
					pxTCB->uxPriority = pxTCB->uxBasePriority;
    3e36:	6ca3      	ldr	r3, [r4, #72]	; 0x48
    3e38:	62e3      	str	r3, [r4, #44]	; 0x2c
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4082
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    3e3a:	f1c3 010a 	rsb	r1, r3, #10
    3e3e:	61a1      	str	r1, [r4, #24]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4083
					prvAddTaskToReadyList( pxTCB );
    3e40:	6811      	ldr	r1, [r2, #0]
    3e42:	2401      	movs	r4, #1
    3e44:	fa04 f003 	lsl.w	r0, r4, r3
    3e48:	4308      	orrs	r0, r1
    3e4a:	6010      	str	r0, [r2, #0]
    3e4c:	2014      	movs	r0, #20
    3e4e:	fb00 6003 	mla	r0, r0, r3, r6
    3e52:	4629      	mov	r1, r5
    3e54:	f7fe fe3a 	bl	2acc <vListInsertEnd>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4093
					xReturn = pdTRUE;
    3e58:	4620      	mov	r0, r4
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4110
		return xReturn;
    3e5a:	e7bf      	b.n	3ddc <xTaskPriorityDisinherit+0x8>
    3e5c:	10000910 	.word	0x10000910
    3e60:	0000b412 	.word	0x0000b412
    3e64:	0000b428 	.word	0x0000b428
    3e68:	1000091c 	.word	0x1000091c
    3e6c:	100009f8 	.word	0x100009f8

00003e70 <vTaskPriorityDisinheritAfterTimeout>:
vTaskPriorityDisinheritAfterTimeout():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4119
	{
    3e70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4124
		if( pxMutexHolder != NULL )
    3e72:	4604      	mov	r4, r0
    3e74:	2800      	cmp	r0, #0
    3e76:	d047      	beq.n	3f08 <vTaskPriorityDisinheritAfterTimeout+0x98>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4128
			configASSERT( pxTCB->uxMutexesHeld );
    3e78:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
    3e7a:	b92a      	cbnz	r2, 3e88 <vTaskPriorityDisinheritAfterTimeout+0x18>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4128 (discriminator 1)
    3e7c:	4923      	ldr	r1, [pc, #140]	; (3f0c <vTaskPriorityDisinheritAfterTimeout+0x9c>)
    3e7e:	f44f 5081 	mov.w	r0, #4128	; 0x1020
    3e82:	f7fe fc13 	bl	26ac <configASSERT_callback>
    3e86:	e7fe      	b.n	3e86 <vTaskPriorityDisinheritAfterTimeout+0x16>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4134
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
    3e88:	6c83      	ldr	r3, [r0, #72]	; 0x48
    3e8a:	4299      	cmp	r1, r3
    3e8c:	bf38      	it	cc
    3e8e:	4619      	movcc	r1, r3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4144
			if( pxTCB->uxPriority != uxPriorityToUse )
    3e90:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
    3e92:	428b      	cmp	r3, r1
    3e94:	d038      	beq.n	3f08 <vTaskPriorityDisinheritAfterTimeout+0x98>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4150
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
    3e96:	2a01      	cmp	r2, #1
    3e98:	d136      	bne.n	3f08 <vTaskPriorityDisinheritAfterTimeout+0x98>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4155
					configASSERT( pxTCB != pxCurrentTCB );
    3e9a:	4a1d      	ldr	r2, [pc, #116]	; (3f10 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
    3e9c:	6812      	ldr	r2, [r2, #0]
    3e9e:	4282      	cmp	r2, r0
    3ea0:	d105      	bne.n	3eae <vTaskPriorityDisinheritAfterTimeout+0x3e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4155 (discriminator 1)
    3ea2:	491c      	ldr	r1, [pc, #112]	; (3f14 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
    3ea4:	f241 003b 	movw	r0, #4155	; 0x103b
    3ea8:	f7fe fc00 	bl	26ac <configASSERT_callback>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4155 (discriminator 2)
    3eac:	e7fe      	b.n	3eac <vTaskPriorityDisinheritAfterTimeout+0x3c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4166
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
    3eae:	6982      	ldr	r2, [r0, #24]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4181
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
    3eb0:	4d19      	ldr	r5, [pc, #100]	; (3f18 <vTaskPriorityDisinheritAfterTimeout+0xa8>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4162
					pxTCB->uxPriority = uxPriorityToUse;
    3eb2:	62c1      	str	r1, [r0, #44]	; 0x2c
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4166
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
    3eb4:	2a00      	cmp	r2, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4181
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
    3eb6:	f04f 0614 	mov.w	r6, #20
    3eba:	6942      	ldr	r2, [r0, #20]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4168
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    3ebc:	bfa8      	it	ge
    3ebe:	f1c1 010a 	rsbge	r1, r1, #10
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4181
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
    3ec2:	fb06 5303 	mla	r3, r6, r3, r5
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4168
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    3ec6:	bfa8      	it	ge
    3ec8:	6181      	strge	r1, [r0, #24]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4181
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
    3eca:	429a      	cmp	r2, r3
    3ecc:	d11c      	bne.n	3f08 <vTaskPriorityDisinheritAfterTimeout+0x98>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4183
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    3ece:	1d07      	adds	r7, r0, #4
    3ed0:	4638      	mov	r0, r7
    3ed2:	f7fe fe1e 	bl	2b12 <uxListRemove>
    3ed6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    3ed8:	4c10      	ldr	r4, [pc, #64]	; (3f1c <vTaskPriorityDisinheritAfterTimeout+0xac>)
    3eda:	b940      	cbnz	r0, 3eee <vTaskPriorityDisinheritAfterTimeout+0x7e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4185
							taskRESET_READY_PRIORITY( pxTCB->uxPriority );
    3edc:	4356      	muls	r6, r2
    3ede:	59ab      	ldr	r3, [r5, r6]
    3ee0:	b92b      	cbnz	r3, 3eee <vTaskPriorityDisinheritAfterTimeout+0x7e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4185 (discriminator 1)
    3ee2:	6823      	ldr	r3, [r4, #0]
    3ee4:	2101      	movs	r1, #1
    3ee6:	4091      	lsls	r1, r2
    3ee8:	ea23 0301 	bic.w	r3, r3, r1
    3eec:	6023      	str	r3, [r4, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4192
						prvAddTaskToReadyList( pxTCB );
    3eee:	6821      	ldr	r1, [r4, #0]
    3ef0:	2301      	movs	r3, #1
    3ef2:	4093      	lsls	r3, r2
    3ef4:	430b      	orrs	r3, r1
    3ef6:	2014      	movs	r0, #20
    3ef8:	6023      	str	r3, [r4, #0]
    3efa:	4639      	mov	r1, r7
    3efc:	fb00 5002 	mla	r0, r0, r2, r5
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4213
	}
    3f00:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4192
						prvAddTaskToReadyList( pxTCB );
    3f04:	f7fe bde2 	b.w	2acc <vListInsertEnd>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4213
	}
    3f08:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    3f0a:	bf00      	nop
    3f0c:	0000b428 	.word	0x0000b428
    3f10:	10000910 	.word	0x10000910
    3f14:	0000b328 	.word	0x0000b328
    3f18:	1000091c 	.word	0x1000091c
    3f1c:	100009f8 	.word	0x100009f8

00003f20 <pvTaskIncrementMutexHeldCount>:
pvTaskIncrementMutexHeldCount():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4553
		if( pxCurrentTCB != NULL )
    3f20:	4b04      	ldr	r3, [pc, #16]	; (3f34 <pvTaskIncrementMutexHeldCount+0x14>)
    3f22:	681a      	ldr	r2, [r3, #0]
    3f24:	b11a      	cbz	r2, 3f2e <pvTaskIncrementMutexHeldCount+0xe>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4555
			( pxCurrentTCB->uxMutexesHeld )++;
    3f26:	6819      	ldr	r1, [r3, #0]
    3f28:	6cca      	ldr	r2, [r1, #76]	; 0x4c
    3f2a:	3201      	adds	r2, #1
    3f2c:	64ca      	str	r2, [r1, #76]	; 0x4c
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4558
		return pxCurrentTCB;
    3f2e:	6818      	ldr	r0, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/source/tasks.c:4559
	}
    3f30:	4770      	bx	lr
    3f32:	bf00      	nop
    3f34:	10000910 	.word	0x10000910

00003f38 <vRunTimeStatIsrEntry>:
vRunTimeStatIsrEntry():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/freertos_tasks.mods:74
    portRESET_TIMER_FOR_RUN_TIME_STATS();
  }
  xTaskResumeAll();
}

void vRunTimeStatIsrEntry(void) {
    3f38:	b510      	push	{r4, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/freertos_tasks.mods:75
  unsigned long ulTempCounter = portGET_RUN_TIME_COUNTER_VALUE();
    3f3a:	f7fe fbe3 	bl	2704 <freertos_hooks__get_run_time_counter_value>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/freertos_tasks.mods:78

  // Add the time spent in the previously running task's counter.
  if (NULL != pxCurrentTCB) {
    3f3e:	4b06      	ldr	r3, [pc, #24]	; (3f58 <vRunTimeStatIsrEntry+0x20>)
    3f40:	4a06      	ldr	r2, [pc, #24]	; (3f5c <vRunTimeStatIsrEntry+0x24>)
    3f42:	6819      	ldr	r1, [r3, #0]
    3f44:	b129      	cbz	r1, 3f52 <vRunTimeStatIsrEntry+0x1a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/freertos_tasks.mods:79
    pxCurrentTCB->ulRunTimeCounter += (ulTempCounter - ulTaskSwitchedInTime);
    3f46:	6819      	ldr	r1, [r3, #0]
    3f48:	6814      	ldr	r4, [r2, #0]
    3f4a:	6d0b      	ldr	r3, [r1, #80]	; 0x50
    3f4c:	1b1b      	subs	r3, r3, r4
    3f4e:	4403      	add	r3, r0
    3f50:	650b      	str	r3, [r1, #80]	; 0x50
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/freertos_tasks.mods:83
  }

  // Save the current time to log how long the ISR is going to take.
  ulTaskSwitchedInTime = ulTempCounter;
    3f52:	6010      	str	r0, [r2, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/freertos_tasks.mods:84
}
    3f54:	bd10      	pop	{r4, pc}
    3f56:	bf00      	nop
    3f58:	10000910 	.word	0x10000910
    3f5c:	100009e4 	.word	0x100009e4

00003f60 <vRunTimeStatIsrExit>:
vRunTimeStatIsrExit():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/freertos_tasks.mods:85
void vRunTimeStatIsrExit(void) {
    3f60:	b508      	push	{r3, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/freertos_tasks.mods:86
  unsigned long ulTempCounter = portGET_RUN_TIME_COUNTER_VALUE();
    3f62:	f7fe fbcf 	bl	2704 <freertos_hooks__get_run_time_counter_value>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/freertos_tasks.mods:94
  // We don't need this because whatever is the "leftover" for the counters, that is
  // is the overhead itself!
  // ulISROverhead += ( ulTempCounter - ulTaskSwitchedInTime );

  // Save the current time so next time when task is switched out, it will use this time-stamp.
  ulTaskSwitchedInTime = ulTempCounter;
    3f66:	4b01      	ldr	r3, [pc, #4]	; (3f6c <vRunTimeStatIsrExit+0xc>)
    3f68:	6018      	str	r0, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l1_freertos/freertos_tasks.mods:95
}
    3f6a:	bd08      	pop	{r3, pc}
    3f6c:	100009e4 	.word	0x100009e4

00003f70 <board_io__initialize>:
board_io__initialize():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:36
static const uint32_t board_io__sd_card_cs_pin = (1 << 8);
static const uint32_t board_io__sd_card_detect_pin = (1 << 9);
static gpio_s board_io__led0, board_io__led1, board_io__led2, board_io__led3;
static gpio_s board_io__sw0, board_io__sw1, board_io__sw2, board_io__sw3;

void board_io__initialize(void) {
    3f70:	b538      	push	{r3, r4, r5, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:40
  // Note: return type of gpio__construct_with_function() because we do not need
  // GPIO instance after its configuration

  gpio__construct_with_function(GPIO__PORT_0, 2,
    3f72:	2201      	movs	r2, #1
    3f74:	2102      	movs	r1, #2
    3f76:	2000      	movs	r0, #0
    3f78:	f000 f8c3 	bl	4102 <gpio__construct_with_function>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:42
                                GPIO__FUNCTION_1); // P0.2 - Uart-0 Tx
  gpio__construct_with_function(GPIO__PORT_0, 3,
    3f7c:	2201      	movs	r2, #1
    3f7e:	2103      	movs	r1, #3
    3f80:	2000      	movs	r0, #0
    3f82:	f000 f8be 	bl	4102 <gpio__construct_with_function>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:46
                                GPIO__FUNCTION_1); // P0.3 - Uart-0 Rx

  // SPI bus 2 (SSP2)
  gpio__construct_with_function(GPIO__PORT_1, 0,
    3f86:	2204      	movs	r2, #4
    3f88:	2100      	movs	r1, #0
    3f8a:	2001      	movs	r0, #1
    3f8c:	f000 f8b9 	bl	4102 <gpio__construct_with_function>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:48
                                GPIO__FUNCTION_4); // P1.0 - SCK2
  gpio__construct_with_function(GPIO__PORT_1, 1,
    3f90:	2101      	movs	r1, #1
    3f92:	2204      	movs	r2, #4
    3f94:	4608      	mov	r0, r1
    3f96:	f000 f8b4 	bl	4102 <gpio__construct_with_function>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:50
                                GPIO__FUNCTION_4); // P1.1 - MOSI2
  gpio__construct_with_function(GPIO__PORT_1, 4,
    3f9a:	2204      	movs	r2, #4
    3f9c:	4611      	mov	r1, r2
    3f9e:	2001      	movs	r0, #1
    3fa0:	f000 f8af 	bl	4102 <gpio__construct_with_function>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:54
                                GPIO__FUNCTION_4); // P1.4 - MISO2

  // SD card
  gpio__construct_as_output(GPIO__PORT_1, 8); // SD card CS
    3fa4:	2108      	movs	r1, #8
    3fa6:	2001      	movs	r0, #1
    3fa8:	f000 f91a 	bl	41e0 <gpio__construct_as_output>
board_io__sd_card_ds():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:87
  gpio__enable_pull_down_resistors(board_io__sw1);
}

// Note: Not using gpio.h API here to optimize the speed of SSP CS selection
void board_io__sd_card_cs(void) { LPC_GPIO1->CLR = board_io__sd_card_cs_pin; }
void board_io__sd_card_ds(void) { LPC_GPIO1->SET = board_io__sd_card_cs_pin; }
    3fac:	4b28      	ldr	r3, [pc, #160]	; (4050 <board_io__initialize+0xe0>)
    3fae:	f44f 7280 	mov.w	r2, #256	; 0x100
    3fb2:	619a      	str	r2, [r3, #24]
board_io__initialize():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:56
  gpio__construct_as_input(GPIO__PORT_1, 9); // SD card detect
    3fb4:	2109      	movs	r1, #9
    3fb6:	2001      	movs	r0, #1
    3fb8:	f000 f8ee 	bl	4198 <gpio__construct_as_input>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:59
  const gpio_s sda_2 = gpio__construct_with_function(
    3fbc:	2202      	movs	r2, #2
    3fbe:	210a      	movs	r1, #10
    3fc0:	2000      	movs	r0, #0
    3fc2:	f000 f89e 	bl	4102 <gpio__construct_with_function>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:61
  const gpio_s scl_2 = gpio__construct_with_function(
    3fc6:	2202      	movs	r2, #2
    3fc8:	210b      	movs	r1, #11
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:59
  const gpio_s sda_2 = gpio__construct_with_function(
    3fca:	4605      	mov	r5, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:61
  const gpio_s scl_2 = gpio__construct_with_function(
    3fcc:	2000      	movs	r0, #0
    3fce:	f000 f898 	bl	4102 <gpio__construct_with_function>
    3fd2:	4604      	mov	r4, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:63
  gpio__enable_open_drain(sda_2);
    3fd4:	4628      	mov	r0, r5
    3fd6:	f000 f8a9 	bl	412c <gpio__enable_open_drain>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:64
  gpio__enable_open_drain(scl_2);
    3fda:	4620      	mov	r0, r4
    3fdc:	f000 f8a6 	bl	412c <gpio__enable_open_drain>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:67
  board_io__led0 = gpio__construct_as_output(GPIO__PORT_2, 3);
    3fe0:	2103      	movs	r1, #3
    3fe2:	2002      	movs	r0, #2
    3fe4:	f000 f8fc 	bl	41e0 <gpio__construct_as_output>
    3fe8:	4b1a      	ldr	r3, [pc, #104]	; (4054 <board_io__initialize+0xe4>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:73
  board_io__sw0 = gpio__construct_as_input(GPIO__PORT_1, 19);
    3fea:	4d1b      	ldr	r5, [pc, #108]	; (4058 <board_io__initialize+0xe8>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:67
  board_io__led0 = gpio__construct_as_output(GPIO__PORT_2, 3);
    3fec:	7018      	strb	r0, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:68
  board_io__led1 = gpio__construct_as_output(GPIO__PORT_1, 26);
    3fee:	211a      	movs	r1, #26
    3ff0:	2001      	movs	r0, #1
    3ff2:	f000 f8f5 	bl	41e0 <gpio__construct_as_output>
    3ff6:	4b19      	ldr	r3, [pc, #100]	; (405c <board_io__initialize+0xec>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:74
  board_io__sw1 = gpio__construct_as_input(GPIO__PORT_1, 15);
    3ff8:	4c19      	ldr	r4, [pc, #100]	; (4060 <board_io__initialize+0xf0>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:68
  board_io__led1 = gpio__construct_as_output(GPIO__PORT_1, 26);
    3ffa:	7018      	strb	r0, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:69
  board_io__led2 = gpio__construct_as_output(GPIO__PORT_1, 24);
    3ffc:	2118      	movs	r1, #24
    3ffe:	2001      	movs	r0, #1
    4000:	f000 f8ee 	bl	41e0 <gpio__construct_as_output>
    4004:	4b17      	ldr	r3, [pc, #92]	; (4064 <board_io__initialize+0xf4>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:70
  board_io__led3 = gpio__construct_as_output(GPIO__PORT_1, 18);
    4006:	2112      	movs	r1, #18
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:69
  board_io__led2 = gpio__construct_as_output(GPIO__PORT_1, 24);
    4008:	7018      	strb	r0, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:70
  board_io__led3 = gpio__construct_as_output(GPIO__PORT_1, 18);
    400a:	2001      	movs	r0, #1
    400c:	f000 f8e8 	bl	41e0 <gpio__construct_as_output>
    4010:	4b15      	ldr	r3, [pc, #84]	; (4068 <board_io__initialize+0xf8>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:73
  board_io__sw0 = gpio__construct_as_input(GPIO__PORT_1, 19);
    4012:	2113      	movs	r1, #19
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:70
  board_io__led3 = gpio__construct_as_output(GPIO__PORT_1, 18);
    4014:	7018      	strb	r0, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:73
  board_io__sw0 = gpio__construct_as_input(GPIO__PORT_1, 19);
    4016:	2001      	movs	r0, #1
    4018:	f000 f8be 	bl	4198 <gpio__construct_as_input>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:74
  board_io__sw1 = gpio__construct_as_input(GPIO__PORT_1, 15);
    401c:	210f      	movs	r1, #15
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:73
  board_io__sw0 = gpio__construct_as_input(GPIO__PORT_1, 19);
    401e:	7028      	strb	r0, [r5, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:74
  board_io__sw1 = gpio__construct_as_input(GPIO__PORT_1, 15);
    4020:	2001      	movs	r0, #1
    4022:	f000 f8b9 	bl	4198 <gpio__construct_as_input>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:75
  board_io__sw2 = gpio__construct_as_input(GPIO__PORT_0, 30);
    4026:	211e      	movs	r1, #30
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:74
  board_io__sw1 = gpio__construct_as_input(GPIO__PORT_1, 15);
    4028:	7020      	strb	r0, [r4, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:75
  board_io__sw2 = gpio__construct_as_input(GPIO__PORT_0, 30);
    402a:	2000      	movs	r0, #0
    402c:	f000 f8b4 	bl	4198 <gpio__construct_as_input>
    4030:	4b0e      	ldr	r3, [pc, #56]	; (406c <board_io__initialize+0xfc>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:76
  board_io__sw3 = gpio__construct_as_input(GPIO__PORT_0, 29);
    4032:	211d      	movs	r1, #29
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:75
  board_io__sw2 = gpio__construct_as_input(GPIO__PORT_0, 30);
    4034:	7018      	strb	r0, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:76
  board_io__sw3 = gpio__construct_as_input(GPIO__PORT_0, 29);
    4036:	2000      	movs	r0, #0
    4038:	f000 f8ae 	bl	4198 <gpio__construct_as_input>
    403c:	4b0c      	ldr	r3, [pc, #48]	; (4070 <board_io__initialize+0x100>)
    403e:	7018      	strb	r0, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:81
  gpio__enable_pull_down_resistors(board_io__sw0);
    4040:	7828      	ldrb	r0, [r5, #0]
    4042:	f000 f883 	bl	414c <gpio__enable_pull_down_resistors>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:82
  gpio__enable_pull_down_resistors(board_io__sw1);
    4046:	7820      	ldrb	r0, [r4, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:83
}
    4048:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:82
  gpio__enable_pull_down_resistors(board_io__sw1);
    404c:	f000 b87e 	b.w	414c <gpio__enable_pull_down_resistors>
    4050:	20098020 	.word	0x20098020
    4054:	10000a64 	.word	0x10000a64
    4058:	10000a68 	.word	0x10000a68
    405c:	10000a65 	.word	0x10000a65
    4060:	10000a69 	.word	0x10000a69
    4064:	10000a66 	.word	0x10000a66
    4068:	10000a67 	.word	0x10000a67
    406c:	10000a6a 	.word	0x10000a6a
    4070:	10000a6b 	.word	0x10000a6b

00004074 <board_io__sd_card_cs>:
board_io__sd_card_cs():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:86
void board_io__sd_card_cs(void) { LPC_GPIO1->CLR = board_io__sd_card_cs_pin; }
    4074:	4b02      	ldr	r3, [pc, #8]	; (4080 <board_io__sd_card_cs+0xc>)
    4076:	f44f 7280 	mov.w	r2, #256	; 0x100
    407a:	61da      	str	r2, [r3, #28]
    407c:	4770      	bx	lr
    407e:	bf00      	nop
    4080:	20098020 	.word	0x20098020

00004084 <board_io__sd_card_ds>:
board_io__sd_card_ds():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:87
void board_io__sd_card_ds(void) { LPC_GPIO1->SET = board_io__sd_card_cs_pin; }
    4084:	4b02      	ldr	r3, [pc, #8]	; (4090 <board_io__sd_card_ds+0xc>)
    4086:	f44f 7280 	mov.w	r2, #256	; 0x100
    408a:	619a      	str	r2, [r3, #24]
    408c:	4770      	bx	lr
    408e:	bf00      	nop
    4090:	20098020 	.word	0x20098020

00004094 <board_io__sd_card_is_present>:
board_io__sd_card_is_present():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:91

bool board_io__sd_card_is_present(void) {
  const uint32_t card_present_bitmask =
      (LPC_GPIO1->PIN & board_io__sd_card_detect_pin);
    4094:	4b03      	ldr	r3, [pc, #12]	; (40a4 <board_io__sd_card_is_present+0x10>)
    4096:	6958      	ldr	r0, [r3, #20]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:92
  return (0 == card_present_bitmask); // Signal is active low
    4098:	f480 7000 	eor.w	r0, r0, #512	; 0x200
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:93
}
    409c:	f3c0 2040 	ubfx	r0, r0, #9, #1
    40a0:	4770      	bx	lr
    40a2:	bf00      	nop
    40a4:	20098020 	.word	0x20098020

000040a8 <board_io__get_led0>:
board_io__get_led0():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:95

gpio_s board_io__get_led0(void) { return board_io__led0; }
    40a8:	4b01      	ldr	r3, [pc, #4]	; (40b0 <board_io__get_led0+0x8>)
    40aa:	7818      	ldrb	r0, [r3, #0]
    40ac:	4770      	bx	lr
    40ae:	bf00      	nop
    40b0:	10000a64 	.word	0x10000a64

000040b4 <board_io__get_led1>:
board_io__get_led1():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:96
gpio_s board_io__get_led1(void) { return board_io__led1; }
    40b4:	4b01      	ldr	r3, [pc, #4]	; (40bc <board_io__get_led1+0x8>)
    40b6:	7818      	ldrb	r0, [r3, #0]
    40b8:	4770      	bx	lr
    40ba:	bf00      	nop
    40bc:	10000a65 	.word	0x10000a65

000040c0 <board_io__get_led2>:
board_io__get_led2():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:97
gpio_s board_io__get_led2(void) { return board_io__led2; }
    40c0:	4b01      	ldr	r3, [pc, #4]	; (40c8 <board_io__get_led2+0x8>)
    40c2:	7818      	ldrb	r0, [r3, #0]
    40c4:	4770      	bx	lr
    40c6:	bf00      	nop
    40c8:	10000a66 	.word	0x10000a66

000040cc <board_io__get_led3>:
board_io__get_led3():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/board_io.c:98
gpio_s board_io__get_led3(void) { return board_io__led3; }
    40cc:	4b01      	ldr	r3, [pc, #4]	; (40d4 <board_io__get_led3+0x8>)
    40ce:	7818      	ldrb	r0, [r3, #0]
    40d0:	4770      	bx	lr
    40d2:	bf00      	nop
    40d4:	10000a67 	.word	0x10000a67

000040d8 <gpio__set_function>:
gpio__get_iocon():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:23

  // Each port is offset by thirty-two 32-bit registers
  volatile uint32_t *port_offset = IOCON_base + (32 * gpio.port_number);

  // Each pin configuration is a single 32-bit
  volatile uint32_t *pin_iocon = (port_offset + gpio.pin_number);
    40d8:	f3c0 03c4 	ubfx	r3, r0, #3, #5
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:20
  volatile uint32_t *port_offset = IOCON_base + (32 * gpio.port_number);
    40dc:	f000 0207 	and.w	r2, r0, #7
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:23
  volatile uint32_t *pin_iocon = (port_offset + gpio.pin_number);
    40e0:	009b      	lsls	r3, r3, #2
    40e2:	eb03 13c2 	add.w	r3, r3, r2, lsl #7
    40e6:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
    40ea:	f503 3330 	add.w	r3, r3, #180224	; 0x2c000
gpio__set_function():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:70
  volatile uint32_t *pin_iocon = gpio__get_iocon(gpio);

  // Reference chapter 7: table 83
  const uint32_t config_mask = UINT32_C(7);
  *pin_iocon &= ~(config_mask << 0);
  *pin_iocon |= ((uint32_t)function & config_mask);
    40ee:	f001 0107 	and.w	r1, r1, #7
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:69
  *pin_iocon &= ~(config_mask << 0);
    40f2:	681a      	ldr	r2, [r3, #0]
    40f4:	f022 0207 	bic.w	r2, r2, #7
    40f8:	601a      	str	r2, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:70
  *pin_iocon |= ((uint32_t)function & config_mask);
    40fa:	681a      	ldr	r2, [r3, #0]
    40fc:	4311      	orrs	r1, r2
    40fe:	6019      	str	r1, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:71
}
    4100:	4770      	bx	lr

00004102 <gpio__construct_with_function>:
gpio__construct_with_function():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:58
                                     gpio__function_e function) {
    4102:	b538      	push	{r3, r4, r5, lr}
gpio__construct():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:36
      .port_number = (uint8_t)port,
    4104:	f000 0507 	and.w	r5, r0, #7
gpio__construct_with_function():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:60
  gpio__set_function(gpio, function);
    4108:	f04f 0000 	mov.w	r0, #0
gpio__construct():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:35
  gpio_s gpio = {
    410c:	f001 041f 	and.w	r4, r1, #31
gpio__construct_with_function():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:60
  gpio__set_function(gpio, function);
    4110:	f365 0002 	bfi	r0, r5, #0, #3
    4114:	f364 00c7 	bfi	r0, r4, #3, #5
    4118:	4611      	mov	r1, r2
    411a:	f7ff ffdd 	bl	40d8 <gpio__set_function>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:61
  return gpio;
    411e:	f04f 0000 	mov.w	r0, #0
    4122:	f365 0002 	bfi	r0, r5, #0, #3
    4126:	f364 00c7 	bfi	r0, r4, #3, #5
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:62
}
    412a:	bd38      	pop	{r3, r4, r5, pc}

0000412c <gpio__enable_open_drain>:
gpio__get_iocon():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:23
  volatile uint32_t *pin_iocon = (port_offset + gpio.pin_number);
    412c:	f3c0 03c4 	ubfx	r3, r0, #3, #5
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:20
  volatile uint32_t *port_offset = IOCON_base + (32 * gpio.port_number);
    4130:	f000 0207 	and.w	r2, r0, #7
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:23
  volatile uint32_t *pin_iocon = (port_offset + gpio.pin_number);
    4134:	009b      	lsls	r3, r3, #2
    4136:	eb03 13c2 	add.w	r3, r3, r2, lsl #7
    413a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
    413e:	f503 3330 	add.w	r3, r3, #180224	; 0x2c000
gpio__enable_open_drain():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:75

void gpio__enable_open_drain(gpio_s gpio) {
  volatile uint32_t *pin_iocon = gpio__get_iocon(gpio);
  *pin_iocon |= (UINT32_C(1) << 10);
    4142:	681a      	ldr	r2, [r3, #0]
    4144:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
    4148:	601a      	str	r2, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:76
}
    414a:	4770      	bx	lr

0000414c <gpio__enable_pull_down_resistors>:
gpio__get_iocon():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:23
  volatile uint32_t *pin_iocon = (port_offset + gpio.pin_number);
    414c:	f3c0 03c4 	ubfx	r3, r0, #3, #5
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:20
  volatile uint32_t *port_offset = IOCON_base + (32 * gpio.port_number);
    4150:	f000 0207 	and.w	r2, r0, #7
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:23
  volatile uint32_t *pin_iocon = (port_offset + gpio.pin_number);
    4154:	009b      	lsls	r3, r3, #2
    4156:	eb03 13c2 	add.w	r3, r3, r2, lsl #7
    415a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
    415e:	f503 3330 	add.w	r3, r3, #180224	; 0x2c000
gpio__enable_pull_down_resistors():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:82

void gpio__enable_pull_down_resistors(gpio_s gpio) {
  volatile uint32_t *pin_iocon = gpio__get_iocon(gpio);

  const uint32_t mode_mask = UINT32_C(3);
  *pin_iocon &= ~(mode_mask << 3);
    4162:	681a      	ldr	r2, [r3, #0]
    4164:	f022 0218 	bic.w	r2, r2, #24
    4168:	601a      	str	r2, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:83
  *pin_iocon |= (UINT32_C(1) << 3);
    416a:	681a      	ldr	r2, [r3, #0]
    416c:	f042 0208 	orr.w	r2, r2, #8
    4170:	601a      	str	r2, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:84
}
    4172:	4770      	bx	lr

00004174 <gpio__set_as_input>:
gpio__get_struct():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:9
  return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number];
    4174:	f000 0207 	and.w	r2, r0, #7
    4178:	4b06      	ldr	r3, [pc, #24]	; (4194 <gpio__set_as_input+0x20>)
    417a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
gpio__get_pin_mask():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    417e:	f3c0 00c4 	ubfx	r0, r0, #3, #5
gpio__set_as_input():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:87

void gpio__set_as_input(gpio_s gpio) {
  gpio__get_struct(gpio)->DIR &= ~gpio__get_pin_mask(gpio);
    4182:	680b      	ldr	r3, [r1, #0]
gpio__get_pin_mask():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    4184:	2201      	movs	r2, #1
    4186:	fa02 f000 	lsl.w	r0, r2, r0
gpio__set_as_input():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:87
  gpio__get_struct(gpio)->DIR &= ~gpio__get_pin_mask(gpio);
    418a:	ea23 0300 	bic.w	r3, r3, r0
    418e:	600b      	str	r3, [r1, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:88
}
    4190:	4770      	bx	lr
    4192:	bf00      	nop
    4194:	0000b464 	.word	0x0000b464

00004198 <gpio__construct_as_input>:
gpio__construct_as_input():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:43
gpio_s gpio__construct_as_input(gpio__port_e port, uint8_t pin_number_0_to_31) {
    4198:	b538      	push	{r3, r4, r5, lr}
gpio__construct():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:36
      .port_number = (uint8_t)port,
    419a:	f000 0507 	and.w	r5, r0, #7
gpio__construct_as_input():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:45
  gpio__set_as_input(gpio);
    419e:	f04f 0000 	mov.w	r0, #0
gpio__construct():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:35
  gpio_s gpio = {
    41a2:	f001 041f 	and.w	r4, r1, #31
gpio__construct_as_input():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:45
  gpio__set_as_input(gpio);
    41a6:	f365 0002 	bfi	r0, r5, #0, #3
    41aa:	f364 00c7 	bfi	r0, r4, #3, #5
    41ae:	f7ff ffe1 	bl	4174 <gpio__set_as_input>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:46
  return gpio;
    41b2:	f04f 0000 	mov.w	r0, #0
    41b6:	f365 0002 	bfi	r0, r5, #0, #3
    41ba:	f364 00c7 	bfi	r0, r4, #3, #5
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:47
}
    41be:	bd38      	pop	{r3, r4, r5, pc}

000041c0 <gpio__set_as_output>:
gpio__get_struct():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:9
  return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number];
    41c0:	f000 0207 	and.w	r2, r0, #7
    41c4:	4b05      	ldr	r3, [pc, #20]	; (41dc <gpio__set_as_output+0x1c>)
    41c6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
gpio__get_pin_mask():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    41ca:	f3c0 03c4 	ubfx	r3, r0, #3, #5
gpio__set_as_output():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:91

void gpio__set_as_output(gpio_s gpio) {
  gpio__get_struct(gpio)->DIR |= gpio__get_pin_mask(gpio);
    41ce:	6811      	ldr	r1, [r2, #0]
gpio__get_pin_mask():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    41d0:	2001      	movs	r0, #1
    41d2:	4098      	lsls	r0, r3
gpio__set_as_output():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:91
  gpio__get_struct(gpio)->DIR |= gpio__get_pin_mask(gpio);
    41d4:	4308      	orrs	r0, r1
    41d6:	6010      	str	r0, [r2, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:92
}
    41d8:	4770      	bx	lr
    41da:	bf00      	nop
    41dc:	0000b464 	.word	0x0000b464

000041e0 <gpio__construct_as_output>:
gpio__construct_as_output():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:50
                                 uint8_t pin_number_0_to_31) {
    41e0:	b538      	push	{r3, r4, r5, lr}
gpio__construct():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:36
      .port_number = (uint8_t)port,
    41e2:	f000 0507 	and.w	r5, r0, #7
gpio__construct_as_output():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:52
  gpio__set_as_output(gpio);
    41e6:	f04f 0000 	mov.w	r0, #0
gpio__construct():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:35
  gpio_s gpio = {
    41ea:	f001 041f 	and.w	r4, r1, #31
gpio__construct_as_output():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:52
  gpio__set_as_output(gpio);
    41ee:	f365 0002 	bfi	r0, r5, #0, #3
    41f2:	f364 00c7 	bfi	r0, r4, #3, #5
    41f6:	f7ff ffe3 	bl	41c0 <gpio__set_as_output>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:53
  return gpio;
    41fa:	f04f 0000 	mov.w	r0, #0
    41fe:	f365 0002 	bfi	r0, r5, #0, #3
    4202:	f364 00c7 	bfi	r0, r4, #3, #5
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:54
}
    4206:	bd38      	pop	{r3, r4, r5, pc}

00004208 <gpio__get>:
gpio__get_struct():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:9
  return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number];
    4208:	f000 0207 	and.w	r2, r0, #7
    420c:	4b06      	ldr	r3, [pc, #24]	; (4228 <gpio__get+0x20>)
    420e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
gpio__get_pin_mask():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    4212:	f3c0 00c4 	ubfx	r0, r0, #3, #5
gpio__get():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:95

bool gpio__get(gpio_s gpio) {
  return (gpio__get_struct(gpio)->PIN & gpio__get_pin_mask(gpio));
    4216:	695a      	ldr	r2, [r3, #20]
gpio__get_pin_mask():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    4218:	2301      	movs	r3, #1
    421a:	fa03 f000 	lsl.w	r0, r3, r0
gpio__get():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:95
  return (gpio__get_struct(gpio)->PIN & gpio__get_pin_mask(gpio));
    421e:	4210      	tst	r0, r2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:96
}
    4220:	bf14      	ite	ne
    4222:	4618      	movne	r0, r3
    4224:	2000      	moveq	r0, #0
    4226:	4770      	bx	lr
    4228:	0000b464 	.word	0x0000b464

0000422c <gpio__set>:
gpio__get_struct():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:9
  return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number];
    422c:	f000 0207 	and.w	r2, r0, #7
    4230:	4b04      	ldr	r3, [pc, #16]	; (4244 <gpio__set+0x18>)
gpio__get_pin_mask():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    4232:	f3c0 00c4 	ubfx	r0, r0, #3, #5
gpio__get_struct():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:9
  return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number];
    4236:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
gpio__get_pin_mask():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    423a:	2301      	movs	r3, #1
    423c:	fa03 f000 	lsl.w	r0, r3, r0
gpio__set():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:99

void gpio__set(gpio_s gpio) {
  gpio__get_struct(gpio)->SET = gpio__get_pin_mask(gpio);
    4240:	6190      	str	r0, [r2, #24]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:100
}
    4242:	4770      	bx	lr
    4244:	0000b464 	.word	0x0000b464

00004248 <gpio__reset>:
gpio__get_struct():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:9
  return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number];
    4248:	f000 0207 	and.w	r2, r0, #7
    424c:	4b04      	ldr	r3, [pc, #16]	; (4260 <gpio__reset+0x18>)
gpio__get_pin_mask():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    424e:	f3c0 00c4 	ubfx	r0, r0, #3, #5
gpio__get_struct():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:9
  return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number];
    4252:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
gpio__get_pin_mask():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    4256:	2301      	movs	r3, #1
    4258:	fa03 f000 	lsl.w	r0, r3, r0
gpio__reset():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:103

void gpio__reset(gpio_s gpio) {
  gpio__get_struct(gpio)->CLR = gpio__get_pin_mask(gpio);
    425c:	61d0      	str	r0, [r2, #28]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:104
}
    425e:	4770      	bx	lr
    4260:	0000b464 	.word	0x0000b464

00004264 <gpio__toggle>:
gpio__toggle():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:106

void gpio__toggle(gpio_s gpio) {
    4264:	b508      	push	{r3, lr}
    4266:	4601      	mov	r1, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:108
  // Avoiding XOR logic with PIN register to make it thread safe
  if (gpio__get(gpio)) {
    4268:	f7ff ffce 	bl	4208 <gpio__get>
    426c:	b120      	cbz	r0, 4278 <gpio__toggle+0x14>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:109
    gpio__reset(gpio);
    426e:	4608      	mov	r0, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:113
  } else {
    gpio__set(gpio);
  }
}
    4270:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:109
    gpio__reset(gpio);
    4274:	f7ff bfe8 	b.w	4248 <gpio__reset>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:111
    gpio__set(gpio);
    4278:	4608      	mov	r0, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:113
}
    427a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/gpio.c:111
    gpio__set(gpio);
    427e:	f7ff bfd5 	b.w	422c <gpio__set>
    4282:	Address 0x0000000000004282 is out of bounds.


00004284 <hw_timer__enable>:
hw_timer__enable():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:20
    {LPC_TIM2, LPC_PERIPHERAL__TIMER2, "HW_T2"},
    {LPC_TIM3, LPC_PERIPHERAL__TIMER3, "HW_T3"},
};

void hw_timer__enable(lpc_timer_e timer, const uint32_t prescalar_divider,
                      function__void_f isr_callback) {
    4284:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:22
  // Peripheral must be turned on before accessing its registers
  lpc_peripheral__turn_on_power_to(hw_timers[timer].peripheral_id);
    4288:	4f0f      	ldr	r7, [pc, #60]	; (42c8 <hw_timer__enable+0x44>)
    428a:	240c      	movs	r4, #12
    428c:	4344      	muls	r4, r0
    428e:	193e      	adds	r6, r7, r4
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:20
                      function__void_f isr_callback) {
    4290:	4688      	mov	r8, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:22
  lpc_peripheral__turn_on_power_to(hw_timers[timer].peripheral_id);
    4292:	7935      	ldrb	r5, [r6, #4]
    4294:	4628      	mov	r0, r5
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:20
                      function__void_f isr_callback) {
    4296:	4691      	mov	r9, r2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:22
  lpc_peripheral__turn_on_power_to(hw_timers[timer].peripheral_id);
    4298:	f000 fa86 	bl	47a8 <lpc_peripheral__turn_on_power_to>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:24

  hw_timers[timer].registers->TCR = 0;
    429c:	593c      	ldr	r4, [r7, r4]
    429e:	2300      	movs	r3, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:27
  hw_timers[timer].registers->TC = 0;

  hw_timers[timer].registers->IR = 0x3F; // Clear all interrupts
    42a0:	223f      	movs	r2, #63	; 0x3f
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:24
  hw_timers[timer].registers->TCR = 0;
    42a2:	6063      	str	r3, [r4, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:37
  hw_timers[timer].registers->MR3 = 0;

  /* Interrupt can be enabled because we can assume the timer is not setup
   * for interrupt yet through hw_timer__enable_match_isr()
   */
  lpc_peripheral__enable_interrupt(hw_timers[timer].peripheral_id, isr_callback,
    42a4:	4649      	mov	r1, r9
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:25
  hw_timers[timer].registers->TC = 0;
    42a6:	60a3      	str	r3, [r4, #8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:37
  lpc_peripheral__enable_interrupt(hw_timers[timer].peripheral_id, isr_callback,
    42a8:	4628      	mov	r0, r5
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:27
  hw_timers[timer].registers->IR = 0x3F; // Clear all interrupts
    42aa:	6022      	str	r2, [r4, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:28
  hw_timers[timer].registers->MCR = 0;   // Clear all match register settings
    42ac:	6163      	str	r3, [r4, #20]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:37
  lpc_peripheral__enable_interrupt(hw_timers[timer].peripheral_id, isr_callback,
    42ae:	68b2      	ldr	r2, [r6, #8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:29
  hw_timers[timer].registers->MR0 = 0;
    42b0:	61a3      	str	r3, [r4, #24]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:30
  hw_timers[timer].registers->MR1 = 0;
    42b2:	61e3      	str	r3, [r4, #28]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:31
  hw_timers[timer].registers->MR2 = 0;
    42b4:	6223      	str	r3, [r4, #32]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:32
  hw_timers[timer].registers->MR3 = 0;
    42b6:	6263      	str	r3, [r4, #36]	; 0x24
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:37
  lpc_peripheral__enable_interrupt(hw_timers[timer].peripheral_id, isr_callback,
    42b8:	f000 fa9a 	bl	47f0 <lpc_peripheral__enable_interrupt>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:41
                                   hw_timers[timer].rtos_isr_trace_name);

  hw_timers[timer].registers->PR = prescalar_divider;
  hw_timers[timer].registers->TCR = 1; // Enable
    42bc:	2301      	movs	r3, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:40
  hw_timers[timer].registers->PR = prescalar_divider;
    42be:	f8c4 800c 	str.w	r8, [r4, #12]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:41
  hw_timers[timer].registers->TCR = 1; // Enable
    42c2:	6063      	str	r3, [r4, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:42
}
    42c4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    42c8:	0000b47c 	.word	0x0000b47c

000042cc <hw_timer__enable_match_isr>:
hw_timer__enable_match_isr():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:47

void hw_timer__enable_match_isr(lpc_timer_e timer, lpc_timer__mr_e mr_type,
                                const uint32_t mr_value) {
  const uint32_t interrupt_on_match = (uint32_t)mr_type * 3; // 3 bits per MR
  hw_timers[timer].registers->MCR |= (1 << interrupt_on_match);
    42cc:	230c      	movs	r3, #12
    42ce:	4358      	muls	r0, r3
    42d0:	4b06      	ldr	r3, [pc, #24]	; (42ec <hw_timer__enable_match_isr+0x20>)
    42d2:	581b      	ldr	r3, [r3, r0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:45
                                const uint32_t mr_value) {
    42d4:	b530      	push	{r4, r5, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:47
  hw_timers[timer].registers->MCR |= (1 << interrupt_on_match);
    42d6:	2001      	movs	r0, #1
    42d8:	695c      	ldr	r4, [r3, #20]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:46
  const uint32_t interrupt_on_match = (uint32_t)mr_type * 3; // 3 bits per MR
    42da:	eb01 0541 	add.w	r5, r1, r1, lsl #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:47
  hw_timers[timer].registers->MCR |= (1 << interrupt_on_match);
    42de:	40a8      	lsls	r0, r5
    42e0:	4320      	orrs	r0, r4
    42e2:	6158      	str	r0, [r3, #20]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:50

  // Four MR registers are contiguous and they start from &MR0
  volatile uint32_t *mr_base = &(hw_timers[timer].registers->MR0);
    42e4:	3318      	adds	r3, #24
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:53
  volatile uint32_t *mr_register = mr_base + mr_type;

  *mr_register = mr_value;
    42e6:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:54
}
    42ea:	bd30      	pop	{r4, r5, pc}
    42ec:	0000b47c 	.word	0x0000b47c

000042f0 <hw_timer__acknowledge_interrupt>:
hw_timer__acknowledge_interrupt():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:58

void hw_timer__acknowledge_interrupt(lpc_timer_e timer,
                                     lpc_timer__mr_e mr_type) {
  hw_timers[timer].registers->IR = (1 << (uint32_t)mr_type);
    42f0:	230c      	movs	r3, #12
    42f2:	4358      	muls	r0, r3
    42f4:	4b03      	ldr	r3, [pc, #12]	; (4304 <hw_timer__acknowledge_interrupt+0x14>)
    42f6:	581a      	ldr	r2, [r3, r0]
    42f8:	2301      	movs	r3, #1
    42fa:	fa03 f101 	lsl.w	r1, r3, r1
    42fe:	6011      	str	r1, [r2, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:59
}
    4300:	4770      	bx	lr
    4302:	bf00      	nop
    4304:	0000b47c 	.word	0x0000b47c

00004308 <hw_timer__get_value>:
hw_timer__get_value():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:62

uint32_t hw_timer__get_value(lpc_timer_e timer) {
  return hw_timers[timer].registers->TC;
    4308:	230c      	movs	r3, #12
    430a:	4358      	muls	r0, r3
    430c:	4b01      	ldr	r3, [pc, #4]	; (4314 <hw_timer__get_value+0xc>)
    430e:	581b      	ldr	r3, [r3, r0]
    4310:	6898      	ldr	r0, [r3, #8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:63
}
    4312:	4770      	bx	lr
    4314:	0000b47c 	.word	0x0000b47c

00004318 <hw_timer__set_value>:
hw_timer__set_value():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:66

void hw_timer__set_value(lpc_timer_e timer, uint32_t tc_value) {
  hw_timers[timer].registers->TC = tc_value;
    4318:	230c      	movs	r3, #12
    431a:	4358      	muls	r0, r3
    431c:	4b01      	ldr	r3, [pc, #4]	; (4324 <hw_timer__set_value+0xc>)
    431e:	581b      	ldr	r3, [r3, r0]
    4320:	6099      	str	r1, [r3, #8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/hw_timer.c:67
}
    4322:	4770      	bx	lr
    4324:	0000b47c 	.word	0x0000b47c

00004328 <i2c__transfer>:
i2c__transfer():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:246

static bool i2c__transfer(i2c_s *i2c, uint8_t slave_address,
                          uint8_t starting_slave_memory_address,
                          uint8_t *input_byte_pointer,
                          const uint8_t *output_byte_pointer,
                          uint32_t number_of_bytes_to_transfer) {
    4328:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    432c:	9f08      	ldr	r7, [sp, #32]
    432e:	4e34      	ldr	r6, [pc, #208]	; (4400 <i2c__transfer+0xd8>)
    4330:	4692      	mov	sl, r2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:250
  bool status = false;

  // Either the input or the output data needs to be non NULL (XOR)
  if ((NULL != input_byte_pointer) ^ (NULL != output_byte_pointer)) {
    4332:	1c1a      	adds	r2, r3, #0
    4334:	bf18      	it	ne
    4336:	2201      	movne	r2, #1
    4338:	4698      	mov	r8, r3
    433a:	1c3b      	adds	r3, r7, #0
    433c:	bf18      	it	ne
    433e:	2301      	movne	r3, #1
    4340:	429a      	cmp	r2, r3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:246
                          uint32_t number_of_bytes_to_transfer) {
    4342:	4605      	mov	r5, r0
    4344:	460c      	mov	r4, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:250
  if ((NULL != input_byte_pointer) ^ (NULL != output_byte_pointer)) {
    4346:	d113      	bne.n	4370 <i2c__transfer+0x48>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:247
  bool status = false;
    4348:	2400      	movs	r4, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:259
          output_byte_pointer, number_of_bytes_to_transfer);
      xSemaphoreGive(i2c->mutex);
    }
  }

  I2C__DEBUG_PRINTF("  Finished with state: 0x%02X", (int)i2c->error_code);
    434a:	6833      	ldr	r3, [r6, #0]
    434c:	482d      	ldr	r0, [pc, #180]	; (4404 <i2c__transfer+0xdc>)
    434e:	68d9      	ldr	r1, [r3, #12]
    4350:	f000 febc 	bl	50cc <fputs>
    4354:	6833      	ldr	r3, [r6, #0]
    4356:	7c2a      	ldrb	r2, [r5, #16]
    4358:	492b      	ldr	r1, [pc, #172]	; (4408 <i2c__transfer+0xe0>)
    435a:	68d8      	ldr	r0, [r3, #12]
    435c:	f000 fdfe 	bl	4f5c <fiprintf>
    4360:	6833      	ldr	r3, [r6, #0]
    4362:	200a      	movs	r0, #10
    4364:	68d9      	ldr	r1, [r3, #12]
    4366:	f000 fe43 	bl	4ff0 <fputc>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:261
  return status;
}
    436a:	4620      	mov	r0, r4
    436c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:251
    if (xSemaphoreTake(i2c->mutex, portMAX_DELAY)) {
    4370:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
    4374:	68c0      	ldr	r0, [r0, #12]
    4376:	f7fe ff3b 	bl	31f0 <xQueueSemaphoreTake>
    437a:	2800      	cmp	r0, #0
    437c:	d0e4      	beq.n	4348 <i2c__transfer+0x20>
i2c__transfer_unprotected():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:271
                                      const uint8_t *output_byte_pointer,
                                      uint32_t number_of_bytes_to_transfer) {
  bool status = false;
  const uint32_t timeout_ms = 3000;
  const bool rtos_is_running =
      (taskSCHEDULER_RUNNING == xTaskGetSchedulerState());
    437e:	f7ff fcc7 	bl	3d10 <xTaskGetSchedulerState>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:273

  xSemaphoreTake(i2c->transfer_complete_signal,
    4382:	2100      	movs	r1, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:271
      (taskSCHEDULER_RUNNING == xTaskGetSchedulerState());
    4384:	4681      	mov	r9, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:273
  xSemaphoreTake(i2c->transfer_complete_signal,
    4386:	68a8      	ldr	r0, [r5, #8]
    4388:	f7fe ff32 	bl	31f0 <xQueueSemaphoreTake>
i2c__kick_off_transfer():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:302
static void i2c__kick_off_transfer(i2c_s *i2c, uint8_t slave_address,
                                   uint8_t starting_slave_memory_address,
                                   uint8_t *input_byte_pointer,
                                   const uint8_t *output_byte_pointer,
                                   uint32_t number_of_bytes_to_transfer) {
  i2c->error_code = 0;
    438c:	2300      	movs	r3, #0
    438e:	742b      	strb	r3, [r5, #16]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:308
  i2c->slave_address = slave_address;
  i2c->starting_slave_memory_address = starting_slave_memory_address;

  i2c->input_byte_pointer = input_byte_pointer;
  i2c->output_byte_pointer = output_byte_pointer;
  i2c->number_of_bytes_to_transfer = number_of_bytes_to_transfer;
    4390:	9b09      	ldr	r3, [sp, #36]	; 0x24
    4392:	61eb      	str	r3, [r5, #28]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:312

  // Send START, I2C State Machine will finish the rest through interrupts; @see
  // i2c__handle_state_machine()
  I2C__DEBUG_PRINTF("Starting transfer with device address: 0x%02X",
    4394:	6833      	ldr	r3, [r6, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:303
  i2c->slave_address = slave_address;
    4396:	746c      	strb	r4, [r5, #17]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:304
  i2c->starting_slave_memory_address = starting_slave_memory_address;
    4398:	f885 a012 	strb.w	sl, [r5, #18]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:312
  I2C__DEBUG_PRINTF("Starting transfer with device address: 0x%02X",
    439c:	68d9      	ldr	r1, [r3, #12]
    439e:	4819      	ldr	r0, [pc, #100]	; (4404 <i2c__transfer+0xdc>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:307
  i2c->output_byte_pointer = output_byte_pointer;
    43a0:	e9c5 8705 	strd	r8, r7, [r5, #20]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:312
  I2C__DEBUG_PRINTF("Starting transfer with device address: 0x%02X",
    43a4:	f000 fe92 	bl	50cc <fputs>
    43a8:	6833      	ldr	r3, [r6, #0]
    43aa:	4918      	ldr	r1, [pc, #96]	; (440c <i2c__transfer+0xe4>)
    43ac:	68d8      	ldr	r0, [r3, #12]
    43ae:	4622      	mov	r2, r4
    43b0:	f000 fdd4 	bl	4f5c <fiprintf>
    43b4:	6833      	ldr	r3, [r6, #0]
    43b6:	200a      	movs	r0, #10
    43b8:	68d9      	ldr	r1, [r3, #12]
    43ba:	f000 fe19 	bl	4ff0 <fputc>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:314
                    (unsigned)slave_address);
  i2c__set_start_flag(i2c->registers);
    43be:	682b      	ldr	r3, [r5, #0]
i2c__set_start_flag():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:113
static void i2c__set_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONSET = 0x20; }
    43c0:	2220      	movs	r2, #32
i2c__transfer_unprotected():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:281
  if (rtos_is_running) {
    43c2:	f1b9 0f02 	cmp.w	r9, #2
i2c__set_start_flag():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:113
static void i2c__set_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONSET = 0x20; }
    43c6:	601a      	str	r2, [r3, #0]
i2c__transfer_unprotected():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:281
  if (rtos_is_running) {
    43c8:	d110      	bne.n	43ec <i2c__transfer+0xc4>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:283
    if (xSemaphoreTake(i2c->transfer_complete_signal, timeout_ms)) {
    43ca:	f640 31b8 	movw	r1, #3000	; 0xbb8
    43ce:	68a8      	ldr	r0, [r5, #8]
    43d0:	f7fe ff0e 	bl	31f0 <xQueueSemaphoreTake>
    43d4:	b188      	cbz	r0, 43fa <i2c__transfer+0xd2>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:291
    status = (0 == i2c->error_code);
    43d6:	7c2c      	ldrb	r4, [r5, #16]
    43d8:	fab4 f484 	clz	r4, r4
    43dc:	0964      	lsrs	r4, r4, #5
i2c__transfer():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:255
      xSemaphoreGive(i2c->mutex);
    43de:	2300      	movs	r3, #0
    43e0:	461a      	mov	r2, r3
    43e2:	4619      	mov	r1, r3
    43e4:	68e8      	ldr	r0, [r5, #12]
    43e6:	f7fe fcdf 	bl	2da8 <xQueueGenericSend>
    43ea:	e7ae      	b.n	434a <i2c__transfer+0x22>
i2c__transfer_unprotected():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:289
    while (!xSemaphoreTake(i2c->transfer_complete_signal, 0)) {
    43ec:	2100      	movs	r1, #0
    43ee:	68a8      	ldr	r0, [r5, #8]
    43f0:	f7fe fefe 	bl	31f0 <xQueueSemaphoreTake>
    43f4:	2800      	cmp	r0, #0
    43f6:	d0f9      	beq.n	43ec <i2c__transfer+0xc4>
    43f8:	e7ed      	b.n	43d6 <i2c__transfer+0xae>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:268
  bool status = false;
    43fa:	4604      	mov	r4, r0
    43fc:	e7ef      	b.n	43de <i2c__transfer+0xb6>
    43fe:	bf00      	nop
    4400:	1000015c 	.word	0x1000015c
    4404:	0000b4e3 	.word	0x0000b4e3
    4408:	0000b516 	.word	0x0000b516
    440c:	0000b4e8 	.word	0x0000b4e8

00004410 <i2c__handle_interrupt>:
i2c__handle_interrupt():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:537
  }

  return true;
}

static void i2c__handle_interrupt(i2c_s *i2c) {
    4410:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
i2c__handle_state_machine():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:370
  I2C__DEBUG_PRINTF("  HW State: 0x%02X", i2c_state);
    4412:	4f70      	ldr	r7, [pc, #448]	; (45d4 <i2c__handle_interrupt+0x1c4>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:368
  LPC_I2C_TypeDef *lpc_i2c = i2c->registers;
    4414:	6804      	ldr	r4, [r0, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:370
  I2C__DEBUG_PRINTF("  HW State: 0x%02X", i2c_state);
    4416:	683b      	ldr	r3, [r7, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:369
  const unsigned i2c_state = lpc_i2c->STAT;
    4418:	6866      	ldr	r6, [r4, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:370
  I2C__DEBUG_PRINTF("  HW State: 0x%02X", i2c_state);
    441a:	68d9      	ldr	r1, [r3, #12]
i2c__handle_interrupt():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:537
static void i2c__handle_interrupt(i2c_s *i2c) {
    441c:	4605      	mov	r5, r0
i2c__handle_state_machine():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:370
  I2C__DEBUG_PRINTF("  HW State: 0x%02X", i2c_state);
    441e:	486e      	ldr	r0, [pc, #440]	; (45d8 <i2c__handle_interrupt+0x1c8>)
    4420:	f000 fe54 	bl	50cc <fputs>
    4424:	683b      	ldr	r3, [r7, #0]
    4426:	496d      	ldr	r1, [pc, #436]	; (45dc <i2c__handle_interrupt+0x1cc>)
    4428:	68d8      	ldr	r0, [r3, #12]
    442a:	4632      	mov	r2, r6
    442c:	f000 fd96 	bl	4f5c <fiprintf>
    4430:	683b      	ldr	r3, [r7, #0]
    4432:	200a      	movs	r0, #10
    4434:	68d9      	ldr	r1, [r3, #12]
    4436:	f000 fddb 	bl	4ff0 <fputc>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:372
  switch (i2c_state) {
    443a:	2e58      	cmp	r6, #88	; 0x58
    443c:	f000 80ae 	beq.w	459c <i2c__handle_interrupt+0x18c>
    4440:	d81b      	bhi.n	447a <i2c__handle_interrupt+0x6a>
    4442:	2e28      	cmp	r6, #40	; 0x28
    4444:	d07a      	beq.n	453c <i2c__handle_interrupt+0x12c>
    4446:	d80c      	bhi.n	4462 <i2c__handle_interrupt+0x52>
    4448:	2e10      	cmp	r6, #16
    444a:	d04f      	beq.n	44ec <i2c__handle_interrupt+0xdc>
    444c:	2e18      	cmp	r6, #24
    444e:	d053      	beq.n	44f8 <i2c__handle_interrupt+0xe8>
    4450:	2e08      	cmp	r6, #8
    4452:	f040 80b2 	bne.w	45ba <i2c__handle_interrupt+0x1aa>
i2c__write_address():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:95
  return (slave_address & 0xFE);
    4456:	7c6b      	ldrb	r3, [r5, #17]
i2c__handle_state_machine():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:420
    lpc_i2c->DAT = i2c__write_address(i2c->slave_address);
    4458:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
    445c:	60a3      	str	r3, [r4, #8]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:111
  i2c->CONCLR = 0x08;
    445e:	61a6      	str	r6, [r4, #24]
i2c__handle_interrupt():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:540
  const bool stop_sent = i2c__handle_state_machine(i2c);

  if (stop_sent) {
    4460:	e01c      	b.n	449c <i2c__handle_interrupt+0x8c>
i2c__handle_state_machine():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:372
  switch (i2c_state) {
    4462:	2e40      	cmp	r6, #64	; 0x40
    4464:	f000 8083 	beq.w	456e <i2c__handle_interrupt+0x15e>
    4468:	2e50      	cmp	r6, #80	; 0x50
    446a:	f000 8089 	beq.w	4580 <i2c__handle_interrupt+0x170>
    446e:	2e38      	cmp	r6, #56	; 0x38
    4470:	f040 80a3 	bne.w	45ba <i2c__handle_interrupt+0x1aa>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:509
    i2c->error_code = lpc_i2c->STAT;
    4474:	6863      	ldr	r3, [r4, #4]
    4476:	742b      	strb	r3, [r5, #16]
i2c__handle_interrupt():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:540
  if (stop_sent) {
    4478:	e04a      	b.n	4510 <i2c__handle_interrupt+0x100>
i2c__handle_state_machine():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:372
  switch (i2c_state) {
    447a:	2ea8      	cmp	r6, #168	; 0xa8
    447c:	d017      	beq.n	44ae <i2c__handle_interrupt+0x9e>
    447e:	d80f      	bhi.n	44a0 <i2c__handle_interrupt+0x90>
    4480:	2e80      	cmp	r6, #128	; 0x80
    4482:	d01e      	beq.n	44c2 <i2c__handle_interrupt+0xb2>
    4484:	2ea0      	cmp	r6, #160	; 0xa0
    4486:	d025      	beq.n	44d4 <i2c__handle_interrupt+0xc4>
    4488:	2e60      	cmp	r6, #96	; 0x60
    448a:	f040 8096 	bne.w	45ba <i2c__handle_interrupt+0x1aa>
i2c__set_ack_flag():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:115
static void i2c__set_ack_flag(LPC_I2C_TypeDef *i2c) { i2c->CONSET = 0x04; }
    448e:	2304      	movs	r3, #4
    4490:	6023      	str	r3, [r4, #0]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:111
  i2c->CONCLR = 0x08;
    4492:	2308      	movs	r3, #8
    4494:	61a3      	str	r3, [r4, #24]
i2c__handle_state_machine():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:377
    i2c->receive_flag = true;
    4496:	2301      	movs	r3, #1
    4498:	f885 3021 	strb.w	r3, [r5, #33]	; 0x21
i2c__handle_interrupt():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:546
    long higher_priority_task_woke = 0;
    xSemaphoreGiveFromISR(i2c->transfer_complete_signal,
                          &higher_priority_task_woke);
    portEND_SWITCHING_ISR(higher_priority_task_woke);
  }
}
    449c:	b003      	add	sp, #12
    449e:	bdf0      	pop	{r4, r5, r6, r7, pc}
i2c__handle_state_machine():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:372
  switch (i2c_state) {
    44a0:	2ec0      	cmp	r6, #192	; 0xc0
    44a2:	d017      	beq.n	44d4 <i2c__handle_interrupt+0xc4>
    44a4:	2ec8      	cmp	r6, #200	; 0xc8
    44a6:	d015      	beq.n	44d4 <i2c__handle_interrupt+0xc4>
    44a8:	2eb8      	cmp	r6, #184	; 0xb8
    44aa:	f040 8086 	bne.w	45ba <i2c__handle_interrupt+0x1aa>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:397
    i2c_slave_callback__read_memory(i2c->slave_index++, &lpc_i2c->DAT);
    44ae:	f895 0020 	ldrb.w	r0, [r5, #32]
    44b2:	1c43      	adds	r3, r0, #1
    44b4:	f885 3020 	strb.w	r3, [r5, #32]
    44b8:	f104 0108 	add.w	r1, r4, #8
    44bc:	f000 f94a 	bl	4754 <i2c_slave_callback__read_memory>
    44c0:	e008      	b.n	44d4 <i2c__handle_interrupt+0xc4>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:381
    if (i2c->receive_flag) {
    44c2:	f895 3021 	ldrb.w	r3, [r5, #33]	; 0x21
    44c6:	b143      	cbz	r3, 44da <i2c__handle_interrupt+0xca>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:382
      i2c->slave_index = lpc_i2c->DAT;
    44c8:	68a3      	ldr	r3, [r4, #8]
    44ca:	f885 3020 	strb.w	r3, [r5, #32]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:383
      i2c->receive_flag = false;
    44ce:	2300      	movs	r3, #0
    44d0:	f885 3021 	strb.w	r3, [r5, #33]	; 0x21
i2c__set_ack_flag():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:115
static void i2c__set_ack_flag(LPC_I2C_TypeDef *i2c) { i2c->CONSET = 0x04; }
    44d4:	2304      	movs	r3, #4
    44d6:	6023      	str	r3, [r4, #0]
    44d8:	e00c      	b.n	44f4 <i2c__handle_interrupt+0xe4>
i2c__handle_state_machine():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:385
      i2c_slave_callback__write_memory(i2c->slave_index++, lpc_i2c->DAT);
    44da:	f895 0020 	ldrb.w	r0, [r5, #32]
    44de:	1c43      	adds	r3, r0, #1
    44e0:	f885 3020 	strb.w	r3, [r5, #32]
    44e4:	68a1      	ldr	r1, [r4, #8]
    44e6:	f000 f93d 	bl	4764 <i2c_slave_callback__write_memory>
i2c__set_ack_flag():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:115
static void i2c__set_ack_flag(LPC_I2C_TypeDef *i2c) { i2c->CONSET = 0x04; }
    44ea:	e7f3      	b.n	44d4 <i2c__handle_interrupt+0xc4>
i2c__read_address():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:92
  return (slave_address | 0x01);
    44ec:	7c6b      	ldrb	r3, [r5, #17]
i2c__handle_state_machine():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:425
    lpc_i2c->DAT = i2c__read_address(i2c->slave_address);
    44ee:	f043 0301 	orr.w	r3, r3, #1
    44f2:	60a3      	str	r3, [r4, #8]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:111
  i2c->CONCLR = 0x08;
    44f4:	2308      	movs	r3, #8
    44f6:	e01f      	b.n	4538 <i2c__handle_interrupt+0x128>
i2c__handle_state_machine():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:434
    if (0 == i2c->number_of_bytes_to_transfer) {
    44f8:	69e9      	ldr	r1, [r5, #28]
i2c__clear_start_flag():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:114
static void i2c__clear_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x20; }
    44fa:	2220      	movs	r2, #32
    44fc:	61a2      	str	r2, [r4, #24]
i2c__handle_state_machine():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:434
    if (0 == i2c->number_of_bytes_to_transfer) {
    44fe:	2308      	movs	r3, #8
    4500:	b9c1      	cbnz	r1, 4534 <i2c__handle_interrupt+0x124>
i2c__clear_start_flag():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:114
static void i2c__clear_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x20; }
    4502:	61a2      	str	r2, [r4, #24]
i2c__set_stop():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:528
  i2c->CONSET = stop_bit;
    4504:	2210      	movs	r2, #16
    4506:	6022      	str	r2, [r4, #0]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:111
  i2c->CONCLR = 0x08;
    4508:	61a3      	str	r3, [r4, #24]
i2c__set_stop():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:531
  while (i2c->CONSET & stop_bit) {
    450a:	6823      	ldr	r3, [r4, #0]
    450c:	06de      	lsls	r6, r3, #27
    450e:	d4fc      	bmi.n	450a <i2c__handle_interrupt+0xfa>
i2c__handle_interrupt():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:541
    long higher_priority_task_woke = 0;
    4510:	2300      	movs	r3, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:542
    xSemaphoreGiveFromISR(i2c->transfer_complete_signal,
    4512:	a901      	add	r1, sp, #4
    4514:	68a8      	ldr	r0, [r5, #8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:541
    long higher_priority_task_woke = 0;
    4516:	9301      	str	r3, [sp, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:542
    xSemaphoreGiveFromISR(i2c->transfer_complete_signal,
    4518:	f7fe fd7a 	bl	3010 <xQueueGiveFromISR>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:544
    portEND_SWITCHING_ISR(higher_priority_task_woke);
    451c:	9b01      	ldr	r3, [sp, #4]
    451e:	2b00      	cmp	r3, #0
    4520:	d0bc      	beq.n	449c <i2c__handle_interrupt+0x8c>
    4522:	4b2f      	ldr	r3, [pc, #188]	; (45e0 <i2c__handle_interrupt+0x1d0>)
    4524:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    4528:	601a      	str	r2, [r3, #0]
    452a:	f3bf 8f4f 	dsb	sy
    452e:	f3bf 8f6f 	isb	sy
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:546
}
    4532:	e7b3      	b.n	449c <i2c__handle_interrupt+0x8c>
i2c__handle_state_machine():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:437
      lpc_i2c->DAT = i2c->starting_slave_memory_address;
    4534:	7caa      	ldrb	r2, [r5, #18]
    4536:	60a2      	str	r2, [r4, #8]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:111
  i2c->CONCLR = 0x08;
    4538:	61a3      	str	r3, [r4, #24]
i2c__handle_interrupt():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:540
  if (stop_sent) {
    453a:	e7af      	b.n	449c <i2c__handle_interrupt+0x8c>
i2c__handle_state_machine():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:446
    if (i2c__is_read_address(i2c->slave_address)) {
    453c:	7c6b      	ldrb	r3, [r5, #17]
    453e:	07d8      	lsls	r0, r3, #31
    4540:	d501      	bpl.n	4546 <i2c__handle_interrupt+0x136>
i2c__set_start_flag():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:113
static void i2c__set_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONSET = 0x20; }
    4542:	2320      	movs	r3, #32
    4544:	e7c7      	b.n	44d6 <i2c__handle_interrupt+0xc6>
i2c__handle_state_machine():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:450
      if (0 == i2c->number_of_bytes_to_transfer) {
    4546:	69eb      	ldr	r3, [r5, #28]
    4548:	b94b      	cbnz	r3, 455e <i2c__handle_interrupt+0x14e>
i2c__clear_start_flag():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:114
static void i2c__clear_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x20; }
    454a:	2320      	movs	r3, #32
    454c:	61a3      	str	r3, [r4, #24]
i2c__set_stop():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:528
  i2c->CONSET = stop_bit;
    454e:	2310      	movs	r3, #16
    4550:	6023      	str	r3, [r4, #0]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:111
  i2c->CONCLR = 0x08;
    4552:	2308      	movs	r3, #8
    4554:	61a3      	str	r3, [r4, #24]
i2c__set_stop():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:531
  while (i2c->CONSET & stop_bit) {
    4556:	6823      	ldr	r3, [r4, #0]
    4558:	06d9      	lsls	r1, r3, #27
    455a:	d4fc      	bmi.n	4556 <i2c__handle_interrupt+0x146>
    455c:	e7d8      	b.n	4510 <i2c__handle_interrupt+0x100>
i2c__handle_state_machine():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:453
        lpc_i2c->DAT = *(i2c->output_byte_pointer);
    455e:	69aa      	ldr	r2, [r5, #24]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:455
        --(i2c->number_of_bytes_to_transfer);
    4560:	3b01      	subs	r3, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:453
        lpc_i2c->DAT = *(i2c->output_byte_pointer);
    4562:	f812 1b01 	ldrb.w	r1, [r2], #1
    4566:	60a1      	str	r1, [r4, #8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:454
        ++(i2c->output_byte_pointer);
    4568:	61aa      	str	r2, [r5, #24]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:455
        --(i2c->number_of_bytes_to_transfer);
    456a:	61eb      	str	r3, [r5, #28]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:111
  i2c->CONCLR = 0x08;
    456c:	e7c2      	b.n	44f4 <i2c__handle_interrupt+0xe4>
i2c__clear_start_flag():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:114
static void i2c__clear_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x20; }
    456e:	2320      	movs	r3, #32
    4570:	61a3      	str	r3, [r4, #24]
i2c__handle_state_machine():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:470
    if (i2c->number_of_bytes_to_transfer > 1) {
    4572:	69eb      	ldr	r3, [r5, #28]
    4574:	2b01      	cmp	r3, #1
    4576:	f04f 0304 	mov.w	r3, #4
    457a:	d8ac      	bhi.n	44d6 <i2c__handle_interrupt+0xc6>
i2c__set_nack_flag():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:116
static void i2c__set_nack_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x04; }
    457c:	61a3      	str	r3, [r4, #24]
    457e:	e7b9      	b.n	44f4 <i2c__handle_interrupt+0xe4>
i2c__handle_state_machine():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:483
    *(i2c->input_byte_pointer) = lpc_i2c->DAT;
    4580:	696b      	ldr	r3, [r5, #20]
    4582:	68a2      	ldr	r2, [r4, #8]
    4584:	701a      	strb	r2, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:484
    ++(i2c->input_byte_pointer);
    4586:	696b      	ldr	r3, [r5, #20]
    4588:	3301      	adds	r3, #1
    458a:	616b      	str	r3, [r5, #20]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:485
    --(i2c->number_of_bytes_to_transfer);
    458c:	69eb      	ldr	r3, [r5, #28]
    458e:	3b01      	subs	r3, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:487
    if (1 == i2c->number_of_bytes_to_transfer) { // Only 1 more byte remaining
    4590:	2b01      	cmp	r3, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:485
    --(i2c->number_of_bytes_to_transfer);
    4592:	61eb      	str	r3, [r5, #28]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:487
    if (1 == i2c->number_of_bytes_to_transfer) { // Only 1 more byte remaining
    4594:	f04f 0304 	mov.w	r3, #4
    4598:	d19d      	bne.n	44d6 <i2c__handle_interrupt+0xc6>
    459a:	e7ef      	b.n	457c <i2c__handle_interrupt+0x16c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:500
    *(i2c->input_byte_pointer) = lpc_i2c->DAT;
    459c:	696b      	ldr	r3, [r5, #20]
    459e:	68a2      	ldr	r2, [r4, #8]
    45a0:	701a      	strb	r2, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:501
    i2c->number_of_bytes_to_transfer = 0;
    45a2:	2300      	movs	r3, #0
    45a4:	61eb      	str	r3, [r5, #28]
i2c__clear_start_flag():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:114
static void i2c__clear_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x20; }
    45a6:	2320      	movs	r3, #32
    45a8:	61a3      	str	r3, [r4, #24]
i2c__set_stop():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:528
  i2c->CONSET = stop_bit;
    45aa:	2310      	movs	r3, #16
    45ac:	6023      	str	r3, [r4, #0]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:111
  i2c->CONCLR = 0x08;
    45ae:	2308      	movs	r3, #8
    45b0:	61a3      	str	r3, [r4, #24]
i2c__set_stop():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:531
  while (i2c->CONSET & stop_bit) {
    45b2:	6823      	ldr	r3, [r4, #0]
    45b4:	06da      	lsls	r2, r3, #27
    45b6:	d4fc      	bmi.n	45b2 <i2c__handle_interrupt+0x1a2>
    45b8:	e7aa      	b.n	4510 <i2c__handle_interrupt+0x100>
i2c__handle_state_machine():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:517
    i2c->error_code = lpc_i2c->STAT;
    45ba:	6863      	ldr	r3, [r4, #4]
    45bc:	742b      	strb	r3, [r5, #16]
i2c__clear_start_flag():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:114
static void i2c__clear_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x20; }
    45be:	2320      	movs	r3, #32
    45c0:	61a3      	str	r3, [r4, #24]
i2c__set_stop():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:528
  i2c->CONSET = stop_bit;
    45c2:	2310      	movs	r3, #16
    45c4:	6023      	str	r3, [r4, #0]
i2c__clear_si_flag_for_hw_to_take_next_action():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:111
  i2c->CONCLR = 0x08;
    45c6:	2308      	movs	r3, #8
    45c8:	61a3      	str	r3, [r4, #24]
i2c__set_stop():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:531
  while (i2c->CONSET & stop_bit) {
    45ca:	6823      	ldr	r3, [r4, #0]
    45cc:	06db      	lsls	r3, r3, #27
    45ce:	d4fc      	bmi.n	45ca <i2c__handle_interrupt+0x1ba>
    45d0:	e79e      	b.n	4510 <i2c__handle_interrupt+0x100>
    45d2:	bf00      	nop
    45d4:	1000015c 	.word	0x1000015c
    45d8:	0000b4e3 	.word	0x0000b4e3
    45dc:	0000b4d0 	.word	0x0000b4d0
    45e0:	e000ed04 	.word	0xe000ed04

000045e4 <i2c2_isr>:
i2c2_isr():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:120
static void i2c2_isr(void) { i2c__handle_interrupt(&i2c_structs[I2C__2]); }
    45e4:	4801      	ldr	r0, [pc, #4]	; (45ec <i2c2_isr+0x8>)
    45e6:	f7ff bf13 	b.w	4410 <i2c__handle_interrupt>
    45ea:	bf00      	nop
    45ec:	10000054 	.word	0x10000054

000045f0 <i2c1_isr>:
i2c1_isr():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:119
static void i2c1_isr(void) { i2c__handle_interrupt(&i2c_structs[I2C__1]); }
    45f0:	4801      	ldr	r0, [pc, #4]	; (45f8 <i2c1_isr+0x8>)
    45f2:	f7ff bf0d 	b.w	4410 <i2c__handle_interrupt>
    45f6:	bf00      	nop
    45f8:	10000030 	.word	0x10000030

000045fc <i2c0_isr>:
i2c0_isr():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:118
static void i2c0_isr(void) { i2c__handle_interrupt(&i2c_structs[I2C__0]); }
    45fc:	4801      	ldr	r0, [pc, #4]	; (4604 <i2c0_isr+0x8>)
    45fe:	f7ff bf07 	b.w	4410 <i2c__handle_interrupt>
    4602:	bf00      	nop
    4604:	1000000c 	.word	0x1000000c

00004608 <i2c__initialize>:
i2c__initialize():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:129
                     uint32_t peripheral_clock_hz) {
    4608:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:130
  const function__void_f isrs[] = {i2c0_isr, i2c1_isr, i2c2_isr};
    460c:	4b27      	ldr	r3, [pc, #156]	; (46ac <i2c__initialize+0xa4>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:129
                     uint32_t peripheral_clock_hz) {
    460e:	4606      	mov	r6, r0
    4610:	4615      	mov	r5, r2
    4612:	4689      	mov	r9, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:130
  const function__void_f isrs[] = {i2c0_isr, i2c1_isr, i2c2_isr};
    4614:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:129
                     uint32_t peripheral_clock_hz) {
    4618:	b085      	sub	sp, #20
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:130
  const function__void_f isrs[] = {i2c0_isr, i2c1_isr, i2c2_isr};
    461a:	ab04      	add	r3, sp, #16
    461c:	e903 0007 	stmdb	r3, {r0, r1, r2}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:131
  const lpc_peripheral_e peripheral_ids[] = {
    4620:	f640 330a 	movw	r3, #2826	; 0xb0a
    4624:	f8ad 3000 	strh.w	r3, [sp]
    4628:	230c      	movs	r3, #12
    462a:	f88d 3002 	strb.w	r3, [sp, #2]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:140
  LPC_I2C_TypeDef *lpc_i2c = i2c->registers;
    462e:	2324      	movs	r3, #36	; 0x24
    4630:	4373      	muls	r3, r6
    4632:	4a1f      	ldr	r2, [pc, #124]	; (46b0 <i2c__initialize+0xa8>)
    4634:	58d4      	ldr	r4, [r2, r3]
    4636:	18d7      	adds	r7, r2, r3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:141
  const lpc_peripheral_e peripheral_id = peripheral_ids[i2c_number];
    4638:	ab04      	add	r3, sp, #16
    463a:	4433      	add	r3, r6
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:146
  i2c->transfer_complete_signal = xSemaphoreCreateBinary();
    463c:	2203      	movs	r2, #3
    463e:	2100      	movs	r1, #0
    4640:	2001      	movs	r0, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:141
  const lpc_peripheral_e peripheral_id = peripheral_ids[i2c_number];
    4642:	f813 8c10 	ldrb.w	r8, [r3, #-16]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:146
  i2c->transfer_complete_signal = xSemaphoreCreateBinary();
    4646:	f7fe fb89 	bl	2d5c <xQueueGenericCreate>
    464a:	60b8      	str	r0, [r7, #8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:147
  i2c->mutex = xSemaphoreCreateMutex();
    464c:	2001      	movs	r0, #1
    464e:	f7fe fc6e 	bl	2f2e <xQueueCreateMutex>
    4652:	60f8      	str	r0, [r7, #12]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:154
  lpc_peripheral__turn_on_power_to(peripheral_id);
    4654:	4640      	mov	r0, r8
    4656:	f000 f8a7 	bl	47a8 <lpc_peripheral__turn_on_power_to>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:155
  lpc_i2c->CONCLR = 0x6C; // Clear ALL I2C Flags
    465a:	236c      	movs	r3, #108	; 0x6c
    465c:	61a3      	str	r3, [r4, #24]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:173
                               : desired_i2c_bus_speed_in_hz;
    465e:	4a15      	ldr	r2, [pc, #84]	; (46b4 <i2c__initialize+0xac>)
    4660:	4b15      	ldr	r3, [pc, #84]	; (46b8 <i2c__initialize+0xb0>)
    4662:	4591      	cmp	r9, r2
    4664:	bf88      	it	hi
    4666:	4699      	movhi	r9, r3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:177
  lpc_i2c->SCLH = ((half_clock_divider * percent_high) / 100) / 2;
    4668:	2328      	movs	r3, #40	; 0x28
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:174
  const uint32_t half_clock_divider = (peripheral_clock_hz / freq_hz) / 2;
    466a:	fbb5 f2f9 	udiv	r2, r5, r9
    466e:	0852      	lsrs	r2, r2, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:177
  lpc_i2c->SCLH = ((half_clock_divider * percent_high) / 100) / 2;
    4670:	21c8      	movs	r1, #200	; 0xc8
    4672:	4353      	muls	r3, r2
    4674:	fbb3 f3f1 	udiv	r3, r3, r1
    4678:	6123      	str	r3, [r4, #16]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:178
  lpc_i2c->SCLL = ((half_clock_divider * percent_low) / 100) / 2;
    467a:	233c      	movs	r3, #60	; 0x3c
    467c:	435a      	muls	r2, r3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:181
  lpc_i2c->ADR0 = lpc_i2c->ADR1 = lpc_i2c->ADR2 = lpc_i2c->ADR3 = 0;
    467e:	2300      	movs	r3, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:178
  lpc_i2c->SCLL = ((half_clock_divider * percent_low) / 100) / 2;
    4680:	fbb2 f2f1 	udiv	r2, r2, r1
    4684:	6162      	str	r2, [r4, #20]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:181
  lpc_i2c->ADR0 = lpc_i2c->ADR1 = lpc_i2c->ADR2 = lpc_i2c->ADR3 = 0;
    4686:	62a3      	str	r3, [r4, #40]	; 0x28
    4688:	6263      	str	r3, [r4, #36]	; 0x24
    468a:	6223      	str	r3, [r4, #32]
    468c:	60e3      	str	r3, [r4, #12]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:184
  lpc_i2c->CONSET = 0x40;
    468e:	2340      	movs	r3, #64	; 0x40
    4690:	6023      	str	r3, [r4, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:185
  lpc_peripheral__enable_interrupt(peripheral_id, isrs[i2c_number],
    4692:	ab04      	add	r3, sp, #16
    4694:	eb03 0686 	add.w	r6, r3, r6, lsl #2
    4698:	687a      	ldr	r2, [r7, #4]
    469a:	f856 1c0c 	ldr.w	r1, [r6, #-12]
    469e:	4640      	mov	r0, r8
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:187
}
    46a0:	b005      	add	sp, #20
    46a2:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:185
  lpc_peripheral__enable_interrupt(peripheral_id, isrs[i2c_number],
    46a6:	f000 b8a3 	b.w	47f0 <lpc_peripheral__enable_interrupt>
    46aa:	bf00      	nop
    46ac:	0000b4c4 	.word	0x0000b4c4
    46b0:	1000000c 	.word	0x1000000c
    46b4:	000f4240 	.word	0x000f4240
    46b8:	000186a0 	.word	0x000186a0

000046bc <i2c__read_slave_data>:
i2c__read_slave_data():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:211
                          uint32_t number_of_bytes_to_transfer) {
    46bc:	b537      	push	{r0, r1, r2, r4, r5, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:214
  return i2c__transfer(&i2c_structs[i2c_number], slave_address,
    46be:	9c06      	ldr	r4, [sp, #24]
    46c0:	9401      	str	r4, [sp, #4]
    46c2:	2400      	movs	r4, #0
    46c4:	9400      	str	r4, [sp, #0]
    46c6:	4c05      	ldr	r4, [pc, #20]	; (46dc <i2c__read_slave_data+0x20>)
    46c8:	2524      	movs	r5, #36	; 0x24
    46ca:	f041 0101 	orr.w	r1, r1, #1
    46ce:	fb05 4000 	mla	r0, r5, r0, r4
    46d2:	f7ff fe29 	bl	4328 <i2c__transfer>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:217
}
    46d6:	b003      	add	sp, #12
    46d8:	bd30      	pop	{r4, r5, pc}
    46da:	bf00      	nop
    46dc:	1000000c 	.word	0x1000000c

000046e0 <i2c__read_single>:
i2c__read_single():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:201
                         uint8_t slave_memory_address) {
    46e0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:202
  uint8_t byte = 0;
    46e2:	2300      	movs	r3, #0
    46e4:	f88d 300f 	strb.w	r3, [sp, #15]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:203
  i2c__read_slave_data(i2c_number, slave_address, slave_memory_address, &byte,
    46e8:	2301      	movs	r3, #1
    46ea:	9300      	str	r3, [sp, #0]
    46ec:	f10d 030f 	add.w	r3, sp, #15
    46f0:	f7ff ffe4 	bl	46bc <i2c__read_slave_data>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:206
}
    46f4:	f89d 000f 	ldrb.w	r0, [sp, #15]
    46f8:	b005      	add	sp, #20
    46fa:	f85d fb04 	ldr.w	pc, [sp], #4
    46fe:	Address 0x00000000000046fe is out of bounds.


00004700 <i2c__write_slave_data>:
i2c__write_slave_data():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:228
                           uint32_t number_of_bytes_to_transfer) {
    4700:	b537      	push	{r0, r1, r2, r4, r5, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:231
  return i2c__transfer(&i2c_structs[i2c_number], slave_address,
    4702:	9c06      	ldr	r4, [sp, #24]
    4704:	e9cd 3400 	strd	r3, r4, [sp]
    4708:	4c05      	ldr	r4, [pc, #20]	; (4720 <i2c__write_slave_data+0x20>)
    470a:	2524      	movs	r5, #36	; 0x24
    470c:	2300      	movs	r3, #0
    470e:	f001 01fe 	and.w	r1, r1, #254	; 0xfe
    4712:	fb05 4000 	mla	r0, r5, r0, r4
    4716:	f7ff fe07 	bl	4328 <i2c__transfer>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:234
}
    471a:	b003      	add	sp, #12
    471c:	bd30      	pop	{r4, r5, pc}
    471e:	bf00      	nop
    4720:	1000000c 	.word	0x1000000c

00004724 <i2c__detect>:
i2c__detect():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:189
bool i2c__detect(i2c_e i2c_number, uint8_t slave_address) {
    4724:	b51f      	push	{r0, r1, r2, r3, r4, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:194
  uint8_t unused = 0;
    4726:	2200      	movs	r2, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:196
  return i2c__write_slave_data(i2c_number, slave_address, dummy_register,
    4728:	9200      	str	r2, [sp, #0]
    472a:	f10d 030f 	add.w	r3, sp, #15
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:194
  uint8_t unused = 0;
    472e:	f88d 200f 	strb.w	r2, [sp, #15]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:196
  return i2c__write_slave_data(i2c_number, slave_address, dummy_register,
    4732:	f7ff ffe5 	bl	4700 <i2c__write_slave_data>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:198
}
    4736:	b005      	add	sp, #20
    4738:	f85d fb04 	ldr.w	pc, [sp], #4

0000473c <i2c__write_single>:
i2c__write_single():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:220
                       uint8_t slave_memory_address, uint8_t value) {
    473c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    473e:	f88d 300f 	strb.w	r3, [sp, #15]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:221
  return i2c__write_slave_data(i2c_number, slave_address, slave_memory_address,
    4742:	2301      	movs	r3, #1
    4744:	9300      	str	r3, [sp, #0]
    4746:	f10d 030f 	add.w	r3, sp, #15
    474a:	f7ff ffd9 	bl	4700 <i2c__write_slave_data>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c.c:223
}
    474e:	b005      	add	sp, #20
    4750:	f85d fb04 	ldr.w	pc, [sp], #4

00004754 <i2c_slave_callback__read_memory>:
i2c_slave_callback__read_memory():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c_slave_init.c:26

  if (memory_index > 256) {
    return false;
  }

  *memory = slave_memory[memory_index];
    4754:	4b02      	ldr	r3, [pc, #8]	; (4760 <i2c_slave_callback__read_memory+0xc>)
    4756:	5c1b      	ldrb	r3, [r3, r0]
    4758:	700b      	strb	r3, [r1, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c_slave_init.c:28
  return true;
}
    475a:	2001      	movs	r0, #1
    475c:	4770      	bx	lr
    475e:	bf00      	nop
    4760:	10000a6c 	.word	0x10000a6c

00004764 <i2c_slave_callback__write_memory>:
i2c_slave_callback__write_memory():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c_slave_init.c:37

  if (memory_index > 256) {
    return false;
  }

  slave_memory[memory_index] = memory_value;
    4764:	4b01      	ldr	r3, [pc, #4]	; (476c <i2c_slave_callback__write_memory+0x8>)
    4766:	5419      	strb	r1, [r3, r0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/i2c_slave_init.c:40

  return true;
}
    4768:	2001      	movs	r0, #1
    476a:	4770      	bx	lr
    476c:	10000a6c 	.word	0x10000a6c

00004770 <lpc_peripheral__halt_handler>:
lpc_peripheral__halt_handler():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/lpc_peripherals.c:44 (discriminator 1)
// clang-format on

/// An unregistered interrupt handler is a forever loop
static void lpc_peripheral__halt_handler(void) {
  while (1) {
  }
    4770:	e7fe      	b.n	4770 <lpc_peripheral__halt_handler>
    4772:	Address 0x0000000000004772 is out of bounds.


00004774 <lpc_peripheral__interrupt_dispatcher>:
lpc_peripheral__interrupt_dispatcher():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/lpc_peripherals.c:115
/**
 * This function is intentionally not declared at the header file
 * This is registered by the startup code and registered as the interrupt
 * callback for each peripheral
 */
void lpc_peripheral__interrupt_dispatcher(void) {
    4774:	b508      	push	{r3, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/lpc_peripherals.c:116
  vRunTimeStatIsrEntry();
    4776:	f7ff fbdf 	bl	3f38 <vRunTimeStatIsrEntry>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/lpc_peripherals.c:122

  /* Get the IRQ number we are in.  Note that ICSR's real ISR bits are offset
   * by 16. We can read ICSR register too, but let's just read 8-bits directly.
   */
  const uint8_t isr_num =
      (*((uint8_t *)0xE000ED04)) - 16; // (SCB->ICSR & 0xFF) - 16;
    477a:	4b08      	ldr	r3, [pc, #32]	; (479c <lpc_peripheral__interrupt_dispatcher+0x28>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/lpc_peripherals.c:129
  /* Lookup the function pointer we want to call and make the call */
  function__void_f isr_to_service = lpc_peripheral__isr_registrations[isr_num];

#if (0 != configUSE_TRACE_FACILITY)
  vTraceStoreISRBegin(lpc_peripheral__trace_handles[isr_num]);
  isr_to_service();
    477c:	4a08      	ldr	r2, [pc, #32]	; (47a0 <lpc_peripheral__interrupt_dispatcher+0x2c>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/lpc_peripherals.c:121
  const uint8_t isr_num =
    477e:	781b      	ldrb	r3, [r3, #0]
    4780:	3b10      	subs	r3, #16
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/lpc_peripherals.c:125
  function__void_f isr_to_service = lpc_peripheral__isr_registrations[isr_num];
    4782:	b2db      	uxtb	r3, r3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/lpc_peripherals.c:129
  isr_to_service();
    4784:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
    4788:	4798      	blx	r3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/lpc_peripherals.c:137
  isr_to_service();
#endif

  // http://www.keil.com/support/docs/3928.htm
  static volatile int memory_write_to_avoid_spurious_interrupt;
  memory_write_to_avoid_spurious_interrupt = 0;
    478a:	4b06      	ldr	r3, [pc, #24]	; (47a4 <lpc_peripheral__interrupt_dispatcher+0x30>)
    478c:	2200      	movs	r2, #0
    478e:	601a      	str	r2, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/lpc_peripherals.c:138
  (void)memory_write_to_avoid_spurious_interrupt; // Avoid 'variable set but not
    4790:	681b      	ldr	r3, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/lpc_peripherals.c:142
                                                  // used' warning

  vRunTimeStatIsrExit();
}
    4792:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/lpc_peripherals.c:141
  vRunTimeStatIsrExit();
    4796:	f7ff bbe3 	b.w	3f60 <vRunTimeStatIsrExit>
    479a:	bf00      	nop
    479c:	e000ed04 	.word	0xe000ed04
    47a0:	10000078 	.word	0x10000078
    47a4:	10000b6c 	.word	0x10000b6c

000047a8 <lpc_peripheral__turn_on_power_to>:
lpc_peripheral__turn_on_power_to():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/lpc_peripherals.c:145

void lpc_peripheral__turn_on_power_to(lpc_peripheral_e peripheral) {
  if (peripheral < sizeof(lpc_peripheral_pconp_bit_map)) {
    47a8:	2859      	cmp	r0, #89	; 0x59
    47aa:	d809      	bhi.n	47c0 <lpc_peripheral__turn_on_power_to+0x18>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/lpc_peripherals.c:147
    const uint32_t power_on_bit =
        (uint32_t)lpc_peripheral_pconp_bit_map[peripheral];
    47ac:	4b05      	ldr	r3, [pc, #20]	; (47c4 <lpc_peripheral__turn_on_power_to+0x1c>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/lpc_peripherals.c:148
    LPC_SC->PCONP |= (UINT32_C(1) << power_on_bit);
    47ae:	4a06      	ldr	r2, [pc, #24]	; (47c8 <lpc_peripheral__turn_on_power_to+0x20>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/lpc_peripherals.c:146
    const uint32_t power_on_bit =
    47b0:	5c18      	ldrb	r0, [r3, r0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/lpc_peripherals.c:148
    LPC_SC->PCONP |= (UINT32_C(1) << power_on_bit);
    47b2:	f8d2 10c4 	ldr.w	r1, [r2, #196]	; 0xc4
    47b6:	2301      	movs	r3, #1
    47b8:	4083      	lsls	r3, r0
    47ba:	430b      	orrs	r3, r1
    47bc:	f8c2 30c4 	str.w	r3, [r2, #196]	; 0xc4
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/lpc_peripherals.c:150
  }
}
    47c0:	4770      	bx	lr
    47c2:	bf00      	nop
    47c4:	0000b543 	.word	0x0000b543
    47c8:	400fc000 	.word	0x400fc000

000047cc <lpc_peripheral__is_powered_on>:
lpc_peripheral__is_powered_on():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/lpc_peripherals.c:155

bool lpc_peripheral__is_powered_on(lpc_peripheral_e peripheral) {
  bool powered_on = false;

  if (peripheral < sizeof(lpc_peripheral_pconp_bit_map)) {
    47cc:	2859      	cmp	r0, #89	; 0x59
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/lpc_peripherals.c:158
    const uint32_t power_on_bit =
        (uint32_t)lpc_peripheral_pconp_bit_map[peripheral];
    powered_on = 0 != (LPC_SC->PCONP & (UINT32_C(1) << power_on_bit));
    47ce:	bf9f      	itttt	ls
    47d0:	4b05      	ldrls	r3, [pc, #20]	; (47e8 <lpc_peripheral__is_powered_on+0x1c>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/lpc_peripherals.c:157
        (uint32_t)lpc_peripheral_pconp_bit_map[peripheral];
    47d2:	4a06      	ldrls	r2, [pc, #24]	; (47ec <lpc_peripheral__is_powered_on+0x20>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/lpc_peripherals.c:158
    powered_on = 0 != (LPC_SC->PCONP & (UINT32_C(1) << power_on_bit));
    47d4:	f8d3 30c4 	ldrls.w	r3, [r3, #196]	; 0xc4
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/lpc_peripherals.c:156
    const uint32_t power_on_bit =
    47d8:	5c10      	ldrbls	r0, [r2, r0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/lpc_peripherals.c:158
    powered_on = 0 != (LPC_SC->PCONP & (UINT32_C(1) << power_on_bit));
    47da:	bf9a      	itte	ls
    47dc:	fa23 f000 	lsrls.w	r0, r3, r0
    47e0:	f000 0001 	andls.w	r0, r0, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/lpc_peripherals.c:153
  bool powered_on = false;
    47e4:	2000      	movhi	r0, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/lpc_peripherals.c:162
  }

  return powered_on;
}
    47e6:	4770      	bx	lr
    47e8:	400fc000 	.word	0x400fc000
    47ec:	0000b543 	.word	0x0000b543

000047f0 <lpc_peripheral__enable_interrupt>:
lpc_peripheral__enable_interrupt():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/lpc_peripherals.c:169
void lpc_peripheral__enable_interrupt(lpc_peripheral_e peripheral,
                                      function__void_f isr_callback,
                                      const char *name_for_rtos_trace) {
  // Sorry: Nasty hack because CAN1 shares interrupt with CAN0
  if (LPC_PERIPHERAL__CAN1 == peripheral) {
    peripheral = LPC_PERIPHERAL__CAN0;
    47f0:	2859      	cmp	r0, #89	; 0x59
    47f2:	bf08      	it	eq
    47f4:	2019      	moveq	r0, #25
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/lpc_peripherals.c:171
  }
  lpc_peripheral__isr_registrations[peripheral] = isr_callback;
    47f6:	4b08      	ldr	r3, [pc, #32]	; (4818 <lpc_peripheral__enable_interrupt+0x28>)
    47f8:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/lpc_peripherals.c:195
   *
   * Unless you really know what you are doing, never call NVIC_SetPriority()
   * with a priority other than: NVIC_SetPriority(peripheral,
   * RTOS_HIGHEST_INTERRUPT_PRIORITY + 1);
   */
  const IRQn_Type irq_type = (IRQn_Type)peripheral;
    47fc:	b243      	sxtb	r3, r0
__NVIC_EnableIRQ():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1681
  if ((int32_t)(IRQn) >= 0)
    47fe:	2b00      	cmp	r3, #0
    4800:	db08      	blt.n	4814 <lpc_peripheral__enable_interrupt+0x24>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1684
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    4802:	2201      	movs	r2, #1
    4804:	f000 001f 	and.w	r0, r0, #31
    4808:	fa02 f000 	lsl.w	r0, r2, r0
    480c:	095b      	lsrs	r3, r3, #5
    480e:	4a03      	ldr	r2, [pc, #12]	; (481c <lpc_peripheral__enable_interrupt+0x2c>)
    4810:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
lpc_peripheral__enable_interrupt():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/lpc_peripherals.c:197
  NVIC_EnableIRQ(irq_type); // Use CMS API
}
    4814:	4770      	bx	lr
    4816:	bf00      	nop
    4818:	10000078 	.word	0x10000078
    481c:	e000e100 	.word	0xe000e100

00004820 <ssp2__dma_transfer_block>:
ssp2__dma_transfer_block():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:123
  // (uint32_t)(&(LPC_SSP2->DR)); ssp2__dma_rx->CSrcAddr =
  // (uint32_t)(&(LPC_SSP2->DR));
}

ssp_dma_error_e ssp2__dma_transfer_block(unsigned char *buffer_pointer,
                                         uint32_t num_bytes, bool is_write_op) {
    4820:	b573      	push	{r0, r1, r4, r5, r6, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:124
  uint32_t dummyBuffer = 0xffffffff;
    4822:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:127

  // DMA is limited to 12-bit transfer size
  if (num_bytes >= 0x1000) {
    4826:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:124
  uint32_t dummyBuffer = 0xffffffff;
    482a:	9301      	str	r3, [sp, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:127
  if (num_bytes >= 0x1000) {
    482c:	d236      	bcs.n	489c <ssp2__dma_transfer_block+0x7c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:132
    return SSP_DMA__ERROR_LENGTH;
  }

  // DMA channels should not be busy
  if ((ssp2__dma_tx->CConfig & 1) || (ssp2__dma_rx->CConfig & 1)) {
    482e:	4c1d      	ldr	r4, [pc, #116]	; (48a4 <ssp2__dma_transfer_block+0x84>)
    4830:	6923      	ldr	r3, [r4, #16]
    4832:	07de      	lsls	r6, r3, #31
    4834:	d434      	bmi.n	48a0 <ssp2__dma_transfer_block+0x80>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:132 (discriminator 1)
    4836:	4b1c      	ldr	r3, [pc, #112]	; (48a8 <ssp2__dma_transfer_block+0x88>)
    4838:	691d      	ldr	r5, [r3, #16]
    483a:	07ed      	lsls	r5, r5, #31
    483c:	d430      	bmi.n	48a0 <ssp2__dma_transfer_block+0x80>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:182

  /**
   * Clear existing terminal count and error interrupts otherwise
   * DMA will not start.
   */
  LPC_GPDMA->IntTCClear =
    483e:	4d1b      	ldr	r5, [pc, #108]	; (48ac <ssp2__dma_transfer_block+0x8c>)
    4840:	2603      	movs	r6, #3
    4842:	60ae      	str	r6, [r5, #8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:184
      (1 << SSP2__DMA_RX_CHANNEL) | (1 << SSP2__DMA_TX_CHANNEL);
  LPC_GPDMA->IntErrClr =
    4844:	612e      	str	r6, [r5, #16]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:199
   *      - Increment destination
   *
   * Note: Setting destination burst of 2 or 4 bytes makes no difference (1 <<
   * 15)
   */
  ssp2__dma_rx->CSrcAddr = (uint32_t)(&(LPC_SSP2->DR));
    4846:	4d1a      	ldr	r5, [pc, #104]	; (48b0 <ssp2__dma_transfer_block+0x90>)
    4848:	601d      	str	r5, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:200
  if (is_write_op) {
    484a:	b302      	cbz	r2, 488e <ssp2__dma_transfer_block+0x6e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:201
    ssp2__dma_rx->CDestAddr = (uint32_t)(&dummyBuffer);
    484c:	ae01      	add	r6, sp, #4
    484e:	605e      	str	r6, [r3, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:202
    ssp2__dma_rx->CControl = num_bytes | terminal_count_interrupt_enable;
    4850:	f041 4600 	orr.w	r6, r1, #2147483648	; 0x80000000
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:205
  } else {
    ssp2__dma_rx->CDestAddr = (uint32_t)buffer_pointer;
    ssp2__dma_rx->CControl = num_bytes | increment_destination_address |
    4854:	60de      	str	r6, [r3, #12]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:208
                             terminal_count_interrupt_enable;
  }
  ssp2__dma_rx->CConfig =
    4856:	f241 060f 	movw	r6, #4111	; 0x100f
    485a:	611e      	str	r6, [r3, #16]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:220
   *      - Increment source data
   * For read operation:
   *      - Source data is buffer with 0xFF
   *      - Don't increment source data
   */
  if (is_write_op) {
    485c:	b1da      	cbz	r2, 4896 <ssp2__dma_transfer_block+0x76>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:221
    ssp2__dma_tx->CSrcAddr = (uint32_t)(buffer_pointer);
    485e:	6020      	str	r0, [r4, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:222
    ssp2__dma_tx->CControl = num_bytes | increment_source_address;
    4860:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:228
  } else {
    ssp2__dma_tx->CSrcAddr = (uint32_t)(&dummyBuffer);
    ssp2__dma_tx->CControl = num_bytes;
  }
  ssp2__dma_tx->CDestAddr = (uint32_t)(&(LPC_SSP2->DR));
  ssp2__dma_tx->CConfig =
    4864:	f640 1281 	movw	r2, #2433	; 0x981
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:225
    ssp2__dma_tx->CControl = num_bytes;
    4868:	60e1      	str	r1, [r4, #12]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:227
  ssp2__dma_tx->CDestAddr = (uint32_t)(&(LPC_SSP2->DR));
    486a:	6065      	str	r5, [r4, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:228
  ssp2__dma_tx->CConfig =
    486c:	6122      	str	r2, [r4, #16]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:236
  /**
   * Channel must be fully configured and then enabled separately.
   * Setting DMACR's Rx/Tx bits should trigger the DMA
   */
  static const uint32_t enable_rx_tx_dma_triggers = 0x03;
  LPC_SSP2->DMACR |= enable_rx_tx_dma_triggers;
    486e:	4a11      	ldr	r2, [pc, #68]	; (48b4 <ssp2__dma_transfer_block+0x94>)
    4870:	6a51      	ldr	r1, [r2, #36]	; 0x24
    4872:	f041 0103 	orr.w	r1, r1, #3
    4876:	6251      	str	r1, [r2, #36]	; 0x24
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:238 (discriminator 1)

  while ((ssp2__dma_rx->CControl & 0xfff)) {
    4878:	68d8      	ldr	r0, [r3, #12]
    487a:	f3c0 000b 	ubfx	r0, r0, #0, #12
    487e:	2800      	cmp	r0, #0
    4880:	d1fa      	bne.n	4878 <ssp2__dma_transfer_block+0x58>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:241
    ; // Poll for DMA transfer to complete
  }
  LPC_SSP2->DMACR &= ~enable_rx_tx_dma_triggers;
    4882:	6a53      	ldr	r3, [r2, #36]	; 0x24
    4884:	f023 0303 	bic.w	r3, r3, #3
    4888:	6253      	str	r3, [r2, #36]	; 0x24
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:244

  return SSP_DMA__ERROR_NONE;
    488a:	b002      	add	sp, #8
    488c:	bd70      	pop	{r4, r5, r6, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:204
    ssp2__dma_rx->CDestAddr = (uint32_t)buffer_pointer;
    488e:	6058      	str	r0, [r3, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:205
    ssp2__dma_rx->CControl = num_bytes | increment_destination_address |
    4890:	f041 4608 	orr.w	r6, r1, #2281701376	; 0x88000000
    4894:	e7de      	b.n	4854 <ssp2__dma_transfer_block+0x34>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:224
    ssp2__dma_tx->CSrcAddr = (uint32_t)(&dummyBuffer);
    4896:	aa01      	add	r2, sp, #4
    4898:	6022      	str	r2, [r4, #0]
    489a:	e7e3      	b.n	4864 <ssp2__dma_transfer_block+0x44>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:128
    return SSP_DMA__ERROR_LENGTH;
    489c:	2001      	movs	r0, #1
    489e:	e7f4      	b.n	488a <ssp2__dma_transfer_block+0x6a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:133
    return SSP_DMA__ERROR_BUSY;
    48a0:	2002      	movs	r0, #2
    48a2:	e7f2      	b.n	488a <ssp2__dma_transfer_block+0x6a>
    48a4:	20080100 	.word	0x20080100
    48a8:	20080120 	.word	0x20080120
    48ac:	20080000 	.word	0x20080000
    48b0:	400ac008 	.word	0x400ac008
    48b4:	400ac000 	.word	0x400ac000

000048b8 <ssp2__set_max_clock>:
ssp2__set_max_clock():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:69
void ssp2__set_max_clock(uint32_t max_clock_khz) {
    48b8:	b510      	push	{r4, lr}
    48ba:	4604      	mov	r4, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:71
  const uint32_t cpu_clock_khz = clock__get_core_clock_hz() / 1000UL;
    48bc:	f7fb fcae 	bl	21c <clock__get_core_clock_hz>
    48c0:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
    48c4:	fbb0 f0f3 	udiv	r0, r0, r3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:70
  uint8_t divider = 2;
    48c8:	2302      	movs	r3, #2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:74
  while (max_clock_khz < (cpu_clock_khz / divider) && divider <= 254) {
    48ca:	fbb0 f2f3 	udiv	r2, r0, r3
    48ce:	42a2      	cmp	r2, r4
    48d0:	d802      	bhi.n	48d8 <ssp2__set_max_clock+0x20>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:78
  LPC_SSP2->CPSR = divider;
    48d2:	4a03      	ldr	r2, [pc, #12]	; (48e0 <ssp2__set_max_clock+0x28>)
    48d4:	6113      	str	r3, [r2, #16]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:79
}
    48d6:	bd10      	pop	{r4, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:75
    divider += 2;
    48d8:	3302      	adds	r3, #2
    48da:	b2db      	uxtb	r3, r3
    48dc:	e7f5      	b.n	48ca <ssp2__set_max_clock+0x12>
    48de:	bf00      	nop
    48e0:	400ac000 	.word	0x400ac000

000048e4 <ssp2__initialize>:
ssp2__initialize():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:59
void ssp2__initialize(uint32_t max_clock_khz) {
    48e4:	b510      	push	{r4, lr}
    48e6:	4604      	mov	r4, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:60
  lpc_peripheral__turn_on_power_to(LPC_PERIPHERAL__SSP2);
    48e8:	2024      	movs	r0, #36	; 0x24
    48ea:	f7ff ff5d 	bl	47a8 <lpc_peripheral__turn_on_power_to>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:62
  LPC_SSP2->CR0 = 7;        // 8-bit mode
    48ee:	4b0b      	ldr	r3, [pc, #44]	; (491c <ssp2__initialize+0x38>)
    48f0:	2207      	movs	r2, #7
    48f2:	601a      	str	r2, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:63
  LPC_SSP2->CR1 = (1 << 1); // Enable SSP as Master
    48f4:	2202      	movs	r2, #2
    48f6:	605a      	str	r2, [r3, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:64
  ssp2__set_max_clock(max_clock_khz);
    48f8:	4620      	mov	r0, r4
    48fa:	f7ff ffdd 	bl	48b8 <ssp2__set_max_clock>
ssp2__dma_init():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:104
  lpc_peripheral__turn_on_power_to(LPC_PERIPHERAL__GPDMA);
    48fe:	201a      	movs	r0, #26
    4900:	f7ff ff52 	bl	47a8 <lpc_peripheral__turn_on_power_to>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:107
  LPC_GPDMA->Config = enable_bitmask;
    4904:	4b06      	ldr	r3, [pc, #24]	; (4920 <ssp2__initialize+0x3c>)
    4906:	2201      	movs	r2, #1
    4908:	631a      	str	r2, [r3, #48]	; 0x30
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:108
  while (!(LPC_GPDMA->Config & enable_bitmask)) {
    490a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
    490c:	07d2      	lsls	r2, r2, #31
    490e:	d5fc      	bpl.n	490a <ssp2__initialize+0x26>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:113
  ssp2__dma_rx->CLLI = 0;
    4910:	4a04      	ldr	r2, [pc, #16]	; (4924 <ssp2__initialize+0x40>)
    4912:	2300      	movs	r3, #0
    4914:	6093      	str	r3, [r2, #8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:114
  ssp2__dma_tx->CLLI = 0;
    4916:	f842 3c18 	str.w	r3, [r2, #-24]
ssp2__initialize():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:67
}
    491a:	bd10      	pop	{r4, pc}
    491c:	400ac000 	.word	0x400ac000
    4920:	20080000 	.word	0x20080000
    4924:	20080120 	.word	0x20080120

00004928 <ssp2__exchange_byte>:
ssp2__exchange_byte():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:84
  while (LPC_SSP2->SR & (1 << 4)) {
    4928:	4b03      	ldr	r3, [pc, #12]	; (4938 <ssp2__exchange_byte+0x10>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:84 (discriminator 1)
    492a:	68da      	ldr	r2, [r3, #12]
    492c:	06d2      	lsls	r2, r2, #27
    492e:	d4fc      	bmi.n	492a <ssp2__exchange_byte+0x2>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:88
  return (uint8_t)(LPC_SSP2->DR & 0xFF);
    4930:	6898      	ldr	r0, [r3, #8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:89
}
    4932:	b2c0      	uxtb	r0, r0
    4934:	4770      	bx	lr
    4936:	bf00      	nop
    4938:	400ac000 	.word	0x400ac000

0000493c <ssp2__dma_write_block>:
ssp2__dma_write_block():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:94
  ssp2__dma_transfer_block((unsigned char *)output_block, number_of_bytes,
    493c:	2201      	movs	r2, #1
    493e:	f7ff bf6f 	b.w	4820 <ssp2__dma_transfer_block>

00004942 <ssp2__dma_read_block>:
ssp2__dma_read_block():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/ssp2.c:100
  ssp2__dma_transfer_block(input_block, number_of_bytes, !is_write_operation);
    4942:	2200      	movs	r2, #0
    4944:	f7ff bf6c 	b.w	4820 <ssp2__dma_transfer_block>

00004948 <uart__isr_common>:
uart__isr_common():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:153
    receive_data_available = (2 << 0),
    receive_data_available_timeout = (6 << 0),
  } interrupt_reason_e;

  const interrupt_reason_e interrupt_reason =
      (interrupt_reason_e)((uart_type->registers->IIR & 0xE) >> 1);
    4948:	6802      	ldr	r2, [r0, #0]
    494a:	6893      	ldr	r3, [r2, #8]
    494c:	f3c3 0342 	ubfx	r3, r3, #1, #3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:155

  switch (interrupt_reason) {
    4950:	2b02      	cmp	r3, #2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:142
static void uart__isr_common(uart_s *uart_type) {
    4952:	b573      	push	{r0, r1, r4, r5, r6, lr}
    4954:	4606      	mov	r6, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:155
  switch (interrupt_reason) {
    4956:	d023      	beq.n	49a0 <uart__isr_common+0x58>
    4958:	2b06      	cmp	r3, #6
    495a:	d021      	beq.n	49a0 <uart__isr_common+0x58>
    495c:	2b01      	cmp	r3, #1
    495e:	d134      	bne.n	49ca <uart__isr_common+0x82>
uart__load_pending_transmit_bytes():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:84
  char transmit_byte = 0;
    4960:	2400      	movs	r4, #0
    4962:	f88d 4003 	strb.w	r4, [sp, #3]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:86
  BaseType_t higher_priority_task_woke = 0;
    4966:	9401      	str	r4, [sp, #4]
    4968:	2510      	movs	r5, #16
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:89
    if (xQueueReceiveFromISR(uart_type->queue_transmit, &transmit_byte,
    496a:	aa01      	add	r2, sp, #4
    496c:	f10d 0103 	add.w	r1, sp, #3
    4970:	68b0      	ldr	r0, [r6, #8]
    4972:	f7fe fcfd 	bl	3370 <xQueueReceiveFromISR>
    4976:	b148      	cbz	r0, 498c <uart__isr_common+0x44>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:91
      uart_type->registers->THR = transmit_byte;
    4978:	6833      	ldr	r3, [r6, #0]
    497a:	f89d 2003 	ldrb.w	r2, [sp, #3]
    497e:	701a      	strb	r2, [r3, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:92
      if (higher_priority_task_woke) {
    4980:	9b01      	ldr	r3, [sp, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:93
        context_switch_required = true;
    4982:	2b00      	cmp	r3, #0
    4984:	bf18      	it	ne
    4986:	2401      	movne	r4, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:88
  for (size_t counter = 0; counter < hw_fifo_size; counter++) {
    4988:	3d01      	subs	r5, #1
    498a:	d1ee      	bne.n	496a <uart__isr_common+0x22>
uart__isr_common():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:172
    (void)unused_to_clear_isr;
    break;
  }
  }

  portEND_SWITCHING_ISR(context_switch_required);
    498c:	b30c      	cbz	r4, 49d2 <uart__isr_common+0x8a>
    498e:	4b12      	ldr	r3, [pc, #72]	; (49d8 <uart__isr_common+0x90>)
    4990:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    4994:	601a      	str	r2, [r3, #0]
    4996:	f3bf 8f4f 	dsb	sy
    499a:	f3bf 8f6f 	isb	sy
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:173
}
    499e:	e018      	b.n	49d2 <uart__isr_common+0x8a>
uart__clear_receive_fifo():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:107
  BaseType_t higher_priority_task_woke = 0;
    49a0:	2400      	movs	r4, #0
    49a2:	9401      	str	r4, [sp, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:114
  while (uart_type->registers->LSR & char_available_bitmask) {
    49a4:	6833      	ldr	r3, [r6, #0]
    49a6:	7d1a      	ldrb	r2, [r3, #20]
    49a8:	07d2      	lsls	r2, r2, #31
    49aa:	d5ef      	bpl.n	498c <uart__isr_common+0x44>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:115
    const char received_byte = uart_type->registers->RBR;
    49ac:	781b      	ldrb	r3, [r3, #0]
    49ae:	f88d 3003 	strb.w	r3, [sp, #3]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:116
    xQueueSendFromISR(uart_type->queue_receive, &received_byte,
    49b2:	aa01      	add	r2, sp, #4
    49b4:	2300      	movs	r3, #0
    49b6:	f10d 0103 	add.w	r1, sp, #3
    49ba:	68f0      	ldr	r0, [r6, #12]
    49bc:	f7fe faca 	bl	2f54 <xQueueGenericSendFromISR>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:119
    if (higher_priority_task_woke) {
    49c0:	9b01      	ldr	r3, [sp, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:120
      context_switch_required = true;
    49c2:	2b00      	cmp	r3, #0
    49c4:	bf18      	it	ne
    49c6:	2401      	movne	r4, #1
    49c8:	e7ec      	b.n	49a4 <uart__isr_common+0x5c>
uart__isr_common():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:166
    volatile const uint32_t unused_to_clear_isr = uart_type->registers->LSR;
    49ca:	7d13      	ldrb	r3, [r2, #20]
    49cc:	b2db      	uxtb	r3, r3
    49ce:	9301      	str	r3, [sp, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:167
    (void)unused_to_clear_isr;
    49d0:	9b01      	ldr	r3, [sp, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:173
}
    49d2:	b002      	add	sp, #8
    49d4:	bd70      	pop	{r4, r5, r6, pc}
    49d6:	bf00      	nop
    49d8:	e000ed04 	.word	0xe000ed04

000049dc <uart3_isr>:
uart3_isr():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:140
static void uart3_isr(void) { uart__isr_common(&uarts[UART__3]); }
    49dc:	4801      	ldr	r0, [pc, #4]	; (49e4 <uart3_isr+0x8>)
    49de:	f7ff bfb3 	b.w	4948 <uart__isr_common>
    49e2:	bf00      	nop
    49e4:	1000014c 	.word	0x1000014c

000049e8 <uart2_isr>:
uart2_isr():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:139
static void uart2_isr(void) { uart__isr_common(&uarts[UART__2]); }
    49e8:	4801      	ldr	r0, [pc, #4]	; (49f0 <uart2_isr+0x8>)
    49ea:	f7ff bfad 	b.w	4948 <uart__isr_common>
    49ee:	bf00      	nop
    49f0:	1000013c 	.word	0x1000013c

000049f4 <uart1_isr>:
uart1_isr():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:138
static void uart1_isr(void) { uart__isr_common(&uarts[UART__1]); }
    49f4:	4801      	ldr	r0, [pc, #4]	; (49fc <uart1_isr+0x8>)
    49f6:	f7ff bfa7 	b.w	4948 <uart__isr_common>
    49fa:	bf00      	nop
    49fc:	1000012c 	.word	0x1000012c

00004a00 <uart0_isr>:
uart0_isr():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:137
static void uart0_isr(void) { uart__isr_common(&uarts[UART__0]); }
    4a00:	4801      	ldr	r0, [pc, #4]	; (4a08 <uart0_isr+0x8>)
    4a02:	f7ff bfa1 	b.w	4948 <uart__isr_common>
    4a06:	bf00      	nop
    4a08:	1000011c 	.word	0x1000011c

00004a0c <uart__init>:
uart__init():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:182
 *                      P U B L I C    F U N C T I O N S
 *
 ******************************************************************************/

void uart__init(uart_e uart, uint32_t peripheral_clock, uint32_t baud_rate) {
  lpc_peripheral__turn_on_power_to(uart_peripheral_ids[uart]);
    4a0c:	4b15      	ldr	r3, [pc, #84]	; (4a64 <uart__init+0x58>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:181
void uart__init(uart_e uart, uint32_t peripheral_clock, uint32_t baud_rate) {
    4a0e:	b570      	push	{r4, r5, r6, lr}
    4a10:	4616      	mov	r6, r2
    4a12:	4605      	mov	r5, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:182
  lpc_peripheral__turn_on_power_to(uart_peripheral_ids[uart]);
    4a14:	5c18      	ldrb	r0, [r3, r0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:181
void uart__init(uart_e uart, uint32_t peripheral_clock, uint32_t baud_rate) {
    4a16:	460c      	mov	r4, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:186

  const float roundup_offset = 0.5;
  const uint16_t divider =
      (uint16_t)((peripheral_clock / (16 * baud_rate)) + roundup_offset);
    4a18:	0136      	lsls	r6, r6, #4
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:182
  lpc_peripheral__turn_on_power_to(uart_peripheral_ids[uart]);
    4a1a:	f7ff fec5 	bl	47a8 <lpc_peripheral__turn_on_power_to>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:186
      (uint16_t)((peripheral_clock / (16 * baud_rate)) + roundup_offset);
    4a1e:	fbb4 f3f6 	udiv	r3, r4, r6
    4a22:	ee07 3a90 	vmov	s15, r3
    4a26:	eef8 7a67 	vcvt.f32.u32	s15, s15
    4a2a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
    4a2e:	ee77 7a87 	vadd.f32	s15, s15, s14
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:190
  const uint8_t dlab_bit = (1 << 7);
  const uint8_t eight_bit_datalen = 3;

  lpc_uart *uart_regs = uarts[uart].registers;
    4a32:	012d      	lsls	r5, r5, #4
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:185
  const uint16_t divider =
    4a34:	eefc 7ae7 	vcvt.u32.f32	s15, s15
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:190
  lpc_uart *uart_regs = uarts[uart].registers;
    4a38:	4a0b      	ldr	r2, [pc, #44]	; (4a68 <uart__init+0x5c>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:185
  const uint16_t divider =
    4a3a:	ee17 3a90 	vmov	r3, s15
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:190
  lpc_uart *uart_regs = uarts[uart].registers;
    4a3e:	5952      	ldr	r2, [r2, r5]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:185
  const uint16_t divider =
    4a40:	b29b      	uxth	r3, r3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:192

  uart_regs->LCR = dlab_bit; // Set DLAB bit to access DLM & DLL
    4a42:	2180      	movs	r1, #128	; 0x80
    4a44:	7311      	strb	r1, [r2, #12]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:193
  uart_regs->DLM = (divider >> 8) & 0xFF;
    4a46:	0a19      	lsrs	r1, r3, #8
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:194
  uart_regs->DLL = (divider >> 0) & 0xFF;
    4a48:	b2db      	uxtb	r3, r3
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:193
  uart_regs->DLM = (divider >> 8) & 0xFF;
    4a4a:	7111      	strb	r1, [r2, #4]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:194
  uart_regs->DLL = (divider >> 0) & 0xFF;
    4a4c:	7013      	strb	r3, [r2, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:200

  /* Bootloader uses Uart0 fractional dividers and can wreck havoc in our baud
   * rate code, so re-initialize it Lesson learned: DO NOT RELY ON RESET VALUES
   */
  const uint32_t default_reset_fdr_value = (1 << 4);
  uart_regs->FDR = default_reset_fdr_value;
    4a4e:	2310      	movs	r3, #16
    4a50:	f882 3028 	strb.w	r3, [r2, #40]	; 0x28
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:206

  // Important: Set FCR value before enable UART by writing the LCR register
  // Important: FCR is a write-only register, and we cannot use R/M/W such as |=
  const uint8_t enable_fifo = (1 << 0); // Must be done!
  const uint8_t eight_char_timeout = (2 << 6);
  uart_regs->FCR = enable_fifo;
    4a54:	2301      	movs	r3, #1
    4a56:	7213      	strb	r3, [r2, #8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:207
  uart_regs->FCR = enable_fifo | eight_char_timeout;
    4a58:	2381      	movs	r3, #129	; 0x81
    4a5a:	7213      	strb	r3, [r2, #8]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:209

  uart_regs->LCR = eight_bit_datalen; // DLAB is reset back to zero also
    4a5c:	2303      	movs	r3, #3
    4a5e:	7313      	strb	r3, [r2, #12]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:210
}
    4a60:	bd70      	pop	{r4, r5, r6, pc}
    4a62:	bf00      	nop
    4a64:	0000b5c8 	.word	0x0000b5c8
    4a68:	1000011c 	.word	0x1000011c

00004a6c <uart__is_initialized>:
uart__is_initialized():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:213

bool uart__is_initialized(uart_e uart) {
  return lpc_peripheral__is_powered_on(uart_peripheral_ids[uart]) &&
    4a6c:	4b07      	ldr	r3, [pc, #28]	; (4a8c <uart__is_initialized+0x20>)
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:212
bool uart__is_initialized(uart_e uart) {
    4a6e:	b510      	push	{r4, lr}
    4a70:	4604      	mov	r4, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:213
  return lpc_peripheral__is_powered_on(uart_peripheral_ids[uart]) &&
    4a72:	5c18      	ldrb	r0, [r3, r0]
    4a74:	f7ff feaa 	bl	47cc <lpc_peripheral__is_powered_on>
    4a78:	b130      	cbz	r0, 4a88 <uart__is_initialized+0x1c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:214 (discriminator 1)
         (0 != uarts[uart].registers->LCR);
    4a7a:	0124      	lsls	r4, r4, #4
    4a7c:	4b04      	ldr	r3, [pc, #16]	; (4a90 <uart__is_initialized+0x24>)
    4a7e:	591b      	ldr	r3, [r3, r4]
    4a80:	7b18      	ldrb	r0, [r3, #12]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:213 (discriminator 1)
  return lpc_peripheral__is_powered_on(uart_peripheral_ids[uart]) &&
    4a82:	3000      	adds	r0, #0
    4a84:	bf18      	it	ne
    4a86:	2001      	movne	r0, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:215 (discriminator 6)
}
    4a88:	bd10      	pop	{r4, pc}
    4a8a:	bf00      	nop
    4a8c:	0000b5c8 	.word	0x0000b5c8
    4a90:	1000011c 	.word	0x1000011c

00004a94 <uart__is_transmit_queue_initialized>:
uart__is_transmit_queue_enabled():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:72
  return (NULL != uarts[uart].queue_transmit);
    4a94:	4b03      	ldr	r3, [pc, #12]	; (4aa4 <uart__is_transmit_queue_initialized+0x10>)
    4a96:	eb03 1000 	add.w	r0, r3, r0, lsl #4
    4a9a:	6880      	ldr	r0, [r0, #8]
uart__is_transmit_queue_initialized():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:219

bool uart__is_transmit_queue_initialized(uart_e uart) {
  return uart__is_transmit_queue_enabled(uart);
}
    4a9c:	3000      	adds	r0, #0
    4a9e:	bf18      	it	ne
    4aa0:	2001      	movne	r0, #1
    4aa2:	4770      	bx	lr
    4aa4:	1000011c 	.word	0x1000011c

00004aa8 <uart__enable_queues>:
uart__enable_queues():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:222

bool uart__enable_queues(uart_e uart, QueueHandle_t queue_receive,
                         QueueHandle_t queue_transmit) {
    4aa8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    4aac:	4607      	mov	r7, r0
    4aae:	4689      	mov	r9, r1
    4ab0:	4690      	mov	r8, r2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:227
  bool status = false;
  uart_s *uart_type = &uarts[uart];

  // We can only access UART registers after its power has been enabled
  if (uart__is_initialized(uart)) {
    4ab2:	f7ff ffdb 	bl	4a6c <uart__is_initialized>
    4ab6:	4606      	mov	r6, r0
    4ab8:	b918      	cbnz	r0, 4ac2 <uart__enable_queues+0x1a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:223
  bool status = false;
    4aba:	2600      	movs	r6, #0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:252
      uart__enable_receive_and_transmit_interrupts(uart);
    }
  }

  return status;
}
    4abc:	4630      	mov	r0, r6
    4abe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
uart__is_receive_queue_enabled():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:69
  return (NULL != uarts[uart].queue_receive);
    4ac2:	4c12      	ldr	r4, [pc, #72]	; (4b0c <uart__enable_queues+0x64>)
    4ac4:	013d      	lsls	r5, r7, #4
    4ac6:	1963      	adds	r3, r4, r5
uart__enable_queues():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:229
    if (!uart__is_receive_queue_enabled(uart) && NULL != queue_receive) {
    4ac8:	68da      	ldr	r2, [r3, #12]
    4aca:	b922      	cbnz	r2, 4ad6 <uart__enable_queues+0x2e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:229 (discriminator 1)
    4acc:	f1b9 0f00 	cmp.w	r9, #0
    4ad0:	d001      	beq.n	4ad6 <uart__enable_queues+0x2e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:230
      uart_type->queue_receive = queue_receive;
    4ad2:	f8c3 900c 	str.w	r9, [r3, #12]
uart__is_transmit_queue_enabled():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:72
  return (NULL != uarts[uart].queue_transmit);
    4ad6:	1963      	adds	r3, r4, r5
uart__enable_queues():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:236
    if (!uart__is_transmit_queue_enabled(uart) && NULL != queue_transmit) {
    4ad8:	689a      	ldr	r2, [r3, #8]
    4ada:	b922      	cbnz	r2, 4ae6 <uart__enable_queues+0x3e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:236 (discriminator 1)
    4adc:	f1b8 0f00 	cmp.w	r8, #0
    4ae0:	d001      	beq.n	4ae6 <uart__enable_queues+0x3e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:237
      uart_type->queue_transmit = queue_transmit;
    4ae2:	f8c3 8008 	str.w	r8, [r3, #8]
uart__is_receive_queue_enabled():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:69
  return (NULL != uarts[uart].queue_receive);
    4ae6:	1963      	adds	r3, r4, r5
uart__enable_queues():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:244
    status = uart__is_receive_queue_enabled(uart) &&
    4ae8:	68da      	ldr	r2, [r3, #12]
    4aea:	2a00      	cmp	r2, #0
    4aec:	d0e5      	beq.n	4aba <uart__enable_queues+0x12>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:246
    if (status) {
    4aee:	689a      	ldr	r2, [r3, #8]
    4af0:	2a00      	cmp	r2, #0
    4af2:	d0e2      	beq.n	4aba <uart__enable_queues+0x12>
uart__enable_receive_and_transmit_interrupts():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:129
  lpc_peripheral__enable_interrupt(uart_peripheral_ids[uart], uart__isrs[uart],
    4af4:	685a      	ldr	r2, [r3, #4]
    4af6:	4b06      	ldr	r3, [pc, #24]	; (4b10 <uart__enable_queues+0x68>)
    4af8:	f853 1027 	ldr.w	r1, [r3, r7, lsl #2]
    4afc:	4b05      	ldr	r3, [pc, #20]	; (4b14 <uart__enable_queues+0x6c>)
    4afe:	5dd8      	ldrb	r0, [r3, r7]
    4b00:	f7ff fe76 	bl	47f0 <lpc_peripheral__enable_interrupt>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:134
  uart_type->registers->IER = enable_rx_tx_interrupts;
    4b04:	5963      	ldr	r3, [r4, r5]
    4b06:	2207      	movs	r2, #7
    4b08:	605a      	str	r2, [r3, #4]
    4b0a:	e7d7      	b.n	4abc <uart__enable_queues+0x14>
    4b0c:	1000011c 	.word	0x1000011c
    4b10:	0000b5b8 	.word	0x0000b5b8
    4b14:	0000b5c8 	.word	0x0000b5c8

00004b18 <uart__polled_put>:
uart__polled_put():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:285
  }

  return status;
}

bool uart__polled_put(uart_e uart, char output_byte) {
    4b18:	b538      	push	{r3, r4, r5, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:287
  bool status = false;
  lpc_uart *uart_regs = uarts[uart].registers;
    4b1a:	4a07      	ldr	r2, [pc, #28]	; (4b38 <uart__polled_put+0x20>)
    4b1c:	0103      	lsls	r3, r0, #4
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:285
bool uart__polled_put(uart_e uart, char output_byte) {
    4b1e:	460d      	mov	r5, r1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:287
  lpc_uart *uart_regs = uarts[uart].registers;
    4b20:	58d4      	ldr	r4, [r2, r3]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:289

  if (uart__is_initialized(uart)) {
    4b22:	f7ff ffa3 	bl	4a6c <uart__is_initialized>
    4b26:	b130      	cbz	r0, 4b36 <uart__polled_put+0x1e>
uart__wait_for_transmit_to_complete():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:77
  while (!(uart_regs->LSR & transmitter_empty)) {
    4b28:	7d23      	ldrb	r3, [r4, #20]
    4b2a:	069a      	lsls	r2, r3, #26
    4b2c:	d5fc      	bpl.n	4b28 <uart__polled_put+0x10>
uart__polled_put():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:294
    status = true;

    // Wait for any prior transmission to complete
    uart__wait_for_transmit_to_complete(uart_regs);
    uart_regs->THR = output_byte;
    4b2e:	7025      	strb	r5, [r4, #0]
uart__wait_for_transmit_to_complete():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:77
  while (!(uart_regs->LSR & transmitter_empty)) {
    4b30:	7d23      	ldrb	r3, [r4, #20]
    4b32:	069b      	lsls	r3, r3, #26
    4b34:	d5fc      	bpl.n	4b30 <uart__polled_put+0x18>
uart__polled_put():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:299
    uart__wait_for_transmit_to_complete(uart_regs);
  }

  return status;
}
    4b36:	bd38      	pop	{r3, r4, r5, pc}
    4b38:	1000011c 	.word	0x1000011c

00004b3c <uart__get>:
uart__get():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:301

bool uart__get(uart_e uart, char *input_byte, uint32_t timeout_ms) {
    4b3c:	b570      	push	{r4, r5, r6, lr}
    4b3e:	4604      	mov	r4, r0
    4b40:	460e      	mov	r6, r1
    4b42:	4615      	mov	r5, r2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:304
  bool status = false;
  const bool rtos_is_running =
      taskSCHEDULER_RUNNING == xTaskGetSchedulerState();
    4b44:	f7ff f8e4 	bl	3d10 <xTaskGetSchedulerState>
uart__is_receive_queue_enabled():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:69
  return (NULL != uarts[uart].queue_receive);
    4b48:	4b0e      	ldr	r3, [pc, #56]	; (4b84 <uart__get+0x48>)
    4b4a:	eb03 1304 	add.w	r3, r3, r4, lsl #4
    4b4e:	68dc      	ldr	r4, [r3, #12]
uart__get():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:310

  /* If a user calls this function without the RTOS running, we fail gracefully.
   * We do not desire to perform polling because that would involve time keeping
   * without an RTOS which increases the driver complexity.
   */
  if (uart__is_receive_queue_enabled(uart) && rtos_is_running) {
    4b50:	b1b4      	cbz	r4, 4b80 <uart__get+0x44>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:310 (discriminator 1)
    4b52:	2802      	cmp	r0, #2
    4b54:	d114      	bne.n	4b80 <uart__get+0x44>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:311
    status = xQueueReceive(uarts[uart].queue_receive, input_byte,
    4b56:	1c6b      	adds	r3, r5, #1
    4b58:	d009      	beq.n	4b6e <uart__get+0x32>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:312 (discriminator 1)
                           RTOS_MS_TO_TICKS(timeout_ms));
    4b5a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
    4b5e:	fba5 0100 	umull	r0, r1, r5, r0
    4b62:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
    4b66:	2300      	movs	r3, #0
    4b68:	f000 f876 	bl	4c58 <__aeabi_uldivmod>
    4b6c:	4605      	mov	r5, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:311 (discriminator 4)
    status = xQueueReceive(uarts[uart].queue_receive, input_byte,
    4b6e:	462a      	mov	r2, r5
    4b70:	4631      	mov	r1, r6
    4b72:	4620      	mov	r0, r4
    4b74:	f7fe fa9e 	bl	30b4 <xQueueReceive>
    4b78:	3000      	adds	r0, #0
    4b7a:	bf18      	it	ne
    4b7c:	2001      	movne	r0, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:316
  }

  return status;
}
    4b7e:	bd70      	pop	{r4, r5, r6, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:302
  bool status = false;
    4b80:	2000      	movs	r0, #0
    4b82:	e7fc      	b.n	4b7e <uart__get+0x42>
    4b84:	1000011c 	.word	0x1000011c

00004b88 <uart__polled_get>:
uart__polled_get():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:254
bool uart__polled_get(uart_e uart, char *input_byte) {
    4b88:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    4b8c:	4605      	mov	r5, r0
    4b8e:	460e      	mov	r6, r1
uart__is_receive_queue_enabled():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:69
  return (NULL != uarts[uart].queue_receive);
    4b90:	4c11      	ldr	r4, [pc, #68]	; (4bd8 <uart__polled_get+0x50>)
uart__polled_get():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:258
      taskSCHEDULER_RUNNING == xTaskGetSchedulerState();
    4b92:	f7ff f8bd 	bl	3d10 <xTaskGetSchedulerState>
uart__is_receive_queue_enabled():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:69
  return (NULL != uarts[uart].queue_receive);
    4b96:	012f      	lsls	r7, r5, #4
    4b98:	19e3      	adds	r3, r4, r7
uart__polled_get():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:258
      taskSCHEDULER_RUNNING == xTaskGetSchedulerState();
    4b9a:	4681      	mov	r9, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:261
  if (uart__is_initialized(uart)) {
    4b9c:	4628      	mov	r0, r5
uart__is_receive_queue_enabled():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:69
  return (NULL != uarts[uart].queue_receive);
    4b9e:	f8d3 800c 	ldr.w	r8, [r3, #12]
uart__polled_get():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:261
  if (uart__is_initialized(uart)) {
    4ba2:	f7ff ff63 	bl	4a6c <uart__is_initialized>
    4ba6:	b198      	cbz	r0, 4bd0 <uart__polled_get+0x48>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:270
    if (rtos_is_running && queue_is_enabled) {
    4ba8:	f1b9 0f02 	cmp.w	r9, #2
    4bac:	d10a      	bne.n	4bc4 <uart__polled_get+0x3c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:270 (discriminator 1)
    4bae:	f1b8 0f00 	cmp.w	r8, #0
    4bb2:	d007      	beq.n	4bc4 <uart__polled_get+0x3c>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:271
      status = uart__get(uart, input_byte, UINT32_MAX);
    4bb4:	4631      	mov	r1, r6
    4bb6:	4628      	mov	r0, r5
    4bb8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:283
}
    4bbc:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:271
      status = uart__get(uart, input_byte, UINT32_MAX);
    4bc0:	f7ff bfbc 	b.w	4b3c <uart__get>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:273
      lpc_uart *uart_regs = uarts[uart].registers;
    4bc4:	59e3      	ldr	r3, [r4, r7]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:276 (discriminator 1)
      while (!(uart_regs->LSR & char_available_bitmask)) {
    4bc6:	7d1a      	ldrb	r2, [r3, #20]
    4bc8:	07d2      	lsls	r2, r2, #31
    4bca:	d5fc      	bpl.n	4bc6 <uart__polled_get+0x3e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:278
      *input_byte = uart_regs->RBR;
    4bcc:	781b      	ldrb	r3, [r3, #0]
    4bce:	7033      	strb	r3, [r6, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:283
}
    4bd0:	2000      	movs	r0, #0
    4bd2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    4bd6:	bf00      	nop
    4bd8:	1000011c 	.word	0x1000011c

00004bdc <uart__put>:
uart__put():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:318

bool uart__put(uart_e uart, char output_byte, uint32_t timeout_ms) {
    4bdc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    4bde:	4605      	mov	r5, r0
uart__is_transmit_queue_enabled():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:72
  return (NULL != uarts[uart].queue_transmit);
    4be0:	4e1c      	ldr	r6, [pc, #112]	; (4c54 <uart__put+0x78>)
uart__put():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:318
bool uart__put(uart_e uart, char output_byte, uint32_t timeout_ms) {
    4be2:	f88d 1007 	strb.w	r1, [sp, #7]
uart__is_transmit_queue_enabled():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:72
  return (NULL != uarts[uart].queue_transmit);
    4be6:	012d      	lsls	r5, r5, #4
uart__put():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:318
bool uart__put(uart_e uart, char output_byte, uint32_t timeout_ms) {
    4be8:	4617      	mov	r7, r2
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:321
  bool status = false;
  const bool rtos_is_running =
      taskSCHEDULER_RUNNING == xTaskGetSchedulerState();
    4bea:	f7ff f891 	bl	3d10 <xTaskGetSchedulerState>
uart__is_transmit_queue_enabled():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:72
  return (NULL != uarts[uart].queue_transmit);
    4bee:	1973      	adds	r3, r6, r5
    4bf0:	689c      	ldr	r4, [r3, #8]
uart__put():
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:323

  if (uart__is_transmit_queue_enabled(uart) && rtos_is_running) {
    4bf2:	b354      	cbz	r4, 4c4a <uart__put+0x6e>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:323 (discriminator 1)
    4bf4:	2802      	cmp	r0, #2
    4bf6:	d12b      	bne.n	4c50 <uart__put+0x74>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:325
    // Deposit to the transmit queue for now
    status = xQueueSend(uarts[uart].queue_transmit, &output_byte,
    4bf8:	1c79      	adds	r1, r7, #1
    4bfa:	d009      	beq.n	4c10 <uart__put+0x34>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:325 (discriminator 1)
    4bfc:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
    4c00:	fba7 0100 	umull	r0, r1, r7, r0
    4c04:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
    4c08:	2300      	movs	r3, #0
    4c0a:	f000 f825 	bl	4c58 <__aeabi_uldivmod>
    4c0e:	4607      	mov	r7, r0
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:325 (discriminator 4)
    4c10:	2300      	movs	r3, #0
    4c12:	463a      	mov	r2, r7
    4c14:	f10d 0107 	add.w	r1, sp, #7
    4c18:	4620      	mov	r0, r4
    4c1a:	f7fe f8c5 	bl	2da8 <xQueueGenericSend>
    4c1e:	1c04      	adds	r4, r0, #0
    4c20:	bf18      	it	ne
    4c22:	2401      	movne	r4, #1
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:333 (discriminator 4)
    /* 'Transmit Complete Interrupt' may have already fired when we get here, so
     * if there is no further pending data to be sent, it will not fire again to
     * send any data. Hence, we check here in a critical section if transmit
     * holder register is empty, and kick-off the tranmisssion
     */
    portENTER_CRITICAL();
    4c24:	f7fd fde6 	bl	27f4 <vPortEnterCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:335 (discriminator 4)
    {
      lpc_uart *uart_regs = uarts[uart].registers;
    4c28:	1973      	adds	r3, r6, r5
    4c2a:	5975      	ldr	r5, [r6, r5]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:338 (discriminator 4)
      const uint32_t uart_tx_is_idle = (1 << 6);

      if (uart_regs->LSR & uart_tx_is_idle) {
    4c2c:	7d2a      	ldrb	r2, [r5, #20]
    4c2e:	0652      	lsls	r2, r2, #25
    4c30:	d509      	bpl.n	4c46 <uart__put+0x6a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:343
        /* Receive oldest char from the queue to send
         * Since we are inside a critical section, we use FromISR() FreeRTOS API
         * variant
         */
        if (xQueueReceiveFromISR(uarts[uart].queue_transmit, &output_byte,
    4c32:	2200      	movs	r2, #0
    4c34:	f10d 0107 	add.w	r1, sp, #7
    4c38:	6898      	ldr	r0, [r3, #8]
    4c3a:	f7fe fb99 	bl	3370 <xQueueReceiveFromISR>
    4c3e:	b110      	cbz	r0, 4c46 <uart__put+0x6a>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:345
                                 NULL)) {
          uart_regs->THR = output_byte;
    4c40:	f89d 3007 	ldrb.w	r3, [sp, #7]
    4c44:	702b      	strb	r3, [r5, #0]
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:349
        }
      }
    }
    portEXIT_CRITICAL();
    4c46:	f7fd fdf7 	bl	2838 <vPortExitCritical>
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:353
  }

  return status;
}
    4c4a:	4620      	mov	r0, r4
    4c4c:	b003      	add	sp, #12
    4c4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
/Users/hamsikapongubala/Desktop/MP3-Project/projects/mp3_project/l3_drivers/sources/uart.c:319
  bool status = false;
    4c50:	2400      	movs	r4, #0
    4c52:	e7fa      	b.n	4c4a <uart__put+0x6e>
    4c54:	1000011c 	.word	0x1000011c

00004c58 <__aeabi_uldivmod>:
__aeabi_uldivmod():
    4c58:	b953      	cbnz	r3, 4c70 <__aeabi_uldivmod+0x18>
    4c5a:	b94a      	cbnz	r2, 4c70 <__aeabi_uldivmod+0x18>
    4c5c:	2900      	cmp	r1, #0
    4c5e:	bf08      	it	eq
    4c60:	2800      	cmpeq	r0, #0
    4c62:	bf1c      	itt	ne
    4c64:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
    4c68:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
    4c6c:	f000 b974 	b.w	4f58 <__aeabi_idiv0>
    4c70:	f1ad 0c08 	sub.w	ip, sp, #8
    4c74:	e96d ce04 	strd	ip, lr, [sp, #-16]!
    4c78:	f000 f806 	bl	4c88 <__udivmoddi4>
    4c7c:	f8dd e004 	ldr.w	lr, [sp, #4]
    4c80:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
    4c84:	b004      	add	sp, #16
    4c86:	4770      	bx	lr

00004c88 <__udivmoddi4>:
__udivmoddi4():
    4c88:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    4c8c:	9e08      	ldr	r6, [sp, #32]
    4c8e:	4604      	mov	r4, r0
    4c90:	4688      	mov	r8, r1
    4c92:	2b00      	cmp	r3, #0
    4c94:	f040 8085 	bne.w	4da2 <__udivmoddi4+0x11a>
    4c98:	428a      	cmp	r2, r1
    4c9a:	4615      	mov	r5, r2
    4c9c:	d948      	bls.n	4d30 <__udivmoddi4+0xa8>
    4c9e:	fab2 f282 	clz	r2, r2
    4ca2:	b14a      	cbz	r2, 4cb8 <__udivmoddi4+0x30>
    4ca4:	f1c2 0720 	rsb	r7, r2, #32
    4ca8:	fa01 f302 	lsl.w	r3, r1, r2
    4cac:	fa20 f707 	lsr.w	r7, r0, r7
    4cb0:	4095      	lsls	r5, r2
    4cb2:	ea47 0803 	orr.w	r8, r7, r3
    4cb6:	4094      	lsls	r4, r2
    4cb8:	ea4f 4e15 	mov.w	lr, r5, lsr #16
    4cbc:	0c23      	lsrs	r3, r4, #16
    4cbe:	fbb8 f7fe 	udiv	r7, r8, lr
    4cc2:	fa1f fc85 	uxth.w	ip, r5
    4cc6:	fb0e 8817 	mls	r8, lr, r7, r8
    4cca:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
    4cce:	fb07 f10c 	mul.w	r1, r7, ip
    4cd2:	4299      	cmp	r1, r3
    4cd4:	d909      	bls.n	4cea <__udivmoddi4+0x62>
    4cd6:	18eb      	adds	r3, r5, r3
    4cd8:	f107 30ff 	add.w	r0, r7, #4294967295	; 0xffffffff
    4cdc:	f080 80e3 	bcs.w	4ea6 <__udivmoddi4+0x21e>
    4ce0:	4299      	cmp	r1, r3
    4ce2:	f240 80e0 	bls.w	4ea6 <__udivmoddi4+0x21e>
    4ce6:	3f02      	subs	r7, #2
    4ce8:	442b      	add	r3, r5
    4cea:	1a5b      	subs	r3, r3, r1
    4cec:	b2a4      	uxth	r4, r4
    4cee:	fbb3 f0fe 	udiv	r0, r3, lr
    4cf2:	fb0e 3310 	mls	r3, lr, r0, r3
    4cf6:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
    4cfa:	fb00 fc0c 	mul.w	ip, r0, ip
    4cfe:	45a4      	cmp	ip, r4
    4d00:	d909      	bls.n	4d16 <__udivmoddi4+0x8e>
    4d02:	192c      	adds	r4, r5, r4
    4d04:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
    4d08:	f080 80cb 	bcs.w	4ea2 <__udivmoddi4+0x21a>
    4d0c:	45a4      	cmp	ip, r4
    4d0e:	f240 80c8 	bls.w	4ea2 <__udivmoddi4+0x21a>
    4d12:	3802      	subs	r0, #2
    4d14:	442c      	add	r4, r5
    4d16:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
    4d1a:	eba4 040c 	sub.w	r4, r4, ip
    4d1e:	2700      	movs	r7, #0
    4d20:	b11e      	cbz	r6, 4d2a <__udivmoddi4+0xa2>
    4d22:	40d4      	lsrs	r4, r2
    4d24:	2300      	movs	r3, #0
    4d26:	e9c6 4300 	strd	r4, r3, [r6]
    4d2a:	4639      	mov	r1, r7
    4d2c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    4d30:	2a00      	cmp	r2, #0
    4d32:	d053      	beq.n	4ddc <__udivmoddi4+0x154>
    4d34:	fab2 f282 	clz	r2, r2
    4d38:	2a00      	cmp	r2, #0
    4d3a:	f040 80b6 	bne.w	4eaa <__udivmoddi4+0x222>
    4d3e:	1b49      	subs	r1, r1, r5
    4d40:	ea4f 4e15 	mov.w	lr, r5, lsr #16
    4d44:	fa1f f885 	uxth.w	r8, r5
    4d48:	2701      	movs	r7, #1
    4d4a:	fbb1 fcfe 	udiv	ip, r1, lr
    4d4e:	0c23      	lsrs	r3, r4, #16
    4d50:	fb0e 111c 	mls	r1, lr, ip, r1
    4d54:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
    4d58:	fb08 f10c 	mul.w	r1, r8, ip
    4d5c:	4299      	cmp	r1, r3
    4d5e:	d907      	bls.n	4d70 <__udivmoddi4+0xe8>
    4d60:	18eb      	adds	r3, r5, r3
    4d62:	f10c 30ff 	add.w	r0, ip, #4294967295	; 0xffffffff
    4d66:	d202      	bcs.n	4d6e <__udivmoddi4+0xe6>
    4d68:	4299      	cmp	r1, r3
    4d6a:	f200 80ec 	bhi.w	4f46 <__udivmoddi4+0x2be>
    4d6e:	4684      	mov	ip, r0
    4d70:	1a59      	subs	r1, r3, r1
    4d72:	b2a3      	uxth	r3, r4
    4d74:	fbb1 f0fe 	udiv	r0, r1, lr
    4d78:	fb0e 1410 	mls	r4, lr, r0, r1
    4d7c:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
    4d80:	fb08 f800 	mul.w	r8, r8, r0
    4d84:	45a0      	cmp	r8, r4
    4d86:	d907      	bls.n	4d98 <__udivmoddi4+0x110>
    4d88:	192c      	adds	r4, r5, r4
    4d8a:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
    4d8e:	d202      	bcs.n	4d96 <__udivmoddi4+0x10e>
    4d90:	45a0      	cmp	r8, r4
    4d92:	f200 80dc 	bhi.w	4f4e <__udivmoddi4+0x2c6>
    4d96:	4618      	mov	r0, r3
    4d98:	eba4 0408 	sub.w	r4, r4, r8
    4d9c:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
    4da0:	e7be      	b.n	4d20 <__udivmoddi4+0x98>
    4da2:	428b      	cmp	r3, r1
    4da4:	d908      	bls.n	4db8 <__udivmoddi4+0x130>
    4da6:	2e00      	cmp	r6, #0
    4da8:	d078      	beq.n	4e9c <__udivmoddi4+0x214>
    4daa:	2700      	movs	r7, #0
    4dac:	e9c6 0100 	strd	r0, r1, [r6]
    4db0:	4638      	mov	r0, r7
    4db2:	4639      	mov	r1, r7
    4db4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    4db8:	fab3 f783 	clz	r7, r3
    4dbc:	b97f      	cbnz	r7, 4dde <__udivmoddi4+0x156>
    4dbe:	428b      	cmp	r3, r1
    4dc0:	d302      	bcc.n	4dc8 <__udivmoddi4+0x140>
    4dc2:	4282      	cmp	r2, r0
    4dc4:	f200 80bd 	bhi.w	4f42 <__udivmoddi4+0x2ba>
    4dc8:	1a84      	subs	r4, r0, r2
    4dca:	eb61 0303 	sbc.w	r3, r1, r3
    4dce:	2001      	movs	r0, #1
    4dd0:	4698      	mov	r8, r3
    4dd2:	2e00      	cmp	r6, #0
    4dd4:	d0a9      	beq.n	4d2a <__udivmoddi4+0xa2>
    4dd6:	e9c6 4800 	strd	r4, r8, [r6]
    4dda:	e7a6      	b.n	4d2a <__udivmoddi4+0xa2>
    4ddc:	deff      	udf	#255	; 0xff
    4dde:	f1c7 0520 	rsb	r5, r7, #32
    4de2:	40bb      	lsls	r3, r7
    4de4:	fa22 fc05 	lsr.w	ip, r2, r5
    4de8:	ea4c 0c03 	orr.w	ip, ip, r3
    4dec:	fa01 f407 	lsl.w	r4, r1, r7
    4df0:	fa20 f805 	lsr.w	r8, r0, r5
    4df4:	fa21 f305 	lsr.w	r3, r1, r5
    4df8:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
    4dfc:	ea48 0404 	orr.w	r4, r8, r4
    4e00:	fbb3 f9fe 	udiv	r9, r3, lr
    4e04:	0c21      	lsrs	r1, r4, #16
    4e06:	fb0e 3319 	mls	r3, lr, r9, r3
    4e0a:	fa1f f88c 	uxth.w	r8, ip
    4e0e:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
    4e12:	fb09 fa08 	mul.w	sl, r9, r8
    4e16:	459a      	cmp	sl, r3
    4e18:	fa02 f207 	lsl.w	r2, r2, r7
    4e1c:	fa00 f107 	lsl.w	r1, r0, r7
    4e20:	d90b      	bls.n	4e3a <__udivmoddi4+0x1b2>
    4e22:	eb1c 0303 	adds.w	r3, ip, r3
    4e26:	f109 30ff 	add.w	r0, r9, #4294967295	; 0xffffffff
    4e2a:	f080 8088 	bcs.w	4f3e <__udivmoddi4+0x2b6>
    4e2e:	459a      	cmp	sl, r3
    4e30:	f240 8085 	bls.w	4f3e <__udivmoddi4+0x2b6>
    4e34:	f1a9 0902 	sub.w	r9, r9, #2
    4e38:	4463      	add	r3, ip
    4e3a:	eba3 030a 	sub.w	r3, r3, sl
    4e3e:	b2a4      	uxth	r4, r4
    4e40:	fbb3 f0fe 	udiv	r0, r3, lr
    4e44:	fb0e 3310 	mls	r3, lr, r0, r3
    4e48:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
    4e4c:	fb00 f808 	mul.w	r8, r0, r8
    4e50:	45a0      	cmp	r8, r4
    4e52:	d908      	bls.n	4e66 <__udivmoddi4+0x1de>
    4e54:	eb1c 0404 	adds.w	r4, ip, r4
    4e58:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
    4e5c:	d26b      	bcs.n	4f36 <__udivmoddi4+0x2ae>
    4e5e:	45a0      	cmp	r8, r4
    4e60:	d969      	bls.n	4f36 <__udivmoddi4+0x2ae>
    4e62:	3802      	subs	r0, #2
    4e64:	4464      	add	r4, ip
    4e66:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
    4e6a:	eba4 0408 	sub.w	r4, r4, r8
    4e6e:	fba0 8902 	umull	r8, r9, r0, r2
    4e72:	454c      	cmp	r4, r9
    4e74:	46c6      	mov	lr, r8
    4e76:	464b      	mov	r3, r9
    4e78:	d354      	bcc.n	4f24 <__udivmoddi4+0x29c>
    4e7a:	d051      	beq.n	4f20 <__udivmoddi4+0x298>
    4e7c:	2e00      	cmp	r6, #0
    4e7e:	d069      	beq.n	4f54 <__udivmoddi4+0x2cc>
    4e80:	ebb1 020e 	subs.w	r2, r1, lr
    4e84:	eb64 0403 	sbc.w	r4, r4, r3
    4e88:	fa04 f505 	lsl.w	r5, r4, r5
    4e8c:	fa22 f307 	lsr.w	r3, r2, r7
    4e90:	40fc      	lsrs	r4, r7
    4e92:	431d      	orrs	r5, r3
    4e94:	e9c6 5400 	strd	r5, r4, [r6]
    4e98:	2700      	movs	r7, #0
    4e9a:	e746      	b.n	4d2a <__udivmoddi4+0xa2>
    4e9c:	4637      	mov	r7, r6
    4e9e:	4630      	mov	r0, r6
    4ea0:	e743      	b.n	4d2a <__udivmoddi4+0xa2>
    4ea2:	4618      	mov	r0, r3
    4ea4:	e737      	b.n	4d16 <__udivmoddi4+0x8e>
    4ea6:	4607      	mov	r7, r0
    4ea8:	e71f      	b.n	4cea <__udivmoddi4+0x62>
    4eaa:	f1c2 0320 	rsb	r3, r2, #32
    4eae:	fa20 f703 	lsr.w	r7, r0, r3
    4eb2:	4095      	lsls	r5, r2
    4eb4:	fa01 f002 	lsl.w	r0, r1, r2
    4eb8:	fa21 f303 	lsr.w	r3, r1, r3
    4ebc:	ea4f 4e15 	mov.w	lr, r5, lsr #16
    4ec0:	4338      	orrs	r0, r7
    4ec2:	0c01      	lsrs	r1, r0, #16
    4ec4:	fbb3 f7fe 	udiv	r7, r3, lr
    4ec8:	fa1f f885 	uxth.w	r8, r5
    4ecc:	fb0e 3317 	mls	r3, lr, r7, r3
    4ed0:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
    4ed4:	fb07 f308 	mul.w	r3, r7, r8
    4ed8:	428b      	cmp	r3, r1
    4eda:	fa04 f402 	lsl.w	r4, r4, r2
    4ede:	d907      	bls.n	4ef0 <__udivmoddi4+0x268>
    4ee0:	1869      	adds	r1, r5, r1
    4ee2:	f107 3cff 	add.w	ip, r7, #4294967295	; 0xffffffff
    4ee6:	d228      	bcs.n	4f3a <__udivmoddi4+0x2b2>
    4ee8:	428b      	cmp	r3, r1
    4eea:	d926      	bls.n	4f3a <__udivmoddi4+0x2b2>
    4eec:	3f02      	subs	r7, #2
    4eee:	4429      	add	r1, r5
    4ef0:	1acb      	subs	r3, r1, r3
    4ef2:	b281      	uxth	r1, r0
    4ef4:	fbb3 f0fe 	udiv	r0, r3, lr
    4ef8:	fb0e 3310 	mls	r3, lr, r0, r3
    4efc:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
    4f00:	fb00 f308 	mul.w	r3, r0, r8
    4f04:	428b      	cmp	r3, r1
    4f06:	d907      	bls.n	4f18 <__udivmoddi4+0x290>
    4f08:	1869      	adds	r1, r5, r1
    4f0a:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
    4f0e:	d210      	bcs.n	4f32 <__udivmoddi4+0x2aa>
    4f10:	428b      	cmp	r3, r1
    4f12:	d90e      	bls.n	4f32 <__udivmoddi4+0x2aa>
    4f14:	3802      	subs	r0, #2
    4f16:	4429      	add	r1, r5
    4f18:	1ac9      	subs	r1, r1, r3
    4f1a:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
    4f1e:	e714      	b.n	4d4a <__udivmoddi4+0xc2>
    4f20:	4541      	cmp	r1, r8
    4f22:	d2ab      	bcs.n	4e7c <__udivmoddi4+0x1f4>
    4f24:	ebb8 0e02 	subs.w	lr, r8, r2
    4f28:	eb69 020c 	sbc.w	r2, r9, ip
    4f2c:	3801      	subs	r0, #1
    4f2e:	4613      	mov	r3, r2
    4f30:	e7a4      	b.n	4e7c <__udivmoddi4+0x1f4>
    4f32:	4660      	mov	r0, ip
    4f34:	e7f0      	b.n	4f18 <__udivmoddi4+0x290>
    4f36:	4618      	mov	r0, r3
    4f38:	e795      	b.n	4e66 <__udivmoddi4+0x1de>
    4f3a:	4667      	mov	r7, ip
    4f3c:	e7d8      	b.n	4ef0 <__udivmoddi4+0x268>
    4f3e:	4681      	mov	r9, r0
    4f40:	e77b      	b.n	4e3a <__udivmoddi4+0x1b2>
    4f42:	4638      	mov	r0, r7
    4f44:	e745      	b.n	4dd2 <__udivmoddi4+0x14a>
    4f46:	f1ac 0c02 	sub.w	ip, ip, #2
    4f4a:	442b      	add	r3, r5
    4f4c:	e710      	b.n	4d70 <__udivmoddi4+0xe8>
    4f4e:	3802      	subs	r0, #2
    4f50:	442c      	add	r4, r5
    4f52:	e721      	b.n	4d98 <__udivmoddi4+0x110>
    4f54:	4637      	mov	r7, r6
    4f56:	e6e8      	b.n	4d2a <__udivmoddi4+0xa2>

00004f58 <__aeabi_idiv0>:
__aeabi_idiv0():
    4f58:	4770      	bx	lr
    4f5a:	bf00      	nop

00004f5c <fiprintf>:
fiprintf():
    4f5c:	b40e      	push	{r1, r2, r3}
    4f5e:	b503      	push	{r0, r1, lr}
    4f60:	4601      	mov	r1, r0
    4f62:	ab03      	add	r3, sp, #12
    4f64:	4805      	ldr	r0, [pc, #20]	; (4f7c <fiprintf+0x20>)
    4f66:	f853 2b04 	ldr.w	r2, [r3], #4
    4f6a:	6800      	ldr	r0, [r0, #0]
    4f6c:	9301      	str	r3, [sp, #4]
    4f6e:	f000 f9cb 	bl	5308 <_vfiprintf_r>
    4f72:	b002      	add	sp, #8
    4f74:	f85d eb04 	ldr.w	lr, [sp], #4
    4f78:	b003      	add	sp, #12
    4f7a:	4770      	bx	lr
    4f7c:	1000015c 	.word	0x1000015c

00004f80 <_fputc_r>:
_fputc_r():
    4f80:	b570      	push	{r4, r5, r6, lr}
    4f82:	460e      	mov	r6, r1
    4f84:	4614      	mov	r4, r2
    4f86:	4605      	mov	r5, r0
    4f88:	b118      	cbz	r0, 4f92 <_fputc_r+0x12>
    4f8a:	6983      	ldr	r3, [r0, #24]
    4f8c:	b90b      	cbnz	r3, 4f92 <_fputc_r+0x12>
    4f8e:	f003 f99f 	bl	82d0 <__sinit>
    4f92:	4b14      	ldr	r3, [pc, #80]	; (4fe4 <_fputc_r+0x64>)
    4f94:	429c      	cmp	r4, r3
    4f96:	d11a      	bne.n	4fce <_fputc_r+0x4e>
    4f98:	686c      	ldr	r4, [r5, #4]
    4f9a:	6e63      	ldr	r3, [r4, #100]	; 0x64
    4f9c:	07d8      	lsls	r0, r3, #31
    4f9e:	d405      	bmi.n	4fac <_fputc_r+0x2c>
    4fa0:	89a3      	ldrh	r3, [r4, #12]
    4fa2:	0599      	lsls	r1, r3, #22
    4fa4:	d402      	bmi.n	4fac <_fputc_r+0x2c>
    4fa6:	6da0      	ldr	r0, [r4, #88]	; 0x58
    4fa8:	f000 f899 	bl	50de <__retarget_lock_acquire_recursive>
    4fac:	4622      	mov	r2, r4
    4fae:	4628      	mov	r0, r5
    4fb0:	4631      	mov	r1, r6
    4fb2:	f001 f90d 	bl	61d0 <_putc_r>
    4fb6:	6e63      	ldr	r3, [r4, #100]	; 0x64
    4fb8:	07da      	lsls	r2, r3, #31
    4fba:	4605      	mov	r5, r0
    4fbc:	d405      	bmi.n	4fca <_fputc_r+0x4a>
    4fbe:	89a3      	ldrh	r3, [r4, #12]
    4fc0:	059b      	lsls	r3, r3, #22
    4fc2:	d402      	bmi.n	4fca <_fputc_r+0x4a>
    4fc4:	6da0      	ldr	r0, [r4, #88]	; 0x58
    4fc6:	f000 f88b 	bl	50e0 <__retarget_lock_release_recursive>
    4fca:	4628      	mov	r0, r5
    4fcc:	bd70      	pop	{r4, r5, r6, pc}
    4fce:	4b06      	ldr	r3, [pc, #24]	; (4fe8 <_fputc_r+0x68>)
    4fd0:	429c      	cmp	r4, r3
    4fd2:	d101      	bne.n	4fd8 <_fputc_r+0x58>
    4fd4:	68ac      	ldr	r4, [r5, #8]
    4fd6:	e7e0      	b.n	4f9a <_fputc_r+0x1a>
    4fd8:	4b04      	ldr	r3, [pc, #16]	; (4fec <_fputc_r+0x6c>)
    4fda:	429c      	cmp	r4, r3
    4fdc:	bf08      	it	eq
    4fde:	68ec      	ldreq	r4, [r5, #12]
    4fe0:	e7db      	b.n	4f9a <_fputc_r+0x1a>
    4fe2:	bf00      	nop
    4fe4:	0000b7a0 	.word	0x0000b7a0
    4fe8:	0000b7c0 	.word	0x0000b7c0
    4fec:	0000b780 	.word	0x0000b780

00004ff0 <fputc>:
fputc():
    4ff0:	4b02      	ldr	r3, [pc, #8]	; (4ffc <fputc+0xc>)
    4ff2:	460a      	mov	r2, r1
    4ff4:	4601      	mov	r1, r0
    4ff6:	6818      	ldr	r0, [r3, #0]
    4ff8:	f7ff bfc2 	b.w	4f80 <_fputc_r>
    4ffc:	1000015c 	.word	0x1000015c

00005000 <_fputs_r>:
_fputs_r():
    5000:	b570      	push	{r4, r5, r6, lr}
    5002:	460e      	mov	r6, r1
    5004:	4614      	mov	r4, r2
    5006:	4605      	mov	r5, r0
    5008:	b118      	cbz	r0, 5012 <_fputs_r+0x12>
    500a:	6983      	ldr	r3, [r0, #24]
    500c:	b90b      	cbnz	r3, 5012 <_fputs_r+0x12>
    500e:	f003 f95f 	bl	82d0 <__sinit>
    5012:	4b2b      	ldr	r3, [pc, #172]	; (50c0 <_fputs_r+0xc0>)
    5014:	429c      	cmp	r4, r3
    5016:	d11e      	bne.n	5056 <_fputs_r+0x56>
    5018:	686c      	ldr	r4, [r5, #4]
    501a:	6e63      	ldr	r3, [r4, #100]	; 0x64
    501c:	07da      	lsls	r2, r3, #31
    501e:	d405      	bmi.n	502c <_fputs_r+0x2c>
    5020:	89a3      	ldrh	r3, [r4, #12]
    5022:	059b      	lsls	r3, r3, #22
    5024:	d402      	bmi.n	502c <_fputs_r+0x2c>
    5026:	6da0      	ldr	r0, [r4, #88]	; 0x58
    5028:	f000 f859 	bl	50de <__retarget_lock_acquire_recursive>
    502c:	89a3      	ldrh	r3, [r4, #12]
    502e:	0718      	lsls	r0, r3, #28
    5030:	d51b      	bpl.n	506a <_fputs_r+0x6a>
    5032:	6923      	ldr	r3, [r4, #16]
    5034:	b1cb      	cbz	r3, 506a <_fputs_r+0x6a>
    5036:	3e01      	subs	r6, #1
    5038:	f816 1f01 	ldrb.w	r1, [r6, #1]!
    503c:	bb39      	cbnz	r1, 508e <_fputs_r+0x8e>
    503e:	6e65      	ldr	r5, [r4, #100]	; 0x64
    5040:	f015 0501 	ands.w	r5, r5, #1
    5044:	d139      	bne.n	50ba <_fputs_r+0xba>
    5046:	89a3      	ldrh	r3, [r4, #12]
    5048:	0599      	lsls	r1, r3, #22
    504a:	d402      	bmi.n	5052 <_fputs_r+0x52>
    504c:	6da0      	ldr	r0, [r4, #88]	; 0x58
    504e:	f000 f847 	bl	50e0 <__retarget_lock_release_recursive>
    5052:	4628      	mov	r0, r5
    5054:	bd70      	pop	{r4, r5, r6, pc}
    5056:	4b1b      	ldr	r3, [pc, #108]	; (50c4 <_fputs_r+0xc4>)
    5058:	429c      	cmp	r4, r3
    505a:	d101      	bne.n	5060 <_fputs_r+0x60>
    505c:	68ac      	ldr	r4, [r5, #8]
    505e:	e7dc      	b.n	501a <_fputs_r+0x1a>
    5060:	4b19      	ldr	r3, [pc, #100]	; (50c8 <_fputs_r+0xc8>)
    5062:	429c      	cmp	r4, r3
    5064:	bf08      	it	eq
    5066:	68ec      	ldreq	r4, [r5, #12]
    5068:	e7d7      	b.n	501a <_fputs_r+0x1a>
    506a:	4621      	mov	r1, r4
    506c:	4628      	mov	r0, r5
    506e:	f002 f961 	bl	7334 <__swsetup_r>
    5072:	2800      	cmp	r0, #0
    5074:	d0df      	beq.n	5036 <_fputs_r+0x36>
    5076:	6e63      	ldr	r3, [r4, #100]	; 0x64
    5078:	07da      	lsls	r2, r3, #31
    507a:	d405      	bmi.n	5088 <_fputs_r+0x88>
    507c:	89a3      	ldrh	r3, [r4, #12]
    507e:	059b      	lsls	r3, r3, #22
    5080:	d402      	bmi.n	5088 <_fputs_r+0x88>
    5082:	6da0      	ldr	r0, [r4, #88]	; 0x58
    5084:	f000 f82c 	bl	50e0 <__retarget_lock_release_recursive>
    5088:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
    508c:	e7e1      	b.n	5052 <_fputs_r+0x52>
    508e:	68a3      	ldr	r3, [r4, #8]
    5090:	3b01      	subs	r3, #1
    5092:	2b00      	cmp	r3, #0
    5094:	60a3      	str	r3, [r4, #8]
    5096:	da04      	bge.n	50a2 <_fputs_r+0xa2>
    5098:	69a2      	ldr	r2, [r4, #24]
    509a:	4293      	cmp	r3, r2
    509c:	db06      	blt.n	50ac <_fputs_r+0xac>
    509e:	290a      	cmp	r1, #10
    50a0:	d004      	beq.n	50ac <_fputs_r+0xac>
    50a2:	6823      	ldr	r3, [r4, #0]
    50a4:	1c5a      	adds	r2, r3, #1
    50a6:	6022      	str	r2, [r4, #0]
    50a8:	7019      	strb	r1, [r3, #0]
    50aa:	e7c5      	b.n	5038 <_fputs_r+0x38>
    50ac:	4622      	mov	r2, r4
    50ae:	4628      	mov	r0, r5
    50b0:	f002 f8ee 	bl	7290 <__swbuf_r>
    50b4:	3001      	adds	r0, #1
    50b6:	d1bf      	bne.n	5038 <_fputs_r+0x38>
    50b8:	e7dd      	b.n	5076 <_fputs_r+0x76>
    50ba:	460d      	mov	r5, r1
    50bc:	e7c9      	b.n	5052 <_fputs_r+0x52>
    50be:	bf00      	nop
    50c0:	0000b7a0 	.word	0x0000b7a0
    50c4:	0000b7c0 	.word	0x0000b7c0
    50c8:	0000b780 	.word	0x0000b780

000050cc <fputs>:
fputs():
    50cc:	4b02      	ldr	r3, [pc, #8]	; (50d8 <fputs+0xc>)
    50ce:	460a      	mov	r2, r1
    50d0:	4601      	mov	r1, r0
    50d2:	6818      	ldr	r0, [r3, #0]
    50d4:	f7ff bf94 	b.w	5000 <_fputs_r>
    50d8:	1000015c 	.word	0x1000015c

000050dc <__retarget_lock_init_recursive>:
__retarget_lock_init_recursive():
    50dc:	4770      	bx	lr

000050de <__retarget_lock_acquire_recursive>:
__retarget_lock_acquire_recursive():
    50de:	4770      	bx	lr

000050e0 <__retarget_lock_release_recursive>:
__retarget_lock_release_recursive():
    50e0:	4770      	bx	lr
    50e2:	Address 0x00000000000050e2 is out of bounds.


000050e4 <malloc>:
malloc():
    50e4:	4b02      	ldr	r3, [pc, #8]	; (50f0 <malloc+0xc>)
    50e6:	4601      	mov	r1, r0
    50e8:	6818      	ldr	r0, [r3, #0]
    50ea:	f000 b889 	b.w	5200 <_malloc_r>
    50ee:	bf00      	nop
    50f0:	1000015c 	.word	0x1000015c

000050f4 <free>:
free():
    50f4:	4b02      	ldr	r3, [pc, #8]	; (5100 <free+0xc>)
    50f6:	4601      	mov	r1, r0
    50f8:	6818      	ldr	r0, [r3, #0]
    50fa:	f000 b833 	b.w	5164 <_free_r>
    50fe:	bf00      	nop
    5100:	1000015c 	.word	0x1000015c

00005104 <memcpy>:
memcpy():
    5104:	440a      	add	r2, r1
    5106:	4291      	cmp	r1, r2
    5108:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
    510c:	d100      	bne.n	5110 <memcpy+0xc>
    510e:	4770      	bx	lr
    5110:	b510      	push	{r4, lr}
    5112:	f811 4b01 	ldrb.w	r4, [r1], #1
    5116:	f803 4f01 	strb.w	r4, [r3, #1]!
    511a:	4291      	cmp	r1, r2
    511c:	d1f9      	bne.n	5112 <memcpy+0xe>
    511e:	bd10      	pop	{r4, pc}

00005120 <memmove>:
memmove():
    5120:	4288      	cmp	r0, r1
    5122:	b510      	push	{r4, lr}
    5124:	eb01 0302 	add.w	r3, r1, r2
    5128:	d902      	bls.n	5130 <memmove+0x10>
    512a:	4283      	cmp	r3, r0
    512c:	461c      	mov	r4, r3
    512e:	d807      	bhi.n	5140 <memmove+0x20>
    5130:	1e42      	subs	r2, r0, #1
    5132:	4299      	cmp	r1, r3
    5134:	d008      	beq.n	5148 <memmove+0x28>
    5136:	f811 4b01 	ldrb.w	r4, [r1], #1
    513a:	f802 4f01 	strb.w	r4, [r2, #1]!
    513e:	e7f8      	b.n	5132 <memmove+0x12>
    5140:	1883      	adds	r3, r0, r2
    5142:	1a9a      	subs	r2, r3, r2
    5144:	429a      	cmp	r2, r3
    5146:	d100      	bne.n	514a <memmove+0x2a>
    5148:	bd10      	pop	{r4, pc}
    514a:	f814 1d01 	ldrb.w	r1, [r4, #-1]!
    514e:	f803 1d01 	strb.w	r1, [r3, #-1]!
    5152:	e7f7      	b.n	5144 <memmove+0x24>

00005154 <memset>:
memset():
    5154:	4402      	add	r2, r0
    5156:	4603      	mov	r3, r0
    5158:	4293      	cmp	r3, r2
    515a:	d100      	bne.n	515e <memset+0xa>
    515c:	4770      	bx	lr
    515e:	f803 1b01 	strb.w	r1, [r3], #1
    5162:	e7f9      	b.n	5158 <memset+0x4>

00005164 <_free_r>:
_free_r():
    5164:	b538      	push	{r3, r4, r5, lr}
    5166:	4605      	mov	r5, r0
    5168:	2900      	cmp	r1, #0
    516a:	d045      	beq.n	51f8 <_free_r+0x94>
    516c:	f851 3c04 	ldr.w	r3, [r1, #-4]
    5170:	1f0c      	subs	r4, r1, #4
    5172:	2b00      	cmp	r3, #0
    5174:	bfb8      	it	lt
    5176:	18e4      	addlt	r4, r4, r3
    5178:	f003 fd3a 	bl	8bf0 <__malloc_lock>
    517c:	4a1f      	ldr	r2, [pc, #124]	; (51fc <_free_r+0x98>)
    517e:	6813      	ldr	r3, [r2, #0]
    5180:	4610      	mov	r0, r2
    5182:	b933      	cbnz	r3, 5192 <_free_r+0x2e>
    5184:	6063      	str	r3, [r4, #4]
    5186:	6014      	str	r4, [r2, #0]
    5188:	4628      	mov	r0, r5
    518a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    518e:	f003 bd35 	b.w	8bfc <__malloc_unlock>
    5192:	42a3      	cmp	r3, r4
    5194:	d90c      	bls.n	51b0 <_free_r+0x4c>
    5196:	6821      	ldr	r1, [r4, #0]
    5198:	1862      	adds	r2, r4, r1
    519a:	4293      	cmp	r3, r2
    519c:	bf04      	itt	eq
    519e:	681a      	ldreq	r2, [r3, #0]
    51a0:	685b      	ldreq	r3, [r3, #4]
    51a2:	6063      	str	r3, [r4, #4]
    51a4:	bf04      	itt	eq
    51a6:	1852      	addeq	r2, r2, r1
    51a8:	6022      	streq	r2, [r4, #0]
    51aa:	6004      	str	r4, [r0, #0]
    51ac:	e7ec      	b.n	5188 <_free_r+0x24>
    51ae:	4613      	mov	r3, r2
    51b0:	685a      	ldr	r2, [r3, #4]
    51b2:	b10a      	cbz	r2, 51b8 <_free_r+0x54>
    51b4:	42a2      	cmp	r2, r4
    51b6:	d9fa      	bls.n	51ae <_free_r+0x4a>
    51b8:	6819      	ldr	r1, [r3, #0]
    51ba:	1858      	adds	r0, r3, r1
    51bc:	42a0      	cmp	r0, r4
    51be:	d10b      	bne.n	51d8 <_free_r+0x74>
    51c0:	6820      	ldr	r0, [r4, #0]
    51c2:	4401      	add	r1, r0
    51c4:	1858      	adds	r0, r3, r1
    51c6:	4282      	cmp	r2, r0
    51c8:	6019      	str	r1, [r3, #0]
    51ca:	d1dd      	bne.n	5188 <_free_r+0x24>
    51cc:	6810      	ldr	r0, [r2, #0]
    51ce:	6852      	ldr	r2, [r2, #4]
    51d0:	605a      	str	r2, [r3, #4]
    51d2:	4401      	add	r1, r0
    51d4:	6019      	str	r1, [r3, #0]
    51d6:	e7d7      	b.n	5188 <_free_r+0x24>
    51d8:	d902      	bls.n	51e0 <_free_r+0x7c>
    51da:	230c      	movs	r3, #12
    51dc:	602b      	str	r3, [r5, #0]
    51de:	e7d3      	b.n	5188 <_free_r+0x24>
    51e0:	6820      	ldr	r0, [r4, #0]
    51e2:	1821      	adds	r1, r4, r0
    51e4:	428a      	cmp	r2, r1
    51e6:	bf04      	itt	eq
    51e8:	6811      	ldreq	r1, [r2, #0]
    51ea:	6852      	ldreq	r2, [r2, #4]
    51ec:	6062      	str	r2, [r4, #4]
    51ee:	bf04      	itt	eq
    51f0:	1809      	addeq	r1, r1, r0
    51f2:	6021      	streq	r1, [r4, #0]
    51f4:	605c      	str	r4, [r3, #4]
    51f6:	e7c7      	b.n	5188 <_free_r+0x24>
    51f8:	bd38      	pop	{r3, r4, r5, pc}
    51fa:	bf00      	nop
    51fc:	10000b70 	.word	0x10000b70

00005200 <_malloc_r>:
_malloc_r():
    5200:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    5202:	1ccd      	adds	r5, r1, #3
    5204:	f025 0503 	bic.w	r5, r5, #3
    5208:	3508      	adds	r5, #8
    520a:	2d0c      	cmp	r5, #12
    520c:	bf38      	it	cc
    520e:	250c      	movcc	r5, #12
    5210:	2d00      	cmp	r5, #0
    5212:	4606      	mov	r6, r0
    5214:	db01      	blt.n	521a <_malloc_r+0x1a>
    5216:	42a9      	cmp	r1, r5
    5218:	d903      	bls.n	5222 <_malloc_r+0x22>
    521a:	230c      	movs	r3, #12
    521c:	6033      	str	r3, [r6, #0]
    521e:	2000      	movs	r0, #0
    5220:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    5222:	f003 fce5 	bl	8bf0 <__malloc_lock>
    5226:	4921      	ldr	r1, [pc, #132]	; (52ac <_malloc_r+0xac>)
    5228:	680a      	ldr	r2, [r1, #0]
    522a:	4614      	mov	r4, r2
    522c:	b99c      	cbnz	r4, 5256 <_malloc_r+0x56>
    522e:	4f20      	ldr	r7, [pc, #128]	; (52b0 <_malloc_r+0xb0>)
    5230:	683b      	ldr	r3, [r7, #0]
    5232:	b923      	cbnz	r3, 523e <_malloc_r+0x3e>
    5234:	4621      	mov	r1, r4
    5236:	4630      	mov	r0, r6
    5238:	f001 f89c 	bl	6374 <_sbrk_r>
    523c:	6038      	str	r0, [r7, #0]
    523e:	4629      	mov	r1, r5
    5240:	4630      	mov	r0, r6
    5242:	f001 f897 	bl	6374 <_sbrk_r>
    5246:	1c43      	adds	r3, r0, #1
    5248:	d123      	bne.n	5292 <_malloc_r+0x92>
    524a:	230c      	movs	r3, #12
    524c:	6033      	str	r3, [r6, #0]
    524e:	4630      	mov	r0, r6
    5250:	f003 fcd4 	bl	8bfc <__malloc_unlock>
    5254:	e7e3      	b.n	521e <_malloc_r+0x1e>
    5256:	6823      	ldr	r3, [r4, #0]
    5258:	1b5b      	subs	r3, r3, r5
    525a:	d417      	bmi.n	528c <_malloc_r+0x8c>
    525c:	2b0b      	cmp	r3, #11
    525e:	d903      	bls.n	5268 <_malloc_r+0x68>
    5260:	6023      	str	r3, [r4, #0]
    5262:	441c      	add	r4, r3
    5264:	6025      	str	r5, [r4, #0]
    5266:	e004      	b.n	5272 <_malloc_r+0x72>
    5268:	6863      	ldr	r3, [r4, #4]
    526a:	42a2      	cmp	r2, r4
    526c:	bf0c      	ite	eq
    526e:	600b      	streq	r3, [r1, #0]
    5270:	6053      	strne	r3, [r2, #4]
    5272:	4630      	mov	r0, r6
    5274:	f003 fcc2 	bl	8bfc <__malloc_unlock>
    5278:	f104 000b 	add.w	r0, r4, #11
    527c:	1d23      	adds	r3, r4, #4
    527e:	f020 0007 	bic.w	r0, r0, #7
    5282:	1ac2      	subs	r2, r0, r3
    5284:	d0cc      	beq.n	5220 <_malloc_r+0x20>
    5286:	1a1b      	subs	r3, r3, r0
    5288:	50a3      	str	r3, [r4, r2]
    528a:	e7c9      	b.n	5220 <_malloc_r+0x20>
    528c:	4622      	mov	r2, r4
    528e:	6864      	ldr	r4, [r4, #4]
    5290:	e7cc      	b.n	522c <_malloc_r+0x2c>
    5292:	1cc4      	adds	r4, r0, #3
    5294:	f024 0403 	bic.w	r4, r4, #3
    5298:	42a0      	cmp	r0, r4
    529a:	d0e3      	beq.n	5264 <_malloc_r+0x64>
    529c:	1a21      	subs	r1, r4, r0
    529e:	4630      	mov	r0, r6
    52a0:	f001 f868 	bl	6374 <_sbrk_r>
    52a4:	3001      	adds	r0, #1
    52a6:	d1dd      	bne.n	5264 <_malloc_r+0x64>
    52a8:	e7cf      	b.n	524a <_malloc_r+0x4a>
    52aa:	bf00      	nop
    52ac:	10000b70 	.word	0x10000b70
    52b0:	10000b74 	.word	0x10000b74

000052b4 <__sfputc_r>:
__sfputc_r():
    52b4:	6893      	ldr	r3, [r2, #8]
    52b6:	3b01      	subs	r3, #1
    52b8:	2b00      	cmp	r3, #0
    52ba:	b410      	push	{r4}
    52bc:	6093      	str	r3, [r2, #8]
    52be:	da08      	bge.n	52d2 <__sfputc_r+0x1e>
    52c0:	6994      	ldr	r4, [r2, #24]
    52c2:	42a3      	cmp	r3, r4
    52c4:	db01      	blt.n	52ca <__sfputc_r+0x16>
    52c6:	290a      	cmp	r1, #10
    52c8:	d103      	bne.n	52d2 <__sfputc_r+0x1e>
    52ca:	f85d 4b04 	ldr.w	r4, [sp], #4
    52ce:	f001 bfdf 	b.w	7290 <__swbuf_r>
    52d2:	6813      	ldr	r3, [r2, #0]
    52d4:	1c58      	adds	r0, r3, #1
    52d6:	6010      	str	r0, [r2, #0]
    52d8:	7019      	strb	r1, [r3, #0]
    52da:	4608      	mov	r0, r1
    52dc:	f85d 4b04 	ldr.w	r4, [sp], #4
    52e0:	4770      	bx	lr

000052e2 <__sfputs_r>:
__sfputs_r():
    52e2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    52e4:	4606      	mov	r6, r0
    52e6:	460f      	mov	r7, r1
    52e8:	4614      	mov	r4, r2
    52ea:	18d5      	adds	r5, r2, r3
    52ec:	42ac      	cmp	r4, r5
    52ee:	d101      	bne.n	52f4 <__sfputs_r+0x12>
    52f0:	2000      	movs	r0, #0
    52f2:	e007      	b.n	5304 <__sfputs_r+0x22>
    52f4:	463a      	mov	r2, r7
    52f6:	f814 1b01 	ldrb.w	r1, [r4], #1
    52fa:	4630      	mov	r0, r6
    52fc:	f7ff ffda 	bl	52b4 <__sfputc_r>
    5300:	1c43      	adds	r3, r0, #1
    5302:	d1f3      	bne.n	52ec <__sfputs_r+0xa>
    5304:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    5306:	Address 0x0000000000005306 is out of bounds.


00005308 <_vfiprintf_r>:
_vfprintf_r():
    5308:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    530c:	460d      	mov	r5, r1
    530e:	b09d      	sub	sp, #116	; 0x74
    5310:	4614      	mov	r4, r2
    5312:	461e      	mov	r6, r3
    5314:	4607      	mov	r7, r0
    5316:	b118      	cbz	r0, 5320 <_vfiprintf_r+0x18>
    5318:	6983      	ldr	r3, [r0, #24]
    531a:	b90b      	cbnz	r3, 5320 <_vfiprintf_r+0x18>
    531c:	f002 ffd8 	bl	82d0 <__sinit>
    5320:	4b85      	ldr	r3, [pc, #532]	; (5538 <_vfiprintf_r+0x230>)
    5322:	429d      	cmp	r5, r3
    5324:	d11b      	bne.n	535e <_vfiprintf_r+0x56>
    5326:	687d      	ldr	r5, [r7, #4]
    5328:	6e6b      	ldr	r3, [r5, #100]	; 0x64
    532a:	07d9      	lsls	r1, r3, #31
    532c:	d405      	bmi.n	533a <_vfiprintf_r+0x32>
    532e:	89ab      	ldrh	r3, [r5, #12]
    5330:	059a      	lsls	r2, r3, #22
    5332:	d402      	bmi.n	533a <_vfiprintf_r+0x32>
    5334:	6da8      	ldr	r0, [r5, #88]	; 0x58
    5336:	f7ff fed2 	bl	50de <__retarget_lock_acquire_recursive>
    533a:	89ab      	ldrh	r3, [r5, #12]
    533c:	071b      	lsls	r3, r3, #28
    533e:	d501      	bpl.n	5344 <_vfiprintf_r+0x3c>
    5340:	692b      	ldr	r3, [r5, #16]
    5342:	b9eb      	cbnz	r3, 5380 <_vfiprintf_r+0x78>
    5344:	4629      	mov	r1, r5
    5346:	4638      	mov	r0, r7
    5348:	f001 fff4 	bl	7334 <__swsetup_r>
    534c:	b1c0      	cbz	r0, 5380 <_vfiprintf_r+0x78>
    534e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
    5350:	07d8      	lsls	r0, r3, #31
    5352:	d50e      	bpl.n	5372 <_vfiprintf_r+0x6a>
    5354:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    5358:	b01d      	add	sp, #116	; 0x74
    535a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    535e:	4b77      	ldr	r3, [pc, #476]	; (553c <_vfiprintf_r+0x234>)
    5360:	429d      	cmp	r5, r3
    5362:	d101      	bne.n	5368 <_vfiprintf_r+0x60>
    5364:	68bd      	ldr	r5, [r7, #8]
    5366:	e7df      	b.n	5328 <_vfiprintf_r+0x20>
    5368:	4b75      	ldr	r3, [pc, #468]	; (5540 <_vfiprintf_r+0x238>)
    536a:	429d      	cmp	r5, r3
    536c:	bf08      	it	eq
    536e:	68fd      	ldreq	r5, [r7, #12]
    5370:	e7da      	b.n	5328 <_vfiprintf_r+0x20>
    5372:	89ab      	ldrh	r3, [r5, #12]
    5374:	0599      	lsls	r1, r3, #22
    5376:	d4ed      	bmi.n	5354 <_vfiprintf_r+0x4c>
    5378:	6da8      	ldr	r0, [r5, #88]	; 0x58
    537a:	f7ff feb1 	bl	50e0 <__retarget_lock_release_recursive>
    537e:	e7e9      	b.n	5354 <_vfiprintf_r+0x4c>
    5380:	2300      	movs	r3, #0
    5382:	9309      	str	r3, [sp, #36]	; 0x24
    5384:	2320      	movs	r3, #32
    5386:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
    538a:	f8df 91b8 	ldr.w	r9, [pc, #440]	; 5544 <_vfiprintf_r+0x23c>
    538e:	9603      	str	r6, [sp, #12]
    5390:	2330      	movs	r3, #48	; 0x30
    5392:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
    5396:	f04f 0a01 	mov.w	sl, #1
    539a:	4623      	mov	r3, r4
    539c:	461e      	mov	r6, r3
    539e:	f813 2b01 	ldrb.w	r2, [r3], #1
    53a2:	b10a      	cbz	r2, 53a8 <_vfiprintf_r+0xa0>
    53a4:	2a25      	cmp	r2, #37	; 0x25
    53a6:	d1f9      	bne.n	539c <_vfiprintf_r+0x94>
    53a8:	ebb6 0b04 	subs.w	fp, r6, r4
    53ac:	d00b      	beq.n	53c6 <_vfiprintf_r+0xbe>
    53ae:	465b      	mov	r3, fp
    53b0:	4622      	mov	r2, r4
    53b2:	4629      	mov	r1, r5
    53b4:	4638      	mov	r0, r7
    53b6:	f7ff ff94 	bl	52e2 <__sfputs_r>
    53ba:	3001      	adds	r0, #1
    53bc:	f000 80a3 	beq.w	5506 <_vfiprintf_r+0x1fe>
    53c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
    53c2:	445b      	add	r3, fp
    53c4:	9309      	str	r3, [sp, #36]	; 0x24
    53c6:	7833      	ldrb	r3, [r6, #0]
    53c8:	2b00      	cmp	r3, #0
    53ca:	f000 809c 	beq.w	5506 <_vfiprintf_r+0x1fe>
    53ce:	2300      	movs	r3, #0
    53d0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    53d4:	e9cd 2305 	strd	r2, r3, [sp, #20]
    53d8:	3601      	adds	r6, #1
    53da:	9304      	str	r3, [sp, #16]
    53dc:	9307      	str	r3, [sp, #28]
    53de:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
    53e2:	931a      	str	r3, [sp, #104]	; 0x68
    53e4:	4634      	mov	r4, r6
    53e6:	2205      	movs	r2, #5
    53e8:	f814 1b01 	ldrb.w	r1, [r4], #1
    53ec:	4855      	ldr	r0, [pc, #340]	; (5544 <_vfiprintf_r+0x23c>)
    53ee:	f003 fbaf 	bl	8b50 <memchr>
    53f2:	9b04      	ldr	r3, [sp, #16]
    53f4:	b9c0      	cbnz	r0, 5428 <_vfiprintf_r+0x120>
    53f6:	06da      	lsls	r2, r3, #27
    53f8:	bf44      	itt	mi
    53fa:	2220      	movmi	r2, #32
    53fc:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
    5400:	0718      	lsls	r0, r3, #28
    5402:	bf44      	itt	mi
    5404:	222b      	movmi	r2, #43	; 0x2b
    5406:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
    540a:	7832      	ldrb	r2, [r6, #0]
    540c:	2a2a      	cmp	r2, #42	; 0x2a
    540e:	d013      	beq.n	5438 <_vfiprintf_r+0x130>
    5410:	9a07      	ldr	r2, [sp, #28]
    5412:	4634      	mov	r4, r6
    5414:	2000      	movs	r0, #0
    5416:	260a      	movs	r6, #10
    5418:	4621      	mov	r1, r4
    541a:	f811 3b01 	ldrb.w	r3, [r1], #1
    541e:	3b30      	subs	r3, #48	; 0x30
    5420:	2b09      	cmp	r3, #9
    5422:	d94b      	bls.n	54bc <_vfiprintf_r+0x1b4>
    5424:	b970      	cbnz	r0, 5444 <_vfiprintf_r+0x13c>
    5426:	e014      	b.n	5452 <_vfiprintf_r+0x14a>
    5428:	eba0 0009 	sub.w	r0, r0, r9
    542c:	fa0a f000 	lsl.w	r0, sl, r0
    5430:	4318      	orrs	r0, r3
    5432:	9004      	str	r0, [sp, #16]
    5434:	4626      	mov	r6, r4
    5436:	e7d5      	b.n	53e4 <_vfiprintf_r+0xdc>
    5438:	9a03      	ldr	r2, [sp, #12]
    543a:	1d11      	adds	r1, r2, #4
    543c:	6812      	ldr	r2, [r2, #0]
    543e:	9103      	str	r1, [sp, #12]
    5440:	2a00      	cmp	r2, #0
    5442:	db01      	blt.n	5448 <_vfiprintf_r+0x140>
    5444:	9207      	str	r2, [sp, #28]
    5446:	e004      	b.n	5452 <_vfiprintf_r+0x14a>
    5448:	4252      	negs	r2, r2
    544a:	f043 0302 	orr.w	r3, r3, #2
    544e:	9207      	str	r2, [sp, #28]
    5450:	9304      	str	r3, [sp, #16]
    5452:	7823      	ldrb	r3, [r4, #0]
    5454:	2b2e      	cmp	r3, #46	; 0x2e
    5456:	d10c      	bne.n	5472 <_vfiprintf_r+0x16a>
    5458:	7863      	ldrb	r3, [r4, #1]
    545a:	2b2a      	cmp	r3, #42	; 0x2a
    545c:	d133      	bne.n	54c6 <_vfiprintf_r+0x1be>
    545e:	9b03      	ldr	r3, [sp, #12]
    5460:	1d1a      	adds	r2, r3, #4
    5462:	681b      	ldr	r3, [r3, #0]
    5464:	9203      	str	r2, [sp, #12]
    5466:	2b00      	cmp	r3, #0
    5468:	bfb8      	it	lt
    546a:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
    546e:	3402      	adds	r4, #2
    5470:	9305      	str	r3, [sp, #20]
    5472:	4e35      	ldr	r6, [pc, #212]	; (5548 <_vfiprintf_r+0x240>)
    5474:	7821      	ldrb	r1, [r4, #0]
    5476:	2203      	movs	r2, #3
    5478:	4630      	mov	r0, r6
    547a:	f003 fb69 	bl	8b50 <memchr>
    547e:	b138      	cbz	r0, 5490 <_vfiprintf_r+0x188>
    5480:	2340      	movs	r3, #64	; 0x40
    5482:	1b80      	subs	r0, r0, r6
    5484:	fa03 f000 	lsl.w	r0, r3, r0
    5488:	9b04      	ldr	r3, [sp, #16]
    548a:	4303      	orrs	r3, r0
    548c:	3401      	adds	r4, #1
    548e:	9304      	str	r3, [sp, #16]
    5490:	f814 1b01 	ldrb.w	r1, [r4], #1
    5494:	482d      	ldr	r0, [pc, #180]	; (554c <_vfiprintf_r+0x244>)
    5496:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
    549a:	2206      	movs	r2, #6
    549c:	f003 fb58 	bl	8b50 <memchr>
    54a0:	2800      	cmp	r0, #0
    54a2:	d03f      	beq.n	5524 <_vfiprintf_r+0x21c>
    54a4:	4b2a      	ldr	r3, [pc, #168]	; (5550 <_vfiprintf_r+0x248>)
    54a6:	bb13      	cbnz	r3, 54ee <_vfiprintf_r+0x1e6>
    54a8:	9b03      	ldr	r3, [sp, #12]
    54aa:	3307      	adds	r3, #7
    54ac:	f023 0307 	bic.w	r3, r3, #7
    54b0:	3308      	adds	r3, #8
    54b2:	9303      	str	r3, [sp, #12]
    54b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
    54b6:	4443      	add	r3, r8
    54b8:	9309      	str	r3, [sp, #36]	; 0x24
    54ba:	e76e      	b.n	539a <_vfiprintf_r+0x92>
    54bc:	fb06 3202 	mla	r2, r6, r2, r3
    54c0:	2001      	movs	r0, #1
    54c2:	460c      	mov	r4, r1
    54c4:	e7a8      	b.n	5418 <_vfiprintf_r+0x110>
    54c6:	2300      	movs	r3, #0
    54c8:	3401      	adds	r4, #1
    54ca:	9305      	str	r3, [sp, #20]
    54cc:	4619      	mov	r1, r3
    54ce:	260a      	movs	r6, #10
    54d0:	4620      	mov	r0, r4
    54d2:	f810 2b01 	ldrb.w	r2, [r0], #1
    54d6:	3a30      	subs	r2, #48	; 0x30
    54d8:	2a09      	cmp	r2, #9
    54da:	d903      	bls.n	54e4 <_vfiprintf_r+0x1dc>
    54dc:	2b00      	cmp	r3, #0
    54de:	d0c8      	beq.n	5472 <_vfiprintf_r+0x16a>
    54e0:	9105      	str	r1, [sp, #20]
    54e2:	e7c6      	b.n	5472 <_vfiprintf_r+0x16a>
    54e4:	fb06 2101 	mla	r1, r6, r1, r2
    54e8:	2301      	movs	r3, #1
    54ea:	4604      	mov	r4, r0
    54ec:	e7f0      	b.n	54d0 <_vfiprintf_r+0x1c8>
    54ee:	ab03      	add	r3, sp, #12
    54f0:	9300      	str	r3, [sp, #0]
    54f2:	462a      	mov	r2, r5
    54f4:	4b17      	ldr	r3, [pc, #92]	; (5554 <_vfiprintf_r+0x24c>)
    54f6:	a904      	add	r1, sp, #16
    54f8:	4638      	mov	r0, r7
    54fa:	f000 f8bd 	bl	5678 <_printf_float>
    54fe:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
    5502:	4680      	mov	r8, r0
    5504:	d1d6      	bne.n	54b4 <_vfiprintf_r+0x1ac>
    5506:	6e6b      	ldr	r3, [r5, #100]	; 0x64
    5508:	07d9      	lsls	r1, r3, #31
    550a:	d405      	bmi.n	5518 <_vfiprintf_r+0x210>
    550c:	89ab      	ldrh	r3, [r5, #12]
    550e:	059a      	lsls	r2, r3, #22
    5510:	d402      	bmi.n	5518 <_vfiprintf_r+0x210>
    5512:	6da8      	ldr	r0, [r5, #88]	; 0x58
    5514:	f7ff fde4 	bl	50e0 <__retarget_lock_release_recursive>
    5518:	89ab      	ldrh	r3, [r5, #12]
    551a:	065b      	lsls	r3, r3, #25
    551c:	f53f af1a 	bmi.w	5354 <_vfiprintf_r+0x4c>
    5520:	9809      	ldr	r0, [sp, #36]	; 0x24
    5522:	e719      	b.n	5358 <_vfiprintf_r+0x50>
    5524:	ab03      	add	r3, sp, #12
    5526:	9300      	str	r3, [sp, #0]
    5528:	462a      	mov	r2, r5
    552a:	4b0a      	ldr	r3, [pc, #40]	; (5554 <_vfiprintf_r+0x24c>)
    552c:	a904      	add	r1, sp, #16
    552e:	4638      	mov	r0, r7
    5530:	f000 fb42 	bl	5bb8 <_printf_i>
    5534:	e7e3      	b.n	54fe <_vfiprintf_r+0x1f6>
    5536:	bf00      	nop
    5538:	0000b7a0 	.word	0x0000b7a0
    553c:	0000b7c0 	.word	0x0000b7c0
    5540:	0000b780 	.word	0x0000b780
    5544:	0000b6d4 	.word	0x0000b6d4
    5548:	0000b6da 	.word	0x0000b6da
    554c:	0000b6de 	.word	0x0000b6de
    5550:	00005679 	.word	0x00005679
    5554:	000052e3 	.word	0x000052e3

00005558 <__cvt>:
__cvt():
    5558:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
    555c:	ec55 4b10 	vmov	r4, r5, d0
    5560:	2d00      	cmp	r5, #0
    5562:	460e      	mov	r6, r1
    5564:	4691      	mov	r9, r2
    5566:	4619      	mov	r1, r3
    5568:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
    556c:	f04f 0200 	mov.w	r2, #0
    5570:	da03      	bge.n	557a <__cvt+0x22>
    5572:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
    5576:	461d      	mov	r5, r3
    5578:	222d      	movs	r2, #45	; 0x2d
    557a:	9f0d      	ldr	r7, [sp, #52]	; 0x34
    557c:	700a      	strb	r2, [r1, #0]
    557e:	f027 0720 	bic.w	r7, r7, #32
    5582:	2f46      	cmp	r7, #70	; 0x46
    5584:	d004      	beq.n	5590 <__cvt+0x38>
    5586:	2f45      	cmp	r7, #69	; 0x45
    5588:	d100      	bne.n	558c <__cvt+0x34>
    558a:	3601      	adds	r6, #1
    558c:	2102      	movs	r1, #2
    558e:	e000      	b.n	5592 <__cvt+0x3a>
    5590:	2103      	movs	r1, #3
    5592:	ab03      	add	r3, sp, #12
    5594:	9301      	str	r3, [sp, #4]
    5596:	ab02      	add	r3, sp, #8
    5598:	9300      	str	r3, [sp, #0]
    559a:	4632      	mov	r2, r6
    559c:	4653      	mov	r3, sl
    559e:	ec45 4b10 	vmov	d0, r4, r5
    55a2:	f001 ffc1 	bl	7528 <_dtoa_r>
    55a6:	2f47      	cmp	r7, #71	; 0x47
    55a8:	4680      	mov	r8, r0
    55aa:	d102      	bne.n	55b2 <__cvt+0x5a>
    55ac:	f019 0f01 	tst.w	r9, #1
    55b0:	d022      	beq.n	55f8 <__cvt+0xa0>
    55b2:	2f46      	cmp	r7, #70	; 0x46
    55b4:	eb08 0906 	add.w	r9, r8, r6
    55b8:	d111      	bne.n	55de <__cvt+0x86>
    55ba:	f898 3000 	ldrb.w	r3, [r8]
    55be:	2b30      	cmp	r3, #48	; 0x30
    55c0:	d10a      	bne.n	55d8 <__cvt+0x80>
    55c2:	2200      	movs	r2, #0
    55c4:	2300      	movs	r3, #0
    55c6:	4620      	mov	r0, r4
    55c8:	4629      	mov	r1, r5
    55ca:	f004 fd89 	bl	a0e0 <__aeabi_dcmpeq>
    55ce:	b918      	cbnz	r0, 55d8 <__cvt+0x80>
    55d0:	f1c6 0601 	rsb	r6, r6, #1
    55d4:	f8ca 6000 	str.w	r6, [sl]
    55d8:	f8da 3000 	ldr.w	r3, [sl]
    55dc:	4499      	add	r9, r3
    55de:	2200      	movs	r2, #0
    55e0:	2300      	movs	r3, #0
    55e2:	4620      	mov	r0, r4
    55e4:	4629      	mov	r1, r5
    55e6:	f004 fd7b 	bl	a0e0 <__aeabi_dcmpeq>
    55ea:	b108      	cbz	r0, 55f0 <__cvt+0x98>
    55ec:	f8cd 900c 	str.w	r9, [sp, #12]
    55f0:	2230      	movs	r2, #48	; 0x30
    55f2:	9b03      	ldr	r3, [sp, #12]
    55f4:	454b      	cmp	r3, r9
    55f6:	d308      	bcc.n	560a <__cvt+0xb2>
    55f8:	9b03      	ldr	r3, [sp, #12]
    55fa:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    55fc:	eba3 0308 	sub.w	r3, r3, r8
    5600:	4640      	mov	r0, r8
    5602:	6013      	str	r3, [r2, #0]
    5604:	b004      	add	sp, #16
    5606:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    560a:	1c59      	adds	r1, r3, #1
    560c:	9103      	str	r1, [sp, #12]
    560e:	701a      	strb	r2, [r3, #0]
    5610:	e7ef      	b.n	55f2 <__cvt+0x9a>

00005612 <__exponent>:
__exponent():
    5612:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    5614:	2900      	cmp	r1, #0
    5616:	bfba      	itte	lt
    5618:	4249      	neglt	r1, r1
    561a:	232d      	movlt	r3, #45	; 0x2d
    561c:	232b      	movge	r3, #43	; 0x2b
    561e:	2909      	cmp	r1, #9
    5620:	7002      	strb	r2, [r0, #0]
    5622:	7043      	strb	r3, [r0, #1]
    5624:	dd21      	ble.n	566a <__exponent+0x58>
    5626:	f10d 0307 	add.w	r3, sp, #7
    562a:	461f      	mov	r7, r3
    562c:	260a      	movs	r6, #10
    562e:	fb91 f2f6 	sdiv	r2, r1, r6
    5632:	fb06 1412 	mls	r4, r6, r2, r1
    5636:	3430      	adds	r4, #48	; 0x30
    5638:	2963      	cmp	r1, #99	; 0x63
    563a:	f103 35ff 	add.w	r5, r3, #4294967295	; 0xffffffff
    563e:	f803 4c01 	strb.w	r4, [r3, #-1]
    5642:	dc0a      	bgt.n	565a <__exponent+0x48>
    5644:	3230      	adds	r2, #48	; 0x30
    5646:	f805 2c01 	strb.w	r2, [r5, #-1]
    564a:	3b02      	subs	r3, #2
    564c:	1c82      	adds	r2, r0, #2
    564e:	42bb      	cmp	r3, r7
    5650:	4614      	mov	r4, r2
    5652:	d305      	bcc.n	5660 <__exponent+0x4e>
    5654:	1a20      	subs	r0, r4, r0
    5656:	b003      	add	sp, #12
    5658:	bdf0      	pop	{r4, r5, r6, r7, pc}
    565a:	462b      	mov	r3, r5
    565c:	4611      	mov	r1, r2
    565e:	e7e6      	b.n	562e <__exponent+0x1c>
    5660:	f813 1b01 	ldrb.w	r1, [r3], #1
    5664:	f802 1b01 	strb.w	r1, [r2], #1
    5668:	e7f1      	b.n	564e <__exponent+0x3c>
    566a:	2330      	movs	r3, #48	; 0x30
    566c:	4419      	add	r1, r3
    566e:	7083      	strb	r3, [r0, #2]
    5670:	1d04      	adds	r4, r0, #4
    5672:	70c1      	strb	r1, [r0, #3]
    5674:	e7ee      	b.n	5654 <__exponent+0x42>
    5676:	Address 0x0000000000005676 is out of bounds.


00005678 <_printf_float>:
_printf_float():
    5678:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    567c:	b08d      	sub	sp, #52	; 0x34
    567e:	460c      	mov	r4, r1
    5680:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
    5684:	4616      	mov	r6, r2
    5686:	461f      	mov	r7, r3
    5688:	4605      	mov	r5, r0
    568a:	f003 f9e7 	bl	8a5c <_localeconv_r>
    568e:	6803      	ldr	r3, [r0, #0]
    5690:	9306      	str	r3, [sp, #24]
    5692:	4618      	mov	r0, r3
    5694:	f000 ff66 	bl	6564 <strlen>
    5698:	2300      	movs	r3, #0
    569a:	930a      	str	r3, [sp, #40]	; 0x28
    569c:	f8d8 3000 	ldr.w	r3, [r8]
    56a0:	9007      	str	r0, [sp, #28]
    56a2:	3307      	adds	r3, #7
    56a4:	f023 0307 	bic.w	r3, r3, #7
    56a8:	f103 0208 	add.w	r2, r3, #8
    56ac:	f894 a018 	ldrb.w	sl, [r4, #24]
    56b0:	f8d4 b000 	ldr.w	fp, [r4]
    56b4:	f8c8 2000 	str.w	r2, [r8]
    56b8:	e9d3 2300 	ldrd	r2, r3, [r3]
    56bc:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
    56c0:	ed94 7b12 	vldr	d7, [r4, #72]	; 0x48
    56c4:	ed8d 7b04 	vstr	d7, [sp, #16]
    56c8:	e9dd 8304 	ldrd	r8, r3, [sp, #16]
    56cc:	f023 4900 	bic.w	r9, r3, #2147483648	; 0x80000000
    56d0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    56d4:	4ba6      	ldr	r3, [pc, #664]	; (5970 <_printf_float+0x2f8>)
    56d6:	4640      	mov	r0, r8
    56d8:	4649      	mov	r1, r9
    56da:	f004 fd33 	bl	a144 <__aeabi_dcmpun>
    56de:	bb70      	cbnz	r0, 573e <_printf_float+0xc6>
    56e0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    56e4:	4ba2      	ldr	r3, [pc, #648]	; (5970 <_printf_float+0x2f8>)
    56e6:	4640      	mov	r0, r8
    56e8:	4649      	mov	r1, r9
    56ea:	f004 fd0d 	bl	a108 <__aeabi_dcmple>
    56ee:	bb30      	cbnz	r0, 573e <_printf_float+0xc6>
    56f0:	2200      	movs	r2, #0
    56f2:	2300      	movs	r3, #0
    56f4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    56f8:	f004 fcfc 	bl	a0f4 <__aeabi_dcmplt>
    56fc:	b110      	cbz	r0, 5704 <_printf_float+0x8c>
    56fe:	232d      	movs	r3, #45	; 0x2d
    5700:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
    5704:	4a9b      	ldr	r2, [pc, #620]	; (5974 <_printf_float+0x2fc>)
    5706:	4b9c      	ldr	r3, [pc, #624]	; (5978 <_printf_float+0x300>)
    5708:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
    570c:	bf94      	ite	ls
    570e:	4690      	movls	r8, r2
    5710:	4698      	movhi	r8, r3
    5712:	2303      	movs	r3, #3
    5714:	f02b 0204 	bic.w	r2, fp, #4
    5718:	6123      	str	r3, [r4, #16]
    571a:	6022      	str	r2, [r4, #0]
    571c:	f04f 0900 	mov.w	r9, #0
    5720:	9700      	str	r7, [sp, #0]
    5722:	4633      	mov	r3, r6
    5724:	aa0b      	add	r2, sp, #44	; 0x2c
    5726:	4621      	mov	r1, r4
    5728:	4628      	mov	r0, r5
    572a:	f000 f9cf 	bl	5acc <_printf_common>
    572e:	3001      	adds	r0, #1
    5730:	f040 808c 	bne.w	584c <_printf_float+0x1d4>
    5734:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    5738:	b00d      	add	sp, #52	; 0x34
    573a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    573e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    5742:	4610      	mov	r0, r2
    5744:	4619      	mov	r1, r3
    5746:	f004 fcfd 	bl	a144 <__aeabi_dcmpun>
    574a:	b140      	cbz	r0, 575e <_printf_float+0xe6>
    574c:	9b05      	ldr	r3, [sp, #20]
    574e:	4a8b      	ldr	r2, [pc, #556]	; (597c <_printf_float+0x304>)
    5750:	2b00      	cmp	r3, #0
    5752:	bfbc      	itt	lt
    5754:	232d      	movlt	r3, #45	; 0x2d
    5756:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
    575a:	4b89      	ldr	r3, [pc, #548]	; (5980 <_printf_float+0x308>)
    575c:	e7d4      	b.n	5708 <_printf_float+0x90>
    575e:	6863      	ldr	r3, [r4, #4]
    5760:	1c5a      	adds	r2, r3, #1
    5762:	f00a 09df 	and.w	r9, sl, #223	; 0xdf
    5766:	d13e      	bne.n	57e6 <_printf_float+0x16e>
    5768:	2306      	movs	r3, #6
    576a:	6063      	str	r3, [r4, #4]
    576c:	2300      	movs	r3, #0
    576e:	9303      	str	r3, [sp, #12]
    5770:	ab0a      	add	r3, sp, #40	; 0x28
    5772:	f44b 6280 	orr.w	r2, fp, #1024	; 0x400
    5776:	e9cd a301 	strd	sl, r3, [sp, #4]
    577a:	ab09      	add	r3, sp, #36	; 0x24
    577c:	9300      	str	r3, [sp, #0]
    577e:	6861      	ldr	r1, [r4, #4]
    5780:	6022      	str	r2, [r4, #0]
    5782:	f10d 0323 	add.w	r3, sp, #35	; 0x23
    5786:	ed9d 0b04 	vldr	d0, [sp, #16]
    578a:	4628      	mov	r0, r5
    578c:	f7ff fee4 	bl	5558 <__cvt>
    5790:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
    5794:	4680      	mov	r8, r0
    5796:	9909      	ldr	r1, [sp, #36]	; 0x24
    5798:	d108      	bne.n	57ac <_printf_float+0x134>
    579a:	1cc8      	adds	r0, r1, #3
    579c:	db02      	blt.n	57a4 <_printf_float+0x12c>
    579e:	6863      	ldr	r3, [r4, #4]
    57a0:	4299      	cmp	r1, r3
    57a2:	dd41      	ble.n	5828 <_printf_float+0x1b0>
    57a4:	f1aa 0a02 	sub.w	sl, sl, #2
    57a8:	fa5f fa8a 	uxtb.w	sl, sl
    57ac:	f1ba 0f65 	cmp.w	sl, #101	; 0x65
    57b0:	d820      	bhi.n	57f4 <_printf_float+0x17c>
    57b2:	3901      	subs	r1, #1
    57b4:	4652      	mov	r2, sl
    57b6:	f104 0050 	add.w	r0, r4, #80	; 0x50
    57ba:	9109      	str	r1, [sp, #36]	; 0x24
    57bc:	f7ff ff29 	bl	5612 <__exponent>
    57c0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    57c2:	1813      	adds	r3, r2, r0
    57c4:	2a01      	cmp	r2, #1
    57c6:	4681      	mov	r9, r0
    57c8:	6123      	str	r3, [r4, #16]
    57ca:	dc02      	bgt.n	57d2 <_printf_float+0x15a>
    57cc:	6822      	ldr	r2, [r4, #0]
    57ce:	07d2      	lsls	r2, r2, #31
    57d0:	d501      	bpl.n	57d6 <_printf_float+0x15e>
    57d2:	3301      	adds	r3, #1
    57d4:	6123      	str	r3, [r4, #16]
    57d6:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
    57da:	2b00      	cmp	r3, #0
    57dc:	d0a0      	beq.n	5720 <_printf_float+0xa8>
    57de:	232d      	movs	r3, #45	; 0x2d
    57e0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
    57e4:	e79c      	b.n	5720 <_printf_float+0xa8>
    57e6:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
    57ea:	d1bf      	bne.n	576c <_printf_float+0xf4>
    57ec:	2b00      	cmp	r3, #0
    57ee:	d1bd      	bne.n	576c <_printf_float+0xf4>
    57f0:	2301      	movs	r3, #1
    57f2:	e7ba      	b.n	576a <_printf_float+0xf2>
    57f4:	f1ba 0f66 	cmp.w	sl, #102	; 0x66
    57f8:	d118      	bne.n	582c <_printf_float+0x1b4>
    57fa:	2900      	cmp	r1, #0
    57fc:	6863      	ldr	r3, [r4, #4]
    57fe:	dd0b      	ble.n	5818 <_printf_float+0x1a0>
    5800:	6121      	str	r1, [r4, #16]
    5802:	b913      	cbnz	r3, 580a <_printf_float+0x192>
    5804:	6822      	ldr	r2, [r4, #0]
    5806:	07d0      	lsls	r0, r2, #31
    5808:	d502      	bpl.n	5810 <_printf_float+0x198>
    580a:	3301      	adds	r3, #1
    580c:	440b      	add	r3, r1
    580e:	6123      	str	r3, [r4, #16]
    5810:	65a1      	str	r1, [r4, #88]	; 0x58
    5812:	f04f 0900 	mov.w	r9, #0
    5816:	e7de      	b.n	57d6 <_printf_float+0x15e>
    5818:	b913      	cbnz	r3, 5820 <_printf_float+0x1a8>
    581a:	6822      	ldr	r2, [r4, #0]
    581c:	07d2      	lsls	r2, r2, #31
    581e:	d501      	bpl.n	5824 <_printf_float+0x1ac>
    5820:	3302      	adds	r3, #2
    5822:	e7f4      	b.n	580e <_printf_float+0x196>
    5824:	2301      	movs	r3, #1
    5826:	e7f2      	b.n	580e <_printf_float+0x196>
    5828:	f04f 0a67 	mov.w	sl, #103	; 0x67
    582c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    582e:	4299      	cmp	r1, r3
    5830:	db05      	blt.n	583e <_printf_float+0x1c6>
    5832:	6823      	ldr	r3, [r4, #0]
    5834:	6121      	str	r1, [r4, #16]
    5836:	07d8      	lsls	r0, r3, #31
    5838:	d5ea      	bpl.n	5810 <_printf_float+0x198>
    583a:	1c4b      	adds	r3, r1, #1
    583c:	e7e7      	b.n	580e <_printf_float+0x196>
    583e:	2900      	cmp	r1, #0
    5840:	bfd4      	ite	le
    5842:	f1c1 0202 	rsble	r2, r1, #2
    5846:	2201      	movgt	r2, #1
    5848:	4413      	add	r3, r2
    584a:	e7e0      	b.n	580e <_printf_float+0x196>
    584c:	6823      	ldr	r3, [r4, #0]
    584e:	055a      	lsls	r2, r3, #21
    5850:	d407      	bmi.n	5862 <_printf_float+0x1ea>
    5852:	6923      	ldr	r3, [r4, #16]
    5854:	4642      	mov	r2, r8
    5856:	4631      	mov	r1, r6
    5858:	4628      	mov	r0, r5
    585a:	47b8      	blx	r7
    585c:	3001      	adds	r0, #1
    585e:	d12b      	bne.n	58b8 <_printf_float+0x240>
    5860:	e768      	b.n	5734 <_printf_float+0xbc>
    5862:	f1ba 0f65 	cmp.w	sl, #101	; 0x65
    5866:	f240 80dc 	bls.w	5a22 <_printf_float+0x3aa>
    586a:	2200      	movs	r2, #0
    586c:	2300      	movs	r3, #0
    586e:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
    5872:	f004 fc35 	bl	a0e0 <__aeabi_dcmpeq>
    5876:	2800      	cmp	r0, #0
    5878:	d033      	beq.n	58e2 <_printf_float+0x26a>
    587a:	2301      	movs	r3, #1
    587c:	4a41      	ldr	r2, [pc, #260]	; (5984 <_printf_float+0x30c>)
    587e:	4631      	mov	r1, r6
    5880:	4628      	mov	r0, r5
    5882:	47b8      	blx	r7
    5884:	3001      	adds	r0, #1
    5886:	f43f af55 	beq.w	5734 <_printf_float+0xbc>
    588a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
    588e:	429a      	cmp	r2, r3
    5890:	db02      	blt.n	5898 <_printf_float+0x220>
    5892:	6823      	ldr	r3, [r4, #0]
    5894:	07d8      	lsls	r0, r3, #31
    5896:	d50f      	bpl.n	58b8 <_printf_float+0x240>
    5898:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    589c:	4631      	mov	r1, r6
    589e:	4628      	mov	r0, r5
    58a0:	47b8      	blx	r7
    58a2:	3001      	adds	r0, #1
    58a4:	f43f af46 	beq.w	5734 <_printf_float+0xbc>
    58a8:	f04f 0800 	mov.w	r8, #0
    58ac:	f104 091a 	add.w	r9, r4, #26
    58b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    58b2:	3b01      	subs	r3, #1
    58b4:	4543      	cmp	r3, r8
    58b6:	dc09      	bgt.n	58cc <_printf_float+0x254>
    58b8:	6823      	ldr	r3, [r4, #0]
    58ba:	079b      	lsls	r3, r3, #30
    58bc:	f100 8101 	bmi.w	5ac2 <_printf_float+0x44a>
    58c0:	68e0      	ldr	r0, [r4, #12]
    58c2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    58c4:	4298      	cmp	r0, r3
    58c6:	bfb8      	it	lt
    58c8:	4618      	movlt	r0, r3
    58ca:	e735      	b.n	5738 <_printf_float+0xc0>
    58cc:	2301      	movs	r3, #1
    58ce:	464a      	mov	r2, r9
    58d0:	4631      	mov	r1, r6
    58d2:	4628      	mov	r0, r5
    58d4:	47b8      	blx	r7
    58d6:	3001      	adds	r0, #1
    58d8:	f43f af2c 	beq.w	5734 <_printf_float+0xbc>
    58dc:	f108 0801 	add.w	r8, r8, #1
    58e0:	e7e6      	b.n	58b0 <_printf_float+0x238>
    58e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
    58e4:	2b00      	cmp	r3, #0
    58e6:	dc2b      	bgt.n	5940 <_printf_float+0x2c8>
    58e8:	2301      	movs	r3, #1
    58ea:	4a26      	ldr	r2, [pc, #152]	; (5984 <_printf_float+0x30c>)
    58ec:	4631      	mov	r1, r6
    58ee:	4628      	mov	r0, r5
    58f0:	47b8      	blx	r7
    58f2:	3001      	adds	r0, #1
    58f4:	f43f af1e 	beq.w	5734 <_printf_float+0xbc>
    58f8:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
    58fc:	4313      	orrs	r3, r2
    58fe:	d102      	bne.n	5906 <_printf_float+0x28e>
    5900:	6823      	ldr	r3, [r4, #0]
    5902:	07d9      	lsls	r1, r3, #31
    5904:	d5d8      	bpl.n	58b8 <_printf_float+0x240>
    5906:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    590a:	4631      	mov	r1, r6
    590c:	4628      	mov	r0, r5
    590e:	47b8      	blx	r7
    5910:	3001      	adds	r0, #1
    5912:	f43f af0f 	beq.w	5734 <_printf_float+0xbc>
    5916:	f04f 0900 	mov.w	r9, #0
    591a:	f104 0a1a 	add.w	sl, r4, #26
    591e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    5920:	425b      	negs	r3, r3
    5922:	454b      	cmp	r3, r9
    5924:	dc01      	bgt.n	592a <_printf_float+0x2b2>
    5926:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    5928:	e794      	b.n	5854 <_printf_float+0x1dc>
    592a:	2301      	movs	r3, #1
    592c:	4652      	mov	r2, sl
    592e:	4631      	mov	r1, r6
    5930:	4628      	mov	r0, r5
    5932:	47b8      	blx	r7
    5934:	3001      	adds	r0, #1
    5936:	f43f aefd 	beq.w	5734 <_printf_float+0xbc>
    593a:	f109 0901 	add.w	r9, r9, #1
    593e:	e7ee      	b.n	591e <_printf_float+0x2a6>
    5940:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    5942:	6da3      	ldr	r3, [r4, #88]	; 0x58
    5944:	429a      	cmp	r2, r3
    5946:	bfa8      	it	ge
    5948:	461a      	movge	r2, r3
    594a:	2a00      	cmp	r2, #0
    594c:	4691      	mov	r9, r2
    594e:	dd07      	ble.n	5960 <_printf_float+0x2e8>
    5950:	4613      	mov	r3, r2
    5952:	4631      	mov	r1, r6
    5954:	4642      	mov	r2, r8
    5956:	4628      	mov	r0, r5
    5958:	47b8      	blx	r7
    595a:	3001      	adds	r0, #1
    595c:	f43f aeea 	beq.w	5734 <_printf_float+0xbc>
    5960:	f104 031a 	add.w	r3, r4, #26
    5964:	f04f 0b00 	mov.w	fp, #0
    5968:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
    596c:	9304      	str	r3, [sp, #16]
    596e:	e015      	b.n	599c <_printf_float+0x324>
    5970:	7fefffff 	.word	0x7fefffff
    5974:	0000b6e5 	.word	0x0000b6e5
    5978:	0000b6e9 	.word	0x0000b6e9
    597c:	0000b6ed 	.word	0x0000b6ed
    5980:	0000b6f1 	.word	0x0000b6f1
    5984:	0000aff5 	.word	0x0000aff5
    5988:	2301      	movs	r3, #1
    598a:	9a04      	ldr	r2, [sp, #16]
    598c:	4631      	mov	r1, r6
    598e:	4628      	mov	r0, r5
    5990:	47b8      	blx	r7
    5992:	3001      	adds	r0, #1
    5994:	f43f aece 	beq.w	5734 <_printf_float+0xbc>
    5998:	f10b 0b01 	add.w	fp, fp, #1
    599c:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
    59a0:	ebaa 0309 	sub.w	r3, sl, r9
    59a4:	455b      	cmp	r3, fp
    59a6:	dcef      	bgt.n	5988 <_printf_float+0x310>
    59a8:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
    59ac:	429a      	cmp	r2, r3
    59ae:	db1b      	blt.n	59e8 <_printf_float+0x370>
    59b0:	6823      	ldr	r3, [r4, #0]
    59b2:	07da      	lsls	r2, r3, #31
    59b4:	d418      	bmi.n	59e8 <_printf_float+0x370>
    59b6:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
    59ba:	4592      	cmp	sl, r2
    59bc:	db1c      	blt.n	59f8 <_printf_float+0x380>
    59be:	eba3 090a 	sub.w	r9, r3, sl
    59c2:	f1b9 0f00 	cmp.w	r9, #0
    59c6:	dd08      	ble.n	59da <_printf_float+0x362>
    59c8:	464b      	mov	r3, r9
    59ca:	eb08 020a 	add.w	r2, r8, sl
    59ce:	4631      	mov	r1, r6
    59d0:	4628      	mov	r0, r5
    59d2:	47b8      	blx	r7
    59d4:	3001      	adds	r0, #1
    59d6:	f43f aead 	beq.w	5734 <_printf_float+0xbc>
    59da:	f04f 0800 	mov.w	r8, #0
    59de:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
    59e2:	f104 0a1a 	add.w	sl, r4, #26
    59e6:	e014      	b.n	5a12 <_printf_float+0x39a>
    59e8:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    59ec:	4631      	mov	r1, r6
    59ee:	4628      	mov	r0, r5
    59f0:	47b8      	blx	r7
    59f2:	3001      	adds	r0, #1
    59f4:	d1df      	bne.n	59b6 <_printf_float+0x33e>
    59f6:	e69d      	b.n	5734 <_printf_float+0xbc>
    59f8:	eba3 0902 	sub.w	r9, r3, r2
    59fc:	e7e1      	b.n	59c2 <_printf_float+0x34a>
    59fe:	2301      	movs	r3, #1
    5a00:	4652      	mov	r2, sl
    5a02:	4631      	mov	r1, r6
    5a04:	4628      	mov	r0, r5
    5a06:	47b8      	blx	r7
    5a08:	3001      	adds	r0, #1
    5a0a:	f43f ae93 	beq.w	5734 <_printf_float+0xbc>
    5a0e:	f108 0801 	add.w	r8, r8, #1
    5a12:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
    5a16:	1a9b      	subs	r3, r3, r2
    5a18:	eba3 0309 	sub.w	r3, r3, r9
    5a1c:	4543      	cmp	r3, r8
    5a1e:	dcee      	bgt.n	59fe <_printf_float+0x386>
    5a20:	e74a      	b.n	58b8 <_printf_float+0x240>
    5a22:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    5a24:	2a01      	cmp	r2, #1
    5a26:	dc01      	bgt.n	5a2c <_printf_float+0x3b4>
    5a28:	07db      	lsls	r3, r3, #31
    5a2a:	d537      	bpl.n	5a9c <_printf_float+0x424>
    5a2c:	2301      	movs	r3, #1
    5a2e:	4642      	mov	r2, r8
    5a30:	4631      	mov	r1, r6
    5a32:	4628      	mov	r0, r5
    5a34:	47b8      	blx	r7
    5a36:	3001      	adds	r0, #1
    5a38:	f43f ae7c 	beq.w	5734 <_printf_float+0xbc>
    5a3c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    5a40:	4631      	mov	r1, r6
    5a42:	4628      	mov	r0, r5
    5a44:	47b8      	blx	r7
    5a46:	3001      	adds	r0, #1
    5a48:	f43f ae74 	beq.w	5734 <_printf_float+0xbc>
    5a4c:	2200      	movs	r2, #0
    5a4e:	2300      	movs	r3, #0
    5a50:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
    5a54:	f004 fb44 	bl	a0e0 <__aeabi_dcmpeq>
    5a58:	b9d8      	cbnz	r0, 5a92 <_printf_float+0x41a>
    5a5a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    5a5c:	f108 0201 	add.w	r2, r8, #1
    5a60:	3b01      	subs	r3, #1
    5a62:	4631      	mov	r1, r6
    5a64:	4628      	mov	r0, r5
    5a66:	47b8      	blx	r7
    5a68:	3001      	adds	r0, #1
    5a6a:	d10e      	bne.n	5a8a <_printf_float+0x412>
    5a6c:	e662      	b.n	5734 <_printf_float+0xbc>
    5a6e:	2301      	movs	r3, #1
    5a70:	4652      	mov	r2, sl
    5a72:	4631      	mov	r1, r6
    5a74:	4628      	mov	r0, r5
    5a76:	47b8      	blx	r7
    5a78:	3001      	adds	r0, #1
    5a7a:	f43f ae5b 	beq.w	5734 <_printf_float+0xbc>
    5a7e:	f108 0801 	add.w	r8, r8, #1
    5a82:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    5a84:	3b01      	subs	r3, #1
    5a86:	4543      	cmp	r3, r8
    5a88:	dcf1      	bgt.n	5a6e <_printf_float+0x3f6>
    5a8a:	464b      	mov	r3, r9
    5a8c:	f104 0250 	add.w	r2, r4, #80	; 0x50
    5a90:	e6e1      	b.n	5856 <_printf_float+0x1de>
    5a92:	f04f 0800 	mov.w	r8, #0
    5a96:	f104 0a1a 	add.w	sl, r4, #26
    5a9a:	e7f2      	b.n	5a82 <_printf_float+0x40a>
    5a9c:	2301      	movs	r3, #1
    5a9e:	4642      	mov	r2, r8
    5aa0:	e7df      	b.n	5a62 <_printf_float+0x3ea>
    5aa2:	2301      	movs	r3, #1
    5aa4:	464a      	mov	r2, r9
    5aa6:	4631      	mov	r1, r6
    5aa8:	4628      	mov	r0, r5
    5aaa:	47b8      	blx	r7
    5aac:	3001      	adds	r0, #1
    5aae:	f43f ae41 	beq.w	5734 <_printf_float+0xbc>
    5ab2:	f108 0801 	add.w	r8, r8, #1
    5ab6:	68e3      	ldr	r3, [r4, #12]
    5ab8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    5aba:	1a9b      	subs	r3, r3, r2
    5abc:	4543      	cmp	r3, r8
    5abe:	dcf0      	bgt.n	5aa2 <_printf_float+0x42a>
    5ac0:	e6fe      	b.n	58c0 <_printf_float+0x248>
    5ac2:	f04f 0800 	mov.w	r8, #0
    5ac6:	f104 0919 	add.w	r9, r4, #25
    5aca:	e7f4      	b.n	5ab6 <_printf_float+0x43e>

00005acc <_printf_common>:
_printf_common():
    5acc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    5ad0:	4691      	mov	r9, r2
    5ad2:	461f      	mov	r7, r3
    5ad4:	688a      	ldr	r2, [r1, #8]
    5ad6:	690b      	ldr	r3, [r1, #16]
    5ad8:	f8dd 8020 	ldr.w	r8, [sp, #32]
    5adc:	4293      	cmp	r3, r2
    5ade:	bfb8      	it	lt
    5ae0:	4613      	movlt	r3, r2
    5ae2:	f8c9 3000 	str.w	r3, [r9]
    5ae6:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
    5aea:	4606      	mov	r6, r0
    5aec:	460c      	mov	r4, r1
    5aee:	b112      	cbz	r2, 5af6 <_printf_common+0x2a>
    5af0:	3301      	adds	r3, #1
    5af2:	f8c9 3000 	str.w	r3, [r9]
    5af6:	6823      	ldr	r3, [r4, #0]
    5af8:	0699      	lsls	r1, r3, #26
    5afa:	bf42      	ittt	mi
    5afc:	f8d9 3000 	ldrmi.w	r3, [r9]
    5b00:	3302      	addmi	r3, #2
    5b02:	f8c9 3000 	strmi.w	r3, [r9]
    5b06:	6825      	ldr	r5, [r4, #0]
    5b08:	f015 0506 	ands.w	r5, r5, #6
    5b0c:	d107      	bne.n	5b1e <_printf_common+0x52>
    5b0e:	f104 0a19 	add.w	sl, r4, #25
    5b12:	68e3      	ldr	r3, [r4, #12]
    5b14:	f8d9 2000 	ldr.w	r2, [r9]
    5b18:	1a9b      	subs	r3, r3, r2
    5b1a:	42ab      	cmp	r3, r5
    5b1c:	dc28      	bgt.n	5b70 <_printf_common+0xa4>
    5b1e:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
    5b22:	6822      	ldr	r2, [r4, #0]
    5b24:	3300      	adds	r3, #0
    5b26:	bf18      	it	ne
    5b28:	2301      	movne	r3, #1
    5b2a:	0692      	lsls	r2, r2, #26
    5b2c:	d42d      	bmi.n	5b8a <_printf_common+0xbe>
    5b2e:	f104 0243 	add.w	r2, r4, #67	; 0x43
    5b32:	4639      	mov	r1, r7
    5b34:	4630      	mov	r0, r6
    5b36:	47c0      	blx	r8
    5b38:	3001      	adds	r0, #1
    5b3a:	d020      	beq.n	5b7e <_printf_common+0xb2>
    5b3c:	6823      	ldr	r3, [r4, #0]
    5b3e:	68e5      	ldr	r5, [r4, #12]
    5b40:	f8d9 2000 	ldr.w	r2, [r9]
    5b44:	f003 0306 	and.w	r3, r3, #6
    5b48:	2b04      	cmp	r3, #4
    5b4a:	bf08      	it	eq
    5b4c:	1aad      	subeq	r5, r5, r2
    5b4e:	68a3      	ldr	r3, [r4, #8]
    5b50:	6922      	ldr	r2, [r4, #16]
    5b52:	bf0c      	ite	eq
    5b54:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
    5b58:	2500      	movne	r5, #0
    5b5a:	4293      	cmp	r3, r2
    5b5c:	bfc4      	itt	gt
    5b5e:	1a9b      	subgt	r3, r3, r2
    5b60:	18ed      	addgt	r5, r5, r3
    5b62:	f04f 0900 	mov.w	r9, #0
    5b66:	341a      	adds	r4, #26
    5b68:	454d      	cmp	r5, r9
    5b6a:	d11a      	bne.n	5ba2 <_printf_common+0xd6>
    5b6c:	2000      	movs	r0, #0
    5b6e:	e008      	b.n	5b82 <_printf_common+0xb6>
    5b70:	2301      	movs	r3, #1
    5b72:	4652      	mov	r2, sl
    5b74:	4639      	mov	r1, r7
    5b76:	4630      	mov	r0, r6
    5b78:	47c0      	blx	r8
    5b7a:	3001      	adds	r0, #1
    5b7c:	d103      	bne.n	5b86 <_printf_common+0xba>
    5b7e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    5b82:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    5b86:	3501      	adds	r5, #1
    5b88:	e7c3      	b.n	5b12 <_printf_common+0x46>
    5b8a:	18e1      	adds	r1, r4, r3
    5b8c:	1c5a      	adds	r2, r3, #1
    5b8e:	2030      	movs	r0, #48	; 0x30
    5b90:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
    5b94:	4422      	add	r2, r4
    5b96:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
    5b9a:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
    5b9e:	3302      	adds	r3, #2
    5ba0:	e7c5      	b.n	5b2e <_printf_common+0x62>
    5ba2:	2301      	movs	r3, #1
    5ba4:	4622      	mov	r2, r4
    5ba6:	4639      	mov	r1, r7
    5ba8:	4630      	mov	r0, r6
    5baa:	47c0      	blx	r8
    5bac:	3001      	adds	r0, #1
    5bae:	d0e6      	beq.n	5b7e <_printf_common+0xb2>
    5bb0:	f109 0901 	add.w	r9, r9, #1
    5bb4:	e7d8      	b.n	5b68 <_printf_common+0x9c>
    5bb6:	Address 0x0000000000005bb6 is out of bounds.


00005bb8 <_printf_i>:
_printf_i():
    5bb8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    5bbc:	4606      	mov	r6, r0
    5bbe:	460c      	mov	r4, r1
    5bc0:	f101 0043 	add.w	r0, r1, #67	; 0x43
    5bc4:	7e09      	ldrb	r1, [r1, #24]
    5bc6:	b085      	sub	sp, #20
    5bc8:	296e      	cmp	r1, #110	; 0x6e
    5bca:	4698      	mov	r8, r3
    5bcc:	4617      	mov	r7, r2
    5bce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    5bd0:	f000 80ba 	beq.w	5d48 <_printf_i+0x190>
    5bd4:	d824      	bhi.n	5c20 <_printf_i+0x68>
    5bd6:	2963      	cmp	r1, #99	; 0x63
    5bd8:	d039      	beq.n	5c4e <_printf_i+0x96>
    5bda:	d80a      	bhi.n	5bf2 <_printf_i+0x3a>
    5bdc:	2900      	cmp	r1, #0
    5bde:	f000 80c3 	beq.w	5d68 <_printf_i+0x1b0>
    5be2:	2958      	cmp	r1, #88	; 0x58
    5be4:	f000 8091 	beq.w	5d0a <_printf_i+0x152>
    5be8:	f104 0542 	add.w	r5, r4, #66	; 0x42
    5bec:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
    5bf0:	e035      	b.n	5c5e <_printf_i+0xa6>
    5bf2:	2964      	cmp	r1, #100	; 0x64
    5bf4:	d001      	beq.n	5bfa <_printf_i+0x42>
    5bf6:	2969      	cmp	r1, #105	; 0x69
    5bf8:	d1f6      	bne.n	5be8 <_printf_i+0x30>
    5bfa:	6825      	ldr	r5, [r4, #0]
    5bfc:	681a      	ldr	r2, [r3, #0]
    5bfe:	f015 0f80 	tst.w	r5, #128	; 0x80
    5c02:	f102 0104 	add.w	r1, r2, #4
    5c06:	d02c      	beq.n	5c62 <_printf_i+0xaa>
    5c08:	6812      	ldr	r2, [r2, #0]
    5c0a:	6019      	str	r1, [r3, #0]
    5c0c:	2a00      	cmp	r2, #0
    5c0e:	da03      	bge.n	5c18 <_printf_i+0x60>
    5c10:	232d      	movs	r3, #45	; 0x2d
    5c12:	4252      	negs	r2, r2
    5c14:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
    5c18:	f8df c1bc 	ldr.w	ip, [pc, #444]	; 5dd8 <_printf_i+0x220>
    5c1c:	230a      	movs	r3, #10
    5c1e:	e03f      	b.n	5ca0 <_printf_i+0xe8>
    5c20:	2973      	cmp	r1, #115	; 0x73
    5c22:	f000 80a5 	beq.w	5d70 <_printf_i+0x1b8>
    5c26:	d808      	bhi.n	5c3a <_printf_i+0x82>
    5c28:	296f      	cmp	r1, #111	; 0x6f
    5c2a:	d021      	beq.n	5c70 <_printf_i+0xb8>
    5c2c:	2970      	cmp	r1, #112	; 0x70
    5c2e:	d1db      	bne.n	5be8 <_printf_i+0x30>
    5c30:	6822      	ldr	r2, [r4, #0]
    5c32:	f042 0220 	orr.w	r2, r2, #32
    5c36:	6022      	str	r2, [r4, #0]
    5c38:	e003      	b.n	5c42 <_printf_i+0x8a>
    5c3a:	2975      	cmp	r1, #117	; 0x75
    5c3c:	d018      	beq.n	5c70 <_printf_i+0xb8>
    5c3e:	2978      	cmp	r1, #120	; 0x78
    5c40:	d1d2      	bne.n	5be8 <_printf_i+0x30>
    5c42:	2278      	movs	r2, #120	; 0x78
    5c44:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
    5c48:	f8df c190 	ldr.w	ip, [pc, #400]	; 5ddc <_printf_i+0x224>
    5c4c:	e061      	b.n	5d12 <_printf_i+0x15a>
    5c4e:	681a      	ldr	r2, [r3, #0]
    5c50:	1d11      	adds	r1, r2, #4
    5c52:	6019      	str	r1, [r3, #0]
    5c54:	6813      	ldr	r3, [r2, #0]
    5c56:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    5c5a:	f104 0542 	add.w	r5, r4, #66	; 0x42
    5c5e:	2301      	movs	r3, #1
    5c60:	e093      	b.n	5d8a <_printf_i+0x1d2>
    5c62:	6812      	ldr	r2, [r2, #0]
    5c64:	6019      	str	r1, [r3, #0]
    5c66:	f015 0f40 	tst.w	r5, #64	; 0x40
    5c6a:	bf18      	it	ne
    5c6c:	b212      	sxthne	r2, r2
    5c6e:	e7cd      	b.n	5c0c <_printf_i+0x54>
    5c70:	f8d4 c000 	ldr.w	ip, [r4]
    5c74:	681a      	ldr	r2, [r3, #0]
    5c76:	f01c 0f80 	tst.w	ip, #128	; 0x80
    5c7a:	f102 0504 	add.w	r5, r2, #4
    5c7e:	601d      	str	r5, [r3, #0]
    5c80:	d001      	beq.n	5c86 <_printf_i+0xce>
    5c82:	6812      	ldr	r2, [r2, #0]
    5c84:	e003      	b.n	5c8e <_printf_i+0xd6>
    5c86:	f01c 0f40 	tst.w	ip, #64	; 0x40
    5c8a:	d0fa      	beq.n	5c82 <_printf_i+0xca>
    5c8c:	8812      	ldrh	r2, [r2, #0]
    5c8e:	f8df c148 	ldr.w	ip, [pc, #328]	; 5dd8 <_printf_i+0x220>
    5c92:	296f      	cmp	r1, #111	; 0x6f
    5c94:	bf0c      	ite	eq
    5c96:	2308      	moveq	r3, #8
    5c98:	230a      	movne	r3, #10
    5c9a:	2100      	movs	r1, #0
    5c9c:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
    5ca0:	6865      	ldr	r5, [r4, #4]
    5ca2:	60a5      	str	r5, [r4, #8]
    5ca4:	2d00      	cmp	r5, #0
    5ca6:	bfa2      	ittt	ge
    5ca8:	6821      	ldrge	r1, [r4, #0]
    5caa:	f021 0104 	bicge.w	r1, r1, #4
    5cae:	6021      	strge	r1, [r4, #0]
    5cb0:	b90a      	cbnz	r2, 5cb6 <_printf_i+0xfe>
    5cb2:	2d00      	cmp	r5, #0
    5cb4:	d046      	beq.n	5d44 <_printf_i+0x18c>
    5cb6:	4605      	mov	r5, r0
    5cb8:	fbb2 f1f3 	udiv	r1, r2, r3
    5cbc:	fb03 2e11 	mls	lr, r3, r1, r2
    5cc0:	4293      	cmp	r3, r2
    5cc2:	f81c e00e 	ldrb.w	lr, [ip, lr]
    5cc6:	f805 ed01 	strb.w	lr, [r5, #-1]!
    5cca:	d939      	bls.n	5d40 <_printf_i+0x188>
    5ccc:	2b08      	cmp	r3, #8
    5cce:	d10b      	bne.n	5ce8 <_printf_i+0x130>
    5cd0:	6823      	ldr	r3, [r4, #0]
    5cd2:	07da      	lsls	r2, r3, #31
    5cd4:	d508      	bpl.n	5ce8 <_printf_i+0x130>
    5cd6:	6923      	ldr	r3, [r4, #16]
    5cd8:	6862      	ldr	r2, [r4, #4]
    5cda:	429a      	cmp	r2, r3
    5cdc:	bfde      	ittt	le
    5cde:	2330      	movle	r3, #48	; 0x30
    5ce0:	f805 3c01 	strble.w	r3, [r5, #-1]
    5ce4:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
    5ce8:	1b40      	subs	r0, r0, r5
    5cea:	6120      	str	r0, [r4, #16]
    5cec:	f8cd 8000 	str.w	r8, [sp]
    5cf0:	463b      	mov	r3, r7
    5cf2:	aa03      	add	r2, sp, #12
    5cf4:	4621      	mov	r1, r4
    5cf6:	4630      	mov	r0, r6
    5cf8:	f7ff fee8 	bl	5acc <_printf_common>
    5cfc:	3001      	adds	r0, #1
    5cfe:	d149      	bne.n	5d94 <_printf_i+0x1dc>
    5d00:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    5d04:	b005      	add	sp, #20
    5d06:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    5d0a:	f8df c0cc 	ldr.w	ip, [pc, #204]	; 5dd8 <_printf_i+0x220>
    5d0e:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
    5d12:	681d      	ldr	r5, [r3, #0]
    5d14:	6821      	ldr	r1, [r4, #0]
    5d16:	f855 2b04 	ldr.w	r2, [r5], #4
    5d1a:	601d      	str	r5, [r3, #0]
    5d1c:	060d      	lsls	r5, r1, #24
    5d1e:	d50b      	bpl.n	5d38 <_printf_i+0x180>
    5d20:	07cd      	lsls	r5, r1, #31
    5d22:	bf44      	itt	mi
    5d24:	f041 0120 	orrmi.w	r1, r1, #32
    5d28:	6021      	strmi	r1, [r4, #0]
    5d2a:	b91a      	cbnz	r2, 5d34 <_printf_i+0x17c>
    5d2c:	6823      	ldr	r3, [r4, #0]
    5d2e:	f023 0320 	bic.w	r3, r3, #32
    5d32:	6023      	str	r3, [r4, #0]
    5d34:	2310      	movs	r3, #16
    5d36:	e7b0      	b.n	5c9a <_printf_i+0xe2>
    5d38:	064b      	lsls	r3, r1, #25
    5d3a:	bf48      	it	mi
    5d3c:	b292      	uxthmi	r2, r2
    5d3e:	e7ef      	b.n	5d20 <_printf_i+0x168>
    5d40:	460a      	mov	r2, r1
    5d42:	e7b9      	b.n	5cb8 <_printf_i+0x100>
    5d44:	4605      	mov	r5, r0
    5d46:	e7c1      	b.n	5ccc <_printf_i+0x114>
    5d48:	681a      	ldr	r2, [r3, #0]
    5d4a:	f8d4 c000 	ldr.w	ip, [r4]
    5d4e:	6961      	ldr	r1, [r4, #20]
    5d50:	1d15      	adds	r5, r2, #4
    5d52:	601d      	str	r5, [r3, #0]
    5d54:	f01c 0f80 	tst.w	ip, #128	; 0x80
    5d58:	6813      	ldr	r3, [r2, #0]
    5d5a:	d001      	beq.n	5d60 <_printf_i+0x1a8>
    5d5c:	6019      	str	r1, [r3, #0]
    5d5e:	e003      	b.n	5d68 <_printf_i+0x1b0>
    5d60:	f01c 0f40 	tst.w	ip, #64	; 0x40
    5d64:	d0fa      	beq.n	5d5c <_printf_i+0x1a4>
    5d66:	8019      	strh	r1, [r3, #0]
    5d68:	2300      	movs	r3, #0
    5d6a:	6123      	str	r3, [r4, #16]
    5d6c:	4605      	mov	r5, r0
    5d6e:	e7bd      	b.n	5cec <_printf_i+0x134>
    5d70:	681a      	ldr	r2, [r3, #0]
    5d72:	1d11      	adds	r1, r2, #4
    5d74:	6019      	str	r1, [r3, #0]
    5d76:	6815      	ldr	r5, [r2, #0]
    5d78:	6862      	ldr	r2, [r4, #4]
    5d7a:	2100      	movs	r1, #0
    5d7c:	4628      	mov	r0, r5
    5d7e:	f002 fee7 	bl	8b50 <memchr>
    5d82:	b108      	cbz	r0, 5d88 <_printf_i+0x1d0>
    5d84:	1b40      	subs	r0, r0, r5
    5d86:	6060      	str	r0, [r4, #4]
    5d88:	6863      	ldr	r3, [r4, #4]
    5d8a:	6123      	str	r3, [r4, #16]
    5d8c:	2300      	movs	r3, #0
    5d8e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
    5d92:	e7ab      	b.n	5cec <_printf_i+0x134>
    5d94:	6923      	ldr	r3, [r4, #16]
    5d96:	462a      	mov	r2, r5
    5d98:	4639      	mov	r1, r7
    5d9a:	4630      	mov	r0, r6
    5d9c:	47c0      	blx	r8
    5d9e:	3001      	adds	r0, #1
    5da0:	d0ae      	beq.n	5d00 <_printf_i+0x148>
    5da2:	6823      	ldr	r3, [r4, #0]
    5da4:	079b      	lsls	r3, r3, #30
    5da6:	d413      	bmi.n	5dd0 <_printf_i+0x218>
    5da8:	68e0      	ldr	r0, [r4, #12]
    5daa:	9b03      	ldr	r3, [sp, #12]
    5dac:	4298      	cmp	r0, r3
    5dae:	bfb8      	it	lt
    5db0:	4618      	movlt	r0, r3
    5db2:	e7a7      	b.n	5d04 <_printf_i+0x14c>
    5db4:	2301      	movs	r3, #1
    5db6:	464a      	mov	r2, r9
    5db8:	4639      	mov	r1, r7
    5dba:	4630      	mov	r0, r6
    5dbc:	47c0      	blx	r8
    5dbe:	3001      	adds	r0, #1
    5dc0:	d09e      	beq.n	5d00 <_printf_i+0x148>
    5dc2:	3501      	adds	r5, #1
    5dc4:	68e3      	ldr	r3, [r4, #12]
    5dc6:	9a03      	ldr	r2, [sp, #12]
    5dc8:	1a9b      	subs	r3, r3, r2
    5dca:	42ab      	cmp	r3, r5
    5dcc:	dcf2      	bgt.n	5db4 <_printf_i+0x1fc>
    5dce:	e7eb      	b.n	5da8 <_printf_i+0x1f0>
    5dd0:	2500      	movs	r5, #0
    5dd2:	f104 0919 	add.w	r9, r4, #25
    5dd6:	e7f5      	b.n	5dc4 <_printf_i+0x20c>
    5dd8:	0000b6f5 	.word	0x0000b6f5
    5ddc:	0000b706 	.word	0x0000b706

00005de0 <_scanf_float>:
_scanf_float():
    5de0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5de4:	b087      	sub	sp, #28
    5de6:	4617      	mov	r7, r2
    5de8:	9303      	str	r3, [sp, #12]
    5dea:	688b      	ldr	r3, [r1, #8]
    5dec:	1e5a      	subs	r2, r3, #1
    5dee:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
    5df2:	bf83      	ittte	hi
    5df4:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
    5df8:	195b      	addhi	r3, r3, r5
    5dfa:	9302      	strhi	r3, [sp, #8]
    5dfc:	2300      	movls	r3, #0
    5dfe:	bf86      	itte	hi
    5e00:	f240 135d 	movwhi	r3, #349	; 0x15d
    5e04:	608b      	strhi	r3, [r1, #8]
    5e06:	9302      	strls	r3, [sp, #8]
    5e08:	680b      	ldr	r3, [r1, #0]
    5e0a:	468b      	mov	fp, r1
    5e0c:	2500      	movs	r5, #0
    5e0e:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
    5e12:	f84b 3b1c 	str.w	r3, [fp], #28
    5e16:	e9cd 5504 	strd	r5, r5, [sp, #16]
    5e1a:	4681      	mov	r9, r0
    5e1c:	460c      	mov	r4, r1
    5e1e:	465e      	mov	r6, fp
    5e20:	46aa      	mov	sl, r5
    5e22:	46a8      	mov	r8, r5
    5e24:	9501      	str	r5, [sp, #4]
    5e26:	68a2      	ldr	r2, [r4, #8]
    5e28:	b182      	cbz	r2, 5e4c <_scanf_float+0x6c>
    5e2a:	683b      	ldr	r3, [r7, #0]
    5e2c:	781b      	ldrb	r3, [r3, #0]
    5e2e:	2b49      	cmp	r3, #73	; 0x49
    5e30:	d075      	beq.n	5f1e <_scanf_float+0x13e>
    5e32:	d84f      	bhi.n	5ed4 <_scanf_float+0xf4>
    5e34:	2b39      	cmp	r3, #57	; 0x39
    5e36:	d841      	bhi.n	5ebc <_scanf_float+0xdc>
    5e38:	2b31      	cmp	r3, #49	; 0x31
    5e3a:	f080 8087 	bcs.w	5f4c <_scanf_float+0x16c>
    5e3e:	2b2d      	cmp	r3, #45	; 0x2d
    5e40:	f000 808f 	beq.w	5f62 <_scanf_float+0x182>
    5e44:	d817      	bhi.n	5e76 <_scanf_float+0x96>
    5e46:	2b2b      	cmp	r3, #43	; 0x2b
    5e48:	f000 808b 	beq.w	5f62 <_scanf_float+0x182>
    5e4c:	f1b8 0f00 	cmp.w	r8, #0
    5e50:	d003      	beq.n	5e5a <_scanf_float+0x7a>
    5e52:	6823      	ldr	r3, [r4, #0]
    5e54:	f423 7380 	bic.w	r3, r3, #256	; 0x100
    5e58:	6023      	str	r3, [r4, #0]
    5e5a:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
    5e5e:	f1ba 0f01 	cmp.w	sl, #1
    5e62:	f200 80dd 	bhi.w	6020 <_scanf_float+0x240>
    5e66:	455e      	cmp	r6, fp
    5e68:	f200 80cf 	bhi.w	600a <_scanf_float+0x22a>
    5e6c:	2501      	movs	r5, #1
    5e6e:	4628      	mov	r0, r5
    5e70:	b007      	add	sp, #28
    5e72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5e76:	2b2e      	cmp	r3, #46	; 0x2e
    5e78:	f000 8093 	beq.w	5fa2 <_scanf_float+0x1c2>
    5e7c:	2b30      	cmp	r3, #48	; 0x30
    5e7e:	d1e5      	bne.n	5e4c <_scanf_float+0x6c>
    5e80:	6821      	ldr	r1, [r4, #0]
    5e82:	05c8      	lsls	r0, r1, #23
    5e84:	d562      	bpl.n	5f4c <_scanf_float+0x16c>
    5e86:	9b02      	ldr	r3, [sp, #8]
    5e88:	f021 0180 	bic.w	r1, r1, #128	; 0x80
    5e8c:	6021      	str	r1, [r4, #0]
    5e8e:	f108 0801 	add.w	r8, r8, #1
    5e92:	b11b      	cbz	r3, 5e9c <_scanf_float+0xbc>
    5e94:	3b01      	subs	r3, #1
    5e96:	3201      	adds	r2, #1
    5e98:	9302      	str	r3, [sp, #8]
    5e9a:	60a2      	str	r2, [r4, #8]
    5e9c:	68a3      	ldr	r3, [r4, #8]
    5e9e:	3b01      	subs	r3, #1
    5ea0:	60a3      	str	r3, [r4, #8]
    5ea2:	6923      	ldr	r3, [r4, #16]
    5ea4:	3301      	adds	r3, #1
    5ea6:	6123      	str	r3, [r4, #16]
    5ea8:	687b      	ldr	r3, [r7, #4]
    5eaa:	3b01      	subs	r3, #1
    5eac:	2b00      	cmp	r3, #0
    5eae:	607b      	str	r3, [r7, #4]
    5eb0:	f340 80a2 	ble.w	5ff8 <_scanf_float+0x218>
    5eb4:	683b      	ldr	r3, [r7, #0]
    5eb6:	3301      	adds	r3, #1
    5eb8:	603b      	str	r3, [r7, #0]
    5eba:	e7b4      	b.n	5e26 <_scanf_float+0x46>
    5ebc:	2b45      	cmp	r3, #69	; 0x45
    5ebe:	d07a      	beq.n	5fb6 <_scanf_float+0x1d6>
    5ec0:	2b46      	cmp	r3, #70	; 0x46
    5ec2:	d064      	beq.n	5f8e <_scanf_float+0x1ae>
    5ec4:	2b41      	cmp	r3, #65	; 0x41
    5ec6:	d1c1      	bne.n	5e4c <_scanf_float+0x6c>
    5ec8:	f1ba 0f01 	cmp.w	sl, #1
    5ecc:	d1be      	bne.n	5e4c <_scanf_float+0x6c>
    5ece:	f04f 0a02 	mov.w	sl, #2
    5ed2:	e043      	b.n	5f5c <_scanf_float+0x17c>
    5ed4:	2b65      	cmp	r3, #101	; 0x65
    5ed6:	d06e      	beq.n	5fb6 <_scanf_float+0x1d6>
    5ed8:	d81a      	bhi.n	5f10 <_scanf_float+0x130>
    5eda:	2b54      	cmp	r3, #84	; 0x54
    5edc:	d05c      	beq.n	5f98 <_scanf_float+0x1b8>
    5ede:	d813      	bhi.n	5f08 <_scanf_float+0x128>
    5ee0:	2b4e      	cmp	r3, #78	; 0x4e
    5ee2:	d1b3      	bne.n	5e4c <_scanf_float+0x6c>
    5ee4:	f1ba 0f00 	cmp.w	sl, #0
    5ee8:	d142      	bne.n	5f70 <_scanf_float+0x190>
    5eea:	f1b8 0f00 	cmp.w	r8, #0
    5eee:	d142      	bne.n	5f76 <_scanf_float+0x196>
    5ef0:	6822      	ldr	r2, [r4, #0]
    5ef2:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
    5ef6:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
    5efa:	d13c      	bne.n	5f76 <_scanf_float+0x196>
    5efc:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
    5f00:	6022      	str	r2, [r4, #0]
    5f02:	f04f 0a01 	mov.w	sl, #1
    5f06:	e029      	b.n	5f5c <_scanf_float+0x17c>
    5f08:	2b59      	cmp	r3, #89	; 0x59
    5f0a:	d01b      	beq.n	5f44 <_scanf_float+0x164>
    5f0c:	2b61      	cmp	r3, #97	; 0x61
    5f0e:	e7da      	b.n	5ec6 <_scanf_float+0xe6>
    5f10:	2b6e      	cmp	r3, #110	; 0x6e
    5f12:	d0e7      	beq.n	5ee4 <_scanf_float+0x104>
    5f14:	d812      	bhi.n	5f3c <_scanf_float+0x15c>
    5f16:	2b66      	cmp	r3, #102	; 0x66
    5f18:	d039      	beq.n	5f8e <_scanf_float+0x1ae>
    5f1a:	2b69      	cmp	r3, #105	; 0x69
    5f1c:	d196      	bne.n	5e4c <_scanf_float+0x6c>
    5f1e:	bb95      	cbnz	r5, 5f86 <_scanf_float+0x1a6>
    5f20:	f1b8 0f00 	cmp.w	r8, #0
    5f24:	d195      	bne.n	5e52 <_scanf_float+0x72>
    5f26:	6822      	ldr	r2, [r4, #0]
    5f28:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
    5f2c:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
    5f30:	d193      	bne.n	5e5a <_scanf_float+0x7a>
    5f32:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
    5f36:	6022      	str	r2, [r4, #0]
    5f38:	2501      	movs	r5, #1
    5f3a:	e00f      	b.n	5f5c <_scanf_float+0x17c>
    5f3c:	2b74      	cmp	r3, #116	; 0x74
    5f3e:	d02b      	beq.n	5f98 <_scanf_float+0x1b8>
    5f40:	2b79      	cmp	r3, #121	; 0x79
    5f42:	d183      	bne.n	5e4c <_scanf_float+0x6c>
    5f44:	2d07      	cmp	r5, #7
    5f46:	d181      	bne.n	5e4c <_scanf_float+0x6c>
    5f48:	2508      	movs	r5, #8
    5f4a:	e007      	b.n	5f5c <_scanf_float+0x17c>
    5f4c:	eb1a 0f05 	cmn.w	sl, r5
    5f50:	f47f af7c 	bne.w	5e4c <_scanf_float+0x6c>
    5f54:	6822      	ldr	r2, [r4, #0]
    5f56:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
    5f5a:	6022      	str	r2, [r4, #0]
    5f5c:	f806 3b01 	strb.w	r3, [r6], #1
    5f60:	e79c      	b.n	5e9c <_scanf_float+0xbc>
    5f62:	6822      	ldr	r2, [r4, #0]
    5f64:	0610      	lsls	r0, r2, #24
    5f66:	f57f af71 	bpl.w	5e4c <_scanf_float+0x6c>
    5f6a:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    5f6e:	e7f4      	b.n	5f5a <_scanf_float+0x17a>
    5f70:	f1ba 0f02 	cmp.w	sl, #2
    5f74:	d03d      	beq.n	5ff2 <_scanf_float+0x212>
    5f76:	2d01      	cmp	r5, #1
    5f78:	d002      	beq.n	5f80 <_scanf_float+0x1a0>
    5f7a:	2d04      	cmp	r5, #4
    5f7c:	f47f af66 	bne.w	5e4c <_scanf_float+0x6c>
    5f80:	3501      	adds	r5, #1
    5f82:	b2ed      	uxtb	r5, r5
    5f84:	e7ea      	b.n	5f5c <_scanf_float+0x17c>
    5f86:	2d03      	cmp	r5, #3
    5f88:	d0fa      	beq.n	5f80 <_scanf_float+0x1a0>
    5f8a:	2d05      	cmp	r5, #5
    5f8c:	e7f6      	b.n	5f7c <_scanf_float+0x19c>
    5f8e:	2d02      	cmp	r5, #2
    5f90:	f47f af5c 	bne.w	5e4c <_scanf_float+0x6c>
    5f94:	2503      	movs	r5, #3
    5f96:	e7e1      	b.n	5f5c <_scanf_float+0x17c>
    5f98:	2d06      	cmp	r5, #6
    5f9a:	f47f af57 	bne.w	5e4c <_scanf_float+0x6c>
    5f9e:	2507      	movs	r5, #7
    5fa0:	e7dc      	b.n	5f5c <_scanf_float+0x17c>
    5fa2:	6822      	ldr	r2, [r4, #0]
    5fa4:	0591      	lsls	r1, r2, #22
    5fa6:	f57f af51 	bpl.w	5e4c <_scanf_float+0x6c>
    5faa:	f422 7220 	bic.w	r2, r2, #640	; 0x280
    5fae:	6022      	str	r2, [r4, #0]
    5fb0:	f8cd 8004 	str.w	r8, [sp, #4]
    5fb4:	e7d2      	b.n	5f5c <_scanf_float+0x17c>
    5fb6:	6822      	ldr	r2, [r4, #0]
    5fb8:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
    5fbc:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
    5fc0:	d006      	beq.n	5fd0 <_scanf_float+0x1f0>
    5fc2:	0550      	lsls	r0, r2, #21
    5fc4:	f57f af42 	bpl.w	5e4c <_scanf_float+0x6c>
    5fc8:	f1b8 0f00 	cmp.w	r8, #0
    5fcc:	f43f af45 	beq.w	5e5a <_scanf_float+0x7a>
    5fd0:	0591      	lsls	r1, r2, #22
    5fd2:	bf58      	it	pl
    5fd4:	9901      	ldrpl	r1, [sp, #4]
    5fd6:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
    5fda:	bf58      	it	pl
    5fdc:	eba8 0101 	subpl.w	r1, r8, r1
    5fe0:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
    5fe4:	bf58      	it	pl
    5fe6:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
    5fea:	6022      	str	r2, [r4, #0]
    5fec:	f04f 0800 	mov.w	r8, #0
    5ff0:	e7b4      	b.n	5f5c <_scanf_float+0x17c>
    5ff2:	f04f 0a03 	mov.w	sl, #3
    5ff6:	e7b1      	b.n	5f5c <_scanf_float+0x17c>
    5ff8:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
    5ffc:	4639      	mov	r1, r7
    5ffe:	4648      	mov	r0, r9
    6000:	4798      	blx	r3
    6002:	2800      	cmp	r0, #0
    6004:	f43f af0f 	beq.w	5e26 <_scanf_float+0x46>
    6008:	e720      	b.n	5e4c <_scanf_float+0x6c>
    600a:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    600e:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
    6012:	463a      	mov	r2, r7
    6014:	4648      	mov	r0, r9
    6016:	4798      	blx	r3
    6018:	6923      	ldr	r3, [r4, #16]
    601a:	3b01      	subs	r3, #1
    601c:	6123      	str	r3, [r4, #16]
    601e:	e722      	b.n	5e66 <_scanf_float+0x86>
    6020:	1e6b      	subs	r3, r5, #1
    6022:	2b06      	cmp	r3, #6
    6024:	d825      	bhi.n	6072 <_scanf_float+0x292>
    6026:	2d02      	cmp	r5, #2
    6028:	d836      	bhi.n	6098 <_scanf_float+0x2b8>
    602a:	455e      	cmp	r6, fp
    602c:	f67f af1e 	bls.w	5e6c <_scanf_float+0x8c>
    6030:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    6034:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
    6038:	463a      	mov	r2, r7
    603a:	4648      	mov	r0, r9
    603c:	4798      	blx	r3
    603e:	6923      	ldr	r3, [r4, #16]
    6040:	3b01      	subs	r3, #1
    6042:	6123      	str	r3, [r4, #16]
    6044:	e7f1      	b.n	602a <_scanf_float+0x24a>
    6046:	9802      	ldr	r0, [sp, #8]
    6048:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    604c:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
    6050:	9002      	str	r0, [sp, #8]
    6052:	463a      	mov	r2, r7
    6054:	4648      	mov	r0, r9
    6056:	4798      	blx	r3
    6058:	6923      	ldr	r3, [r4, #16]
    605a:	3b01      	subs	r3, #1
    605c:	6123      	str	r3, [r4, #16]
    605e:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
    6062:	fa5f fa8a 	uxtb.w	sl, sl
    6066:	f1ba 0f02 	cmp.w	sl, #2
    606a:	d1ec      	bne.n	6046 <_scanf_float+0x266>
    606c:	3d03      	subs	r5, #3
    606e:	b2ed      	uxtb	r5, r5
    6070:	1b76      	subs	r6, r6, r5
    6072:	6823      	ldr	r3, [r4, #0]
    6074:	05da      	lsls	r2, r3, #23
    6076:	d52f      	bpl.n	60d8 <_scanf_float+0x2f8>
    6078:	055b      	lsls	r3, r3, #21
    607a:	d510      	bpl.n	609e <_scanf_float+0x2be>
    607c:	455e      	cmp	r6, fp
    607e:	f67f aef5 	bls.w	5e6c <_scanf_float+0x8c>
    6082:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    6086:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
    608a:	463a      	mov	r2, r7
    608c:	4648      	mov	r0, r9
    608e:	4798      	blx	r3
    6090:	6923      	ldr	r3, [r4, #16]
    6092:	3b01      	subs	r3, #1
    6094:	6123      	str	r3, [r4, #16]
    6096:	e7f1      	b.n	607c <_scanf_float+0x29c>
    6098:	46aa      	mov	sl, r5
    609a:	9602      	str	r6, [sp, #8]
    609c:	e7df      	b.n	605e <_scanf_float+0x27e>
    609e:	f816 1c01 	ldrb.w	r1, [r6, #-1]
    60a2:	6923      	ldr	r3, [r4, #16]
    60a4:	2965      	cmp	r1, #101	; 0x65
    60a6:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
    60aa:	f106 35ff 	add.w	r5, r6, #4294967295	; 0xffffffff
    60ae:	6123      	str	r3, [r4, #16]
    60b0:	d00c      	beq.n	60cc <_scanf_float+0x2ec>
    60b2:	2945      	cmp	r1, #69	; 0x45
    60b4:	d00a      	beq.n	60cc <_scanf_float+0x2ec>
    60b6:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    60ba:	463a      	mov	r2, r7
    60bc:	4648      	mov	r0, r9
    60be:	4798      	blx	r3
    60c0:	6923      	ldr	r3, [r4, #16]
    60c2:	f816 1c02 	ldrb.w	r1, [r6, #-2]
    60c6:	3b01      	subs	r3, #1
    60c8:	1eb5      	subs	r5, r6, #2
    60ca:	6123      	str	r3, [r4, #16]
    60cc:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    60d0:	463a      	mov	r2, r7
    60d2:	4648      	mov	r0, r9
    60d4:	4798      	blx	r3
    60d6:	462e      	mov	r6, r5
    60d8:	6825      	ldr	r5, [r4, #0]
    60da:	f015 0510 	ands.w	r5, r5, #16
    60de:	d158      	bne.n	6192 <_scanf_float+0x3b2>
    60e0:	7035      	strb	r5, [r6, #0]
    60e2:	6823      	ldr	r3, [r4, #0]
    60e4:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
    60e8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
    60ec:	d11c      	bne.n	6128 <_scanf_float+0x348>
    60ee:	9b01      	ldr	r3, [sp, #4]
    60f0:	4543      	cmp	r3, r8
    60f2:	eba3 0208 	sub.w	r2, r3, r8
    60f6:	d124      	bne.n	6142 <_scanf_float+0x362>
    60f8:	2200      	movs	r2, #0
    60fa:	4659      	mov	r1, fp
    60fc:	4648      	mov	r0, r9
    60fe:	f001 f847 	bl	7190 <_strtod_r>
    6102:	9b03      	ldr	r3, [sp, #12]
    6104:	6821      	ldr	r1, [r4, #0]
    6106:	681b      	ldr	r3, [r3, #0]
    6108:	f011 0f02 	tst.w	r1, #2
    610c:	ec57 6b10 	vmov	r6, r7, d0
    6110:	f103 0204 	add.w	r2, r3, #4
    6114:	d020      	beq.n	6158 <_scanf_float+0x378>
    6116:	9903      	ldr	r1, [sp, #12]
    6118:	600a      	str	r2, [r1, #0]
    611a:	681b      	ldr	r3, [r3, #0]
    611c:	e9c3 6700 	strd	r6, r7, [r3]
    6120:	68e3      	ldr	r3, [r4, #12]
    6122:	3301      	adds	r3, #1
    6124:	60e3      	str	r3, [r4, #12]
    6126:	e6a2      	b.n	5e6e <_scanf_float+0x8e>
    6128:	9b04      	ldr	r3, [sp, #16]
    612a:	2b00      	cmp	r3, #0
    612c:	d0e4      	beq.n	60f8 <_scanf_float+0x318>
    612e:	9905      	ldr	r1, [sp, #20]
    6130:	230a      	movs	r3, #10
    6132:	462a      	mov	r2, r5
    6134:	3101      	adds	r1, #1
    6136:	4648      	mov	r0, r9
    6138:	f001 f8a8 	bl	728c <_strtol_r>
    613c:	9b04      	ldr	r3, [sp, #16]
    613e:	9e05      	ldr	r6, [sp, #20]
    6140:	1ac2      	subs	r2, r0, r3
    6142:	f204 136f 	addw	r3, r4, #367	; 0x16f
    6146:	429e      	cmp	r6, r3
    6148:	bf28      	it	cs
    614a:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
    614e:	4912      	ldr	r1, [pc, #72]	; (6198 <_scanf_float+0x3b8>)
    6150:	4630      	mov	r0, r6
    6152:	f000 f9e7 	bl	6524 <siprintf>
    6156:	e7cf      	b.n	60f8 <_scanf_float+0x318>
    6158:	f011 0f04 	tst.w	r1, #4
    615c:	9903      	ldr	r1, [sp, #12]
    615e:	600a      	str	r2, [r1, #0]
    6160:	d1db      	bne.n	611a <_scanf_float+0x33a>
    6162:	f8d3 8000 	ldr.w	r8, [r3]
    6166:	ee10 2a10 	vmov	r2, s0
    616a:	463b      	mov	r3, r7
    616c:	ee10 0a10 	vmov	r0, s0
    6170:	4639      	mov	r1, r7
    6172:	f003 ffe7 	bl	a144 <__aeabi_dcmpun>
    6176:	b128      	cbz	r0, 6184 <_scanf_float+0x3a4>
    6178:	4808      	ldr	r0, [pc, #32]	; (619c <_scanf_float+0x3bc>)
    617a:	f000 f9cd 	bl	6518 <nanf>
    617e:	ed88 0a00 	vstr	s0, [r8]
    6182:	e7cd      	b.n	6120 <_scanf_float+0x340>
    6184:	4630      	mov	r0, r6
    6186:	4639      	mov	r1, r7
    6188:	f004 f83a 	bl	a200 <__aeabi_d2f>
    618c:	f8c8 0000 	str.w	r0, [r8]
    6190:	e7c6      	b.n	6120 <_scanf_float+0x340>
    6192:	2500      	movs	r5, #0
    6194:	e66b      	b.n	5e6e <_scanf_float+0x8e>
    6196:	bf00      	nop
    6198:	0000b717 	.word	0x0000b717
    619c:	0000a439 	.word	0x0000a439

000061a0 <iprintf>:
iprintf():
    61a0:	b40f      	push	{r0, r1, r2, r3}
    61a2:	4b0a      	ldr	r3, [pc, #40]	; (61cc <iprintf+0x2c>)
    61a4:	b513      	push	{r0, r1, r4, lr}
    61a6:	681c      	ldr	r4, [r3, #0]
    61a8:	b124      	cbz	r4, 61b4 <iprintf+0x14>
    61aa:	69a3      	ldr	r3, [r4, #24]
    61ac:	b913      	cbnz	r3, 61b4 <iprintf+0x14>
    61ae:	4620      	mov	r0, r4
    61b0:	f002 f88e 	bl	82d0 <__sinit>
    61b4:	ab05      	add	r3, sp, #20
    61b6:	9a04      	ldr	r2, [sp, #16]
    61b8:	68a1      	ldr	r1, [r4, #8]
    61ba:	9301      	str	r3, [sp, #4]
    61bc:	4620      	mov	r0, r4
    61be:	f7ff f8a3 	bl	5308 <_vfiprintf_r>
    61c2:	b002      	add	sp, #8
    61c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    61c8:	b004      	add	sp, #16
    61ca:	4770      	bx	lr
    61cc:	1000015c 	.word	0x1000015c

000061d0 <_putc_r>:
_putc_r():
    61d0:	b570      	push	{r4, r5, r6, lr}
    61d2:	460d      	mov	r5, r1
    61d4:	4614      	mov	r4, r2
    61d6:	4606      	mov	r6, r0
    61d8:	b118      	cbz	r0, 61e2 <_putc_r+0x12>
    61da:	6983      	ldr	r3, [r0, #24]
    61dc:	b90b      	cbnz	r3, 61e2 <_putc_r+0x12>
    61de:	f002 f877 	bl	82d0 <__sinit>
    61e2:	4b1c      	ldr	r3, [pc, #112]	; (6254 <_putc_r+0x84>)
    61e4:	429c      	cmp	r4, r3
    61e6:	d124      	bne.n	6232 <_putc_r+0x62>
    61e8:	6874      	ldr	r4, [r6, #4]
    61ea:	6e63      	ldr	r3, [r4, #100]	; 0x64
    61ec:	07d8      	lsls	r0, r3, #31
    61ee:	d405      	bmi.n	61fc <_putc_r+0x2c>
    61f0:	89a3      	ldrh	r3, [r4, #12]
    61f2:	0599      	lsls	r1, r3, #22
    61f4:	d402      	bmi.n	61fc <_putc_r+0x2c>
    61f6:	6da0      	ldr	r0, [r4, #88]	; 0x58
    61f8:	f7fe ff71 	bl	50de <__retarget_lock_acquire_recursive>
    61fc:	68a3      	ldr	r3, [r4, #8]
    61fe:	3b01      	subs	r3, #1
    6200:	2b00      	cmp	r3, #0
    6202:	60a3      	str	r3, [r4, #8]
    6204:	da05      	bge.n	6212 <_putc_r+0x42>
    6206:	69a2      	ldr	r2, [r4, #24]
    6208:	4293      	cmp	r3, r2
    620a:	db1c      	blt.n	6246 <_putc_r+0x76>
    620c:	b2eb      	uxtb	r3, r5
    620e:	2b0a      	cmp	r3, #10
    6210:	d019      	beq.n	6246 <_putc_r+0x76>
    6212:	6823      	ldr	r3, [r4, #0]
    6214:	1c5a      	adds	r2, r3, #1
    6216:	6022      	str	r2, [r4, #0]
    6218:	701d      	strb	r5, [r3, #0]
    621a:	b2ed      	uxtb	r5, r5
    621c:	6e63      	ldr	r3, [r4, #100]	; 0x64
    621e:	07da      	lsls	r2, r3, #31
    6220:	d405      	bmi.n	622e <_putc_r+0x5e>
    6222:	89a3      	ldrh	r3, [r4, #12]
    6224:	059b      	lsls	r3, r3, #22
    6226:	d402      	bmi.n	622e <_putc_r+0x5e>
    6228:	6da0      	ldr	r0, [r4, #88]	; 0x58
    622a:	f7fe ff59 	bl	50e0 <__retarget_lock_release_recursive>
    622e:	4628      	mov	r0, r5
    6230:	bd70      	pop	{r4, r5, r6, pc}
    6232:	4b09      	ldr	r3, [pc, #36]	; (6258 <_putc_r+0x88>)
    6234:	429c      	cmp	r4, r3
    6236:	d101      	bne.n	623c <_putc_r+0x6c>
    6238:	68b4      	ldr	r4, [r6, #8]
    623a:	e7d6      	b.n	61ea <_putc_r+0x1a>
    623c:	4b07      	ldr	r3, [pc, #28]	; (625c <_putc_r+0x8c>)
    623e:	429c      	cmp	r4, r3
    6240:	bf08      	it	eq
    6242:	68f4      	ldreq	r4, [r6, #12]
    6244:	e7d1      	b.n	61ea <_putc_r+0x1a>
    6246:	4629      	mov	r1, r5
    6248:	4622      	mov	r2, r4
    624a:	4630      	mov	r0, r6
    624c:	f001 f820 	bl	7290 <__swbuf_r>
    6250:	4605      	mov	r5, r0
    6252:	e7e3      	b.n	621c <_putc_r+0x4c>
    6254:	0000b7a0 	.word	0x0000b7a0
    6258:	0000b7c0 	.word	0x0000b7c0
    625c:	0000b780 	.word	0x0000b780

00006260 <putchar>:
putchar():
    6260:	b538      	push	{r3, r4, r5, lr}
    6262:	4b08      	ldr	r3, [pc, #32]	; (6284 <putchar+0x24>)
    6264:	681c      	ldr	r4, [r3, #0]
    6266:	4605      	mov	r5, r0
    6268:	b124      	cbz	r4, 6274 <putchar+0x14>
    626a:	69a3      	ldr	r3, [r4, #24]
    626c:	b913      	cbnz	r3, 6274 <putchar+0x14>
    626e:	4620      	mov	r0, r4
    6270:	f002 f82e 	bl	82d0 <__sinit>
    6274:	68a2      	ldr	r2, [r4, #8]
    6276:	4629      	mov	r1, r5
    6278:	4620      	mov	r0, r4
    627a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    627e:	f7ff bfa7 	b.w	61d0 <_putc_r>
    6282:	bf00      	nop
    6284:	1000015c 	.word	0x1000015c

00006288 <_puts_r>:
_puts_r():
    6288:	b570      	push	{r4, r5, r6, lr}
    628a:	460e      	mov	r6, r1
    628c:	4605      	mov	r5, r0
    628e:	b118      	cbz	r0, 6298 <_puts_r+0x10>
    6290:	6983      	ldr	r3, [r0, #24]
    6292:	b90b      	cbnz	r3, 6298 <_puts_r+0x10>
    6294:	f002 f81c 	bl	82d0 <__sinit>
    6298:	69ab      	ldr	r3, [r5, #24]
    629a:	68ac      	ldr	r4, [r5, #8]
    629c:	b913      	cbnz	r3, 62a4 <_puts_r+0x1c>
    629e:	4628      	mov	r0, r5
    62a0:	f002 f816 	bl	82d0 <__sinit>
    62a4:	4b2c      	ldr	r3, [pc, #176]	; (6358 <_puts_r+0xd0>)
    62a6:	429c      	cmp	r4, r3
    62a8:	d120      	bne.n	62ec <_puts_r+0x64>
    62aa:	686c      	ldr	r4, [r5, #4]
    62ac:	6e63      	ldr	r3, [r4, #100]	; 0x64
    62ae:	07db      	lsls	r3, r3, #31
    62b0:	d405      	bmi.n	62be <_puts_r+0x36>
    62b2:	89a3      	ldrh	r3, [r4, #12]
    62b4:	0598      	lsls	r0, r3, #22
    62b6:	d402      	bmi.n	62be <_puts_r+0x36>
    62b8:	6da0      	ldr	r0, [r4, #88]	; 0x58
    62ba:	f7fe ff10 	bl	50de <__retarget_lock_acquire_recursive>
    62be:	89a3      	ldrh	r3, [r4, #12]
    62c0:	0719      	lsls	r1, r3, #28
    62c2:	d51d      	bpl.n	6300 <_puts_r+0x78>
    62c4:	6923      	ldr	r3, [r4, #16]
    62c6:	b1db      	cbz	r3, 6300 <_puts_r+0x78>
    62c8:	3e01      	subs	r6, #1
    62ca:	68a3      	ldr	r3, [r4, #8]
    62cc:	f816 1f01 	ldrb.w	r1, [r6, #1]!
    62d0:	3b01      	subs	r3, #1
    62d2:	60a3      	str	r3, [r4, #8]
    62d4:	bb39      	cbnz	r1, 6326 <_puts_r+0x9e>
    62d6:	2b00      	cmp	r3, #0
    62d8:	da38      	bge.n	634c <_puts_r+0xc4>
    62da:	4622      	mov	r2, r4
    62dc:	210a      	movs	r1, #10
    62de:	4628      	mov	r0, r5
    62e0:	f000 ffd6 	bl	7290 <__swbuf_r>
    62e4:	3001      	adds	r0, #1
    62e6:	d011      	beq.n	630c <_puts_r+0x84>
    62e8:	250a      	movs	r5, #10
    62ea:	e011      	b.n	6310 <_puts_r+0x88>
    62ec:	4b1b      	ldr	r3, [pc, #108]	; (635c <_puts_r+0xd4>)
    62ee:	429c      	cmp	r4, r3
    62f0:	d101      	bne.n	62f6 <_puts_r+0x6e>
    62f2:	68ac      	ldr	r4, [r5, #8]
    62f4:	e7da      	b.n	62ac <_puts_r+0x24>
    62f6:	4b1a      	ldr	r3, [pc, #104]	; (6360 <_puts_r+0xd8>)
    62f8:	429c      	cmp	r4, r3
    62fa:	bf08      	it	eq
    62fc:	68ec      	ldreq	r4, [r5, #12]
    62fe:	e7d5      	b.n	62ac <_puts_r+0x24>
    6300:	4621      	mov	r1, r4
    6302:	4628      	mov	r0, r5
    6304:	f001 f816 	bl	7334 <__swsetup_r>
    6308:	2800      	cmp	r0, #0
    630a:	d0dd      	beq.n	62c8 <_puts_r+0x40>
    630c:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
    6310:	6e63      	ldr	r3, [r4, #100]	; 0x64
    6312:	07da      	lsls	r2, r3, #31
    6314:	d405      	bmi.n	6322 <_puts_r+0x9a>
    6316:	89a3      	ldrh	r3, [r4, #12]
    6318:	059b      	lsls	r3, r3, #22
    631a:	d402      	bmi.n	6322 <_puts_r+0x9a>
    631c:	6da0      	ldr	r0, [r4, #88]	; 0x58
    631e:	f7fe fedf 	bl	50e0 <__retarget_lock_release_recursive>
    6322:	4628      	mov	r0, r5
    6324:	bd70      	pop	{r4, r5, r6, pc}
    6326:	2b00      	cmp	r3, #0
    6328:	da04      	bge.n	6334 <_puts_r+0xac>
    632a:	69a2      	ldr	r2, [r4, #24]
    632c:	429a      	cmp	r2, r3
    632e:	dc06      	bgt.n	633e <_puts_r+0xb6>
    6330:	290a      	cmp	r1, #10
    6332:	d004      	beq.n	633e <_puts_r+0xb6>
    6334:	6823      	ldr	r3, [r4, #0]
    6336:	1c5a      	adds	r2, r3, #1
    6338:	6022      	str	r2, [r4, #0]
    633a:	7019      	strb	r1, [r3, #0]
    633c:	e7c5      	b.n	62ca <_puts_r+0x42>
    633e:	4622      	mov	r2, r4
    6340:	4628      	mov	r0, r5
    6342:	f000 ffa5 	bl	7290 <__swbuf_r>
    6346:	3001      	adds	r0, #1
    6348:	d1bf      	bne.n	62ca <_puts_r+0x42>
    634a:	e7df      	b.n	630c <_puts_r+0x84>
    634c:	6823      	ldr	r3, [r4, #0]
    634e:	250a      	movs	r5, #10
    6350:	1c5a      	adds	r2, r3, #1
    6352:	6022      	str	r2, [r4, #0]
    6354:	701d      	strb	r5, [r3, #0]
    6356:	e7db      	b.n	6310 <_puts_r+0x88>
    6358:	0000b7a0 	.word	0x0000b7a0
    635c:	0000b7c0 	.word	0x0000b7c0
    6360:	0000b780 	.word	0x0000b780

00006364 <puts>:
puts():
    6364:	4b02      	ldr	r3, [pc, #8]	; (6370 <puts+0xc>)
    6366:	4601      	mov	r1, r0
    6368:	6818      	ldr	r0, [r3, #0]
    636a:	f7ff bf8d 	b.w	6288 <_puts_r>
    636e:	bf00      	nop
    6370:	1000015c 	.word	0x1000015c

00006374 <_sbrk_r>:
_sbrk_r():
    6374:	b538      	push	{r3, r4, r5, lr}
    6376:	4c06      	ldr	r4, [pc, #24]	; (6390 <_sbrk_r+0x1c>)
    6378:	2300      	movs	r3, #0
    637a:	4605      	mov	r5, r0
    637c:	4608      	mov	r0, r1
    637e:	6023      	str	r3, [r4, #0]
    6380:	f7f9 ffe0 	bl	344 <_sbrk>
    6384:	1c43      	adds	r3, r0, #1
    6386:	d102      	bne.n	638e <_sbrk_r+0x1a>
    6388:	6823      	ldr	r3, [r4, #0]
    638a:	b103      	cbz	r3, 638e <_sbrk_r+0x1a>
    638c:	602b      	str	r3, [r5, #0]
    638e:	bd38      	pop	{r3, r4, r5, pc}
    6390:	10000b84 	.word	0x10000b84

00006394 <setvbuf>:
setvbuf():
    6394:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    6398:	461e      	mov	r6, r3
    639a:	4b5b      	ldr	r3, [pc, #364]	; (6508 <setvbuf+0x174>)
    639c:	681d      	ldr	r5, [r3, #0]
    639e:	4604      	mov	r4, r0
    63a0:	460f      	mov	r7, r1
    63a2:	4690      	mov	r8, r2
    63a4:	b125      	cbz	r5, 63b0 <setvbuf+0x1c>
    63a6:	69ab      	ldr	r3, [r5, #24]
    63a8:	b913      	cbnz	r3, 63b0 <setvbuf+0x1c>
    63aa:	4628      	mov	r0, r5
    63ac:	f001 ff90 	bl	82d0 <__sinit>
    63b0:	4b56      	ldr	r3, [pc, #344]	; (650c <setvbuf+0x178>)
    63b2:	429c      	cmp	r4, r3
    63b4:	d166      	bne.n	6484 <setvbuf+0xf0>
    63b6:	686c      	ldr	r4, [r5, #4]
    63b8:	f1b8 0f02 	cmp.w	r8, #2
    63bc:	d006      	beq.n	63cc <setvbuf+0x38>
    63be:	f1b8 0f01 	cmp.w	r8, #1
    63c2:	f200 809d 	bhi.w	6500 <setvbuf+0x16c>
    63c6:	2e00      	cmp	r6, #0
    63c8:	f2c0 809a 	blt.w	6500 <setvbuf+0x16c>
    63cc:	6e63      	ldr	r3, [r4, #100]	; 0x64
    63ce:	07da      	lsls	r2, r3, #31
    63d0:	d405      	bmi.n	63de <setvbuf+0x4a>
    63d2:	89a3      	ldrh	r3, [r4, #12]
    63d4:	059b      	lsls	r3, r3, #22
    63d6:	d402      	bmi.n	63de <setvbuf+0x4a>
    63d8:	6da0      	ldr	r0, [r4, #88]	; 0x58
    63da:	f7fe fe80 	bl	50de <__retarget_lock_acquire_recursive>
    63de:	4621      	mov	r1, r4
    63e0:	4628      	mov	r0, r5
    63e2:	f001 fee1 	bl	81a8 <_fflush_r>
    63e6:	6b61      	ldr	r1, [r4, #52]	; 0x34
    63e8:	b141      	cbz	r1, 63fc <setvbuf+0x68>
    63ea:	f104 0344 	add.w	r3, r4, #68	; 0x44
    63ee:	4299      	cmp	r1, r3
    63f0:	d002      	beq.n	63f8 <setvbuf+0x64>
    63f2:	4628      	mov	r0, r5
    63f4:	f7fe feb6 	bl	5164 <_free_r>
    63f8:	2300      	movs	r3, #0
    63fa:	6363      	str	r3, [r4, #52]	; 0x34
    63fc:	2300      	movs	r3, #0
    63fe:	61a3      	str	r3, [r4, #24]
    6400:	6063      	str	r3, [r4, #4]
    6402:	89a3      	ldrh	r3, [r4, #12]
    6404:	0618      	lsls	r0, r3, #24
    6406:	d503      	bpl.n	6410 <setvbuf+0x7c>
    6408:	6921      	ldr	r1, [r4, #16]
    640a:	4628      	mov	r0, r5
    640c:	f7fe feaa 	bl	5164 <_free_r>
    6410:	89a3      	ldrh	r3, [r4, #12]
    6412:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
    6416:	f023 0303 	bic.w	r3, r3, #3
    641a:	f1b8 0f02 	cmp.w	r8, #2
    641e:	81a3      	strh	r3, [r4, #12]
    6420:	d06a      	beq.n	64f8 <setvbuf+0x164>
    6422:	ab01      	add	r3, sp, #4
    6424:	466a      	mov	r2, sp
    6426:	4621      	mov	r1, r4
    6428:	4628      	mov	r0, r5
    642a:	f002 fb1b 	bl	8a64 <__swhatbuf_r>
    642e:	89a3      	ldrh	r3, [r4, #12]
    6430:	4318      	orrs	r0, r3
    6432:	81a0      	strh	r0, [r4, #12]
    6434:	2e00      	cmp	r6, #0
    6436:	d12f      	bne.n	6498 <setvbuf+0x104>
    6438:	9e00      	ldr	r6, [sp, #0]
    643a:	4630      	mov	r0, r6
    643c:	f7fe fe52 	bl	50e4 <malloc>
    6440:	4607      	mov	r7, r0
    6442:	2800      	cmp	r0, #0
    6444:	d153      	bne.n	64ee <setvbuf+0x15a>
    6446:	f8dd 9000 	ldr.w	r9, [sp]
    644a:	45b1      	cmp	r9, r6
    644c:	d148      	bne.n	64e0 <setvbuf+0x14c>
    644e:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
    6452:	2200      	movs	r2, #0
    6454:	60a2      	str	r2, [r4, #8]
    6456:	f104 0247 	add.w	r2, r4, #71	; 0x47
    645a:	6022      	str	r2, [r4, #0]
    645c:	6122      	str	r2, [r4, #16]
    645e:	2201      	movs	r2, #1
    6460:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    6464:	6162      	str	r2, [r4, #20]
    6466:	6e62      	ldr	r2, [r4, #100]	; 0x64
    6468:	f043 0302 	orr.w	r3, r3, #2
    646c:	07d1      	lsls	r1, r2, #31
    646e:	81a3      	strh	r3, [r4, #12]
    6470:	d404      	bmi.n	647c <setvbuf+0xe8>
    6472:	059b      	lsls	r3, r3, #22
    6474:	d402      	bmi.n	647c <setvbuf+0xe8>
    6476:	6da0      	ldr	r0, [r4, #88]	; 0x58
    6478:	f7fe fe32 	bl	50e0 <__retarget_lock_release_recursive>
    647c:	4628      	mov	r0, r5
    647e:	b003      	add	sp, #12
    6480:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    6484:	4b22      	ldr	r3, [pc, #136]	; (6510 <setvbuf+0x17c>)
    6486:	429c      	cmp	r4, r3
    6488:	d101      	bne.n	648e <setvbuf+0xfa>
    648a:	68ac      	ldr	r4, [r5, #8]
    648c:	e794      	b.n	63b8 <setvbuf+0x24>
    648e:	4b21      	ldr	r3, [pc, #132]	; (6514 <setvbuf+0x180>)
    6490:	429c      	cmp	r4, r3
    6492:	bf08      	it	eq
    6494:	68ec      	ldreq	r4, [r5, #12]
    6496:	e78f      	b.n	63b8 <setvbuf+0x24>
    6498:	2f00      	cmp	r7, #0
    649a:	d0ce      	beq.n	643a <setvbuf+0xa6>
    649c:	69ab      	ldr	r3, [r5, #24]
    649e:	b913      	cbnz	r3, 64a6 <setvbuf+0x112>
    64a0:	4628      	mov	r0, r5
    64a2:	f001 ff15 	bl	82d0 <__sinit>
    64a6:	f1b8 0f01 	cmp.w	r8, #1
    64aa:	bf08      	it	eq
    64ac:	89a3      	ldrheq	r3, [r4, #12]
    64ae:	6027      	str	r7, [r4, #0]
    64b0:	bf04      	itt	eq
    64b2:	f043 0301 	orreq.w	r3, r3, #1
    64b6:	81a3      	strheq	r3, [r4, #12]
    64b8:	89a3      	ldrh	r3, [r4, #12]
    64ba:	f013 0208 	ands.w	r2, r3, #8
    64be:	e9c4 7604 	strd	r7, r6, [r4, #16]
    64c2:	d01b      	beq.n	64fc <setvbuf+0x168>
    64c4:	07da      	lsls	r2, r3, #31
    64c6:	bf41      	itttt	mi
    64c8:	2200      	movmi	r2, #0
    64ca:	4276      	negmi	r6, r6
    64cc:	60a2      	strmi	r2, [r4, #8]
    64ce:	61a6      	strmi	r6, [r4, #24]
    64d0:	bf58      	it	pl
    64d2:	60a6      	strpl	r6, [r4, #8]
    64d4:	6e65      	ldr	r5, [r4, #100]	; 0x64
    64d6:	f015 0501 	ands.w	r5, r5, #1
    64da:	d0ca      	beq.n	6472 <setvbuf+0xde>
    64dc:	2500      	movs	r5, #0
    64de:	e7cd      	b.n	647c <setvbuf+0xe8>
    64e0:	4648      	mov	r0, r9
    64e2:	f7fe fdff 	bl	50e4 <malloc>
    64e6:	4607      	mov	r7, r0
    64e8:	2800      	cmp	r0, #0
    64ea:	d0b0      	beq.n	644e <setvbuf+0xba>
    64ec:	464e      	mov	r6, r9
    64ee:	89a3      	ldrh	r3, [r4, #12]
    64f0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    64f4:	81a3      	strh	r3, [r4, #12]
    64f6:	e7d1      	b.n	649c <setvbuf+0x108>
    64f8:	2500      	movs	r5, #0
    64fa:	e7aa      	b.n	6452 <setvbuf+0xbe>
    64fc:	60a2      	str	r2, [r4, #8]
    64fe:	e7e9      	b.n	64d4 <setvbuf+0x140>
    6500:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
    6504:	e7ba      	b.n	647c <setvbuf+0xe8>
    6506:	bf00      	nop
    6508:	1000015c 	.word	0x1000015c
    650c:	0000b7a0 	.word	0x0000b7a0
    6510:	0000b7c0 	.word	0x0000b7c0
    6514:	0000b780 	.word	0x0000b780

00006518 <nanf>:
nanf():
    6518:	ed9f 0a01 	vldr	s0, [pc, #4]	; 6520 <nanf+0x8>
    651c:	4770      	bx	lr
    651e:	bf00      	nop
    6520:	7fc00000 	.word	0x7fc00000

00006524 <siprintf>:
siprintf():
    6524:	b40e      	push	{r1, r2, r3}
    6526:	b500      	push	{lr}
    6528:	b09c      	sub	sp, #112	; 0x70
    652a:	ab1d      	add	r3, sp, #116	; 0x74
    652c:	9002      	str	r0, [sp, #8]
    652e:	9006      	str	r0, [sp, #24]
    6530:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
    6534:	4809      	ldr	r0, [pc, #36]	; (655c <siprintf+0x38>)
    6536:	9107      	str	r1, [sp, #28]
    6538:	9104      	str	r1, [sp, #16]
    653a:	4909      	ldr	r1, [pc, #36]	; (6560 <siprintf+0x3c>)
    653c:	f853 2b04 	ldr.w	r2, [r3], #4
    6540:	9105      	str	r1, [sp, #20]
    6542:	6800      	ldr	r0, [r0, #0]
    6544:	9301      	str	r3, [sp, #4]
    6546:	a902      	add	r1, sp, #8
    6548:	f002 ffe6 	bl	9518 <_svfiprintf_r>
    654c:	9b02      	ldr	r3, [sp, #8]
    654e:	2200      	movs	r2, #0
    6550:	701a      	strb	r2, [r3, #0]
    6552:	b01c      	add	sp, #112	; 0x70
    6554:	f85d eb04 	ldr.w	lr, [sp], #4
    6558:	b003      	add	sp, #12
    655a:	4770      	bx	lr
    655c:	1000015c 	.word	0x1000015c
    6560:	ffff0208 	.word	0xffff0208

00006564 <strlen>:
strlen():
    6564:	4603      	mov	r3, r0
    6566:	f813 2b01 	ldrb.w	r2, [r3], #1
    656a:	2a00      	cmp	r2, #0
    656c:	d1fb      	bne.n	6566 <strlen+0x2>
    656e:	1a18      	subs	r0, r3, r0
    6570:	3801      	subs	r0, #1
    6572:	4770      	bx	lr

00006574 <strncmp>:
strncmp():
    6574:	b510      	push	{r4, lr}
    6576:	b16a      	cbz	r2, 6594 <strncmp+0x20>
    6578:	3901      	subs	r1, #1
    657a:	1884      	adds	r4, r0, r2
    657c:	f810 3b01 	ldrb.w	r3, [r0], #1
    6580:	f811 2f01 	ldrb.w	r2, [r1, #1]!
    6584:	4293      	cmp	r3, r2
    6586:	d103      	bne.n	6590 <strncmp+0x1c>
    6588:	42a0      	cmp	r0, r4
    658a:	d001      	beq.n	6590 <strncmp+0x1c>
    658c:	2b00      	cmp	r3, #0
    658e:	d1f5      	bne.n	657c <strncmp+0x8>
    6590:	1a98      	subs	r0, r3, r2
    6592:	bd10      	pop	{r4, pc}
    6594:	4610      	mov	r0, r2
    6596:	e7fc      	b.n	6592 <strncmp+0x1e>

00006598 <strncpy>:
strncpy():
    6598:	b510      	push	{r4, lr}
    659a:	3901      	subs	r1, #1
    659c:	4603      	mov	r3, r0
    659e:	b132      	cbz	r2, 65ae <strncpy+0x16>
    65a0:	f811 4f01 	ldrb.w	r4, [r1, #1]!
    65a4:	f803 4b01 	strb.w	r4, [r3], #1
    65a8:	3a01      	subs	r2, #1
    65aa:	2c00      	cmp	r4, #0
    65ac:	d1f7      	bne.n	659e <strncpy+0x6>
    65ae:	441a      	add	r2, r3
    65b0:	2100      	movs	r1, #0
    65b2:	4293      	cmp	r3, r2
    65b4:	d100      	bne.n	65b8 <strncpy+0x20>
    65b6:	bd10      	pop	{r4, pc}
    65b8:	f803 1b01 	strb.w	r1, [r3], #1
    65bc:	e7f9      	b.n	65b2 <strncpy+0x1a>

000065be <sulp>:
sulp():
    65be:	b570      	push	{r4, r5, r6, lr}
    65c0:	4604      	mov	r4, r0
    65c2:	460d      	mov	r5, r1
    65c4:	ec45 4b10 	vmov	d0, r4, r5
    65c8:	4616      	mov	r6, r2
    65ca:	f002 fde3 	bl	9194 <__ulp>
    65ce:	ec51 0b10 	vmov	r0, r1, d0
    65d2:	b17e      	cbz	r6, 65f4 <sulp+0x36>
    65d4:	f3c5 530a 	ubfx	r3, r5, #20, #11
    65d8:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
    65dc:	2b00      	cmp	r3, #0
    65de:	dd09      	ble.n	65f4 <sulp+0x36>
    65e0:	051b      	lsls	r3, r3, #20
    65e2:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
    65e6:	2400      	movs	r4, #0
    65e8:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
    65ec:	4622      	mov	r2, r4
    65ee:	462b      	mov	r3, r5
    65f0:	f003 fb0e 	bl	9c10 <__aeabi_dmul>
    65f4:	bd70      	pop	{r4, r5, r6, pc}
    65f6:	Address 0x00000000000065f6 is out of bounds.


000065f8 <_strtod_l>:
_strtod_l():
    65f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    65fc:	b0a1      	sub	sp, #132	; 0x84
    65fe:	461f      	mov	r7, r3
    6600:	2300      	movs	r3, #0
    6602:	931c      	str	r3, [sp, #112]	; 0x70
    6604:	4b9b      	ldr	r3, [pc, #620]	; (6874 <_strtod_l+0x27c>)
    6606:	9004      	str	r0, [sp, #16]
    6608:	681b      	ldr	r3, [r3, #0]
    660a:	9217      	str	r2, [sp, #92]	; 0x5c
    660c:	4618      	mov	r0, r3
    660e:	460e      	mov	r6, r1
    6610:	9305      	str	r3, [sp, #20]
    6612:	f7ff ffa7 	bl	6564 <strlen>
    6616:	f04f 0a00 	mov.w	sl, #0
    661a:	4604      	mov	r4, r0
    661c:	f04f 0b00 	mov.w	fp, #0
    6620:	961b      	str	r6, [sp, #108]	; 0x6c
    6622:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
    6624:	7813      	ldrb	r3, [r2, #0]
    6626:	2b0d      	cmp	r3, #13
    6628:	d832      	bhi.n	6690 <_strtod_l+0x98>
    662a:	2b09      	cmp	r3, #9
    662c:	d236      	bcs.n	669c <_strtod_l+0xa4>
    662e:	2b00      	cmp	r3, #0
    6630:	d03e      	beq.n	66b0 <_strtod_l+0xb8>
    6632:	2300      	movs	r3, #0
    6634:	930c      	str	r3, [sp, #48]	; 0x30
    6636:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
    6638:	782b      	ldrb	r3, [r5, #0]
    663a:	2b30      	cmp	r3, #48	; 0x30
    663c:	f040 80a9 	bne.w	6792 <_strtod_l+0x19a>
    6640:	786b      	ldrb	r3, [r5, #1]
    6642:	2b58      	cmp	r3, #88	; 0x58
    6644:	d001      	beq.n	664a <_strtod_l+0x52>
    6646:	2b78      	cmp	r3, #120	; 0x78
    6648:	d167      	bne.n	671a <_strtod_l+0x122>
    664a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    664c:	9301      	str	r3, [sp, #4]
    664e:	ab1c      	add	r3, sp, #112	; 0x70
    6650:	9300      	str	r3, [sp, #0]
    6652:	9702      	str	r7, [sp, #8]
    6654:	ab1d      	add	r3, sp, #116	; 0x74
    6656:	4a88      	ldr	r2, [pc, #544]	; (6878 <_strtod_l+0x280>)
    6658:	9804      	ldr	r0, [sp, #16]
    665a:	a91b      	add	r1, sp, #108	; 0x6c
    665c:	f001 ff24 	bl	84a8 <__gethex>
    6660:	f010 0407 	ands.w	r4, r0, #7
    6664:	4606      	mov	r6, r0
    6666:	d005      	beq.n	6674 <_strtod_l+0x7c>
    6668:	2c06      	cmp	r4, #6
    666a:	d12b      	bne.n	66c4 <_strtod_l+0xcc>
    666c:	3501      	adds	r5, #1
    666e:	2300      	movs	r3, #0
    6670:	951b      	str	r5, [sp, #108]	; 0x6c
    6672:	930c      	str	r3, [sp, #48]	; 0x30
    6674:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    6676:	2b00      	cmp	r3, #0
    6678:	f040 8576 	bne.w	7168 <_strtod_l+0xb70>
    667c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    667e:	b1e3      	cbz	r3, 66ba <_strtod_l+0xc2>
    6680:	4652      	mov	r2, sl
    6682:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
    6686:	ec43 2b10 	vmov	d0, r2, r3
    668a:	b021      	add	sp, #132	; 0x84
    668c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6690:	2b2b      	cmp	r3, #43	; 0x2b
    6692:	d006      	beq.n	66a2 <_strtod_l+0xaa>
    6694:	2b2d      	cmp	r3, #45	; 0x2d
    6696:	d013      	beq.n	66c0 <_strtod_l+0xc8>
    6698:	2b20      	cmp	r3, #32
    669a:	d1ca      	bne.n	6632 <_strtod_l+0x3a>
    669c:	3201      	adds	r2, #1
    669e:	921b      	str	r2, [sp, #108]	; 0x6c
    66a0:	e7bf      	b.n	6622 <_strtod_l+0x2a>
    66a2:	2300      	movs	r3, #0
    66a4:	930c      	str	r3, [sp, #48]	; 0x30
    66a6:	1c53      	adds	r3, r2, #1
    66a8:	931b      	str	r3, [sp, #108]	; 0x6c
    66aa:	7853      	ldrb	r3, [r2, #1]
    66ac:	2b00      	cmp	r3, #0
    66ae:	d1c2      	bne.n	6636 <_strtod_l+0x3e>
    66b0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    66b2:	961b      	str	r6, [sp, #108]	; 0x6c
    66b4:	2b00      	cmp	r3, #0
    66b6:	f040 8555 	bne.w	7164 <_strtod_l+0xb6c>
    66ba:	4652      	mov	r2, sl
    66bc:	465b      	mov	r3, fp
    66be:	e7e2      	b.n	6686 <_strtod_l+0x8e>
    66c0:	2301      	movs	r3, #1
    66c2:	e7ef      	b.n	66a4 <_strtod_l+0xac>
    66c4:	9a1c      	ldr	r2, [sp, #112]	; 0x70
    66c6:	b13a      	cbz	r2, 66d8 <_strtod_l+0xe0>
    66c8:	2135      	movs	r1, #53	; 0x35
    66ca:	a81e      	add	r0, sp, #120	; 0x78
    66cc:	f002 fe59 	bl	9382 <__copybits>
    66d0:	991c      	ldr	r1, [sp, #112]	; 0x70
    66d2:	9804      	ldr	r0, [sp, #16]
    66d4:	f002 facc 	bl	8c70 <_Bfree>
    66d8:	3c01      	subs	r4, #1
    66da:	2c04      	cmp	r4, #4
    66dc:	d806      	bhi.n	66ec <_strtod_l+0xf4>
    66de:	e8df f004 	tbb	[pc, r4]
    66e2:	030a      	.short	0x030a
    66e4:	1714      	.short	0x1714
    66e6:	0a          	.byte	0x0a
    66e7:	00          	.byte	0x00
    66e8:	e9dd ab1e 	ldrd	sl, fp, [sp, #120]	; 0x78
    66ec:	0731      	lsls	r1, r6, #28
    66ee:	d5c1      	bpl.n	6674 <_strtod_l+0x7c>
    66f0:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
    66f4:	e7be      	b.n	6674 <_strtod_l+0x7c>
    66f6:	e9dd a31e 	ldrd	sl, r3, [sp, #120]	; 0x78
    66fa:	9a1d      	ldr	r2, [sp, #116]	; 0x74
    66fc:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
    6700:	f202 4233 	addw	r2, r2, #1075	; 0x433
    6704:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
    6708:	e7f0      	b.n	66ec <_strtod_l+0xf4>
    670a:	f8df b170 	ldr.w	fp, [pc, #368]	; 687c <_strtod_l+0x284>
    670e:	e7ed      	b.n	66ec <_strtod_l+0xf4>
    6710:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
    6714:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
    6718:	e7e8      	b.n	66ec <_strtod_l+0xf4>
    671a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    671c:	1c5a      	adds	r2, r3, #1
    671e:	921b      	str	r2, [sp, #108]	; 0x6c
    6720:	785b      	ldrb	r3, [r3, #1]
    6722:	2b30      	cmp	r3, #48	; 0x30
    6724:	d0f9      	beq.n	671a <_strtod_l+0x122>
    6726:	2b00      	cmp	r3, #0
    6728:	d0a4      	beq.n	6674 <_strtod_l+0x7c>
    672a:	2301      	movs	r3, #1
    672c:	f04f 0900 	mov.w	r9, #0
    6730:	9306      	str	r3, [sp, #24]
    6732:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    6734:	9309      	str	r3, [sp, #36]	; 0x24
    6736:	f8cd 901c 	str.w	r9, [sp, #28]
    673a:	46c8      	mov	r8, r9
    673c:	220a      	movs	r2, #10
    673e:	981b      	ldr	r0, [sp, #108]	; 0x6c
    6740:	7805      	ldrb	r5, [r0, #0]
    6742:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
    6746:	b2d9      	uxtb	r1, r3
    6748:	2909      	cmp	r1, #9
    674a:	d924      	bls.n	6796 <_strtod_l+0x19e>
    674c:	4622      	mov	r2, r4
    674e:	9905      	ldr	r1, [sp, #20]
    6750:	f7ff ff10 	bl	6574 <strncmp>
    6754:	b378      	cbz	r0, 67b6 <_strtod_l+0x1be>
    6756:	2000      	movs	r0, #0
    6758:	462b      	mov	r3, r5
    675a:	4644      	mov	r4, r8
    675c:	9005      	str	r0, [sp, #20]
    675e:	4602      	mov	r2, r0
    6760:	2b65      	cmp	r3, #101	; 0x65
    6762:	d001      	beq.n	6768 <_strtod_l+0x170>
    6764:	2b45      	cmp	r3, #69	; 0x45
    6766:	d112      	bne.n	678e <_strtod_l+0x196>
    6768:	b91c      	cbnz	r4, 6772 <_strtod_l+0x17a>
    676a:	9b06      	ldr	r3, [sp, #24]
    676c:	4303      	orrs	r3, r0
    676e:	d09f      	beq.n	66b0 <_strtod_l+0xb8>
    6770:	2400      	movs	r4, #0
    6772:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
    6774:	1c73      	adds	r3, r6, #1
    6776:	931b      	str	r3, [sp, #108]	; 0x6c
    6778:	7873      	ldrb	r3, [r6, #1]
    677a:	2b2b      	cmp	r3, #43	; 0x2b
    677c:	d072      	beq.n	6864 <_strtod_l+0x26c>
    677e:	2b2d      	cmp	r3, #45	; 0x2d
    6780:	d075      	beq.n	686e <_strtod_l+0x276>
    6782:	2700      	movs	r7, #0
    6784:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
    6788:	2909      	cmp	r1, #9
    678a:	d97d      	bls.n	6888 <_strtod_l+0x290>
    678c:	961b      	str	r6, [sp, #108]	; 0x6c
    678e:	2500      	movs	r5, #0
    6790:	e09a      	b.n	68c8 <_strtod_l+0x2d0>
    6792:	2300      	movs	r3, #0
    6794:	e7ca      	b.n	672c <_strtod_l+0x134>
    6796:	f1b8 0f08 	cmp.w	r8, #8
    679a:	bfd8      	it	le
    679c:	9907      	ldrle	r1, [sp, #28]
    679e:	f100 0001 	add.w	r0, r0, #1
    67a2:	bfda      	itte	le
    67a4:	fb02 3301 	mlale	r3, r2, r1, r3
    67a8:	9307      	strle	r3, [sp, #28]
    67aa:	fb02 3909 	mlagt	r9, r2, r9, r3
    67ae:	f108 0801 	add.w	r8, r8, #1
    67b2:	901b      	str	r0, [sp, #108]	; 0x6c
    67b4:	e7c3      	b.n	673e <_strtod_l+0x146>
    67b6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    67b8:	191a      	adds	r2, r3, r4
    67ba:	921b      	str	r2, [sp, #108]	; 0x6c
    67bc:	5d1b      	ldrb	r3, [r3, r4]
    67be:	f1b8 0f00 	cmp.w	r8, #0
    67c2:	d036      	beq.n	6832 <_strtod_l+0x23a>
    67c4:	9005      	str	r0, [sp, #20]
    67c6:	4644      	mov	r4, r8
    67c8:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
    67cc:	2a09      	cmp	r2, #9
    67ce:	d912      	bls.n	67f6 <_strtod_l+0x1fe>
    67d0:	2201      	movs	r2, #1
    67d2:	e7c5      	b.n	6760 <_strtod_l+0x168>
    67d4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    67d6:	1c5a      	adds	r2, r3, #1
    67d8:	921b      	str	r2, [sp, #108]	; 0x6c
    67da:	785b      	ldrb	r3, [r3, #1]
    67dc:	3001      	adds	r0, #1
    67de:	2b30      	cmp	r3, #48	; 0x30
    67e0:	d0f8      	beq.n	67d4 <_strtod_l+0x1dc>
    67e2:	f1a3 0231 	sub.w	r2, r3, #49	; 0x31
    67e6:	2a08      	cmp	r2, #8
    67e8:	f200 84c3 	bhi.w	7172 <_strtod_l+0xb7a>
    67ec:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
    67ee:	9005      	str	r0, [sp, #20]
    67f0:	2000      	movs	r0, #0
    67f2:	9209      	str	r2, [sp, #36]	; 0x24
    67f4:	4604      	mov	r4, r0
    67f6:	3b30      	subs	r3, #48	; 0x30
    67f8:	f100 0201 	add.w	r2, r0, #1
    67fc:	d013      	beq.n	6826 <_strtod_l+0x22e>
    67fe:	9905      	ldr	r1, [sp, #20]
    6800:	4411      	add	r1, r2
    6802:	9105      	str	r1, [sp, #20]
    6804:	4622      	mov	r2, r4
    6806:	1905      	adds	r5, r0, r4
    6808:	210a      	movs	r1, #10
    680a:	42aa      	cmp	r2, r5
    680c:	d113      	bne.n	6836 <_strtod_l+0x23e>
    680e:	1822      	adds	r2, r4, r0
    6810:	2a08      	cmp	r2, #8
    6812:	f104 0401 	add.w	r4, r4, #1
    6816:	4404      	add	r4, r0
    6818:	dc1a      	bgt.n	6850 <_strtod_l+0x258>
    681a:	9907      	ldr	r1, [sp, #28]
    681c:	220a      	movs	r2, #10
    681e:	fb02 3301 	mla	r3, r2, r1, r3
    6822:	9307      	str	r3, [sp, #28]
    6824:	2200      	movs	r2, #0
    6826:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    6828:	1c59      	adds	r1, r3, #1
    682a:	911b      	str	r1, [sp, #108]	; 0x6c
    682c:	785b      	ldrb	r3, [r3, #1]
    682e:	4610      	mov	r0, r2
    6830:	e7ca      	b.n	67c8 <_strtod_l+0x1d0>
    6832:	4640      	mov	r0, r8
    6834:	e7d3      	b.n	67de <_strtod_l+0x1e6>
    6836:	2a08      	cmp	r2, #8
    6838:	dc04      	bgt.n	6844 <_strtod_l+0x24c>
    683a:	9f07      	ldr	r7, [sp, #28]
    683c:	434f      	muls	r7, r1
    683e:	9707      	str	r7, [sp, #28]
    6840:	3201      	adds	r2, #1
    6842:	e7e2      	b.n	680a <_strtod_l+0x212>
    6844:	1c57      	adds	r7, r2, #1
    6846:	2f10      	cmp	r7, #16
    6848:	bfd8      	it	le
    684a:	fb01 f909 	mulle.w	r9, r1, r9
    684e:	e7f7      	b.n	6840 <_strtod_l+0x248>
    6850:	2c10      	cmp	r4, #16
    6852:	bfdc      	itt	le
    6854:	220a      	movle	r2, #10
    6856:	fb02 3909 	mlale	r9, r2, r9, r3
    685a:	e7e3      	b.n	6824 <_strtod_l+0x22c>
    685c:	2300      	movs	r3, #0
    685e:	9305      	str	r3, [sp, #20]
    6860:	2201      	movs	r2, #1
    6862:	e782      	b.n	676a <_strtod_l+0x172>
    6864:	2700      	movs	r7, #0
    6866:	1cb3      	adds	r3, r6, #2
    6868:	931b      	str	r3, [sp, #108]	; 0x6c
    686a:	78b3      	ldrb	r3, [r6, #2]
    686c:	e78a      	b.n	6784 <_strtod_l+0x18c>
    686e:	2701      	movs	r7, #1
    6870:	e7f9      	b.n	6866 <_strtod_l+0x26e>
    6872:	bf00      	nop
    6874:	0000b7e0 	.word	0x0000b7e0
    6878:	0000b71c 	.word	0x0000b71c
    687c:	7ff00000 	.word	0x7ff00000
    6880:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    6882:	1c59      	adds	r1, r3, #1
    6884:	911b      	str	r1, [sp, #108]	; 0x6c
    6886:	785b      	ldrb	r3, [r3, #1]
    6888:	2b30      	cmp	r3, #48	; 0x30
    688a:	d0f9      	beq.n	6880 <_strtod_l+0x288>
    688c:	f1a3 0131 	sub.w	r1, r3, #49	; 0x31
    6890:	2908      	cmp	r1, #8
    6892:	f63f af7c 	bhi.w	678e <_strtod_l+0x196>
    6896:	f1a3 0c30 	sub.w	ip, r3, #48	; 0x30
    689a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    689c:	9308      	str	r3, [sp, #32]
    689e:	f04f 0e0a 	mov.w	lr, #10
    68a2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    68a4:	1c59      	adds	r1, r3, #1
    68a6:	911b      	str	r1, [sp, #108]	; 0x6c
    68a8:	785b      	ldrb	r3, [r3, #1]
    68aa:	f1a3 0530 	sub.w	r5, r3, #48	; 0x30
    68ae:	2d09      	cmp	r5, #9
    68b0:	d92e      	bls.n	6910 <_strtod_l+0x318>
    68b2:	9d08      	ldr	r5, [sp, #32]
    68b4:	1b49      	subs	r1, r1, r5
    68b6:	2908      	cmp	r1, #8
    68b8:	f644 651f 	movw	r5, #19999	; 0x4e1f
    68bc:	dc02      	bgt.n	68c4 <_strtod_l+0x2cc>
    68be:	4565      	cmp	r5, ip
    68c0:	bfa8      	it	ge
    68c2:	4665      	movge	r5, ip
    68c4:	b107      	cbz	r7, 68c8 <_strtod_l+0x2d0>
    68c6:	426d      	negs	r5, r5
    68c8:	2c00      	cmp	r4, #0
    68ca:	d14b      	bne.n	6964 <_strtod_l+0x36c>
    68cc:	9906      	ldr	r1, [sp, #24]
    68ce:	4301      	orrs	r1, r0
    68d0:	f47f aed0 	bne.w	6674 <_strtod_l+0x7c>
    68d4:	2a00      	cmp	r2, #0
    68d6:	f47f aeeb 	bne.w	66b0 <_strtod_l+0xb8>
    68da:	2b4e      	cmp	r3, #78	; 0x4e
    68dc:	d022      	beq.n	6924 <_strtod_l+0x32c>
    68de:	dc1c      	bgt.n	691a <_strtod_l+0x322>
    68e0:	2b49      	cmp	r3, #73	; 0x49
    68e2:	f47f aee5 	bne.w	66b0 <_strtod_l+0xb8>
    68e6:	499a      	ldr	r1, [pc, #616]	; (6b50 <_strtod_l+0x558>)
    68e8:	a81b      	add	r0, sp, #108	; 0x6c
    68ea:	f002 f813 	bl	8914 <__match>
    68ee:	2800      	cmp	r0, #0
    68f0:	f43f aede 	beq.w	66b0 <_strtod_l+0xb8>
    68f4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    68f6:	4997      	ldr	r1, [pc, #604]	; (6b54 <_strtod_l+0x55c>)
    68f8:	3b01      	subs	r3, #1
    68fa:	a81b      	add	r0, sp, #108	; 0x6c
    68fc:	931b      	str	r3, [sp, #108]	; 0x6c
    68fe:	f002 f809 	bl	8914 <__match>
    6902:	b910      	cbnz	r0, 690a <_strtod_l+0x312>
    6904:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    6906:	3301      	adds	r3, #1
    6908:	931b      	str	r3, [sp, #108]	; 0x6c
    690a:	f8df b260 	ldr.w	fp, [pc, #608]	; 6b6c <_strtod_l+0x574>
    690e:	e6b1      	b.n	6674 <_strtod_l+0x7c>
    6910:	fb0e 3c0c 	mla	ip, lr, ip, r3
    6914:	f1ac 0c30 	sub.w	ip, ip, #48	; 0x30
    6918:	e7c3      	b.n	68a2 <_strtod_l+0x2aa>
    691a:	2b69      	cmp	r3, #105	; 0x69
    691c:	d0e3      	beq.n	68e6 <_strtod_l+0x2ee>
    691e:	2b6e      	cmp	r3, #110	; 0x6e
    6920:	f47f aec6 	bne.w	66b0 <_strtod_l+0xb8>
    6924:	498c      	ldr	r1, [pc, #560]	; (6b58 <_strtod_l+0x560>)
    6926:	a81b      	add	r0, sp, #108	; 0x6c
    6928:	f001 fff4 	bl	8914 <__match>
    692c:	2800      	cmp	r0, #0
    692e:	f43f aebf 	beq.w	66b0 <_strtod_l+0xb8>
    6932:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    6934:	781b      	ldrb	r3, [r3, #0]
    6936:	2b28      	cmp	r3, #40	; 0x28
    6938:	d10e      	bne.n	6958 <_strtod_l+0x360>
    693a:	aa1e      	add	r2, sp, #120	; 0x78
    693c:	4987      	ldr	r1, [pc, #540]	; (6b5c <_strtod_l+0x564>)
    693e:	a81b      	add	r0, sp, #108	; 0x6c
    6940:	f001 fffc 	bl	893c <__hexnan>
    6944:	2805      	cmp	r0, #5
    6946:	d107      	bne.n	6958 <_strtod_l+0x360>
    6948:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    694a:	f8dd a078 	ldr.w	sl, [sp, #120]	; 0x78
    694e:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
    6952:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
    6956:	e68d      	b.n	6674 <_strtod_l+0x7c>
    6958:	4881      	ldr	r0, [pc, #516]	; (6b60 <_strtod_l+0x568>)
    695a:	f002 fed5 	bl	9708 <nan>
    695e:	ec5b ab10 	vmov	sl, fp, d0
    6962:	e687      	b.n	6674 <_strtod_l+0x7c>
    6964:	9b05      	ldr	r3, [sp, #20]
    6966:	9807      	ldr	r0, [sp, #28]
    6968:	1aeb      	subs	r3, r5, r3
    696a:	f1b8 0f00 	cmp.w	r8, #0
    696e:	bf08      	it	eq
    6970:	46a0      	moveq	r8, r4
    6972:	2c10      	cmp	r4, #16
    6974:	9308      	str	r3, [sp, #32]
    6976:	4626      	mov	r6, r4
    6978:	bfa8      	it	ge
    697a:	2610      	movge	r6, #16
    697c:	f003 f8ce 	bl	9b1c <__aeabi_ui2d>
    6980:	2c09      	cmp	r4, #9
    6982:	4682      	mov	sl, r0
    6984:	468b      	mov	fp, r1
    6986:	dd13      	ble.n	69b0 <_strtod_l+0x3b8>
    6988:	4b76      	ldr	r3, [pc, #472]	; (6b64 <_strtod_l+0x56c>)
    698a:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
    698e:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
    6992:	f003 f93d 	bl	9c10 <__aeabi_dmul>
    6996:	4682      	mov	sl, r0
    6998:	4648      	mov	r0, r9
    699a:	468b      	mov	fp, r1
    699c:	f003 f8be 	bl	9b1c <__aeabi_ui2d>
    69a0:	4602      	mov	r2, r0
    69a2:	460b      	mov	r3, r1
    69a4:	4650      	mov	r0, sl
    69a6:	4659      	mov	r1, fp
    69a8:	f002 ff7c 	bl	98a4 <__adddf3>
    69ac:	4682      	mov	sl, r0
    69ae:	468b      	mov	fp, r1
    69b0:	2c0f      	cmp	r4, #15
    69b2:	dc38      	bgt.n	6a26 <_strtod_l+0x42e>
    69b4:	9b08      	ldr	r3, [sp, #32]
    69b6:	2b00      	cmp	r3, #0
    69b8:	f43f ae5c 	beq.w	6674 <_strtod_l+0x7c>
    69bc:	dd24      	ble.n	6a08 <_strtod_l+0x410>
    69be:	2b16      	cmp	r3, #22
    69c0:	dc0b      	bgt.n	69da <_strtod_l+0x3e2>
    69c2:	4c68      	ldr	r4, [pc, #416]	; (6b64 <_strtod_l+0x56c>)
    69c4:	eb04 04c3 	add.w	r4, r4, r3, lsl #3
    69c8:	e9d4 0100 	ldrd	r0, r1, [r4]
    69cc:	4652      	mov	r2, sl
    69ce:	465b      	mov	r3, fp
    69d0:	f003 f91e 	bl	9c10 <__aeabi_dmul>
    69d4:	4682      	mov	sl, r0
    69d6:	468b      	mov	fp, r1
    69d8:	e64c      	b.n	6674 <_strtod_l+0x7c>
    69da:	9a08      	ldr	r2, [sp, #32]
    69dc:	f1c4 0325 	rsb	r3, r4, #37	; 0x25
    69e0:	4293      	cmp	r3, r2
    69e2:	db20      	blt.n	6a26 <_strtod_l+0x42e>
    69e4:	4d5f      	ldr	r5, [pc, #380]	; (6b64 <_strtod_l+0x56c>)
    69e6:	f1c4 040f 	rsb	r4, r4, #15
    69ea:	eb05 01c4 	add.w	r1, r5, r4, lsl #3
    69ee:	4652      	mov	r2, sl
    69f0:	465b      	mov	r3, fp
    69f2:	e9d1 0100 	ldrd	r0, r1, [r1]
    69f6:	f003 f90b 	bl	9c10 <__aeabi_dmul>
    69fa:	9b08      	ldr	r3, [sp, #32]
    69fc:	1b1c      	subs	r4, r3, r4
    69fe:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
    6a02:	e9d5 2300 	ldrd	r2, r3, [r5]
    6a06:	e7e3      	b.n	69d0 <_strtod_l+0x3d8>
    6a08:	9b08      	ldr	r3, [sp, #32]
    6a0a:	3316      	adds	r3, #22
    6a0c:	db0b      	blt.n	6a26 <_strtod_l+0x42e>
    6a0e:	9b05      	ldr	r3, [sp, #20]
    6a10:	4a54      	ldr	r2, [pc, #336]	; (6b64 <_strtod_l+0x56c>)
    6a12:	1b5d      	subs	r5, r3, r5
    6a14:	eb02 05c5 	add.w	r5, r2, r5, lsl #3
    6a18:	e9d5 2300 	ldrd	r2, r3, [r5]
    6a1c:	4650      	mov	r0, sl
    6a1e:	4659      	mov	r1, fp
    6a20:	f003 fa20 	bl	9e64 <__aeabi_ddiv>
    6a24:	e7d6      	b.n	69d4 <_strtod_l+0x3dc>
    6a26:	9b08      	ldr	r3, [sp, #32]
    6a28:	1ba6      	subs	r6, r4, r6
    6a2a:	441e      	add	r6, r3
    6a2c:	2e00      	cmp	r6, #0
    6a2e:	dd6e      	ble.n	6b0e <_strtod_l+0x516>
    6a30:	f016 030f 	ands.w	r3, r6, #15
    6a34:	d00a      	beq.n	6a4c <_strtod_l+0x454>
    6a36:	494b      	ldr	r1, [pc, #300]	; (6b64 <_strtod_l+0x56c>)
    6a38:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
    6a3c:	4652      	mov	r2, sl
    6a3e:	465b      	mov	r3, fp
    6a40:	e9d1 0100 	ldrd	r0, r1, [r1]
    6a44:	f003 f8e4 	bl	9c10 <__aeabi_dmul>
    6a48:	4682      	mov	sl, r0
    6a4a:	468b      	mov	fp, r1
    6a4c:	f036 060f 	bics.w	r6, r6, #15
    6a50:	d04e      	beq.n	6af0 <_strtod_l+0x4f8>
    6a52:	f5b6 7f9a 	cmp.w	r6, #308	; 0x134
    6a56:	dd23      	ble.n	6aa0 <_strtod_l+0x4a8>
    6a58:	2400      	movs	r4, #0
    6a5a:	9405      	str	r4, [sp, #20]
    6a5c:	9409      	str	r4, [sp, #36]	; 0x24
    6a5e:	9407      	str	r4, [sp, #28]
    6a60:	9a04      	ldr	r2, [sp, #16]
    6a62:	f8df b108 	ldr.w	fp, [pc, #264]	; 6b6c <_strtod_l+0x574>
    6a66:	2322      	movs	r3, #34	; 0x22
    6a68:	6013      	str	r3, [r2, #0]
    6a6a:	f04f 0a00 	mov.w	sl, #0
    6a6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    6a70:	2b00      	cmp	r3, #0
    6a72:	f43f adff 	beq.w	6674 <_strtod_l+0x7c>
    6a76:	991c      	ldr	r1, [sp, #112]	; 0x70
    6a78:	9804      	ldr	r0, [sp, #16]
    6a7a:	f002 f8f9 	bl	8c70 <_Bfree>
    6a7e:	9907      	ldr	r1, [sp, #28]
    6a80:	9804      	ldr	r0, [sp, #16]
    6a82:	f002 f8f5 	bl	8c70 <_Bfree>
    6a86:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    6a8a:	f002 f8f1 	bl	8c70 <_Bfree>
    6a8e:	9909      	ldr	r1, [sp, #36]	; 0x24
    6a90:	9804      	ldr	r0, [sp, #16]
    6a92:	f002 f8ed 	bl	8c70 <_Bfree>
    6a96:	4621      	mov	r1, r4
    6a98:	9804      	ldr	r0, [sp, #16]
    6a9a:	f002 f8e9 	bl	8c70 <_Bfree>
    6a9e:	e5e9      	b.n	6674 <_strtod_l+0x7c>
    6aa0:	2300      	movs	r3, #0
    6aa2:	f8df 90c4 	ldr.w	r9, [pc, #196]	; 6b68 <_strtod_l+0x570>
    6aa6:	1136      	asrs	r6, r6, #4
    6aa8:	4650      	mov	r0, sl
    6aaa:	4659      	mov	r1, fp
    6aac:	461f      	mov	r7, r3
    6aae:	2e01      	cmp	r6, #1
    6ab0:	dc21      	bgt.n	6af6 <_strtod_l+0x4fe>
    6ab2:	b10b      	cbz	r3, 6ab8 <_strtod_l+0x4c0>
    6ab4:	4682      	mov	sl, r0
    6ab6:	468b      	mov	fp, r1
    6ab8:	4b2b      	ldr	r3, [pc, #172]	; (6b68 <_strtod_l+0x570>)
    6aba:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
    6abe:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
    6ac2:	4652      	mov	r2, sl
    6ac4:	465b      	mov	r3, fp
    6ac6:	e9d7 0100 	ldrd	r0, r1, [r7]
    6aca:	f003 f8a1 	bl	9c10 <__aeabi_dmul>
    6ace:	4b27      	ldr	r3, [pc, #156]	; (6b6c <_strtod_l+0x574>)
    6ad0:	460a      	mov	r2, r1
    6ad2:	400b      	ands	r3, r1
    6ad4:	4926      	ldr	r1, [pc, #152]	; (6b70 <_strtod_l+0x578>)
    6ad6:	428b      	cmp	r3, r1
    6ad8:	4682      	mov	sl, r0
    6ada:	d8bd      	bhi.n	6a58 <_strtod_l+0x460>
    6adc:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
    6ae0:	428b      	cmp	r3, r1
    6ae2:	bf86      	itte	hi
    6ae4:	f8df b08c 	ldrhi.w	fp, [pc, #140]	; 6b74 <_strtod_l+0x57c>
    6ae8:	f04f 3aff 	movhi.w	sl, #4294967295	; 0xffffffff
    6aec:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
    6af0:	2300      	movs	r3, #0
    6af2:	9306      	str	r3, [sp, #24]
    6af4:	e079      	b.n	6bea <_strtod_l+0x5f2>
    6af6:	07f2      	lsls	r2, r6, #31
    6af8:	d506      	bpl.n	6b08 <_strtod_l+0x510>
    6afa:	eb09 03c7 	add.w	r3, r9, r7, lsl #3
    6afe:	e9d3 2300 	ldrd	r2, r3, [r3]
    6b02:	f003 f885 	bl	9c10 <__aeabi_dmul>
    6b06:	2301      	movs	r3, #1
    6b08:	3701      	adds	r7, #1
    6b0a:	1076      	asrs	r6, r6, #1
    6b0c:	e7cf      	b.n	6aae <_strtod_l+0x4b6>
    6b0e:	d0ef      	beq.n	6af0 <_strtod_l+0x4f8>
    6b10:	4276      	negs	r6, r6
    6b12:	f016 020f 	ands.w	r2, r6, #15
    6b16:	d00a      	beq.n	6b2e <_strtod_l+0x536>
    6b18:	4b12      	ldr	r3, [pc, #72]	; (6b64 <_strtod_l+0x56c>)
    6b1a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
    6b1e:	4650      	mov	r0, sl
    6b20:	4659      	mov	r1, fp
    6b22:	e9d3 2300 	ldrd	r2, r3, [r3]
    6b26:	f003 f99d 	bl	9e64 <__aeabi_ddiv>
    6b2a:	4682      	mov	sl, r0
    6b2c:	468b      	mov	fp, r1
    6b2e:	1136      	asrs	r6, r6, #4
    6b30:	d0de      	beq.n	6af0 <_strtod_l+0x4f8>
    6b32:	2e1f      	cmp	r6, #31
    6b34:	dd20      	ble.n	6b78 <_strtod_l+0x580>
    6b36:	2400      	movs	r4, #0
    6b38:	9405      	str	r4, [sp, #20]
    6b3a:	9409      	str	r4, [sp, #36]	; 0x24
    6b3c:	9407      	str	r4, [sp, #28]
    6b3e:	9a04      	ldr	r2, [sp, #16]
    6b40:	2322      	movs	r3, #34	; 0x22
    6b42:	f04f 0a00 	mov.w	sl, #0
    6b46:	f04f 0b00 	mov.w	fp, #0
    6b4a:	6013      	str	r3, [r2, #0]
    6b4c:	e78f      	b.n	6a6e <_strtod_l+0x476>
    6b4e:	bf00      	nop
    6b50:	0000b6ea 	.word	0x0000b6ea
    6b54:	0000b773 	.word	0x0000b773
    6b58:	0000b6f2 	.word	0x0000b6f2
    6b5c:	0000b730 	.word	0x0000b730
    6b60:	0000a439 	.word	0x0000a439
    6b64:	0000b820 	.word	0x0000b820
    6b68:	0000b7f8 	.word	0x0000b7f8
    6b6c:	7ff00000 	.word	0x7ff00000
    6b70:	7ca00000 	.word	0x7ca00000
    6b74:	7fefffff 	.word	0x7fefffff
    6b78:	f016 0310 	ands.w	r3, r6, #16
    6b7c:	bf18      	it	ne
    6b7e:	236a      	movne	r3, #106	; 0x6a
    6b80:	4fae      	ldr	r7, [pc, #696]	; (6e3c <_strtod_l+0x844>)
    6b82:	9306      	str	r3, [sp, #24]
    6b84:	4650      	mov	r0, sl
    6b86:	4659      	mov	r1, fp
    6b88:	2300      	movs	r3, #0
    6b8a:	07f2      	lsls	r2, r6, #31
    6b8c:	d504      	bpl.n	6b98 <_strtod_l+0x5a0>
    6b8e:	e9d7 2300 	ldrd	r2, r3, [r7]
    6b92:	f003 f83d 	bl	9c10 <__aeabi_dmul>
    6b96:	2301      	movs	r3, #1
    6b98:	1076      	asrs	r6, r6, #1
    6b9a:	f107 0708 	add.w	r7, r7, #8
    6b9e:	d1f4      	bne.n	6b8a <_strtod_l+0x592>
    6ba0:	b10b      	cbz	r3, 6ba6 <_strtod_l+0x5ae>
    6ba2:	4682      	mov	sl, r0
    6ba4:	468b      	mov	fp, r1
    6ba6:	9b06      	ldr	r3, [sp, #24]
    6ba8:	b1bb      	cbz	r3, 6bda <_strtod_l+0x5e2>
    6baa:	f3cb 530a 	ubfx	r3, fp, #20, #11
    6bae:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
    6bb2:	2b00      	cmp	r3, #0
    6bb4:	4659      	mov	r1, fp
    6bb6:	dd10      	ble.n	6bda <_strtod_l+0x5e2>
    6bb8:	2b1f      	cmp	r3, #31
    6bba:	f340 8129 	ble.w	6e10 <_strtod_l+0x818>
    6bbe:	2b34      	cmp	r3, #52	; 0x34
    6bc0:	bfde      	ittt	le
    6bc2:	3b20      	suble	r3, #32
    6bc4:	f04f 32ff 	movle.w	r2, #4294967295	; 0xffffffff
    6bc8:	fa02 f303 	lslle.w	r3, r2, r3
    6bcc:	f04f 0a00 	mov.w	sl, #0
    6bd0:	bfcc      	ite	gt
    6bd2:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
    6bd6:	ea03 0b01 	andle.w	fp, r3, r1
    6bda:	2200      	movs	r2, #0
    6bdc:	2300      	movs	r3, #0
    6bde:	4650      	mov	r0, sl
    6be0:	4659      	mov	r1, fp
    6be2:	f003 fa7d 	bl	a0e0 <__aeabi_dcmpeq>
    6be6:	2800      	cmp	r0, #0
    6be8:	d1a5      	bne.n	6b36 <_strtod_l+0x53e>
    6bea:	9b07      	ldr	r3, [sp, #28]
    6bec:	9300      	str	r3, [sp, #0]
    6bee:	4642      	mov	r2, r8
    6bf0:	4623      	mov	r3, r4
    6bf2:	9909      	ldr	r1, [sp, #36]	; 0x24
    6bf4:	9804      	ldr	r0, [sp, #16]
    6bf6:	f002 f88d 	bl	8d14 <__s2b>
    6bfa:	9009      	str	r0, [sp, #36]	; 0x24
    6bfc:	2800      	cmp	r0, #0
    6bfe:	f43f af2b 	beq.w	6a58 <_strtod_l+0x460>
    6c02:	9b05      	ldr	r3, [sp, #20]
    6c04:	1b5d      	subs	r5, r3, r5
    6c06:	9b08      	ldr	r3, [sp, #32]
    6c08:	2b00      	cmp	r3, #0
    6c0a:	bfb4      	ite	lt
    6c0c:	462b      	movlt	r3, r5
    6c0e:	2300      	movge	r3, #0
    6c10:	930e      	str	r3, [sp, #56]	; 0x38
    6c12:	9b08      	ldr	r3, [sp, #32]
    6c14:	2400      	movs	r4, #0
    6c16:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
    6c1a:	9316      	str	r3, [sp, #88]	; 0x58
    6c1c:	9405      	str	r4, [sp, #20]
    6c1e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    6c20:	9804      	ldr	r0, [sp, #16]
    6c22:	6859      	ldr	r1, [r3, #4]
    6c24:	f001 fff0 	bl	8c08 <_Balloc>
    6c28:	9007      	str	r0, [sp, #28]
    6c2a:	2800      	cmp	r0, #0
    6c2c:	f43f af18 	beq.w	6a60 <_strtod_l+0x468>
    6c30:	9b09      	ldr	r3, [sp, #36]	; 0x24
    6c32:	691a      	ldr	r2, [r3, #16]
    6c34:	3202      	adds	r2, #2
    6c36:	f103 010c 	add.w	r1, r3, #12
    6c3a:	0092      	lsls	r2, r2, #2
    6c3c:	300c      	adds	r0, #12
    6c3e:	f7fe fa61 	bl	5104 <memcpy>
    6c42:	aa1e      	add	r2, sp, #120	; 0x78
    6c44:	a91d      	add	r1, sp, #116	; 0x74
    6c46:	ec4b ab10 	vmov	d0, sl, fp
    6c4a:	9804      	ldr	r0, [sp, #16]
    6c4c:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
    6c50:	f002 fb16 	bl	9280 <__d2b>
    6c54:	901c      	str	r0, [sp, #112]	; 0x70
    6c56:	2800      	cmp	r0, #0
    6c58:	f43f af02 	beq.w	6a60 <_strtod_l+0x468>
    6c5c:	2101      	movs	r1, #1
    6c5e:	9804      	ldr	r0, [sp, #16]
    6c60:	f002 f8e6 	bl	8e30 <__i2b>
    6c64:	9005      	str	r0, [sp, #20]
    6c66:	4603      	mov	r3, r0
    6c68:	2800      	cmp	r0, #0
    6c6a:	f43f aef9 	beq.w	6a60 <_strtod_l+0x468>
    6c6e:	9e1d      	ldr	r6, [sp, #116]	; 0x74
    6c70:	9a1e      	ldr	r2, [sp, #120]	; 0x78
    6c72:	2e00      	cmp	r6, #0
    6c74:	bfab      	itete	ge
    6c76:	9b0e      	ldrge	r3, [sp, #56]	; 0x38
    6c78:	9b16      	ldrlt	r3, [sp, #88]	; 0x58
    6c7a:	9d16      	ldrge	r5, [sp, #88]	; 0x58
    6c7c:	9f0e      	ldrlt	r7, [sp, #56]	; 0x38
    6c7e:	bfac      	ite	ge
    6c80:	18f7      	addge	r7, r6, r3
    6c82:	1b9d      	sublt	r5, r3, r6
    6c84:	9b06      	ldr	r3, [sp, #24]
    6c86:	1af6      	subs	r6, r6, r3
    6c88:	4416      	add	r6, r2
    6c8a:	4b6d      	ldr	r3, [pc, #436]	; (6e40 <_strtod_l+0x848>)
    6c8c:	3e01      	subs	r6, #1
    6c8e:	429e      	cmp	r6, r3
    6c90:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
    6c94:	f280 80c3 	bge.w	6e1e <_strtod_l+0x826>
    6c98:	1b9b      	subs	r3, r3, r6
    6c9a:	2b1f      	cmp	r3, #31
    6c9c:	bfc2      	ittt	gt
    6c9e:	f1c6 467f 	rsbgt	r6, r6, #4278190080	; 0xff000000
    6ca2:	f506 067f 	addgt.w	r6, r6, #16711680	; 0xff0000
    6ca6:	f506 467b 	addgt.w	r6, r6, #64256	; 0xfb00
    6caa:	f04f 0801 	mov.w	r8, #1
    6cae:	bfc8      	it	gt
    6cb0:	36e2      	addgt	r6, #226	; 0xe2
    6cb2:	eba2 0203 	sub.w	r2, r2, r3
    6cb6:	bfda      	itte	le
    6cb8:	fa08 f803 	lslle.w	r8, r8, r3
    6cbc:	2600      	movle	r6, #0
    6cbe:	fa08 f606 	lslgt.w	r6, r8, r6
    6cc2:	eb07 0902 	add.w	r9, r7, r2
    6cc6:	9b06      	ldr	r3, [sp, #24]
    6cc8:	454f      	cmp	r7, r9
    6cca:	4415      	add	r5, r2
    6ccc:	441d      	add	r5, r3
    6cce:	463b      	mov	r3, r7
    6cd0:	bfa8      	it	ge
    6cd2:	464b      	movge	r3, r9
    6cd4:	42ab      	cmp	r3, r5
    6cd6:	bfa8      	it	ge
    6cd8:	462b      	movge	r3, r5
    6cda:	2b00      	cmp	r3, #0
    6cdc:	bfc2      	ittt	gt
    6cde:	eba9 0903 	subgt.w	r9, r9, r3
    6ce2:	1aed      	subgt	r5, r5, r3
    6ce4:	1aff      	subgt	r7, r7, r3
    6ce6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    6ce8:	2b00      	cmp	r3, #0
    6cea:	dd17      	ble.n	6d1c <_strtod_l+0x724>
    6cec:	461a      	mov	r2, r3
    6cee:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    6cf2:	f002 f937 	bl	8f64 <__pow5mult>
    6cf6:	9005      	str	r0, [sp, #20]
    6cf8:	2800      	cmp	r0, #0
    6cfa:	f43f aeb1 	beq.w	6a60 <_strtod_l+0x468>
    6cfe:	4601      	mov	r1, r0
    6d00:	9a1c      	ldr	r2, [sp, #112]	; 0x70
    6d02:	9804      	ldr	r0, [sp, #16]
    6d04:	f002 f89d 	bl	8e42 <__multiply>
    6d08:	900d      	str	r0, [sp, #52]	; 0x34
    6d0a:	2800      	cmp	r0, #0
    6d0c:	f43f aea8 	beq.w	6a60 <_strtod_l+0x468>
    6d10:	991c      	ldr	r1, [sp, #112]	; 0x70
    6d12:	9804      	ldr	r0, [sp, #16]
    6d14:	f001 ffac 	bl	8c70 <_Bfree>
    6d18:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    6d1a:	931c      	str	r3, [sp, #112]	; 0x70
    6d1c:	f1b9 0f00 	cmp.w	r9, #0
    6d20:	f300 8081 	bgt.w	6e26 <_strtod_l+0x82e>
    6d24:	9b08      	ldr	r3, [sp, #32]
    6d26:	2b00      	cmp	r3, #0
    6d28:	dd08      	ble.n	6d3c <_strtod_l+0x744>
    6d2a:	9a16      	ldr	r2, [sp, #88]	; 0x58
    6d2c:	9907      	ldr	r1, [sp, #28]
    6d2e:	9804      	ldr	r0, [sp, #16]
    6d30:	f002 f918 	bl	8f64 <__pow5mult>
    6d34:	9007      	str	r0, [sp, #28]
    6d36:	2800      	cmp	r0, #0
    6d38:	f43f ae92 	beq.w	6a60 <_strtod_l+0x468>
    6d3c:	2d00      	cmp	r5, #0
    6d3e:	dd08      	ble.n	6d52 <_strtod_l+0x75a>
    6d40:	462a      	mov	r2, r5
    6d42:	9907      	ldr	r1, [sp, #28]
    6d44:	9804      	ldr	r0, [sp, #16]
    6d46:	f002 f95b 	bl	9000 <__lshift>
    6d4a:	9007      	str	r0, [sp, #28]
    6d4c:	2800      	cmp	r0, #0
    6d4e:	f43f ae87 	beq.w	6a60 <_strtod_l+0x468>
    6d52:	2f00      	cmp	r7, #0
    6d54:	dd08      	ble.n	6d68 <_strtod_l+0x770>
    6d56:	463a      	mov	r2, r7
    6d58:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    6d5c:	f002 f950 	bl	9000 <__lshift>
    6d60:	9005      	str	r0, [sp, #20]
    6d62:	2800      	cmp	r0, #0
    6d64:	f43f ae7c 	beq.w	6a60 <_strtod_l+0x468>
    6d68:	9a07      	ldr	r2, [sp, #28]
    6d6a:	991c      	ldr	r1, [sp, #112]	; 0x70
    6d6c:	9804      	ldr	r0, [sp, #16]
    6d6e:	f002 f9b4 	bl	90da <__mdiff>
    6d72:	4604      	mov	r4, r0
    6d74:	2800      	cmp	r0, #0
    6d76:	f43f ae73 	beq.w	6a60 <_strtod_l+0x468>
    6d7a:	68c3      	ldr	r3, [r0, #12]
    6d7c:	930d      	str	r3, [sp, #52]	; 0x34
    6d7e:	2300      	movs	r3, #0
    6d80:	60c3      	str	r3, [r0, #12]
    6d82:	9905      	ldr	r1, [sp, #20]
    6d84:	f002 f98f 	bl	90a6 <__mcmp>
    6d88:	2800      	cmp	r0, #0
    6d8a:	da5f      	bge.n	6e4c <_strtod_l+0x854>
    6d8c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    6d8e:	ea53 030a 	orrs.w	r3, r3, sl
    6d92:	f040 8081 	bne.w	6e98 <_strtod_l+0x8a0>
    6d96:	f3cb 0313 	ubfx	r3, fp, #0, #20
    6d9a:	2b00      	cmp	r3, #0
    6d9c:	d17c      	bne.n	6e98 <_strtod_l+0x8a0>
    6d9e:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
    6da2:	0d1b      	lsrs	r3, r3, #20
    6da4:	051b      	lsls	r3, r3, #20
    6da6:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
    6daa:	d975      	bls.n	6e98 <_strtod_l+0x8a0>
    6dac:	6963      	ldr	r3, [r4, #20]
    6dae:	b913      	cbnz	r3, 6db6 <_strtod_l+0x7be>
    6db0:	6923      	ldr	r3, [r4, #16]
    6db2:	2b01      	cmp	r3, #1
    6db4:	dd70      	ble.n	6e98 <_strtod_l+0x8a0>
    6db6:	4621      	mov	r1, r4
    6db8:	2201      	movs	r2, #1
    6dba:	9804      	ldr	r0, [sp, #16]
    6dbc:	f002 f920 	bl	9000 <__lshift>
    6dc0:	9905      	ldr	r1, [sp, #20]
    6dc2:	4604      	mov	r4, r0
    6dc4:	f002 f96f 	bl	90a6 <__mcmp>
    6dc8:	2800      	cmp	r0, #0
    6dca:	dd65      	ble.n	6e98 <_strtod_l+0x8a0>
    6dcc:	9906      	ldr	r1, [sp, #24]
    6dce:	4a1d      	ldr	r2, [pc, #116]	; (6e44 <_strtod_l+0x84c>)
    6dd0:	465b      	mov	r3, fp
    6dd2:	2900      	cmp	r1, #0
    6dd4:	d07f      	beq.n	6ed6 <_strtod_l+0x8de>
    6dd6:	ea02 010b 	and.w	r1, r2, fp
    6dda:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
    6dde:	dc7a      	bgt.n	6ed6 <_strtod_l+0x8de>
    6de0:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
    6de4:	f77f aeab 	ble.w	6b3e <_strtod_l+0x546>
    6de8:	4a17      	ldr	r2, [pc, #92]	; (6e48 <_strtod_l+0x850>)
    6dea:	2300      	movs	r3, #0
    6dec:	e9cd 3214 	strd	r3, r2, [sp, #80]	; 0x50
    6df0:	4650      	mov	r0, sl
    6df2:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
    6df6:	4659      	mov	r1, fp
    6df8:	f002 ff0a 	bl	9c10 <__aeabi_dmul>
    6dfc:	460b      	mov	r3, r1
    6dfe:	4303      	orrs	r3, r0
    6e00:	bf04      	itt	eq
    6e02:	9a04      	ldreq	r2, [sp, #16]
    6e04:	2322      	moveq	r3, #34	; 0x22
    6e06:	4682      	mov	sl, r0
    6e08:	468b      	mov	fp, r1
    6e0a:	bf08      	it	eq
    6e0c:	6013      	streq	r3, [r2, #0]
    6e0e:	e632      	b.n	6a76 <_strtod_l+0x47e>
    6e10:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    6e14:	fa02 f303 	lsl.w	r3, r2, r3
    6e18:	ea03 0a0a 	and.w	sl, r3, sl
    6e1c:	e6dd      	b.n	6bda <_strtod_l+0x5e2>
    6e1e:	2600      	movs	r6, #0
    6e20:	f04f 0801 	mov.w	r8, #1
    6e24:	e74d      	b.n	6cc2 <_strtod_l+0x6ca>
    6e26:	464a      	mov	r2, r9
    6e28:	991c      	ldr	r1, [sp, #112]	; 0x70
    6e2a:	9804      	ldr	r0, [sp, #16]
    6e2c:	f002 f8e8 	bl	9000 <__lshift>
    6e30:	901c      	str	r0, [sp, #112]	; 0x70
    6e32:	2800      	cmp	r0, #0
    6e34:	f47f af76 	bne.w	6d24 <_strtod_l+0x72c>
    6e38:	e612      	b.n	6a60 <_strtod_l+0x468>
    6e3a:	bf00      	nop
    6e3c:	0000b748 	.word	0x0000b748
    6e40:	fffffc02 	.word	0xfffffc02
    6e44:	7ff00000 	.word	0x7ff00000
    6e48:	39500000 	.word	0x39500000
    6e4c:	465d      	mov	r5, fp
    6e4e:	d160      	bne.n	6f12 <_strtod_l+0x91a>
    6e50:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    6e52:	f3cb 0313 	ubfx	r3, fp, #0, #20
    6e56:	b342      	cbz	r2, 6eaa <_strtod_l+0x8b2>
    6e58:	4ab7      	ldr	r2, [pc, #732]	; (7138 <_strtod_l+0xb40>)
    6e5a:	4293      	cmp	r3, r2
    6e5c:	d128      	bne.n	6eb0 <_strtod_l+0x8b8>
    6e5e:	9b06      	ldr	r3, [sp, #24]
    6e60:	4650      	mov	r0, sl
    6e62:	b1eb      	cbz	r3, 6ea0 <_strtod_l+0x8a8>
    6e64:	4ab5      	ldr	r2, [pc, #724]	; (713c <_strtod_l+0xb44>)
    6e66:	402a      	ands	r2, r5
    6e68:	f1b2 6fd4 	cmp.w	r2, #111149056	; 0x6a00000
    6e6c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
    6e70:	d819      	bhi.n	6ea6 <_strtod_l+0x8ae>
    6e72:	0d12      	lsrs	r2, r2, #20
    6e74:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
    6e78:	fa01 f303 	lsl.w	r3, r1, r3
    6e7c:	4298      	cmp	r0, r3
    6e7e:	d117      	bne.n	6eb0 <_strtod_l+0x8b8>
    6e80:	4baf      	ldr	r3, [pc, #700]	; (7140 <_strtod_l+0xb48>)
    6e82:	429d      	cmp	r5, r3
    6e84:	d102      	bne.n	6e8c <_strtod_l+0x894>
    6e86:	3001      	adds	r0, #1
    6e88:	f43f adea 	beq.w	6a60 <_strtod_l+0x468>
    6e8c:	4bab      	ldr	r3, [pc, #684]	; (713c <_strtod_l+0xb44>)
    6e8e:	402b      	ands	r3, r5
    6e90:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
    6e94:	f04f 0a00 	mov.w	sl, #0
    6e98:	9b06      	ldr	r3, [sp, #24]
    6e9a:	2b00      	cmp	r3, #0
    6e9c:	d1a4      	bne.n	6de8 <_strtod_l+0x7f0>
    6e9e:	e5ea      	b.n	6a76 <_strtod_l+0x47e>
    6ea0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    6ea4:	e7ea      	b.n	6e7c <_strtod_l+0x884>
    6ea6:	460b      	mov	r3, r1
    6ea8:	e7e8      	b.n	6e7c <_strtod_l+0x884>
    6eaa:	ea53 030a 	orrs.w	r3, r3, sl
    6eae:	d08d      	beq.n	6dcc <_strtod_l+0x7d4>
    6eb0:	b1de      	cbz	r6, 6eea <_strtod_l+0x8f2>
    6eb2:	422e      	tst	r6, r5
    6eb4:	d0f0      	beq.n	6e98 <_strtod_l+0x8a0>
    6eb6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    6eb8:	9a06      	ldr	r2, [sp, #24]
    6eba:	4650      	mov	r0, sl
    6ebc:	4659      	mov	r1, fp
    6ebe:	b1bb      	cbz	r3, 6ef0 <_strtod_l+0x8f8>
    6ec0:	f7ff fb7d 	bl	65be <sulp>
    6ec4:	4602      	mov	r2, r0
    6ec6:	460b      	mov	r3, r1
    6ec8:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
    6ecc:	f002 fcea 	bl	98a4 <__adddf3>
    6ed0:	4682      	mov	sl, r0
    6ed2:	468b      	mov	fp, r1
    6ed4:	e7e0      	b.n	6e98 <_strtod_l+0x8a0>
    6ed6:	4013      	ands	r3, r2
    6ed8:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
    6edc:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
    6ee0:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
    6ee4:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
    6ee8:	e7d6      	b.n	6e98 <_strtod_l+0x8a0>
    6eea:	ea18 0f0a 	tst.w	r8, sl
    6eee:	e7e1      	b.n	6eb4 <_strtod_l+0x8bc>
    6ef0:	f7ff fb65 	bl	65be <sulp>
    6ef4:	4602      	mov	r2, r0
    6ef6:	460b      	mov	r3, r1
    6ef8:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
    6efc:	f002 fcd0 	bl	98a0 <__aeabi_dsub>
    6f00:	2200      	movs	r2, #0
    6f02:	2300      	movs	r3, #0
    6f04:	4682      	mov	sl, r0
    6f06:	468b      	mov	fp, r1
    6f08:	f003 f8ea 	bl	a0e0 <__aeabi_dcmpeq>
    6f0c:	2800      	cmp	r0, #0
    6f0e:	d0c3      	beq.n	6e98 <_strtod_l+0x8a0>
    6f10:	e615      	b.n	6b3e <_strtod_l+0x546>
    6f12:	9905      	ldr	r1, [sp, #20]
    6f14:	4620      	mov	r0, r4
    6f16:	f002 fa01 	bl	931c <__ratio>
    6f1a:	ec57 6b10 	vmov	r6, r7, d0
    6f1e:	2200      	movs	r2, #0
    6f20:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    6f24:	ee10 0a10 	vmov	r0, s0
    6f28:	4639      	mov	r1, r7
    6f2a:	f003 f8ed 	bl	a108 <__aeabi_dcmple>
    6f2e:	2800      	cmp	r0, #0
    6f30:	d073      	beq.n	701a <_strtod_l+0xa22>
    6f32:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    6f34:	2b00      	cmp	r3, #0
    6f36:	d046      	beq.n	6fc6 <_strtod_l+0x9ce>
    6f38:	f8df 9208 	ldr.w	r9, [pc, #520]	; 7144 <_strtod_l+0xb4c>
    6f3c:	f04f 0800 	mov.w	r8, #0
    6f40:	4f80      	ldr	r7, [pc, #512]	; (7144 <_strtod_l+0xb4c>)
    6f42:	2600      	movs	r6, #0
    6f44:	4b7d      	ldr	r3, [pc, #500]	; (713c <_strtod_l+0xb44>)
    6f46:	402b      	ands	r3, r5
    6f48:	930f      	str	r3, [sp, #60]	; 0x3c
    6f4a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    6f4c:	4b7e      	ldr	r3, [pc, #504]	; (7148 <_strtod_l+0xb50>)
    6f4e:	429a      	cmp	r2, r3
    6f50:	f040 80ab 	bne.w	70aa <_strtod_l+0xab2>
    6f54:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
    6f58:	f1a5 7b54 	sub.w	fp, r5, #55574528	; 0x3500000
    6f5c:	ec4b ab10 	vmov	d0, sl, fp
    6f60:	e9cd 2314 	strd	r2, r3, [sp, #80]	; 0x50
    6f64:	f002 f916 	bl	9194 <__ulp>
    6f68:	4640      	mov	r0, r8
    6f6a:	ec53 2b10 	vmov	r2, r3, d0
    6f6e:	4649      	mov	r1, r9
    6f70:	f002 fe4e 	bl	9c10 <__aeabi_dmul>
    6f74:	4652      	mov	r2, sl
    6f76:	465b      	mov	r3, fp
    6f78:	f002 fc94 	bl	98a4 <__adddf3>
    6f7c:	460b      	mov	r3, r1
    6f7e:	496f      	ldr	r1, [pc, #444]	; (713c <_strtod_l+0xb44>)
    6f80:	4a72      	ldr	r2, [pc, #456]	; (714c <_strtod_l+0xb54>)
    6f82:	4019      	ands	r1, r3
    6f84:	4291      	cmp	r1, r2
    6f86:	4682      	mov	sl, r0
    6f88:	d95b      	bls.n	7042 <_strtod_l+0xa4a>
    6f8a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    6f8c:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
    6f90:	4293      	cmp	r3, r2
    6f92:	d103      	bne.n	6f9c <_strtod_l+0x9a4>
    6f94:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    6f96:	3301      	adds	r3, #1
    6f98:	f43f ad62 	beq.w	6a60 <_strtod_l+0x468>
    6f9c:	f8df b1a0 	ldr.w	fp, [pc, #416]	; 7140 <_strtod_l+0xb48>
    6fa0:	f04f 3aff 	mov.w	sl, #4294967295	; 0xffffffff
    6fa4:	991c      	ldr	r1, [sp, #112]	; 0x70
    6fa6:	9804      	ldr	r0, [sp, #16]
    6fa8:	f001 fe62 	bl	8c70 <_Bfree>
    6fac:	9907      	ldr	r1, [sp, #28]
    6fae:	9804      	ldr	r0, [sp, #16]
    6fb0:	f001 fe5e 	bl	8c70 <_Bfree>
    6fb4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    6fb8:	f001 fe5a 	bl	8c70 <_Bfree>
    6fbc:	4621      	mov	r1, r4
    6fbe:	9804      	ldr	r0, [sp, #16]
    6fc0:	f001 fe56 	bl	8c70 <_Bfree>
    6fc4:	e62b      	b.n	6c1e <_strtod_l+0x626>
    6fc6:	f1ba 0f00 	cmp.w	sl, #0
    6fca:	d118      	bne.n	6ffe <_strtod_l+0xa06>
    6fcc:	f3cb 0313 	ubfx	r3, fp, #0, #20
    6fd0:	b9db      	cbnz	r3, 700a <_strtod_l+0xa12>
    6fd2:	2200      	movs	r2, #0
    6fd4:	4b5b      	ldr	r3, [pc, #364]	; (7144 <_strtod_l+0xb4c>)
    6fd6:	4630      	mov	r0, r6
    6fd8:	4639      	mov	r1, r7
    6fda:	f003 f88b 	bl	a0f4 <__aeabi_dcmplt>
    6fde:	b9c8      	cbnz	r0, 7014 <_strtod_l+0xa1c>
    6fe0:	4630      	mov	r0, r6
    6fe2:	4639      	mov	r1, r7
    6fe4:	2200      	movs	r2, #0
    6fe6:	4b5a      	ldr	r3, [pc, #360]	; (7150 <_strtod_l+0xb58>)
    6fe8:	f002 fe12 	bl	9c10 <__aeabi_dmul>
    6fec:	4606      	mov	r6, r0
    6fee:	460f      	mov	r7, r1
    6ff0:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
    6ff4:	9618      	str	r6, [sp, #96]	; 0x60
    6ff6:	9319      	str	r3, [sp, #100]	; 0x64
    6ff8:	e9dd 8918 	ldrd	r8, r9, [sp, #96]	; 0x60
    6ffc:	e7a2      	b.n	6f44 <_strtod_l+0x94c>
    6ffe:	f1ba 0f01 	cmp.w	sl, #1
    7002:	d102      	bne.n	700a <_strtod_l+0xa12>
    7004:	2d00      	cmp	r5, #0
    7006:	f43f ad9a 	beq.w	6b3e <_strtod_l+0x546>
    700a:	f04f 0800 	mov.w	r8, #0
    700e:	f8df 9144 	ldr.w	r9, [pc, #324]	; 7154 <_strtod_l+0xb5c>
    7012:	e795      	b.n	6f40 <_strtod_l+0x948>
    7014:	2600      	movs	r6, #0
    7016:	4f4e      	ldr	r7, [pc, #312]	; (7150 <_strtod_l+0xb58>)
    7018:	e7ea      	b.n	6ff0 <_strtod_l+0x9f8>
    701a:	4b4d      	ldr	r3, [pc, #308]	; (7150 <_strtod_l+0xb58>)
    701c:	4630      	mov	r0, r6
    701e:	4639      	mov	r1, r7
    7020:	2200      	movs	r2, #0
    7022:	f002 fdf5 	bl	9c10 <__aeabi_dmul>
    7026:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    7028:	4606      	mov	r6, r0
    702a:	460f      	mov	r7, r1
    702c:	b933      	cbnz	r3, 703c <_strtod_l+0xa44>
    702e:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
    7032:	9010      	str	r0, [sp, #64]	; 0x40
    7034:	9311      	str	r3, [sp, #68]	; 0x44
    7036:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	; 0x40
    703a:	e783      	b.n	6f44 <_strtod_l+0x94c>
    703c:	e9cd 6710 	strd	r6, r7, [sp, #64]	; 0x40
    7040:	e7f9      	b.n	7036 <_strtod_l+0xa3e>
    7042:	f103 7b54 	add.w	fp, r3, #55574528	; 0x3500000
    7046:	9b06      	ldr	r3, [sp, #24]
    7048:	2b00      	cmp	r3, #0
    704a:	d1ab      	bne.n	6fa4 <_strtod_l+0x9ac>
    704c:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
    7050:	0d1b      	lsrs	r3, r3, #20
    7052:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    7054:	051b      	lsls	r3, r3, #20
    7056:	429a      	cmp	r2, r3
    7058:	d1a4      	bne.n	6fa4 <_strtod_l+0x9ac>
    705a:	4630      	mov	r0, r6
    705c:	4639      	mov	r1, r7
    705e:	f003 f91f 	bl	a2a0 <__aeabi_d2lz>
    7062:	f002 fda7 	bl	9bb4 <__aeabi_l2d>
    7066:	4602      	mov	r2, r0
    7068:	460b      	mov	r3, r1
    706a:	4630      	mov	r0, r6
    706c:	4639      	mov	r1, r7
    706e:	f002 fc17 	bl	98a0 <__aeabi_dsub>
    7072:	f3cb 0313 	ubfx	r3, fp, #0, #20
    7076:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    7078:	ea43 030a 	orr.w	r3, r3, sl
    707c:	4313      	orrs	r3, r2
    707e:	4606      	mov	r6, r0
    7080:	460f      	mov	r7, r1
    7082:	d069      	beq.n	7158 <_strtod_l+0xb60>
    7084:	a326      	add	r3, pc, #152	; (adr r3, 7120 <_strtod_l+0xb28>)
    7086:	e9d3 2300 	ldrd	r2, r3, [r3]
    708a:	f003 f833 	bl	a0f4 <__aeabi_dcmplt>
    708e:	2800      	cmp	r0, #0
    7090:	f47f acf1 	bne.w	6a76 <_strtod_l+0x47e>
    7094:	a324      	add	r3, pc, #144	; (adr r3, 7128 <_strtod_l+0xb30>)
    7096:	e9d3 2300 	ldrd	r2, r3, [r3]
    709a:	4630      	mov	r0, r6
    709c:	4639      	mov	r1, r7
    709e:	f003 f847 	bl	a130 <__aeabi_dcmpgt>
    70a2:	2800      	cmp	r0, #0
    70a4:	f43f af7e 	beq.w	6fa4 <_strtod_l+0x9ac>
    70a8:	e4e5      	b.n	6a76 <_strtod_l+0x47e>
    70aa:	9b06      	ldr	r3, [sp, #24]
    70ac:	b31b      	cbz	r3, 70f6 <_strtod_l+0xafe>
    70ae:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    70b0:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
    70b4:	d81f      	bhi.n	70f6 <_strtod_l+0xafe>
    70b6:	a31e      	add	r3, pc, #120	; (adr r3, 7130 <_strtod_l+0xb38>)
    70b8:	e9d3 2300 	ldrd	r2, r3, [r3]
    70bc:	4630      	mov	r0, r6
    70be:	4639      	mov	r1, r7
    70c0:	f003 f822 	bl	a108 <__aeabi_dcmple>
    70c4:	b190      	cbz	r0, 70ec <_strtod_l+0xaf4>
    70c6:	4639      	mov	r1, r7
    70c8:	4630      	mov	r0, r6
    70ca:	f003 f879 	bl	a1c0 <__aeabi_d2uiz>
    70ce:	2800      	cmp	r0, #0
    70d0:	bf08      	it	eq
    70d2:	2001      	moveq	r0, #1
    70d4:	f002 fd22 	bl	9b1c <__aeabi_ui2d>
    70d8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    70da:	4606      	mov	r6, r0
    70dc:	460f      	mov	r7, r1
    70de:	b9db      	cbnz	r3, 7118 <_strtod_l+0xb20>
    70e0:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
    70e4:	9012      	str	r0, [sp, #72]	; 0x48
    70e6:	9313      	str	r3, [sp, #76]	; 0x4c
    70e8:	e9dd 8912 	ldrd	r8, r9, [sp, #72]	; 0x48
    70ec:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    70ee:	f109 63d6 	add.w	r3, r9, #112197632	; 0x6b00000
    70f2:	eba3 0902 	sub.w	r9, r3, r2
    70f6:	ed9d 0b0a 	vldr	d0, [sp, #40]	; 0x28
    70fa:	f002 f84b 	bl	9194 <__ulp>
    70fe:	4640      	mov	r0, r8
    7100:	ec53 2b10 	vmov	r2, r3, d0
    7104:	4649      	mov	r1, r9
    7106:	f002 fd83 	bl	9c10 <__aeabi_dmul>
    710a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
    710e:	f002 fbc9 	bl	98a4 <__adddf3>
    7112:	4682      	mov	sl, r0
    7114:	468b      	mov	fp, r1
    7116:	e796      	b.n	7046 <_strtod_l+0xa4e>
    7118:	e9cd 6712 	strd	r6, r7, [sp, #72]	; 0x48
    711c:	e7e4      	b.n	70e8 <_strtod_l+0xaf0>
    711e:	bf00      	nop
    7120:	94a03595 	.word	0x94a03595
    7124:	3fdfffff 	.word	0x3fdfffff
    7128:	35afe535 	.word	0x35afe535
    712c:	3fe00000 	.word	0x3fe00000
    7130:	ffc00000 	.word	0xffc00000
    7134:	41dfffff 	.word	0x41dfffff
    7138:	000fffff 	.word	0x000fffff
    713c:	7ff00000 	.word	0x7ff00000
    7140:	7fefffff 	.word	0x7fefffff
    7144:	3ff00000 	.word	0x3ff00000
    7148:	7fe00000 	.word	0x7fe00000
    714c:	7c9fffff 	.word	0x7c9fffff
    7150:	3fe00000 	.word	0x3fe00000
    7154:	bff00000 	.word	0xbff00000
    7158:	a30b      	add	r3, pc, #44	; (adr r3, 7188 <_strtod_l+0xb90>)
    715a:	e9d3 2300 	ldrd	r2, r3, [r3]
    715e:	f002 ffc9 	bl	a0f4 <__aeabi_dcmplt>
    7162:	e79e      	b.n	70a2 <_strtod_l+0xaaa>
    7164:	2300      	movs	r3, #0
    7166:	930c      	str	r3, [sp, #48]	; 0x30
    7168:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    716a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    716c:	6013      	str	r3, [r2, #0]
    716e:	f7ff ba85 	b.w	667c <_strtod_l+0x84>
    7172:	2b65      	cmp	r3, #101	; 0x65
    7174:	f43f ab72 	beq.w	685c <_strtod_l+0x264>
    7178:	2b45      	cmp	r3, #69	; 0x45
    717a:	f43f ab6f 	beq.w	685c <_strtod_l+0x264>
    717e:	2201      	movs	r2, #1
    7180:	f7ff bba4 	b.w	68cc <_strtod_l+0x2d4>
    7184:	f3af 8000 	nop.w
    7188:	94a03595 	.word	0x94a03595
    718c:	3fcfffff 	.word	0x3fcfffff

00007190 <_strtod_r>:
_strtod_r():
    7190:	4b01      	ldr	r3, [pc, #4]	; (7198 <_strtod_r+0x8>)
    7192:	f7ff ba31 	b.w	65f8 <_strtod_l>
    7196:	bf00      	nop
    7198:	100001c4 	.word	0x100001c4

0000719c <_strtol_l.isra.0>:
_strtol_l.isra.0():
    719c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    71a0:	4f39      	ldr	r7, [pc, #228]	; (7288 <_strtol_l.isra.0+0xec>)
    71a2:	4686      	mov	lr, r0
    71a4:	4608      	mov	r0, r1
    71a6:	4605      	mov	r5, r0
    71a8:	f815 4b01 	ldrb.w	r4, [r5], #1
    71ac:	5de6      	ldrb	r6, [r4, r7]
    71ae:	f016 0608 	ands.w	r6, r6, #8
    71b2:	d134      	bne.n	721e <_strtol_l.isra.0+0x82>
    71b4:	2c2d      	cmp	r4, #45	; 0x2d
    71b6:	d134      	bne.n	7222 <_strtol_l.isra.0+0x86>
    71b8:	782c      	ldrb	r4, [r5, #0]
    71ba:	f04f 0801 	mov.w	r8, #1
    71be:	1c85      	adds	r5, r0, #2
    71c0:	2b00      	cmp	r3, #0
    71c2:	d05c      	beq.n	727e <_strtol_l.isra.0+0xe2>
    71c4:	2b10      	cmp	r3, #16
    71c6:	d109      	bne.n	71dc <_strtol_l.isra.0+0x40>
    71c8:	2c30      	cmp	r4, #48	; 0x30
    71ca:	d107      	bne.n	71dc <_strtol_l.isra.0+0x40>
    71cc:	7828      	ldrb	r0, [r5, #0]
    71ce:	f000 00df 	and.w	r0, r0, #223	; 0xdf
    71d2:	2858      	cmp	r0, #88	; 0x58
    71d4:	d14e      	bne.n	7274 <_strtol_l.isra.0+0xd8>
    71d6:	786c      	ldrb	r4, [r5, #1]
    71d8:	2310      	movs	r3, #16
    71da:	3502      	adds	r5, #2
    71dc:	f1b8 0f00 	cmp.w	r8, #0
    71e0:	bf14      	ite	ne
    71e2:	f04f 4c00 	movne.w	ip, #2147483648	; 0x80000000
    71e6:	f06f 4c00 	mvneq.w	ip, #2147483648	; 0x80000000
    71ea:	2700      	movs	r7, #0
    71ec:	fbbc f9f3 	udiv	r9, ip, r3
    71f0:	4638      	mov	r0, r7
    71f2:	fb03 ca19 	mls	sl, r3, r9, ip
    71f6:	f1a4 0630 	sub.w	r6, r4, #48	; 0x30
    71fa:	2e09      	cmp	r6, #9
    71fc:	d818      	bhi.n	7230 <_strtol_l.isra.0+0x94>
    71fe:	4634      	mov	r4, r6
    7200:	42a3      	cmp	r3, r4
    7202:	dd24      	ble.n	724e <_strtol_l.isra.0+0xb2>
    7204:	1c7e      	adds	r6, r7, #1
    7206:	d007      	beq.n	7218 <_strtol_l.isra.0+0x7c>
    7208:	4581      	cmp	r9, r0
    720a:	d31d      	bcc.n	7248 <_strtol_l.isra.0+0xac>
    720c:	d101      	bne.n	7212 <_strtol_l.isra.0+0x76>
    720e:	45a2      	cmp	sl, r4
    7210:	db1a      	blt.n	7248 <_strtol_l.isra.0+0xac>
    7212:	fb00 4003 	mla	r0, r0, r3, r4
    7216:	2701      	movs	r7, #1
    7218:	f815 4b01 	ldrb.w	r4, [r5], #1
    721c:	e7eb      	b.n	71f6 <_strtol_l.isra.0+0x5a>
    721e:	4628      	mov	r0, r5
    7220:	e7c1      	b.n	71a6 <_strtol_l.isra.0+0xa>
    7222:	2c2b      	cmp	r4, #43	; 0x2b
    7224:	bf08      	it	eq
    7226:	782c      	ldrbeq	r4, [r5, #0]
    7228:	46b0      	mov	r8, r6
    722a:	bf08      	it	eq
    722c:	1c85      	addeq	r5, r0, #2
    722e:	e7c7      	b.n	71c0 <_strtol_l.isra.0+0x24>
    7230:	f1a4 0641 	sub.w	r6, r4, #65	; 0x41
    7234:	2e19      	cmp	r6, #25
    7236:	d801      	bhi.n	723c <_strtol_l.isra.0+0xa0>
    7238:	3c37      	subs	r4, #55	; 0x37
    723a:	e7e1      	b.n	7200 <_strtol_l.isra.0+0x64>
    723c:	f1a4 0661 	sub.w	r6, r4, #97	; 0x61
    7240:	2e19      	cmp	r6, #25
    7242:	d804      	bhi.n	724e <_strtol_l.isra.0+0xb2>
    7244:	3c57      	subs	r4, #87	; 0x57
    7246:	e7db      	b.n	7200 <_strtol_l.isra.0+0x64>
    7248:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
    724c:	e7e4      	b.n	7218 <_strtol_l.isra.0+0x7c>
    724e:	1c7b      	adds	r3, r7, #1
    7250:	d106      	bne.n	7260 <_strtol_l.isra.0+0xc4>
    7252:	2322      	movs	r3, #34	; 0x22
    7254:	f8ce 3000 	str.w	r3, [lr]
    7258:	4660      	mov	r0, ip
    725a:	b942      	cbnz	r2, 726e <_strtol_l.isra.0+0xd2>
    725c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    7260:	f1b8 0f00 	cmp.w	r8, #0
    7264:	d000      	beq.n	7268 <_strtol_l.isra.0+0xcc>
    7266:	4240      	negs	r0, r0
    7268:	2a00      	cmp	r2, #0
    726a:	d0f7      	beq.n	725c <_strtol_l.isra.0+0xc0>
    726c:	b107      	cbz	r7, 7270 <_strtol_l.isra.0+0xd4>
    726e:	1e69      	subs	r1, r5, #1
    7270:	6011      	str	r1, [r2, #0]
    7272:	e7f3      	b.n	725c <_strtol_l.isra.0+0xc0>
    7274:	2430      	movs	r4, #48	; 0x30
    7276:	2b00      	cmp	r3, #0
    7278:	d1b0      	bne.n	71dc <_strtol_l.isra.0+0x40>
    727a:	2308      	movs	r3, #8
    727c:	e7ae      	b.n	71dc <_strtol_l.isra.0+0x40>
    727e:	2c30      	cmp	r4, #48	; 0x30
    7280:	d0a4      	beq.n	71cc <_strtol_l.isra.0+0x30>
    7282:	230a      	movs	r3, #10
    7284:	e7aa      	b.n	71dc <_strtol_l.isra.0+0x40>
    7286:	bf00      	nop
    7288:	0000b5cd 	.word	0x0000b5cd

0000728c <_strtol_r>:
_strtol_r():
    728c:	f7ff bf86 	b.w	719c <_strtol_l.isra.0>

00007290 <__swbuf_r>:
__swbuf_r():
    7290:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    7292:	460e      	mov	r6, r1
    7294:	4614      	mov	r4, r2
    7296:	4605      	mov	r5, r0
    7298:	b118      	cbz	r0, 72a2 <__swbuf_r+0x12>
    729a:	6983      	ldr	r3, [r0, #24]
    729c:	b90b      	cbnz	r3, 72a2 <__swbuf_r+0x12>
    729e:	f001 f817 	bl	82d0 <__sinit>
    72a2:	4b21      	ldr	r3, [pc, #132]	; (7328 <__swbuf_r+0x98>)
    72a4:	429c      	cmp	r4, r3
    72a6:	d12b      	bne.n	7300 <__swbuf_r+0x70>
    72a8:	686c      	ldr	r4, [r5, #4]
    72aa:	69a3      	ldr	r3, [r4, #24]
    72ac:	60a3      	str	r3, [r4, #8]
    72ae:	89a3      	ldrh	r3, [r4, #12]
    72b0:	071a      	lsls	r2, r3, #28
    72b2:	d52f      	bpl.n	7314 <__swbuf_r+0x84>
    72b4:	6923      	ldr	r3, [r4, #16]
    72b6:	b36b      	cbz	r3, 7314 <__swbuf_r+0x84>
    72b8:	6923      	ldr	r3, [r4, #16]
    72ba:	6820      	ldr	r0, [r4, #0]
    72bc:	1ac0      	subs	r0, r0, r3
    72be:	6963      	ldr	r3, [r4, #20]
    72c0:	b2f6      	uxtb	r6, r6
    72c2:	4283      	cmp	r3, r0
    72c4:	4637      	mov	r7, r6
    72c6:	dc04      	bgt.n	72d2 <__swbuf_r+0x42>
    72c8:	4621      	mov	r1, r4
    72ca:	4628      	mov	r0, r5
    72cc:	f000 ff6c 	bl	81a8 <_fflush_r>
    72d0:	bb30      	cbnz	r0, 7320 <__swbuf_r+0x90>
    72d2:	68a3      	ldr	r3, [r4, #8]
    72d4:	3b01      	subs	r3, #1
    72d6:	60a3      	str	r3, [r4, #8]
    72d8:	6823      	ldr	r3, [r4, #0]
    72da:	1c5a      	adds	r2, r3, #1
    72dc:	6022      	str	r2, [r4, #0]
    72de:	701e      	strb	r6, [r3, #0]
    72e0:	6963      	ldr	r3, [r4, #20]
    72e2:	3001      	adds	r0, #1
    72e4:	4283      	cmp	r3, r0
    72e6:	d004      	beq.n	72f2 <__swbuf_r+0x62>
    72e8:	89a3      	ldrh	r3, [r4, #12]
    72ea:	07db      	lsls	r3, r3, #31
    72ec:	d506      	bpl.n	72fc <__swbuf_r+0x6c>
    72ee:	2e0a      	cmp	r6, #10
    72f0:	d104      	bne.n	72fc <__swbuf_r+0x6c>
    72f2:	4621      	mov	r1, r4
    72f4:	4628      	mov	r0, r5
    72f6:	f000 ff57 	bl	81a8 <_fflush_r>
    72fa:	b988      	cbnz	r0, 7320 <__swbuf_r+0x90>
    72fc:	4638      	mov	r0, r7
    72fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    7300:	4b0a      	ldr	r3, [pc, #40]	; (732c <__swbuf_r+0x9c>)
    7302:	429c      	cmp	r4, r3
    7304:	d101      	bne.n	730a <__swbuf_r+0x7a>
    7306:	68ac      	ldr	r4, [r5, #8]
    7308:	e7cf      	b.n	72aa <__swbuf_r+0x1a>
    730a:	4b09      	ldr	r3, [pc, #36]	; (7330 <__swbuf_r+0xa0>)
    730c:	429c      	cmp	r4, r3
    730e:	bf08      	it	eq
    7310:	68ec      	ldreq	r4, [r5, #12]
    7312:	e7ca      	b.n	72aa <__swbuf_r+0x1a>
    7314:	4621      	mov	r1, r4
    7316:	4628      	mov	r0, r5
    7318:	f000 f80c 	bl	7334 <__swsetup_r>
    731c:	2800      	cmp	r0, #0
    731e:	d0cb      	beq.n	72b8 <__swbuf_r+0x28>
    7320:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
    7324:	e7ea      	b.n	72fc <__swbuf_r+0x6c>
    7326:	bf00      	nop
    7328:	0000b7a0 	.word	0x0000b7a0
    732c:	0000b7c0 	.word	0x0000b7c0
    7330:	0000b780 	.word	0x0000b780

00007334 <__swsetup_r>:
__swsetup_r():
    7334:	4b32      	ldr	r3, [pc, #200]	; (7400 <__swsetup_r+0xcc>)
    7336:	b570      	push	{r4, r5, r6, lr}
    7338:	681d      	ldr	r5, [r3, #0]
    733a:	4606      	mov	r6, r0
    733c:	460c      	mov	r4, r1
    733e:	b125      	cbz	r5, 734a <__swsetup_r+0x16>
    7340:	69ab      	ldr	r3, [r5, #24]
    7342:	b913      	cbnz	r3, 734a <__swsetup_r+0x16>
    7344:	4628      	mov	r0, r5
    7346:	f000 ffc3 	bl	82d0 <__sinit>
    734a:	4b2e      	ldr	r3, [pc, #184]	; (7404 <__swsetup_r+0xd0>)
    734c:	429c      	cmp	r4, r3
    734e:	d10f      	bne.n	7370 <__swsetup_r+0x3c>
    7350:	686c      	ldr	r4, [r5, #4]
    7352:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    7356:	b29a      	uxth	r2, r3
    7358:	0715      	lsls	r5, r2, #28
    735a:	d42c      	bmi.n	73b6 <__swsetup_r+0x82>
    735c:	06d0      	lsls	r0, r2, #27
    735e:	d411      	bmi.n	7384 <__swsetup_r+0x50>
    7360:	2209      	movs	r2, #9
    7362:	6032      	str	r2, [r6, #0]
    7364:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    7368:	81a3      	strh	r3, [r4, #12]
    736a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    736e:	e03e      	b.n	73ee <__swsetup_r+0xba>
    7370:	4b25      	ldr	r3, [pc, #148]	; (7408 <__swsetup_r+0xd4>)
    7372:	429c      	cmp	r4, r3
    7374:	d101      	bne.n	737a <__swsetup_r+0x46>
    7376:	68ac      	ldr	r4, [r5, #8]
    7378:	e7eb      	b.n	7352 <__swsetup_r+0x1e>
    737a:	4b24      	ldr	r3, [pc, #144]	; (740c <__swsetup_r+0xd8>)
    737c:	429c      	cmp	r4, r3
    737e:	bf08      	it	eq
    7380:	68ec      	ldreq	r4, [r5, #12]
    7382:	e7e6      	b.n	7352 <__swsetup_r+0x1e>
    7384:	0751      	lsls	r1, r2, #29
    7386:	d512      	bpl.n	73ae <__swsetup_r+0x7a>
    7388:	6b61      	ldr	r1, [r4, #52]	; 0x34
    738a:	b141      	cbz	r1, 739e <__swsetup_r+0x6a>
    738c:	f104 0344 	add.w	r3, r4, #68	; 0x44
    7390:	4299      	cmp	r1, r3
    7392:	d002      	beq.n	739a <__swsetup_r+0x66>
    7394:	4630      	mov	r0, r6
    7396:	f7fd fee5 	bl	5164 <_free_r>
    739a:	2300      	movs	r3, #0
    739c:	6363      	str	r3, [r4, #52]	; 0x34
    739e:	89a3      	ldrh	r3, [r4, #12]
    73a0:	f023 0324 	bic.w	r3, r3, #36	; 0x24
    73a4:	81a3      	strh	r3, [r4, #12]
    73a6:	2300      	movs	r3, #0
    73a8:	6063      	str	r3, [r4, #4]
    73aa:	6923      	ldr	r3, [r4, #16]
    73ac:	6023      	str	r3, [r4, #0]
    73ae:	89a3      	ldrh	r3, [r4, #12]
    73b0:	f043 0308 	orr.w	r3, r3, #8
    73b4:	81a3      	strh	r3, [r4, #12]
    73b6:	6923      	ldr	r3, [r4, #16]
    73b8:	b94b      	cbnz	r3, 73ce <__swsetup_r+0x9a>
    73ba:	89a3      	ldrh	r3, [r4, #12]
    73bc:	f403 7320 	and.w	r3, r3, #640	; 0x280
    73c0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
    73c4:	d003      	beq.n	73ce <__swsetup_r+0x9a>
    73c6:	4621      	mov	r1, r4
    73c8:	4630      	mov	r0, r6
    73ca:	f001 fb6f 	bl	8aac <__smakebuf_r>
    73ce:	89a2      	ldrh	r2, [r4, #12]
    73d0:	f012 0301 	ands.w	r3, r2, #1
    73d4:	d00c      	beq.n	73f0 <__swsetup_r+0xbc>
    73d6:	2300      	movs	r3, #0
    73d8:	60a3      	str	r3, [r4, #8]
    73da:	6963      	ldr	r3, [r4, #20]
    73dc:	425b      	negs	r3, r3
    73de:	61a3      	str	r3, [r4, #24]
    73e0:	6923      	ldr	r3, [r4, #16]
    73e2:	b953      	cbnz	r3, 73fa <__swsetup_r+0xc6>
    73e4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    73e8:	f013 0080 	ands.w	r0, r3, #128	; 0x80
    73ec:	d1ba      	bne.n	7364 <__swsetup_r+0x30>
    73ee:	bd70      	pop	{r4, r5, r6, pc}
    73f0:	0792      	lsls	r2, r2, #30
    73f2:	bf58      	it	pl
    73f4:	6963      	ldrpl	r3, [r4, #20]
    73f6:	60a3      	str	r3, [r4, #8]
    73f8:	e7f2      	b.n	73e0 <__swsetup_r+0xac>
    73fa:	2000      	movs	r0, #0
    73fc:	e7f7      	b.n	73ee <__swsetup_r+0xba>
    73fe:	bf00      	nop
    7400:	1000015c 	.word	0x1000015c
    7404:	0000b7a0 	.word	0x0000b7a0
    7408:	0000b7c0 	.word	0x0000b7c0
    740c:	0000b780 	.word	0x0000b780

00007410 <quorem>:
quorem():
    7410:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7414:	6903      	ldr	r3, [r0, #16]
    7416:	690c      	ldr	r4, [r1, #16]
    7418:	42a3      	cmp	r3, r4
    741a:	4680      	mov	r8, r0
    741c:	db7f      	blt.n	751e <quorem+0x10e>
    741e:	3c01      	subs	r4, #1
    7420:	f101 0714 	add.w	r7, r1, #20
    7424:	00a0      	lsls	r0, r4, #2
    7426:	f108 0514 	add.w	r5, r8, #20
    742a:	182b      	adds	r3, r5, r0
    742c:	9301      	str	r3, [sp, #4]
    742e:	f857 3024 	ldr.w	r3, [r7, r4, lsl #2]
    7432:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
    7436:	3301      	adds	r3, #1
    7438:	429a      	cmp	r2, r3
    743a:	eb07 0900 	add.w	r9, r7, r0
    743e:	fbb2 f6f3 	udiv	r6, r2, r3
    7442:	d331      	bcc.n	74a8 <quorem+0x98>
    7444:	f04f 0a00 	mov.w	sl, #0
    7448:	46bc      	mov	ip, r7
    744a:	46ae      	mov	lr, r5
    744c:	46d3      	mov	fp, sl
    744e:	f85c 2b04 	ldr.w	r2, [ip], #4
    7452:	b293      	uxth	r3, r2
    7454:	fb06 a303 	mla	r3, r6, r3, sl
    7458:	ea4f 4a13 	mov.w	sl, r3, lsr #16
    745c:	b29b      	uxth	r3, r3
    745e:	ebab 0303 	sub.w	r3, fp, r3
    7462:	0c12      	lsrs	r2, r2, #16
    7464:	f8de b000 	ldr.w	fp, [lr]
    7468:	fb06 a202 	mla	r2, r6, r2, sl
    746c:	fa13 f38b 	uxtah	r3, r3, fp
    7470:	ea4f 4a12 	mov.w	sl, r2, lsr #16
    7474:	fa1f fb82 	uxth.w	fp, r2
    7478:	f8de 2000 	ldr.w	r2, [lr]
    747c:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
    7480:	eb02 4223 	add.w	r2, r2, r3, asr #16
    7484:	b29b      	uxth	r3, r3
    7486:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
    748a:	45e1      	cmp	r9, ip
    748c:	ea4f 4b22 	mov.w	fp, r2, asr #16
    7490:	f84e 3b04 	str.w	r3, [lr], #4
    7494:	d2db      	bcs.n	744e <quorem+0x3e>
    7496:	582b      	ldr	r3, [r5, r0]
    7498:	b933      	cbnz	r3, 74a8 <quorem+0x98>
    749a:	9b01      	ldr	r3, [sp, #4]
    749c:	3b04      	subs	r3, #4
    749e:	429d      	cmp	r5, r3
    74a0:	461a      	mov	r2, r3
    74a2:	d330      	bcc.n	7506 <quorem+0xf6>
    74a4:	f8c8 4010 	str.w	r4, [r8, #16]
    74a8:	4640      	mov	r0, r8
    74aa:	f001 fdfc 	bl	90a6 <__mcmp>
    74ae:	2800      	cmp	r0, #0
    74b0:	db25      	blt.n	74fe <quorem+0xee>
    74b2:	3601      	adds	r6, #1
    74b4:	4628      	mov	r0, r5
    74b6:	f04f 0c00 	mov.w	ip, #0
    74ba:	f857 2b04 	ldr.w	r2, [r7], #4
    74be:	f8d0 e000 	ldr.w	lr, [r0]
    74c2:	b293      	uxth	r3, r2
    74c4:	ebac 0303 	sub.w	r3, ip, r3
    74c8:	0c12      	lsrs	r2, r2, #16
    74ca:	fa13 f38e 	uxtah	r3, r3, lr
    74ce:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
    74d2:	eb02 4223 	add.w	r2, r2, r3, asr #16
    74d6:	b29b      	uxth	r3, r3
    74d8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
    74dc:	45b9      	cmp	r9, r7
    74de:	ea4f 4c22 	mov.w	ip, r2, asr #16
    74e2:	f840 3b04 	str.w	r3, [r0], #4
    74e6:	d2e8      	bcs.n	74ba <quorem+0xaa>
    74e8:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
    74ec:	eb05 0384 	add.w	r3, r5, r4, lsl #2
    74f0:	b92a      	cbnz	r2, 74fe <quorem+0xee>
    74f2:	3b04      	subs	r3, #4
    74f4:	429d      	cmp	r5, r3
    74f6:	461a      	mov	r2, r3
    74f8:	d30b      	bcc.n	7512 <quorem+0x102>
    74fa:	f8c8 4010 	str.w	r4, [r8, #16]
    74fe:	4630      	mov	r0, r6
    7500:	b003      	add	sp, #12
    7502:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7506:	6812      	ldr	r2, [r2, #0]
    7508:	3b04      	subs	r3, #4
    750a:	2a00      	cmp	r2, #0
    750c:	d1ca      	bne.n	74a4 <quorem+0x94>
    750e:	3c01      	subs	r4, #1
    7510:	e7c5      	b.n	749e <quorem+0x8e>
    7512:	6812      	ldr	r2, [r2, #0]
    7514:	3b04      	subs	r3, #4
    7516:	2a00      	cmp	r2, #0
    7518:	d1ef      	bne.n	74fa <quorem+0xea>
    751a:	3c01      	subs	r4, #1
    751c:	e7ea      	b.n	74f4 <quorem+0xe4>
    751e:	2000      	movs	r0, #0
    7520:	e7ee      	b.n	7500 <quorem+0xf0>
    7522:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff
    7526:	Address 0x0000000000007526 is out of bounds.


00007528 <_dtoa_r>:
_dtoa_r():
    7528:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    752c:	ec55 4b10 	vmov	r4, r5, d0
    7530:	b099      	sub	sp, #100	; 0x64
    7532:	6a47      	ldr	r7, [r0, #36]	; 0x24
    7534:	9108      	str	r1, [sp, #32]
    7536:	4683      	mov	fp, r0
    7538:	920d      	str	r2, [sp, #52]	; 0x34
    753a:	9314      	str	r3, [sp, #80]	; 0x50
    753c:	9e22      	ldr	r6, [sp, #136]	; 0x88
    753e:	e9cd 4500 	strd	r4, r5, [sp]
    7542:	b947      	cbnz	r7, 7556 <_dtoa_r+0x2e>
    7544:	2010      	movs	r0, #16
    7546:	f7fd fdcd 	bl	50e4 <malloc>
    754a:	e9c0 7701 	strd	r7, r7, [r0, #4]
    754e:	f8cb 0024 	str.w	r0, [fp, #36]	; 0x24
    7552:	6007      	str	r7, [r0, #0]
    7554:	60c7      	str	r7, [r0, #12]
    7556:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
    755a:	6819      	ldr	r1, [r3, #0]
    755c:	b159      	cbz	r1, 7576 <_dtoa_r+0x4e>
    755e:	685a      	ldr	r2, [r3, #4]
    7560:	604a      	str	r2, [r1, #4]
    7562:	2301      	movs	r3, #1
    7564:	4093      	lsls	r3, r2
    7566:	608b      	str	r3, [r1, #8]
    7568:	4658      	mov	r0, fp
    756a:	f001 fb81 	bl	8c70 <_Bfree>
    756e:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
    7572:	2200      	movs	r2, #0
    7574:	601a      	str	r2, [r3, #0]
    7576:	1e2b      	subs	r3, r5, #0
    7578:	bfb9      	ittee	lt
    757a:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
    757e:	9301      	strlt	r3, [sp, #4]
    7580:	2300      	movge	r3, #0
    7582:	6033      	strge	r3, [r6, #0]
    7584:	9c01      	ldr	r4, [sp, #4]
    7586:	4bb2      	ldr	r3, [pc, #712]	; (7850 <_dtoa_r+0x328>)
    7588:	bfbc      	itt	lt
    758a:	2201      	movlt	r2, #1
    758c:	6032      	strlt	r2, [r6, #0]
    758e:	43a3      	bics	r3, r4
    7590:	d11a      	bne.n	75c8 <_dtoa_r+0xa0>
    7592:	9a14      	ldr	r2, [sp, #80]	; 0x50
    7594:	f242 730f 	movw	r3, #9999	; 0x270f
    7598:	6013      	str	r3, [r2, #0]
    759a:	9a00      	ldr	r2, [sp, #0]
    759c:	f3c4 0313 	ubfx	r3, r4, #0, #20
    75a0:	4313      	orrs	r3, r2
    75a2:	f000 8552 	beq.w	804a <_dtoa_r+0xb22>
    75a6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    75a8:	b953      	cbnz	r3, 75c0 <_dtoa_r+0x98>
    75aa:	4baa      	ldr	r3, [pc, #680]	; (7854 <_dtoa_r+0x32c>)
    75ac:	e023      	b.n	75f6 <_dtoa_r+0xce>
    75ae:	4baa      	ldr	r3, [pc, #680]	; (7858 <_dtoa_r+0x330>)
    75b0:	9303      	str	r3, [sp, #12]
    75b2:	3308      	adds	r3, #8
    75b4:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    75b6:	6013      	str	r3, [r2, #0]
    75b8:	9803      	ldr	r0, [sp, #12]
    75ba:	b019      	add	sp, #100	; 0x64
    75bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    75c0:	4ba4      	ldr	r3, [pc, #656]	; (7854 <_dtoa_r+0x32c>)
    75c2:	9303      	str	r3, [sp, #12]
    75c4:	3303      	adds	r3, #3
    75c6:	e7f5      	b.n	75b4 <_dtoa_r+0x8c>
    75c8:	ed9d 7b00 	vldr	d7, [sp]
    75cc:	2200      	movs	r2, #0
    75ce:	2300      	movs	r3, #0
    75d0:	ec51 0b17 	vmov	r0, r1, d7
    75d4:	ed8d 7b0e 	vstr	d7, [sp, #56]	; 0x38
    75d8:	f002 fd82 	bl	a0e0 <__aeabi_dcmpeq>
    75dc:	4607      	mov	r7, r0
    75de:	b160      	cbz	r0, 75fa <_dtoa_r+0xd2>
    75e0:	9a14      	ldr	r2, [sp, #80]	; 0x50
    75e2:	2301      	movs	r3, #1
    75e4:	6013      	str	r3, [r2, #0]
    75e6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    75e8:	2b00      	cmp	r3, #0
    75ea:	f000 852b 	beq.w	8044 <_dtoa_r+0xb1c>
    75ee:	4b9b      	ldr	r3, [pc, #620]	; (785c <_dtoa_r+0x334>)
    75f0:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    75f2:	6013      	str	r3, [r2, #0]
    75f4:	3b01      	subs	r3, #1
    75f6:	9303      	str	r3, [sp, #12]
    75f8:	e7de      	b.n	75b8 <_dtoa_r+0x90>
    75fa:	aa16      	add	r2, sp, #88	; 0x58
    75fc:	a917      	add	r1, sp, #92	; 0x5c
    75fe:	ed9d 0b0e 	vldr	d0, [sp, #56]	; 0x38
    7602:	4658      	mov	r0, fp
    7604:	f001 fe3c 	bl	9280 <__d2b>
    7608:	f3c4 560a 	ubfx	r6, r4, #20, #11
    760c:	4680      	mov	r8, r0
    760e:	2e00      	cmp	r6, #0
    7610:	d07f      	beq.n	7712 <_dtoa_r+0x1ea>
    7612:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    7614:	9715      	str	r7, [sp, #84]	; 0x54
    7616:	f3c3 0313 	ubfx	r3, r3, #0, #20
    761a:	e9dd 450e 	ldrd	r4, r5, [sp, #56]	; 0x38
    761e:	f043 557f 	orr.w	r5, r3, #1069547520	; 0x3fc00000
    7622:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
    7626:	f2a6 36ff 	subw	r6, r6, #1023	; 0x3ff
    762a:	2200      	movs	r2, #0
    762c:	4b8c      	ldr	r3, [pc, #560]	; (7860 <_dtoa_r+0x338>)
    762e:	4620      	mov	r0, r4
    7630:	4629      	mov	r1, r5
    7632:	f002 f935 	bl	98a0 <__aeabi_dsub>
    7636:	a380      	add	r3, pc, #512	; (adr r3, 7838 <_dtoa_r+0x310>)
    7638:	e9d3 2300 	ldrd	r2, r3, [r3]
    763c:	f002 fae8 	bl	9c10 <__aeabi_dmul>
    7640:	a37f      	add	r3, pc, #508	; (adr r3, 7840 <_dtoa_r+0x318>)
    7642:	e9d3 2300 	ldrd	r2, r3, [r3]
    7646:	f002 f92d 	bl	98a4 <__adddf3>
    764a:	4604      	mov	r4, r0
    764c:	4630      	mov	r0, r6
    764e:	460d      	mov	r5, r1
    7650:	f002 fa74 	bl	9b3c <__aeabi_i2d>
    7654:	a37c      	add	r3, pc, #496	; (adr r3, 7848 <_dtoa_r+0x320>)
    7656:	e9d3 2300 	ldrd	r2, r3, [r3]
    765a:	f002 fad9 	bl	9c10 <__aeabi_dmul>
    765e:	4602      	mov	r2, r0
    7660:	460b      	mov	r3, r1
    7662:	4620      	mov	r0, r4
    7664:	4629      	mov	r1, r5
    7666:	f002 f91d 	bl	98a4 <__adddf3>
    766a:	4604      	mov	r4, r0
    766c:	460d      	mov	r5, r1
    766e:	f002 fd7f 	bl	a170 <__aeabi_d2iz>
    7672:	2200      	movs	r2, #0
    7674:	4682      	mov	sl, r0
    7676:	2300      	movs	r3, #0
    7678:	4620      	mov	r0, r4
    767a:	4629      	mov	r1, r5
    767c:	f002 fd3a 	bl	a0f4 <__aeabi_dcmplt>
    7680:	b148      	cbz	r0, 7696 <_dtoa_r+0x16e>
    7682:	4650      	mov	r0, sl
    7684:	f002 fa5a 	bl	9b3c <__aeabi_i2d>
    7688:	4622      	mov	r2, r4
    768a:	462b      	mov	r3, r5
    768c:	f002 fd28 	bl	a0e0 <__aeabi_dcmpeq>
    7690:	b908      	cbnz	r0, 7696 <_dtoa_r+0x16e>
    7692:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
    7696:	f1ba 0f16 	cmp.w	sl, #22
    769a:	d859      	bhi.n	7750 <_dtoa_r+0x228>
    769c:	4b71      	ldr	r3, [pc, #452]	; (7864 <_dtoa_r+0x33c>)
    769e:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
    76a2:	e9d3 2300 	ldrd	r2, r3, [r3]
    76a6:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
    76aa:	f002 fd23 	bl	a0f4 <__aeabi_dcmplt>
    76ae:	2800      	cmp	r0, #0
    76b0:	d050      	beq.n	7754 <_dtoa_r+0x22c>
    76b2:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
    76b6:	2300      	movs	r3, #0
    76b8:	9311      	str	r3, [sp, #68]	; 0x44
    76ba:	9b16      	ldr	r3, [sp, #88]	; 0x58
    76bc:	1b9e      	subs	r6, r3, r6
    76be:	1e73      	subs	r3, r6, #1
    76c0:	9307      	str	r3, [sp, #28]
    76c2:	bf45      	ittet	mi
    76c4:	f1c6 0301 	rsbmi	r3, r6, #1
    76c8:	9306      	strmi	r3, [sp, #24]
    76ca:	2300      	movpl	r3, #0
    76cc:	2300      	movmi	r3, #0
    76ce:	bf4c      	ite	mi
    76d0:	9307      	strmi	r3, [sp, #28]
    76d2:	9306      	strpl	r3, [sp, #24]
    76d4:	f1ba 0f00 	cmp.w	sl, #0
    76d8:	db3e      	blt.n	7758 <_dtoa_r+0x230>
    76da:	9b07      	ldr	r3, [sp, #28]
    76dc:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
    76e0:	4453      	add	r3, sl
    76e2:	9307      	str	r3, [sp, #28]
    76e4:	2300      	movs	r3, #0
    76e6:	9309      	str	r3, [sp, #36]	; 0x24
    76e8:	9b08      	ldr	r3, [sp, #32]
    76ea:	2b09      	cmp	r3, #9
    76ec:	f200 808f 	bhi.w	780e <_dtoa_r+0x2e6>
    76f0:	2b05      	cmp	r3, #5
    76f2:	bfc4      	itt	gt
    76f4:	3b04      	subgt	r3, #4
    76f6:	9308      	strgt	r3, [sp, #32]
    76f8:	9b08      	ldr	r3, [sp, #32]
    76fa:	f1a3 0302 	sub.w	r3, r3, #2
    76fe:	bfcc      	ite	gt
    7700:	2400      	movgt	r4, #0
    7702:	2401      	movle	r4, #1
    7704:	2b03      	cmp	r3, #3
    7706:	f200 808d 	bhi.w	7824 <_dtoa_r+0x2fc>
    770a:	e8df f003 	tbb	[pc, r3]
    770e:	3c2f      	.short	0x3c2f
    7710:	7e3a      	.short	0x7e3a
    7712:	e9dd 6316 	ldrd	r6, r3, [sp, #88]	; 0x58
    7716:	441e      	add	r6, r3
    7718:	f206 4032 	addw	r0, r6, #1074	; 0x432
    771c:	2820      	cmp	r0, #32
    771e:	dd11      	ble.n	7744 <_dtoa_r+0x21c>
    7720:	f1c0 0040 	rsb	r0, r0, #64	; 0x40
    7724:	9b00      	ldr	r3, [sp, #0]
    7726:	4084      	lsls	r4, r0
    7728:	f206 4012 	addw	r0, r6, #1042	; 0x412
    772c:	fa23 f000 	lsr.w	r0, r3, r0
    7730:	4320      	orrs	r0, r4
    7732:	f002 f9f3 	bl	9b1c <__aeabi_ui2d>
    7736:	2301      	movs	r3, #1
    7738:	4604      	mov	r4, r0
    773a:	f1a1 75f8 	sub.w	r5, r1, #32505856	; 0x1f00000
    773e:	3e01      	subs	r6, #1
    7740:	9315      	str	r3, [sp, #84]	; 0x54
    7742:	e772      	b.n	762a <_dtoa_r+0x102>
    7744:	9b00      	ldr	r3, [sp, #0]
    7746:	f1c0 0020 	rsb	r0, r0, #32
    774a:	fa03 f000 	lsl.w	r0, r3, r0
    774e:	e7f0      	b.n	7732 <_dtoa_r+0x20a>
    7750:	2301      	movs	r3, #1
    7752:	e7b1      	b.n	76b8 <_dtoa_r+0x190>
    7754:	9011      	str	r0, [sp, #68]	; 0x44
    7756:	e7b0      	b.n	76ba <_dtoa_r+0x192>
    7758:	9b06      	ldr	r3, [sp, #24]
    775a:	eba3 030a 	sub.w	r3, r3, sl
    775e:	9306      	str	r3, [sp, #24]
    7760:	f1ca 0300 	rsb	r3, sl, #0
    7764:	9309      	str	r3, [sp, #36]	; 0x24
    7766:	2300      	movs	r3, #0
    7768:	9310      	str	r3, [sp, #64]	; 0x40
    776a:	e7bd      	b.n	76e8 <_dtoa_r+0x1c0>
    776c:	2300      	movs	r3, #0
    776e:	930c      	str	r3, [sp, #48]	; 0x30
    7770:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    7772:	2b00      	cmp	r3, #0
    7774:	dc59      	bgt.n	782a <_dtoa_r+0x302>
    7776:	2301      	movs	r3, #1
    7778:	9304      	str	r3, [sp, #16]
    777a:	4699      	mov	r9, r3
    777c:	461a      	mov	r2, r3
    777e:	920d      	str	r2, [sp, #52]	; 0x34
    7780:	e00c      	b.n	779c <_dtoa_r+0x274>
    7782:	2301      	movs	r3, #1
    7784:	e7f3      	b.n	776e <_dtoa_r+0x246>
    7786:	2300      	movs	r3, #0
    7788:	930c      	str	r3, [sp, #48]	; 0x30
    778a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    778c:	4453      	add	r3, sl
    778e:	f103 0901 	add.w	r9, r3, #1
    7792:	9304      	str	r3, [sp, #16]
    7794:	464b      	mov	r3, r9
    7796:	2b01      	cmp	r3, #1
    7798:	bfb8      	it	lt
    779a:	2301      	movlt	r3, #1
    779c:	f8db 5024 	ldr.w	r5, [fp, #36]	; 0x24
    77a0:	2200      	movs	r2, #0
    77a2:	606a      	str	r2, [r5, #4]
    77a4:	2204      	movs	r2, #4
    77a6:	f102 0014 	add.w	r0, r2, #20
    77aa:	4298      	cmp	r0, r3
    77ac:	6869      	ldr	r1, [r5, #4]
    77ae:	d95d      	bls.n	786c <_dtoa_r+0x344>
    77b0:	4658      	mov	r0, fp
    77b2:	f001 fa29 	bl	8c08 <_Balloc>
    77b6:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
    77ba:	6028      	str	r0, [r5, #0]
    77bc:	681b      	ldr	r3, [r3, #0]
    77be:	9303      	str	r3, [sp, #12]
    77c0:	f1b9 0f0e 	cmp.w	r9, #14
    77c4:	f200 80d7 	bhi.w	7976 <_dtoa_r+0x44e>
    77c8:	2c00      	cmp	r4, #0
    77ca:	f000 80d4 	beq.w	7976 <_dtoa_r+0x44e>
    77ce:	f1ba 0f00 	cmp.w	sl, #0
    77d2:	dd69      	ble.n	78a8 <_dtoa_r+0x380>
    77d4:	4a23      	ldr	r2, [pc, #140]	; (7864 <_dtoa_r+0x33c>)
    77d6:	f00a 030f 	and.w	r3, sl, #15
    77da:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
    77de:	ed93 7b00 	vldr	d7, [r3]
    77e2:	ea4f 142a 	mov.w	r4, sl, asr #4
    77e6:	06e2      	lsls	r2, r4, #27
    77e8:	ed8d 7b0a 	vstr	d7, [sp, #40]	; 0x28
    77ec:	d55a      	bpl.n	78a4 <_dtoa_r+0x37c>
    77ee:	4b1e      	ldr	r3, [pc, #120]	; (7868 <_dtoa_r+0x340>)
    77f0:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
    77f4:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
    77f8:	f002 fb34 	bl	9e64 <__aeabi_ddiv>
    77fc:	e9cd 0100 	strd	r0, r1, [sp]
    7800:	f004 040f 	and.w	r4, r4, #15
    7804:	2603      	movs	r6, #3
    7806:	4d18      	ldr	r5, [pc, #96]	; (7868 <_dtoa_r+0x340>)
    7808:	e041      	b.n	788e <_dtoa_r+0x366>
    780a:	2301      	movs	r3, #1
    780c:	e7bc      	b.n	7788 <_dtoa_r+0x260>
    780e:	2401      	movs	r4, #1
    7810:	2300      	movs	r3, #0
    7812:	9308      	str	r3, [sp, #32]
    7814:	940c      	str	r4, [sp, #48]	; 0x30
    7816:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    781a:	9304      	str	r3, [sp, #16]
    781c:	4699      	mov	r9, r3
    781e:	2200      	movs	r2, #0
    7820:	2312      	movs	r3, #18
    7822:	e7ac      	b.n	777e <_dtoa_r+0x256>
    7824:	2301      	movs	r3, #1
    7826:	930c      	str	r3, [sp, #48]	; 0x30
    7828:	e7f5      	b.n	7816 <_dtoa_r+0x2ee>
    782a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    782c:	9304      	str	r3, [sp, #16]
    782e:	4699      	mov	r9, r3
    7830:	e7b4      	b.n	779c <_dtoa_r+0x274>
    7832:	bf00      	nop
    7834:	f3af 8000 	nop.w
    7838:	636f4361 	.word	0x636f4361
    783c:	3fd287a7 	.word	0x3fd287a7
    7840:	8b60c8b3 	.word	0x8b60c8b3
    7844:	3fc68a28 	.word	0x3fc68a28
    7848:	509f79fb 	.word	0x509f79fb
    784c:	3fd34413 	.word	0x3fd34413
    7850:	7ff00000 	.word	0x7ff00000
    7854:	0000b779 	.word	0x0000b779
    7858:	0000b770 	.word	0x0000b770
    785c:	0000aff6 	.word	0x0000aff6
    7860:	3ff80000 	.word	0x3ff80000
    7864:	0000b820 	.word	0x0000b820
    7868:	0000b7f8 	.word	0x0000b7f8
    786c:	3101      	adds	r1, #1
    786e:	6069      	str	r1, [r5, #4]
    7870:	0052      	lsls	r2, r2, #1
    7872:	e798      	b.n	77a6 <_dtoa_r+0x27e>
    7874:	07e3      	lsls	r3, r4, #31
    7876:	d508      	bpl.n	788a <_dtoa_r+0x362>
    7878:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
    787c:	e9d5 2300 	ldrd	r2, r3, [r5]
    7880:	f002 f9c6 	bl	9c10 <__aeabi_dmul>
    7884:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
    7888:	3601      	adds	r6, #1
    788a:	1064      	asrs	r4, r4, #1
    788c:	3508      	adds	r5, #8
    788e:	2c00      	cmp	r4, #0
    7890:	d1f0      	bne.n	7874 <_dtoa_r+0x34c>
    7892:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
    7896:	e9dd 0100 	ldrd	r0, r1, [sp]
    789a:	f002 fae3 	bl	9e64 <__aeabi_ddiv>
    789e:	e9cd 0100 	strd	r0, r1, [sp]
    78a2:	e01a      	b.n	78da <_dtoa_r+0x3b2>
    78a4:	2602      	movs	r6, #2
    78a6:	e7ae      	b.n	7806 <_dtoa_r+0x2de>
    78a8:	f000 809f 	beq.w	79ea <_dtoa_r+0x4c2>
    78ac:	f1ca 0400 	rsb	r4, sl, #0
    78b0:	4b9f      	ldr	r3, [pc, #636]	; (7b30 <_dtoa_r+0x608>)
    78b2:	4da0      	ldr	r5, [pc, #640]	; (7b34 <_dtoa_r+0x60c>)
    78b4:	f004 020f 	and.w	r2, r4, #15
    78b8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
    78bc:	e9d3 2300 	ldrd	r2, r3, [r3]
    78c0:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
    78c4:	f002 f9a4 	bl	9c10 <__aeabi_dmul>
    78c8:	e9cd 0100 	strd	r0, r1, [sp]
    78cc:	1124      	asrs	r4, r4, #4
    78ce:	2300      	movs	r3, #0
    78d0:	2602      	movs	r6, #2
    78d2:	2c00      	cmp	r4, #0
    78d4:	d17e      	bne.n	79d4 <_dtoa_r+0x4ac>
    78d6:	2b00      	cmp	r3, #0
    78d8:	d1e1      	bne.n	789e <_dtoa_r+0x376>
    78da:	9b11      	ldr	r3, [sp, #68]	; 0x44
    78dc:	2b00      	cmp	r3, #0
    78de:	f000 8086 	beq.w	79ee <_dtoa_r+0x4c6>
    78e2:	e9dd 4500 	ldrd	r4, r5, [sp]
    78e6:	2200      	movs	r2, #0
    78e8:	4b93      	ldr	r3, [pc, #588]	; (7b38 <_dtoa_r+0x610>)
    78ea:	4620      	mov	r0, r4
    78ec:	4629      	mov	r1, r5
    78ee:	f002 fc01 	bl	a0f4 <__aeabi_dcmplt>
    78f2:	2800      	cmp	r0, #0
    78f4:	d07b      	beq.n	79ee <_dtoa_r+0x4c6>
    78f6:	f1b9 0f00 	cmp.w	r9, #0
    78fa:	d078      	beq.n	79ee <_dtoa_r+0x4c6>
    78fc:	9b04      	ldr	r3, [sp, #16]
    78fe:	2b00      	cmp	r3, #0
    7900:	dd35      	ble.n	796e <_dtoa_r+0x446>
    7902:	f10a 33ff 	add.w	r3, sl, #4294967295	; 0xffffffff
    7906:	930a      	str	r3, [sp, #40]	; 0x28
    7908:	4620      	mov	r0, r4
    790a:	2200      	movs	r2, #0
    790c:	4b8b      	ldr	r3, [pc, #556]	; (7b3c <_dtoa_r+0x614>)
    790e:	4629      	mov	r1, r5
    7910:	f002 f97e 	bl	9c10 <__aeabi_dmul>
    7914:	e9cd 0100 	strd	r0, r1, [sp]
    7918:	9c04      	ldr	r4, [sp, #16]
    791a:	3601      	adds	r6, #1
    791c:	4630      	mov	r0, r6
    791e:	f002 f90d 	bl	9b3c <__aeabi_i2d>
    7922:	e9dd 2300 	ldrd	r2, r3, [sp]
    7926:	f002 f973 	bl	9c10 <__aeabi_dmul>
    792a:	2200      	movs	r2, #0
    792c:	4b84      	ldr	r3, [pc, #528]	; (7b40 <_dtoa_r+0x618>)
    792e:	f001 ffb9 	bl	98a4 <__adddf3>
    7932:	4606      	mov	r6, r0
    7934:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
    7938:	2c00      	cmp	r4, #0
    793a:	d15c      	bne.n	79f6 <_dtoa_r+0x4ce>
    793c:	2200      	movs	r2, #0
    793e:	4b81      	ldr	r3, [pc, #516]	; (7b44 <_dtoa_r+0x61c>)
    7940:	e9dd 0100 	ldrd	r0, r1, [sp]
    7944:	f001 ffac 	bl	98a0 <__aeabi_dsub>
    7948:	4632      	mov	r2, r6
    794a:	463b      	mov	r3, r7
    794c:	e9cd 0100 	strd	r0, r1, [sp]
    7950:	f002 fbee 	bl	a130 <__aeabi_dcmpgt>
    7954:	2800      	cmp	r0, #0
    7956:	f040 828c 	bne.w	7e72 <_dtoa_r+0x94a>
    795a:	4632      	mov	r2, r6
    795c:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
    7960:	e9dd 0100 	ldrd	r0, r1, [sp]
    7964:	f002 fbc6 	bl	a0f4 <__aeabi_dcmplt>
    7968:	2800      	cmp	r0, #0
    796a:	f040 8280 	bne.w	7e6e <_dtoa_r+0x946>
    796e:	e9dd 340e 	ldrd	r3, r4, [sp, #56]	; 0x38
    7972:	e9cd 3400 	strd	r3, r4, [sp]
    7976:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    7978:	2b00      	cmp	r3, #0
    797a:	f2c0 814f 	blt.w	7c1c <_dtoa_r+0x6f4>
    797e:	f1ba 0f0e 	cmp.w	sl, #14
    7982:	f300 814b 	bgt.w	7c1c <_dtoa_r+0x6f4>
    7986:	4b6a      	ldr	r3, [pc, #424]	; (7b30 <_dtoa_r+0x608>)
    7988:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
    798c:	ed93 7b00 	vldr	d7, [r3]
    7990:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    7992:	2b00      	cmp	r3, #0
    7994:	ed8d 7b04 	vstr	d7, [sp, #16]
    7998:	f280 80d8 	bge.w	7b4c <_dtoa_r+0x624>
    799c:	f1b9 0f00 	cmp.w	r9, #0
    79a0:	f300 80d4 	bgt.w	7b4c <_dtoa_r+0x624>
    79a4:	f040 8262 	bne.w	7e6c <_dtoa_r+0x944>
    79a8:	2200      	movs	r2, #0
    79aa:	4b66      	ldr	r3, [pc, #408]	; (7b44 <_dtoa_r+0x61c>)
    79ac:	ec51 0b17 	vmov	r0, r1, d7
    79b0:	f002 f92e 	bl	9c10 <__aeabi_dmul>
    79b4:	e9dd 2300 	ldrd	r2, r3, [sp]
    79b8:	f002 fbb0 	bl	a11c <__aeabi_dcmpge>
    79bc:	464c      	mov	r4, r9
    79be:	464e      	mov	r6, r9
    79c0:	2800      	cmp	r0, #0
    79c2:	f040 823b 	bne.w	7e3c <_dtoa_r+0x914>
    79c6:	9d03      	ldr	r5, [sp, #12]
    79c8:	2331      	movs	r3, #49	; 0x31
    79ca:	f805 3b01 	strb.w	r3, [r5], #1
    79ce:	f10a 0a01 	add.w	sl, sl, #1
    79d2:	e237      	b.n	7e44 <_dtoa_r+0x91c>
    79d4:	07e7      	lsls	r7, r4, #31
    79d6:	d505      	bpl.n	79e4 <_dtoa_r+0x4bc>
    79d8:	e9d5 2300 	ldrd	r2, r3, [r5]
    79dc:	f002 f918 	bl	9c10 <__aeabi_dmul>
    79e0:	3601      	adds	r6, #1
    79e2:	2301      	movs	r3, #1
    79e4:	1064      	asrs	r4, r4, #1
    79e6:	3508      	adds	r5, #8
    79e8:	e773      	b.n	78d2 <_dtoa_r+0x3aa>
    79ea:	2602      	movs	r6, #2
    79ec:	e775      	b.n	78da <_dtoa_r+0x3b2>
    79ee:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
    79f2:	464c      	mov	r4, r9
    79f4:	e792      	b.n	791c <_dtoa_r+0x3f4>
    79f6:	4b4e      	ldr	r3, [pc, #312]	; (7b30 <_dtoa_r+0x608>)
    79f8:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
    79fc:	e953 0102 	ldrd	r0, r1, [r3, #-8]
    7a00:	9b03      	ldr	r3, [sp, #12]
    7a02:	441c      	add	r4, r3
    7a04:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    7a06:	2b00      	cmp	r3, #0
    7a08:	d046      	beq.n	7a98 <_dtoa_r+0x570>
    7a0a:	4602      	mov	r2, r0
    7a0c:	460b      	mov	r3, r1
    7a0e:	2000      	movs	r0, #0
    7a10:	494d      	ldr	r1, [pc, #308]	; (7b48 <_dtoa_r+0x620>)
    7a12:	f002 fa27 	bl	9e64 <__aeabi_ddiv>
    7a16:	4632      	mov	r2, r6
    7a18:	463b      	mov	r3, r7
    7a1a:	f001 ff41 	bl	98a0 <__aeabi_dsub>
    7a1e:	9d03      	ldr	r5, [sp, #12]
    7a20:	4606      	mov	r6, r0
    7a22:	460f      	mov	r7, r1
    7a24:	e9dd 0100 	ldrd	r0, r1, [sp]
    7a28:	f002 fba2 	bl	a170 <__aeabi_d2iz>
    7a2c:	9012      	str	r0, [sp, #72]	; 0x48
    7a2e:	f002 f885 	bl	9b3c <__aeabi_i2d>
    7a32:	4602      	mov	r2, r0
    7a34:	460b      	mov	r3, r1
    7a36:	e9dd 0100 	ldrd	r0, r1, [sp]
    7a3a:	f001 ff31 	bl	98a0 <__aeabi_dsub>
    7a3e:	9b12      	ldr	r3, [sp, #72]	; 0x48
    7a40:	3330      	adds	r3, #48	; 0x30
    7a42:	f805 3b01 	strb.w	r3, [r5], #1
    7a46:	4632      	mov	r2, r6
    7a48:	463b      	mov	r3, r7
    7a4a:	e9cd 0100 	strd	r0, r1, [sp]
    7a4e:	f002 fb51 	bl	a0f4 <__aeabi_dcmplt>
    7a52:	2800      	cmp	r0, #0
    7a54:	d160      	bne.n	7b18 <_dtoa_r+0x5f0>
    7a56:	e9dd 2300 	ldrd	r2, r3, [sp]
    7a5a:	2000      	movs	r0, #0
    7a5c:	4936      	ldr	r1, [pc, #216]	; (7b38 <_dtoa_r+0x610>)
    7a5e:	f001 ff1f 	bl	98a0 <__aeabi_dsub>
    7a62:	4632      	mov	r2, r6
    7a64:	463b      	mov	r3, r7
    7a66:	f002 fb45 	bl	a0f4 <__aeabi_dcmplt>
    7a6a:	2800      	cmp	r0, #0
    7a6c:	f040 80b4 	bne.w	7bd8 <_dtoa_r+0x6b0>
    7a70:	42a5      	cmp	r5, r4
    7a72:	f43f af7c 	beq.w	796e <_dtoa_r+0x446>
    7a76:	2200      	movs	r2, #0
    7a78:	4b30      	ldr	r3, [pc, #192]	; (7b3c <_dtoa_r+0x614>)
    7a7a:	4630      	mov	r0, r6
    7a7c:	4639      	mov	r1, r7
    7a7e:	f002 f8c7 	bl	9c10 <__aeabi_dmul>
    7a82:	2200      	movs	r2, #0
    7a84:	4606      	mov	r6, r0
    7a86:	460f      	mov	r7, r1
    7a88:	4b2c      	ldr	r3, [pc, #176]	; (7b3c <_dtoa_r+0x614>)
    7a8a:	e9dd 0100 	ldrd	r0, r1, [sp]
    7a8e:	f002 f8bf 	bl	9c10 <__aeabi_dmul>
    7a92:	e9cd 0100 	strd	r0, r1, [sp]
    7a96:	e7c5      	b.n	7a24 <_dtoa_r+0x4fc>
    7a98:	4632      	mov	r2, r6
    7a9a:	463b      	mov	r3, r7
    7a9c:	f002 f8b8 	bl	9c10 <__aeabi_dmul>
    7aa0:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
    7aa4:	9e03      	ldr	r6, [sp, #12]
    7aa6:	4625      	mov	r5, r4
    7aa8:	e9dd 0100 	ldrd	r0, r1, [sp]
    7aac:	f002 fb60 	bl	a170 <__aeabi_d2iz>
    7ab0:	4607      	mov	r7, r0
    7ab2:	f002 f843 	bl	9b3c <__aeabi_i2d>
    7ab6:	3730      	adds	r7, #48	; 0x30
    7ab8:	4602      	mov	r2, r0
    7aba:	460b      	mov	r3, r1
    7abc:	e9dd 0100 	ldrd	r0, r1, [sp]
    7ac0:	f001 feee 	bl	98a0 <__aeabi_dsub>
    7ac4:	f806 7b01 	strb.w	r7, [r6], #1
    7ac8:	42a6      	cmp	r6, r4
    7aca:	e9cd 0100 	strd	r0, r1, [sp]
    7ace:	f04f 0200 	mov.w	r2, #0
    7ad2:	d126      	bne.n	7b22 <_dtoa_r+0x5fa>
    7ad4:	4b1c      	ldr	r3, [pc, #112]	; (7b48 <_dtoa_r+0x620>)
    7ad6:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
    7ada:	f001 fee3 	bl	98a4 <__adddf3>
    7ade:	4602      	mov	r2, r0
    7ae0:	460b      	mov	r3, r1
    7ae2:	e9dd 0100 	ldrd	r0, r1, [sp]
    7ae6:	f002 fb23 	bl	a130 <__aeabi_dcmpgt>
    7aea:	2800      	cmp	r0, #0
    7aec:	d174      	bne.n	7bd8 <_dtoa_r+0x6b0>
    7aee:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	; 0x48
    7af2:	2000      	movs	r0, #0
    7af4:	4914      	ldr	r1, [pc, #80]	; (7b48 <_dtoa_r+0x620>)
    7af6:	f001 fed3 	bl	98a0 <__aeabi_dsub>
    7afa:	4602      	mov	r2, r0
    7afc:	460b      	mov	r3, r1
    7afe:	e9dd 0100 	ldrd	r0, r1, [sp]
    7b02:	f002 faf7 	bl	a0f4 <__aeabi_dcmplt>
    7b06:	2800      	cmp	r0, #0
    7b08:	f43f af31 	beq.w	796e <_dtoa_r+0x446>
    7b0c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
    7b10:	2b30      	cmp	r3, #48	; 0x30
    7b12:	f105 32ff 	add.w	r2, r5, #4294967295	; 0xffffffff
    7b16:	d002      	beq.n	7b1e <_dtoa_r+0x5f6>
    7b18:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
    7b1c:	e04a      	b.n	7bb4 <_dtoa_r+0x68c>
    7b1e:	4615      	mov	r5, r2
    7b20:	e7f4      	b.n	7b0c <_dtoa_r+0x5e4>
    7b22:	4b06      	ldr	r3, [pc, #24]	; (7b3c <_dtoa_r+0x614>)
    7b24:	f002 f874 	bl	9c10 <__aeabi_dmul>
    7b28:	e9cd 0100 	strd	r0, r1, [sp]
    7b2c:	e7bc      	b.n	7aa8 <_dtoa_r+0x580>
    7b2e:	bf00      	nop
    7b30:	0000b820 	.word	0x0000b820
    7b34:	0000b7f8 	.word	0x0000b7f8
    7b38:	3ff00000 	.word	0x3ff00000
    7b3c:	40240000 	.word	0x40240000
    7b40:	401c0000 	.word	0x401c0000
    7b44:	40140000 	.word	0x40140000
    7b48:	3fe00000 	.word	0x3fe00000
    7b4c:	e9dd 6700 	ldrd	r6, r7, [sp]
    7b50:	9d03      	ldr	r5, [sp, #12]
    7b52:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    7b56:	4630      	mov	r0, r6
    7b58:	4639      	mov	r1, r7
    7b5a:	f002 f983 	bl	9e64 <__aeabi_ddiv>
    7b5e:	f002 fb07 	bl	a170 <__aeabi_d2iz>
    7b62:	4604      	mov	r4, r0
    7b64:	f001 ffea 	bl	9b3c <__aeabi_i2d>
    7b68:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    7b6c:	f002 f850 	bl	9c10 <__aeabi_dmul>
    7b70:	4602      	mov	r2, r0
    7b72:	460b      	mov	r3, r1
    7b74:	4630      	mov	r0, r6
    7b76:	4639      	mov	r1, r7
    7b78:	f104 0630 	add.w	r6, r4, #48	; 0x30
    7b7c:	f001 fe90 	bl	98a0 <__aeabi_dsub>
    7b80:	f805 6b01 	strb.w	r6, [r5], #1
    7b84:	9e03      	ldr	r6, [sp, #12]
    7b86:	1bae      	subs	r6, r5, r6
    7b88:	45b1      	cmp	r9, r6
    7b8a:	4602      	mov	r2, r0
    7b8c:	460b      	mov	r3, r1
    7b8e:	d138      	bne.n	7c02 <_dtoa_r+0x6da>
    7b90:	f001 fe88 	bl	98a4 <__adddf3>
    7b94:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    7b98:	4606      	mov	r6, r0
    7b9a:	460f      	mov	r7, r1
    7b9c:	f002 fac8 	bl	a130 <__aeabi_dcmpgt>
    7ba0:	b9c0      	cbnz	r0, 7bd4 <_dtoa_r+0x6ac>
    7ba2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    7ba6:	4630      	mov	r0, r6
    7ba8:	4639      	mov	r1, r7
    7baa:	f002 fa99 	bl	a0e0 <__aeabi_dcmpeq>
    7bae:	b108      	cbz	r0, 7bb4 <_dtoa_r+0x68c>
    7bb0:	07e1      	lsls	r1, r4, #31
    7bb2:	d40f      	bmi.n	7bd4 <_dtoa_r+0x6ac>
    7bb4:	4641      	mov	r1, r8
    7bb6:	4658      	mov	r0, fp
    7bb8:	f001 f85a 	bl	8c70 <_Bfree>
    7bbc:	2300      	movs	r3, #0
    7bbe:	9a14      	ldr	r2, [sp, #80]	; 0x50
    7bc0:	702b      	strb	r3, [r5, #0]
    7bc2:	f10a 0301 	add.w	r3, sl, #1
    7bc6:	6013      	str	r3, [r2, #0]
    7bc8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    7bca:	2b00      	cmp	r3, #0
    7bcc:	f43f acf4 	beq.w	75b8 <_dtoa_r+0x90>
    7bd0:	601d      	str	r5, [r3, #0]
    7bd2:	e4f1      	b.n	75b8 <_dtoa_r+0x90>
    7bd4:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
    7bd8:	f815 2c01 	ldrb.w	r2, [r5, #-1]
    7bdc:	2a39      	cmp	r2, #57	; 0x39
    7bde:	f105 33ff 	add.w	r3, r5, #4294967295	; 0xffffffff
    7be2:	d108      	bne.n	7bf6 <_dtoa_r+0x6ce>
    7be4:	9a03      	ldr	r2, [sp, #12]
    7be6:	429a      	cmp	r2, r3
    7be8:	d109      	bne.n	7bfe <_dtoa_r+0x6d6>
    7bea:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    7bec:	9903      	ldr	r1, [sp, #12]
    7bee:	3201      	adds	r2, #1
    7bf0:	920a      	str	r2, [sp, #40]	; 0x28
    7bf2:	2230      	movs	r2, #48	; 0x30
    7bf4:	700a      	strb	r2, [r1, #0]
    7bf6:	781a      	ldrb	r2, [r3, #0]
    7bf8:	3201      	adds	r2, #1
    7bfa:	701a      	strb	r2, [r3, #0]
    7bfc:	e78c      	b.n	7b18 <_dtoa_r+0x5f0>
    7bfe:	461d      	mov	r5, r3
    7c00:	e7ea      	b.n	7bd8 <_dtoa_r+0x6b0>
    7c02:	2200      	movs	r2, #0
    7c04:	4b9d      	ldr	r3, [pc, #628]	; (7e7c <_dtoa_r+0x954>)
    7c06:	f002 f803 	bl	9c10 <__aeabi_dmul>
    7c0a:	2200      	movs	r2, #0
    7c0c:	2300      	movs	r3, #0
    7c0e:	4606      	mov	r6, r0
    7c10:	460f      	mov	r7, r1
    7c12:	f002 fa65 	bl	a0e0 <__aeabi_dcmpeq>
    7c16:	2800      	cmp	r0, #0
    7c18:	d09b      	beq.n	7b52 <_dtoa_r+0x62a>
    7c1a:	e7cb      	b.n	7bb4 <_dtoa_r+0x68c>
    7c1c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    7c1e:	2a00      	cmp	r2, #0
    7c20:	f000 80cb 	beq.w	7dba <_dtoa_r+0x892>
    7c24:	9a08      	ldr	r2, [sp, #32]
    7c26:	2a01      	cmp	r2, #1
    7c28:	f300 80ae 	bgt.w	7d88 <_dtoa_r+0x860>
    7c2c:	9a15      	ldr	r2, [sp, #84]	; 0x54
    7c2e:	2a00      	cmp	r2, #0
    7c30:	f000 80a6 	beq.w	7d80 <_dtoa_r+0x858>
    7c34:	f203 4333 	addw	r3, r3, #1075	; 0x433
    7c38:	9c09      	ldr	r4, [sp, #36]	; 0x24
    7c3a:	9d06      	ldr	r5, [sp, #24]
    7c3c:	9a06      	ldr	r2, [sp, #24]
    7c3e:	441a      	add	r2, r3
    7c40:	9206      	str	r2, [sp, #24]
    7c42:	9a07      	ldr	r2, [sp, #28]
    7c44:	2101      	movs	r1, #1
    7c46:	441a      	add	r2, r3
    7c48:	4658      	mov	r0, fp
    7c4a:	9207      	str	r2, [sp, #28]
    7c4c:	f001 f8f0 	bl	8e30 <__i2b>
    7c50:	4606      	mov	r6, r0
    7c52:	2d00      	cmp	r5, #0
    7c54:	dd0c      	ble.n	7c70 <_dtoa_r+0x748>
    7c56:	9b07      	ldr	r3, [sp, #28]
    7c58:	2b00      	cmp	r3, #0
    7c5a:	dd09      	ble.n	7c70 <_dtoa_r+0x748>
    7c5c:	42ab      	cmp	r3, r5
    7c5e:	9a06      	ldr	r2, [sp, #24]
    7c60:	bfa8      	it	ge
    7c62:	462b      	movge	r3, r5
    7c64:	1ad2      	subs	r2, r2, r3
    7c66:	9206      	str	r2, [sp, #24]
    7c68:	9a07      	ldr	r2, [sp, #28]
    7c6a:	1aed      	subs	r5, r5, r3
    7c6c:	1ad3      	subs	r3, r2, r3
    7c6e:	9307      	str	r3, [sp, #28]
    7c70:	9b09      	ldr	r3, [sp, #36]	; 0x24
    7c72:	b1f3      	cbz	r3, 7cb2 <_dtoa_r+0x78a>
    7c74:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    7c76:	2b00      	cmp	r3, #0
    7c78:	f000 80a3 	beq.w	7dc2 <_dtoa_r+0x89a>
    7c7c:	2c00      	cmp	r4, #0
    7c7e:	dd10      	ble.n	7ca2 <_dtoa_r+0x77a>
    7c80:	4631      	mov	r1, r6
    7c82:	4622      	mov	r2, r4
    7c84:	4658      	mov	r0, fp
    7c86:	f001 f96d 	bl	8f64 <__pow5mult>
    7c8a:	4642      	mov	r2, r8
    7c8c:	4601      	mov	r1, r0
    7c8e:	4606      	mov	r6, r0
    7c90:	4658      	mov	r0, fp
    7c92:	f001 f8d6 	bl	8e42 <__multiply>
    7c96:	4641      	mov	r1, r8
    7c98:	4607      	mov	r7, r0
    7c9a:	4658      	mov	r0, fp
    7c9c:	f000 ffe8 	bl	8c70 <_Bfree>
    7ca0:	46b8      	mov	r8, r7
    7ca2:	9b09      	ldr	r3, [sp, #36]	; 0x24
    7ca4:	1b1a      	subs	r2, r3, r4
    7ca6:	d004      	beq.n	7cb2 <_dtoa_r+0x78a>
    7ca8:	4641      	mov	r1, r8
    7caa:	4658      	mov	r0, fp
    7cac:	f001 f95a 	bl	8f64 <__pow5mult>
    7cb0:	4680      	mov	r8, r0
    7cb2:	2101      	movs	r1, #1
    7cb4:	4658      	mov	r0, fp
    7cb6:	f001 f8bb 	bl	8e30 <__i2b>
    7cba:	9b10      	ldr	r3, [sp, #64]	; 0x40
    7cbc:	2b00      	cmp	r3, #0
    7cbe:	4604      	mov	r4, r0
    7cc0:	f340 8081 	ble.w	7dc6 <_dtoa_r+0x89e>
    7cc4:	461a      	mov	r2, r3
    7cc6:	4601      	mov	r1, r0
    7cc8:	4658      	mov	r0, fp
    7cca:	f001 f94b 	bl	8f64 <__pow5mult>
    7cce:	9b08      	ldr	r3, [sp, #32]
    7cd0:	2b01      	cmp	r3, #1
    7cd2:	4604      	mov	r4, r0
    7cd4:	dd7a      	ble.n	7dcc <_dtoa_r+0x8a4>
    7cd6:	2700      	movs	r7, #0
    7cd8:	6923      	ldr	r3, [r4, #16]
    7cda:	eb04 0383 	add.w	r3, r4, r3, lsl #2
    7cde:	6918      	ldr	r0, [r3, #16]
    7ce0:	f001 f856 	bl	8d90 <__hi0bits>
    7ce4:	f1c0 0020 	rsb	r0, r0, #32
    7ce8:	9b07      	ldr	r3, [sp, #28]
    7cea:	4418      	add	r0, r3
    7cec:	f010 001f 	ands.w	r0, r0, #31
    7cf0:	f000 808b 	beq.w	7e0a <_dtoa_r+0x8e2>
    7cf4:	f1c0 0320 	rsb	r3, r0, #32
    7cf8:	2b04      	cmp	r3, #4
    7cfa:	f340 8084 	ble.w	7e06 <_dtoa_r+0x8de>
    7cfe:	f1c0 001c 	rsb	r0, r0, #28
    7d02:	9b06      	ldr	r3, [sp, #24]
    7d04:	4403      	add	r3, r0
    7d06:	9306      	str	r3, [sp, #24]
    7d08:	9b07      	ldr	r3, [sp, #28]
    7d0a:	4403      	add	r3, r0
    7d0c:	4405      	add	r5, r0
    7d0e:	9307      	str	r3, [sp, #28]
    7d10:	9b06      	ldr	r3, [sp, #24]
    7d12:	2b00      	cmp	r3, #0
    7d14:	dd05      	ble.n	7d22 <_dtoa_r+0x7fa>
    7d16:	4641      	mov	r1, r8
    7d18:	461a      	mov	r2, r3
    7d1a:	4658      	mov	r0, fp
    7d1c:	f001 f970 	bl	9000 <__lshift>
    7d20:	4680      	mov	r8, r0
    7d22:	9b07      	ldr	r3, [sp, #28]
    7d24:	2b00      	cmp	r3, #0
    7d26:	dd05      	ble.n	7d34 <_dtoa_r+0x80c>
    7d28:	4621      	mov	r1, r4
    7d2a:	461a      	mov	r2, r3
    7d2c:	4658      	mov	r0, fp
    7d2e:	f001 f967 	bl	9000 <__lshift>
    7d32:	4604      	mov	r4, r0
    7d34:	9b11      	ldr	r3, [sp, #68]	; 0x44
    7d36:	2b00      	cmp	r3, #0
    7d38:	d069      	beq.n	7e0e <_dtoa_r+0x8e6>
    7d3a:	4621      	mov	r1, r4
    7d3c:	4640      	mov	r0, r8
    7d3e:	f001 f9b2 	bl	90a6 <__mcmp>
    7d42:	2800      	cmp	r0, #0
    7d44:	da63      	bge.n	7e0e <_dtoa_r+0x8e6>
    7d46:	2300      	movs	r3, #0
    7d48:	4641      	mov	r1, r8
    7d4a:	220a      	movs	r2, #10
    7d4c:	4658      	mov	r0, fp
    7d4e:	f000 ffa6 	bl	8c9e <__multadd>
    7d52:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    7d54:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
    7d58:	4680      	mov	r8, r0
    7d5a:	2b00      	cmp	r3, #0
    7d5c:	f000 817c 	beq.w	8058 <_dtoa_r+0xb30>
    7d60:	2300      	movs	r3, #0
    7d62:	4631      	mov	r1, r6
    7d64:	220a      	movs	r2, #10
    7d66:	4658      	mov	r0, fp
    7d68:	f000 ff99 	bl	8c9e <__multadd>
    7d6c:	9b04      	ldr	r3, [sp, #16]
    7d6e:	2b00      	cmp	r3, #0
    7d70:	4606      	mov	r6, r0
    7d72:	f300 808b 	bgt.w	7e8c <_dtoa_r+0x964>
    7d76:	9b08      	ldr	r3, [sp, #32]
    7d78:	2b02      	cmp	r3, #2
    7d7a:	f340 8087 	ble.w	7e8c <_dtoa_r+0x964>
    7d7e:	e04e      	b.n	7e1e <_dtoa_r+0x8f6>
    7d80:	9b16      	ldr	r3, [sp, #88]	; 0x58
    7d82:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
    7d86:	e757      	b.n	7c38 <_dtoa_r+0x710>
    7d88:	9b09      	ldr	r3, [sp, #36]	; 0x24
    7d8a:	f109 34ff 	add.w	r4, r9, #4294967295	; 0xffffffff
    7d8e:	42a3      	cmp	r3, r4
    7d90:	bfbf      	itttt	lt
    7d92:	9b09      	ldrlt	r3, [sp, #36]	; 0x24
    7d94:	9409      	strlt	r4, [sp, #36]	; 0x24
    7d96:	1ae2      	sublt	r2, r4, r3
    7d98:	9b10      	ldrlt	r3, [sp, #64]	; 0x40
    7d9a:	bfbb      	ittet	lt
    7d9c:	189b      	addlt	r3, r3, r2
    7d9e:	9310      	strlt	r3, [sp, #64]	; 0x40
    7da0:	1b1c      	subge	r4, r3, r4
    7da2:	2400      	movlt	r4, #0
    7da4:	f1b9 0f00 	cmp.w	r9, #0
    7da8:	bfb5      	itete	lt
    7daa:	9b06      	ldrlt	r3, [sp, #24]
    7dac:	9d06      	ldrge	r5, [sp, #24]
    7dae:	eba3 0509 	sublt.w	r5, r3, r9
    7db2:	464b      	movge	r3, r9
    7db4:	bfb8      	it	lt
    7db6:	2300      	movlt	r3, #0
    7db8:	e740      	b.n	7c3c <_dtoa_r+0x714>
    7dba:	9c09      	ldr	r4, [sp, #36]	; 0x24
    7dbc:	9d06      	ldr	r5, [sp, #24]
    7dbe:	9e0c      	ldr	r6, [sp, #48]	; 0x30
    7dc0:	e747      	b.n	7c52 <_dtoa_r+0x72a>
    7dc2:	9a09      	ldr	r2, [sp, #36]	; 0x24
    7dc4:	e770      	b.n	7ca8 <_dtoa_r+0x780>
    7dc6:	9b08      	ldr	r3, [sp, #32]
    7dc8:	2b01      	cmp	r3, #1
    7dca:	dc18      	bgt.n	7dfe <_dtoa_r+0x8d6>
    7dcc:	9b00      	ldr	r3, [sp, #0]
    7dce:	b9b3      	cbnz	r3, 7dfe <_dtoa_r+0x8d6>
    7dd0:	9b01      	ldr	r3, [sp, #4]
    7dd2:	f3c3 0313 	ubfx	r3, r3, #0, #20
    7dd6:	b9a3      	cbnz	r3, 7e02 <_dtoa_r+0x8da>
    7dd8:	9b01      	ldr	r3, [sp, #4]
    7dda:	f023 4700 	bic.w	r7, r3, #2147483648	; 0x80000000
    7dde:	0d3f      	lsrs	r7, r7, #20
    7de0:	053f      	lsls	r7, r7, #20
    7de2:	b137      	cbz	r7, 7df2 <_dtoa_r+0x8ca>
    7de4:	9b06      	ldr	r3, [sp, #24]
    7de6:	3301      	adds	r3, #1
    7de8:	9306      	str	r3, [sp, #24]
    7dea:	9b07      	ldr	r3, [sp, #28]
    7dec:	3301      	adds	r3, #1
    7dee:	9307      	str	r3, [sp, #28]
    7df0:	2701      	movs	r7, #1
    7df2:	9b10      	ldr	r3, [sp, #64]	; 0x40
    7df4:	2b00      	cmp	r3, #0
    7df6:	f47f af6f 	bne.w	7cd8 <_dtoa_r+0x7b0>
    7dfa:	2001      	movs	r0, #1
    7dfc:	e774      	b.n	7ce8 <_dtoa_r+0x7c0>
    7dfe:	2700      	movs	r7, #0
    7e00:	e7f7      	b.n	7df2 <_dtoa_r+0x8ca>
    7e02:	9f00      	ldr	r7, [sp, #0]
    7e04:	e7f5      	b.n	7df2 <_dtoa_r+0x8ca>
    7e06:	d083      	beq.n	7d10 <_dtoa_r+0x7e8>
    7e08:	4618      	mov	r0, r3
    7e0a:	301c      	adds	r0, #28
    7e0c:	e779      	b.n	7d02 <_dtoa_r+0x7da>
    7e0e:	f1b9 0f00 	cmp.w	r9, #0
    7e12:	dc35      	bgt.n	7e80 <_dtoa_r+0x958>
    7e14:	9b08      	ldr	r3, [sp, #32]
    7e16:	2b02      	cmp	r3, #2
    7e18:	dd32      	ble.n	7e80 <_dtoa_r+0x958>
    7e1a:	f8cd 9010 	str.w	r9, [sp, #16]
    7e1e:	9b04      	ldr	r3, [sp, #16]
    7e20:	b963      	cbnz	r3, 7e3c <_dtoa_r+0x914>
    7e22:	4621      	mov	r1, r4
    7e24:	2205      	movs	r2, #5
    7e26:	4658      	mov	r0, fp
    7e28:	f000 ff39 	bl	8c9e <__multadd>
    7e2c:	4601      	mov	r1, r0
    7e2e:	4604      	mov	r4, r0
    7e30:	4640      	mov	r0, r8
    7e32:	f001 f938 	bl	90a6 <__mcmp>
    7e36:	2800      	cmp	r0, #0
    7e38:	f73f adc5 	bgt.w	79c6 <_dtoa_r+0x49e>
    7e3c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    7e3e:	9d03      	ldr	r5, [sp, #12]
    7e40:	ea6f 0a03 	mvn.w	sl, r3
    7e44:	2700      	movs	r7, #0
    7e46:	4621      	mov	r1, r4
    7e48:	4658      	mov	r0, fp
    7e4a:	f000 ff11 	bl	8c70 <_Bfree>
    7e4e:	2e00      	cmp	r6, #0
    7e50:	f43f aeb0 	beq.w	7bb4 <_dtoa_r+0x68c>
    7e54:	b12f      	cbz	r7, 7e62 <_dtoa_r+0x93a>
    7e56:	42b7      	cmp	r7, r6
    7e58:	d003      	beq.n	7e62 <_dtoa_r+0x93a>
    7e5a:	4639      	mov	r1, r7
    7e5c:	4658      	mov	r0, fp
    7e5e:	f000 ff07 	bl	8c70 <_Bfree>
    7e62:	4631      	mov	r1, r6
    7e64:	4658      	mov	r0, fp
    7e66:	f000 ff03 	bl	8c70 <_Bfree>
    7e6a:	e6a3      	b.n	7bb4 <_dtoa_r+0x68c>
    7e6c:	2400      	movs	r4, #0
    7e6e:	4626      	mov	r6, r4
    7e70:	e7e4      	b.n	7e3c <_dtoa_r+0x914>
    7e72:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
    7e76:	4626      	mov	r6, r4
    7e78:	e5a5      	b.n	79c6 <_dtoa_r+0x49e>
    7e7a:	bf00      	nop
    7e7c:	40240000 	.word	0x40240000
    7e80:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    7e82:	f8cd 9010 	str.w	r9, [sp, #16]
    7e86:	2b00      	cmp	r3, #0
    7e88:	f000 80ed 	beq.w	8066 <_dtoa_r+0xb3e>
    7e8c:	2d00      	cmp	r5, #0
    7e8e:	dd05      	ble.n	7e9c <_dtoa_r+0x974>
    7e90:	4631      	mov	r1, r6
    7e92:	462a      	mov	r2, r5
    7e94:	4658      	mov	r0, fp
    7e96:	f001 f8b3 	bl	9000 <__lshift>
    7e9a:	4606      	mov	r6, r0
    7e9c:	2f00      	cmp	r7, #0
    7e9e:	d056      	beq.n	7f4e <_dtoa_r+0xa26>
    7ea0:	6871      	ldr	r1, [r6, #4]
    7ea2:	4658      	mov	r0, fp
    7ea4:	f000 feb0 	bl	8c08 <_Balloc>
    7ea8:	6932      	ldr	r2, [r6, #16]
    7eaa:	3202      	adds	r2, #2
    7eac:	4605      	mov	r5, r0
    7eae:	0092      	lsls	r2, r2, #2
    7eb0:	f106 010c 	add.w	r1, r6, #12
    7eb4:	300c      	adds	r0, #12
    7eb6:	f7fd f925 	bl	5104 <memcpy>
    7eba:	2201      	movs	r2, #1
    7ebc:	4629      	mov	r1, r5
    7ebe:	4658      	mov	r0, fp
    7ec0:	f001 f89e 	bl	9000 <__lshift>
    7ec4:	9b03      	ldr	r3, [sp, #12]
    7ec6:	f103 0901 	add.w	r9, r3, #1
    7eca:	e9dd 2303 	ldrd	r2, r3, [sp, #12]
    7ece:	4413      	add	r3, r2
    7ed0:	9309      	str	r3, [sp, #36]	; 0x24
    7ed2:	9b00      	ldr	r3, [sp, #0]
    7ed4:	f003 0301 	and.w	r3, r3, #1
    7ed8:	4637      	mov	r7, r6
    7eda:	9307      	str	r3, [sp, #28]
    7edc:	4606      	mov	r6, r0
    7ede:	f109 33ff 	add.w	r3, r9, #4294967295	; 0xffffffff
    7ee2:	4621      	mov	r1, r4
    7ee4:	4640      	mov	r0, r8
    7ee6:	9300      	str	r3, [sp, #0]
    7ee8:	f7ff fa92 	bl	7410 <quorem>
    7eec:	4603      	mov	r3, r0
    7eee:	3330      	adds	r3, #48	; 0x30
    7ef0:	9004      	str	r0, [sp, #16]
    7ef2:	4639      	mov	r1, r7
    7ef4:	4640      	mov	r0, r8
    7ef6:	930a      	str	r3, [sp, #40]	; 0x28
    7ef8:	f001 f8d5 	bl	90a6 <__mcmp>
    7efc:	4632      	mov	r2, r6
    7efe:	9006      	str	r0, [sp, #24]
    7f00:	4621      	mov	r1, r4
    7f02:	4658      	mov	r0, fp
    7f04:	f001 f8e9 	bl	90da <__mdiff>
    7f08:	68c2      	ldr	r2, [r0, #12]
    7f0a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    7f0c:	4605      	mov	r5, r0
    7f0e:	bb02      	cbnz	r2, 7f52 <_dtoa_r+0xa2a>
    7f10:	4601      	mov	r1, r0
    7f12:	4640      	mov	r0, r8
    7f14:	f001 f8c7 	bl	90a6 <__mcmp>
    7f18:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    7f1a:	4602      	mov	r2, r0
    7f1c:	4629      	mov	r1, r5
    7f1e:	4658      	mov	r0, fp
    7f20:	920c      	str	r2, [sp, #48]	; 0x30
    7f22:	930a      	str	r3, [sp, #40]	; 0x28
    7f24:	f000 fea4 	bl	8c70 <_Bfree>
    7f28:	9b08      	ldr	r3, [sp, #32]
    7f2a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    7f2c:	ea43 0102 	orr.w	r1, r3, r2
    7f30:	9b07      	ldr	r3, [sp, #28]
    7f32:	430b      	orrs	r3, r1
    7f34:	464d      	mov	r5, r9
    7f36:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    7f38:	d10d      	bne.n	7f56 <_dtoa_r+0xa2e>
    7f3a:	2b39      	cmp	r3, #57	; 0x39
    7f3c:	d027      	beq.n	7f8e <_dtoa_r+0xa66>
    7f3e:	9a06      	ldr	r2, [sp, #24]
    7f40:	2a00      	cmp	r2, #0
    7f42:	dd01      	ble.n	7f48 <_dtoa_r+0xa20>
    7f44:	9b04      	ldr	r3, [sp, #16]
    7f46:	3331      	adds	r3, #49	; 0x31
    7f48:	9a00      	ldr	r2, [sp, #0]
    7f4a:	7013      	strb	r3, [r2, #0]
    7f4c:	e77b      	b.n	7e46 <_dtoa_r+0x91e>
    7f4e:	4630      	mov	r0, r6
    7f50:	e7b8      	b.n	7ec4 <_dtoa_r+0x99c>
    7f52:	2201      	movs	r2, #1
    7f54:	e7e2      	b.n	7f1c <_dtoa_r+0x9f4>
    7f56:	9906      	ldr	r1, [sp, #24]
    7f58:	2900      	cmp	r1, #0
    7f5a:	db04      	blt.n	7f66 <_dtoa_r+0xa3e>
    7f5c:	9808      	ldr	r0, [sp, #32]
    7f5e:	4301      	orrs	r1, r0
    7f60:	9807      	ldr	r0, [sp, #28]
    7f62:	4301      	orrs	r1, r0
    7f64:	d11e      	bne.n	7fa4 <_dtoa_r+0xa7c>
    7f66:	2a00      	cmp	r2, #0
    7f68:	ddee      	ble.n	7f48 <_dtoa_r+0xa20>
    7f6a:	4641      	mov	r1, r8
    7f6c:	2201      	movs	r2, #1
    7f6e:	4658      	mov	r0, fp
    7f70:	9306      	str	r3, [sp, #24]
    7f72:	f001 f845 	bl	9000 <__lshift>
    7f76:	4621      	mov	r1, r4
    7f78:	4680      	mov	r8, r0
    7f7a:	f001 f894 	bl	90a6 <__mcmp>
    7f7e:	2800      	cmp	r0, #0
    7f80:	9b06      	ldr	r3, [sp, #24]
    7f82:	dc02      	bgt.n	7f8a <_dtoa_r+0xa62>
    7f84:	d1e0      	bne.n	7f48 <_dtoa_r+0xa20>
    7f86:	07da      	lsls	r2, r3, #31
    7f88:	d5de      	bpl.n	7f48 <_dtoa_r+0xa20>
    7f8a:	2b39      	cmp	r3, #57	; 0x39
    7f8c:	d1da      	bne.n	7f44 <_dtoa_r+0xa1c>
    7f8e:	9a00      	ldr	r2, [sp, #0]
    7f90:	2339      	movs	r3, #57	; 0x39
    7f92:	7013      	strb	r3, [r2, #0]
    7f94:	f815 3c01 	ldrb.w	r3, [r5, #-1]
    7f98:	2b39      	cmp	r3, #57	; 0x39
    7f9a:	f105 32ff 	add.w	r2, r5, #4294967295	; 0xffffffff
    7f9e:	d047      	beq.n	8030 <_dtoa_r+0xb08>
    7fa0:	3301      	adds	r3, #1
    7fa2:	e7d2      	b.n	7f4a <_dtoa_r+0xa22>
    7fa4:	2a00      	cmp	r2, #0
    7fa6:	dd03      	ble.n	7fb0 <_dtoa_r+0xa88>
    7fa8:	2b39      	cmp	r3, #57	; 0x39
    7faa:	d0f0      	beq.n	7f8e <_dtoa_r+0xa66>
    7fac:	3301      	adds	r3, #1
    7fae:	e7cb      	b.n	7f48 <_dtoa_r+0xa20>
    7fb0:	9a09      	ldr	r2, [sp, #36]	; 0x24
    7fb2:	f809 3c01 	strb.w	r3, [r9, #-1]
    7fb6:	4591      	cmp	r9, r2
    7fb8:	d021      	beq.n	7ffe <_dtoa_r+0xad6>
    7fba:	4641      	mov	r1, r8
    7fbc:	2300      	movs	r3, #0
    7fbe:	220a      	movs	r2, #10
    7fc0:	4658      	mov	r0, fp
    7fc2:	f000 fe6c 	bl	8c9e <__multadd>
    7fc6:	42b7      	cmp	r7, r6
    7fc8:	4680      	mov	r8, r0
    7fca:	f04f 0300 	mov.w	r3, #0
    7fce:	f04f 020a 	mov.w	r2, #10
    7fd2:	4639      	mov	r1, r7
    7fd4:	4658      	mov	r0, fp
    7fd6:	d106      	bne.n	7fe6 <_dtoa_r+0xabe>
    7fd8:	f000 fe61 	bl	8c9e <__multadd>
    7fdc:	4607      	mov	r7, r0
    7fde:	4606      	mov	r6, r0
    7fe0:	f109 0901 	add.w	r9, r9, #1
    7fe4:	e77b      	b.n	7ede <_dtoa_r+0x9b6>
    7fe6:	f000 fe5a 	bl	8c9e <__multadd>
    7fea:	4631      	mov	r1, r6
    7fec:	4607      	mov	r7, r0
    7fee:	2300      	movs	r3, #0
    7ff0:	220a      	movs	r2, #10
    7ff2:	4658      	mov	r0, fp
    7ff4:	f000 fe53 	bl	8c9e <__multadd>
    7ff8:	4606      	mov	r6, r0
    7ffa:	e7f1      	b.n	7fe0 <_dtoa_r+0xab8>
    7ffc:	2700      	movs	r7, #0
    7ffe:	4641      	mov	r1, r8
    8000:	2201      	movs	r2, #1
    8002:	4658      	mov	r0, fp
    8004:	9300      	str	r3, [sp, #0]
    8006:	f000 fffb 	bl	9000 <__lshift>
    800a:	4621      	mov	r1, r4
    800c:	4680      	mov	r8, r0
    800e:	f001 f84a 	bl	90a6 <__mcmp>
    8012:	2800      	cmp	r0, #0
    8014:	dcbe      	bgt.n	7f94 <_dtoa_r+0xa6c>
    8016:	d102      	bne.n	801e <_dtoa_r+0xaf6>
    8018:	9b00      	ldr	r3, [sp, #0]
    801a:	07db      	lsls	r3, r3, #31
    801c:	d4ba      	bmi.n	7f94 <_dtoa_r+0xa6c>
    801e:	f815 3c01 	ldrb.w	r3, [r5, #-1]
    8022:	2b30      	cmp	r3, #48	; 0x30
    8024:	f105 32ff 	add.w	r2, r5, #4294967295	; 0xffffffff
    8028:	f47f af0d 	bne.w	7e46 <_dtoa_r+0x91e>
    802c:	4615      	mov	r5, r2
    802e:	e7f6      	b.n	801e <_dtoa_r+0xaf6>
    8030:	9b03      	ldr	r3, [sp, #12]
    8032:	4293      	cmp	r3, r2
    8034:	d104      	bne.n	8040 <_dtoa_r+0xb18>
    8036:	f10a 0a01 	add.w	sl, sl, #1
    803a:	2331      	movs	r3, #49	; 0x31
    803c:	9a03      	ldr	r2, [sp, #12]
    803e:	e784      	b.n	7f4a <_dtoa_r+0xa22>
    8040:	4615      	mov	r5, r2
    8042:	e7a7      	b.n	7f94 <_dtoa_r+0xa6c>
    8044:	4b13      	ldr	r3, [pc, #76]	; (8094 <_dtoa_r+0xb6c>)
    8046:	f7ff bad6 	b.w	75f6 <_dtoa_r+0xce>
    804a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    804c:	2b00      	cmp	r3, #0
    804e:	f47f aaae 	bne.w	75ae <_dtoa_r+0x86>
    8052:	4b11      	ldr	r3, [pc, #68]	; (8098 <_dtoa_r+0xb70>)
    8054:	f7ff bacf 	b.w	75f6 <_dtoa_r+0xce>
    8058:	9b04      	ldr	r3, [sp, #16]
    805a:	2b00      	cmp	r3, #0
    805c:	dc03      	bgt.n	8066 <_dtoa_r+0xb3e>
    805e:	9b08      	ldr	r3, [sp, #32]
    8060:	2b02      	cmp	r3, #2
    8062:	f73f aedc 	bgt.w	7e1e <_dtoa_r+0x8f6>
    8066:	9d03      	ldr	r5, [sp, #12]
    8068:	4621      	mov	r1, r4
    806a:	4640      	mov	r0, r8
    806c:	f7ff f9d0 	bl	7410 <quorem>
    8070:	f100 0330 	add.w	r3, r0, #48	; 0x30
    8074:	f805 3b01 	strb.w	r3, [r5], #1
    8078:	9a03      	ldr	r2, [sp, #12]
    807a:	9904      	ldr	r1, [sp, #16]
    807c:	1aaa      	subs	r2, r5, r2
    807e:	4291      	cmp	r1, r2
    8080:	ddbc      	ble.n	7ffc <_dtoa_r+0xad4>
    8082:	4641      	mov	r1, r8
    8084:	2300      	movs	r3, #0
    8086:	220a      	movs	r2, #10
    8088:	4658      	mov	r0, fp
    808a:	f000 fe08 	bl	8c9e <__multadd>
    808e:	4680      	mov	r8, r0
    8090:	e7ea      	b.n	8068 <_dtoa_r+0xb40>
    8092:	bf00      	nop
    8094:	0000aff5 	.word	0x0000aff5
    8098:	0000b770 	.word	0x0000b770

0000809c <__sflush_r>:
__sflush_r():
    809c:	898a      	ldrh	r2, [r1, #12]
    809e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    80a2:	4605      	mov	r5, r0
    80a4:	0710      	lsls	r0, r2, #28
    80a6:	460c      	mov	r4, r1
    80a8:	d458      	bmi.n	815c <__sflush_r+0xc0>
    80aa:	684b      	ldr	r3, [r1, #4]
    80ac:	2b00      	cmp	r3, #0
    80ae:	dc05      	bgt.n	80bc <__sflush_r+0x20>
    80b0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
    80b2:	2b00      	cmp	r3, #0
    80b4:	dc02      	bgt.n	80bc <__sflush_r+0x20>
    80b6:	2000      	movs	r0, #0
    80b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    80bc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
    80be:	2e00      	cmp	r6, #0
    80c0:	d0f9      	beq.n	80b6 <__sflush_r+0x1a>
    80c2:	2300      	movs	r3, #0
    80c4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
    80c8:	682f      	ldr	r7, [r5, #0]
    80ca:	602b      	str	r3, [r5, #0]
    80cc:	d032      	beq.n	8134 <__sflush_r+0x98>
    80ce:	6d60      	ldr	r0, [r4, #84]	; 0x54
    80d0:	89a3      	ldrh	r3, [r4, #12]
    80d2:	075a      	lsls	r2, r3, #29
    80d4:	d505      	bpl.n	80e2 <__sflush_r+0x46>
    80d6:	6863      	ldr	r3, [r4, #4]
    80d8:	1ac0      	subs	r0, r0, r3
    80da:	6b63      	ldr	r3, [r4, #52]	; 0x34
    80dc:	b10b      	cbz	r3, 80e2 <__sflush_r+0x46>
    80de:	6c23      	ldr	r3, [r4, #64]	; 0x40
    80e0:	1ac0      	subs	r0, r0, r3
    80e2:	2300      	movs	r3, #0
    80e4:	4602      	mov	r2, r0
    80e6:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
    80e8:	6a21      	ldr	r1, [r4, #32]
    80ea:	4628      	mov	r0, r5
    80ec:	47b0      	blx	r6
    80ee:	1c43      	adds	r3, r0, #1
    80f0:	89a3      	ldrh	r3, [r4, #12]
    80f2:	d106      	bne.n	8102 <__sflush_r+0x66>
    80f4:	6829      	ldr	r1, [r5, #0]
    80f6:	291d      	cmp	r1, #29
    80f8:	d82c      	bhi.n	8154 <__sflush_r+0xb8>
    80fa:	4a2a      	ldr	r2, [pc, #168]	; (81a4 <__sflush_r+0x108>)
    80fc:	40ca      	lsrs	r2, r1
    80fe:	07d6      	lsls	r6, r2, #31
    8100:	d528      	bpl.n	8154 <__sflush_r+0xb8>
    8102:	2200      	movs	r2, #0
    8104:	6062      	str	r2, [r4, #4]
    8106:	04d9      	lsls	r1, r3, #19
    8108:	6922      	ldr	r2, [r4, #16]
    810a:	6022      	str	r2, [r4, #0]
    810c:	d504      	bpl.n	8118 <__sflush_r+0x7c>
    810e:	1c42      	adds	r2, r0, #1
    8110:	d101      	bne.n	8116 <__sflush_r+0x7a>
    8112:	682b      	ldr	r3, [r5, #0]
    8114:	b903      	cbnz	r3, 8118 <__sflush_r+0x7c>
    8116:	6560      	str	r0, [r4, #84]	; 0x54
    8118:	6b61      	ldr	r1, [r4, #52]	; 0x34
    811a:	602f      	str	r7, [r5, #0]
    811c:	2900      	cmp	r1, #0
    811e:	d0ca      	beq.n	80b6 <__sflush_r+0x1a>
    8120:	f104 0344 	add.w	r3, r4, #68	; 0x44
    8124:	4299      	cmp	r1, r3
    8126:	d002      	beq.n	812e <__sflush_r+0x92>
    8128:	4628      	mov	r0, r5
    812a:	f7fd f81b 	bl	5164 <_free_r>
    812e:	2000      	movs	r0, #0
    8130:	6360      	str	r0, [r4, #52]	; 0x34
    8132:	e7c1      	b.n	80b8 <__sflush_r+0x1c>
    8134:	6a21      	ldr	r1, [r4, #32]
    8136:	2301      	movs	r3, #1
    8138:	4628      	mov	r0, r5
    813a:	47b0      	blx	r6
    813c:	1c41      	adds	r1, r0, #1
    813e:	d1c7      	bne.n	80d0 <__sflush_r+0x34>
    8140:	682b      	ldr	r3, [r5, #0]
    8142:	2b00      	cmp	r3, #0
    8144:	d0c4      	beq.n	80d0 <__sflush_r+0x34>
    8146:	2b1d      	cmp	r3, #29
    8148:	d001      	beq.n	814e <__sflush_r+0xb2>
    814a:	2b16      	cmp	r3, #22
    814c:	d101      	bne.n	8152 <__sflush_r+0xb6>
    814e:	602f      	str	r7, [r5, #0]
    8150:	e7b1      	b.n	80b6 <__sflush_r+0x1a>
    8152:	89a3      	ldrh	r3, [r4, #12]
    8154:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    8158:	81a3      	strh	r3, [r4, #12]
    815a:	e7ad      	b.n	80b8 <__sflush_r+0x1c>
    815c:	690f      	ldr	r7, [r1, #16]
    815e:	2f00      	cmp	r7, #0
    8160:	d0a9      	beq.n	80b6 <__sflush_r+0x1a>
    8162:	0793      	lsls	r3, r2, #30
    8164:	680e      	ldr	r6, [r1, #0]
    8166:	bf08      	it	eq
    8168:	694b      	ldreq	r3, [r1, #20]
    816a:	600f      	str	r7, [r1, #0]
    816c:	bf18      	it	ne
    816e:	2300      	movne	r3, #0
    8170:	eba6 0807 	sub.w	r8, r6, r7
    8174:	608b      	str	r3, [r1, #8]
    8176:	f1b8 0f00 	cmp.w	r8, #0
    817a:	dd9c      	ble.n	80b6 <__sflush_r+0x1a>
    817c:	4643      	mov	r3, r8
    817e:	463a      	mov	r2, r7
    8180:	6a21      	ldr	r1, [r4, #32]
    8182:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    8184:	4628      	mov	r0, r5
    8186:	47b0      	blx	r6
    8188:	2800      	cmp	r0, #0
    818a:	dc06      	bgt.n	819a <__sflush_r+0xfe>
    818c:	89a3      	ldrh	r3, [r4, #12]
    818e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    8192:	81a3      	strh	r3, [r4, #12]
    8194:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    8198:	e78e      	b.n	80b8 <__sflush_r+0x1c>
    819a:	4407      	add	r7, r0
    819c:	eba8 0800 	sub.w	r8, r8, r0
    81a0:	e7e9      	b.n	8176 <__sflush_r+0xda>
    81a2:	bf00      	nop
    81a4:	20400001 	.word	0x20400001

000081a8 <_fflush_r>:
_fflush_r():
    81a8:	b538      	push	{r3, r4, r5, lr}
    81aa:	690b      	ldr	r3, [r1, #16]
    81ac:	4605      	mov	r5, r0
    81ae:	460c      	mov	r4, r1
    81b0:	b913      	cbnz	r3, 81b8 <_fflush_r+0x10>
    81b2:	2500      	movs	r5, #0
    81b4:	4628      	mov	r0, r5
    81b6:	bd38      	pop	{r3, r4, r5, pc}
    81b8:	b118      	cbz	r0, 81c2 <_fflush_r+0x1a>
    81ba:	6983      	ldr	r3, [r0, #24]
    81bc:	b90b      	cbnz	r3, 81c2 <_fflush_r+0x1a>
    81be:	f000 f887 	bl	82d0 <__sinit>
    81c2:	4b14      	ldr	r3, [pc, #80]	; (8214 <_fflush_r+0x6c>)
    81c4:	429c      	cmp	r4, r3
    81c6:	d11b      	bne.n	8200 <_fflush_r+0x58>
    81c8:	686c      	ldr	r4, [r5, #4]
    81ca:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    81ce:	2b00      	cmp	r3, #0
    81d0:	d0ef      	beq.n	81b2 <_fflush_r+0xa>
    81d2:	6e62      	ldr	r2, [r4, #100]	; 0x64
    81d4:	07d0      	lsls	r0, r2, #31
    81d6:	d404      	bmi.n	81e2 <_fflush_r+0x3a>
    81d8:	0599      	lsls	r1, r3, #22
    81da:	d402      	bmi.n	81e2 <_fflush_r+0x3a>
    81dc:	6da0      	ldr	r0, [r4, #88]	; 0x58
    81de:	f7fc ff7e 	bl	50de <__retarget_lock_acquire_recursive>
    81e2:	4628      	mov	r0, r5
    81e4:	4621      	mov	r1, r4
    81e6:	f7ff ff59 	bl	809c <__sflush_r>
    81ea:	6e63      	ldr	r3, [r4, #100]	; 0x64
    81ec:	07da      	lsls	r2, r3, #31
    81ee:	4605      	mov	r5, r0
    81f0:	d4e0      	bmi.n	81b4 <_fflush_r+0xc>
    81f2:	89a3      	ldrh	r3, [r4, #12]
    81f4:	059b      	lsls	r3, r3, #22
    81f6:	d4dd      	bmi.n	81b4 <_fflush_r+0xc>
    81f8:	6da0      	ldr	r0, [r4, #88]	; 0x58
    81fa:	f7fc ff71 	bl	50e0 <__retarget_lock_release_recursive>
    81fe:	e7d9      	b.n	81b4 <_fflush_r+0xc>
    8200:	4b05      	ldr	r3, [pc, #20]	; (8218 <_fflush_r+0x70>)
    8202:	429c      	cmp	r4, r3
    8204:	d101      	bne.n	820a <_fflush_r+0x62>
    8206:	68ac      	ldr	r4, [r5, #8]
    8208:	e7df      	b.n	81ca <_fflush_r+0x22>
    820a:	4b04      	ldr	r3, [pc, #16]	; (821c <_fflush_r+0x74>)
    820c:	429c      	cmp	r4, r3
    820e:	bf08      	it	eq
    8210:	68ec      	ldreq	r4, [r5, #12]
    8212:	e7da      	b.n	81ca <_fflush_r+0x22>
    8214:	0000b7a0 	.word	0x0000b7a0
    8218:	0000b7c0 	.word	0x0000b7c0
    821c:	0000b780 	.word	0x0000b780

00008220 <std>:
std():
    8220:	2300      	movs	r3, #0
    8222:	b510      	push	{r4, lr}
    8224:	4604      	mov	r4, r0
    8226:	e9c0 3300 	strd	r3, r3, [r0]
    822a:	6083      	str	r3, [r0, #8]
    822c:	8181      	strh	r1, [r0, #12]
    822e:	6643      	str	r3, [r0, #100]	; 0x64
    8230:	81c2      	strh	r2, [r0, #14]
    8232:	e9c0 3304 	strd	r3, r3, [r0, #16]
    8236:	6183      	str	r3, [r0, #24]
    8238:	4619      	mov	r1, r3
    823a:	2208      	movs	r2, #8
    823c:	305c      	adds	r0, #92	; 0x5c
    823e:	f7fc ff89 	bl	5154 <memset>
    8242:	4b05      	ldr	r3, [pc, #20]	; (8258 <std+0x38>)
    8244:	6263      	str	r3, [r4, #36]	; 0x24
    8246:	4b05      	ldr	r3, [pc, #20]	; (825c <std+0x3c>)
    8248:	62a3      	str	r3, [r4, #40]	; 0x28
    824a:	4b05      	ldr	r3, [pc, #20]	; (8260 <std+0x40>)
    824c:	62e3      	str	r3, [r4, #44]	; 0x2c
    824e:	4b05      	ldr	r3, [pc, #20]	; (8264 <std+0x44>)
    8250:	6224      	str	r4, [r4, #32]
    8252:	6323      	str	r3, [r4, #48]	; 0x30
    8254:	bd10      	pop	{r4, pc}
    8256:	bf00      	nop
    8258:	00009719 	.word	0x00009719
    825c:	0000973b 	.word	0x0000973b
    8260:	00009773 	.word	0x00009773
    8264:	00009797 	.word	0x00009797

00008268 <_cleanup_r>:
_cleanup_r():
    8268:	4901      	ldr	r1, [pc, #4]	; (8270 <_cleanup_r+0x8>)
    826a:	f000 b8af 	b.w	83cc <_fwalk_reent>
    826e:	bf00      	nop
    8270:	000081a9 	.word	0x000081a9

00008274 <__sfmoreglue>:
__sfmoreglue():
    8274:	b570      	push	{r4, r5, r6, lr}
    8276:	1e4a      	subs	r2, r1, #1
    8278:	2568      	movs	r5, #104	; 0x68
    827a:	4355      	muls	r5, r2
    827c:	460e      	mov	r6, r1
    827e:	f105 0174 	add.w	r1, r5, #116	; 0x74
    8282:	f7fc ffbd 	bl	5200 <_malloc_r>
    8286:	4604      	mov	r4, r0
    8288:	b140      	cbz	r0, 829c <__sfmoreglue+0x28>
    828a:	2100      	movs	r1, #0
    828c:	e9c0 1600 	strd	r1, r6, [r0]
    8290:	300c      	adds	r0, #12
    8292:	60a0      	str	r0, [r4, #8]
    8294:	f105 0268 	add.w	r2, r5, #104	; 0x68
    8298:	f7fc ff5c 	bl	5154 <memset>
    829c:	4620      	mov	r0, r4
    829e:	bd70      	pop	{r4, r5, r6, pc}

000082a0 <__sfp_lock_acquire>:
__sfp_lock_acquire():
    82a0:	4801      	ldr	r0, [pc, #4]	; (82a8 <__sfp_lock_acquire+0x8>)
    82a2:	f7fc bf1c 	b.w	50de <__retarget_lock_acquire_recursive>
    82a6:	bf00      	nop
    82a8:	10000b80 	.word	0x10000b80

000082ac <__sfp_lock_release>:
__sfp_lock_release():
    82ac:	4801      	ldr	r0, [pc, #4]	; (82b4 <__sfp_lock_release+0x8>)
    82ae:	f7fc bf17 	b.w	50e0 <__retarget_lock_release_recursive>
    82b2:	bf00      	nop
    82b4:	10000b80 	.word	0x10000b80

000082b8 <__sinit_lock_acquire>:
__sinit_lock_acquire():
    82b8:	4801      	ldr	r0, [pc, #4]	; (82c0 <__sinit_lock_acquire+0x8>)
    82ba:	f7fc bf10 	b.w	50de <__retarget_lock_acquire_recursive>
    82be:	bf00      	nop
    82c0:	10000b7b 	.word	0x10000b7b

000082c4 <__sinit_lock_release>:
__sinit_lock_release():
    82c4:	4801      	ldr	r0, [pc, #4]	; (82cc <__sinit_lock_release+0x8>)
    82c6:	f7fc bf0b 	b.w	50e0 <__retarget_lock_release_recursive>
    82ca:	bf00      	nop
    82cc:	10000b7b 	.word	0x10000b7b

000082d0 <__sinit>:
__sinit():
    82d0:	b510      	push	{r4, lr}
    82d2:	4604      	mov	r4, r0
    82d4:	f7ff fff0 	bl	82b8 <__sinit_lock_acquire>
    82d8:	69a3      	ldr	r3, [r4, #24]
    82da:	b11b      	cbz	r3, 82e4 <__sinit+0x14>
    82dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    82e0:	f7ff bff0 	b.w	82c4 <__sinit_lock_release>
    82e4:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
    82e8:	6523      	str	r3, [r4, #80]	; 0x50
    82ea:	4b13      	ldr	r3, [pc, #76]	; (8338 <__sinit+0x68>)
    82ec:	4a13      	ldr	r2, [pc, #76]	; (833c <__sinit+0x6c>)
    82ee:	681b      	ldr	r3, [r3, #0]
    82f0:	62a2      	str	r2, [r4, #40]	; 0x28
    82f2:	42a3      	cmp	r3, r4
    82f4:	bf04      	itt	eq
    82f6:	2301      	moveq	r3, #1
    82f8:	61a3      	streq	r3, [r4, #24]
    82fa:	4620      	mov	r0, r4
    82fc:	f000 f820 	bl	8340 <__sfp>
    8300:	6060      	str	r0, [r4, #4]
    8302:	4620      	mov	r0, r4
    8304:	f000 f81c 	bl	8340 <__sfp>
    8308:	60a0      	str	r0, [r4, #8]
    830a:	4620      	mov	r0, r4
    830c:	f000 f818 	bl	8340 <__sfp>
    8310:	2200      	movs	r2, #0
    8312:	60e0      	str	r0, [r4, #12]
    8314:	2104      	movs	r1, #4
    8316:	6860      	ldr	r0, [r4, #4]
    8318:	f7ff ff82 	bl	8220 <std>
    831c:	2201      	movs	r2, #1
    831e:	2109      	movs	r1, #9
    8320:	68a0      	ldr	r0, [r4, #8]
    8322:	f7ff ff7d 	bl	8220 <std>
    8326:	2202      	movs	r2, #2
    8328:	2112      	movs	r1, #18
    832a:	68e0      	ldr	r0, [r4, #12]
    832c:	f7ff ff78 	bl	8220 <std>
    8330:	2301      	movs	r3, #1
    8332:	61a3      	str	r3, [r4, #24]
    8334:	e7d2      	b.n	82dc <__sinit+0xc>
    8336:	bf00      	nop
    8338:	0000b6d0 	.word	0x0000b6d0
    833c:	00008269 	.word	0x00008269

00008340 <__sfp>:
__sfp():
    8340:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    8342:	4607      	mov	r7, r0
    8344:	f7ff ffac 	bl	82a0 <__sfp_lock_acquire>
    8348:	4b1e      	ldr	r3, [pc, #120]	; (83c4 <__sfp+0x84>)
    834a:	681e      	ldr	r6, [r3, #0]
    834c:	69b3      	ldr	r3, [r6, #24]
    834e:	b913      	cbnz	r3, 8356 <__sfp+0x16>
    8350:	4630      	mov	r0, r6
    8352:	f7ff ffbd 	bl	82d0 <__sinit>
    8356:	3648      	adds	r6, #72	; 0x48
    8358:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
    835c:	3b01      	subs	r3, #1
    835e:	d503      	bpl.n	8368 <__sfp+0x28>
    8360:	6833      	ldr	r3, [r6, #0]
    8362:	b30b      	cbz	r3, 83a8 <__sfp+0x68>
    8364:	6836      	ldr	r6, [r6, #0]
    8366:	e7f7      	b.n	8358 <__sfp+0x18>
    8368:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
    836c:	b9d5      	cbnz	r5, 83a4 <__sfp+0x64>
    836e:	4b16      	ldr	r3, [pc, #88]	; (83c8 <__sfp+0x88>)
    8370:	60e3      	str	r3, [r4, #12]
    8372:	f104 0058 	add.w	r0, r4, #88	; 0x58
    8376:	6665      	str	r5, [r4, #100]	; 0x64
    8378:	f7fc feb0 	bl	50dc <__retarget_lock_init_recursive>
    837c:	f7ff ff96 	bl	82ac <__sfp_lock_release>
    8380:	6025      	str	r5, [r4, #0]
    8382:	e9c4 5501 	strd	r5, r5, [r4, #4]
    8386:	e9c4 5504 	strd	r5, r5, [r4, #16]
    838a:	61a5      	str	r5, [r4, #24]
    838c:	2208      	movs	r2, #8
    838e:	4629      	mov	r1, r5
    8390:	f104 005c 	add.w	r0, r4, #92	; 0x5c
    8394:	f7fc fede 	bl	5154 <memset>
    8398:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
    839c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
    83a0:	4620      	mov	r0, r4
    83a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    83a4:	3468      	adds	r4, #104	; 0x68
    83a6:	e7d9      	b.n	835c <__sfp+0x1c>
    83a8:	2104      	movs	r1, #4
    83aa:	4638      	mov	r0, r7
    83ac:	f7ff ff62 	bl	8274 <__sfmoreglue>
    83b0:	4604      	mov	r4, r0
    83b2:	6030      	str	r0, [r6, #0]
    83b4:	2800      	cmp	r0, #0
    83b6:	d1d5      	bne.n	8364 <__sfp+0x24>
    83b8:	f7ff ff78 	bl	82ac <__sfp_lock_release>
    83bc:	230c      	movs	r3, #12
    83be:	603b      	str	r3, [r7, #0]
    83c0:	e7ee      	b.n	83a0 <__sfp+0x60>
    83c2:	bf00      	nop
    83c4:	0000b6d0 	.word	0x0000b6d0
    83c8:	ffff0001 	.word	0xffff0001

000083cc <_fwalk_reent>:
_fwalk_reent():
    83cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    83d0:	4680      	mov	r8, r0
    83d2:	4689      	mov	r9, r1
    83d4:	f100 0448 	add.w	r4, r0, #72	; 0x48
    83d8:	2600      	movs	r6, #0
    83da:	b914      	cbnz	r4, 83e2 <_fwalk_reent+0x16>
    83dc:	4630      	mov	r0, r6
    83de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    83e2:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
    83e6:	3f01      	subs	r7, #1
    83e8:	d501      	bpl.n	83ee <_fwalk_reent+0x22>
    83ea:	6824      	ldr	r4, [r4, #0]
    83ec:	e7f5      	b.n	83da <_fwalk_reent+0xe>
    83ee:	89ab      	ldrh	r3, [r5, #12]
    83f0:	2b01      	cmp	r3, #1
    83f2:	d907      	bls.n	8404 <_fwalk_reent+0x38>
    83f4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
    83f8:	3301      	adds	r3, #1
    83fa:	d003      	beq.n	8404 <_fwalk_reent+0x38>
    83fc:	4629      	mov	r1, r5
    83fe:	4640      	mov	r0, r8
    8400:	47c8      	blx	r9
    8402:	4306      	orrs	r6, r0
    8404:	3568      	adds	r5, #104	; 0x68
    8406:	e7ee      	b.n	83e6 <_fwalk_reent+0x1a>

00008408 <rshift>:
rshift():
    8408:	b5f0      	push	{r4, r5, r6, r7, lr}
    840a:	6906      	ldr	r6, [r0, #16]
    840c:	114b      	asrs	r3, r1, #5
    840e:	429e      	cmp	r6, r3
    8410:	f100 0414 	add.w	r4, r0, #20
    8414:	dd30      	ble.n	8478 <rshift+0x70>
    8416:	f011 011f 	ands.w	r1, r1, #31
    841a:	eb04 0686 	add.w	r6, r4, r6, lsl #2
    841e:	eb04 0283 	add.w	r2, r4, r3, lsl #2
    8422:	d108      	bne.n	8436 <rshift+0x2e>
    8424:	4621      	mov	r1, r4
    8426:	42b2      	cmp	r2, r6
    8428:	460b      	mov	r3, r1
    842a:	d211      	bcs.n	8450 <rshift+0x48>
    842c:	f852 3b04 	ldr.w	r3, [r2], #4
    8430:	f841 3b04 	str.w	r3, [r1], #4
    8434:	e7f7      	b.n	8426 <rshift+0x1e>
    8436:	f854 5023 	ldr.w	r5, [r4, r3, lsl #2]
    843a:	f1c1 0c20 	rsb	ip, r1, #32
    843e:	40cd      	lsrs	r5, r1
    8440:	3204      	adds	r2, #4
    8442:	4623      	mov	r3, r4
    8444:	4296      	cmp	r6, r2
    8446:	4617      	mov	r7, r2
    8448:	d80c      	bhi.n	8464 <rshift+0x5c>
    844a:	601d      	str	r5, [r3, #0]
    844c:	b105      	cbz	r5, 8450 <rshift+0x48>
    844e:	3304      	adds	r3, #4
    8450:	1b1a      	subs	r2, r3, r4
    8452:	42a3      	cmp	r3, r4
    8454:	ea4f 02a2 	mov.w	r2, r2, asr #2
    8458:	bf08      	it	eq
    845a:	2300      	moveq	r3, #0
    845c:	6102      	str	r2, [r0, #16]
    845e:	bf08      	it	eq
    8460:	6143      	streq	r3, [r0, #20]
    8462:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8464:	683f      	ldr	r7, [r7, #0]
    8466:	fa07 f70c 	lsl.w	r7, r7, ip
    846a:	433d      	orrs	r5, r7
    846c:	f843 5b04 	str.w	r5, [r3], #4
    8470:	f852 5b04 	ldr.w	r5, [r2], #4
    8474:	40cd      	lsrs	r5, r1
    8476:	e7e5      	b.n	8444 <rshift+0x3c>
    8478:	4623      	mov	r3, r4
    847a:	e7e9      	b.n	8450 <rshift+0x48>

0000847c <__hexdig_fun>:
__hexdig_fun():
    847c:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
    8480:	2b09      	cmp	r3, #9
    8482:	d802      	bhi.n	848a <__hexdig_fun+0xe>
    8484:	3820      	subs	r0, #32
    8486:	b2c0      	uxtb	r0, r0
    8488:	4770      	bx	lr
    848a:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
    848e:	2b05      	cmp	r3, #5
    8490:	d801      	bhi.n	8496 <__hexdig_fun+0x1a>
    8492:	3847      	subs	r0, #71	; 0x47
    8494:	e7f7      	b.n	8486 <__hexdig_fun+0xa>
    8496:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
    849a:	2b05      	cmp	r3, #5
    849c:	d801      	bhi.n	84a2 <__hexdig_fun+0x26>
    849e:	3827      	subs	r0, #39	; 0x27
    84a0:	e7f1      	b.n	8486 <__hexdig_fun+0xa>
    84a2:	2000      	movs	r0, #0
    84a4:	4770      	bx	lr
    84a6:	Address 0x00000000000084a6 is out of bounds.


000084a8 <__gethex>:
__gethex():
    84a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    84ac:	b08b      	sub	sp, #44	; 0x2c
    84ae:	468b      	mov	fp, r1
    84b0:	9306      	str	r3, [sp, #24]
    84b2:	4bb7      	ldr	r3, [pc, #732]	; (8790 <__gethex+0x2e8>)
    84b4:	9002      	str	r0, [sp, #8]
    84b6:	681b      	ldr	r3, [r3, #0]
    84b8:	9303      	str	r3, [sp, #12]
    84ba:	4618      	mov	r0, r3
    84bc:	4690      	mov	r8, r2
    84be:	f7fe f851 	bl	6564 <strlen>
    84c2:	9b03      	ldr	r3, [sp, #12]
    84c4:	f8db 2000 	ldr.w	r2, [fp]
    84c8:	9001      	str	r0, [sp, #4]
    84ca:	4403      	add	r3, r0
    84cc:	f813 3c01 	ldrb.w	r3, [r3, #-1]
    84d0:	9307      	str	r3, [sp, #28]
    84d2:	1c93      	adds	r3, r2, #2
    84d4:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
    84d8:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
    84dc:	32fe      	adds	r2, #254	; 0xfe
    84de:	eb02 0a03 	add.w	sl, r2, r3
    84e2:	461f      	mov	r7, r3
    84e4:	f813 0b01 	ldrb.w	r0, [r3], #1
    84e8:	2830      	cmp	r0, #48	; 0x30
    84ea:	d0f8      	beq.n	84de <__gethex+0x36>
    84ec:	f7ff ffc6 	bl	847c <__hexdig_fun>
    84f0:	4604      	mov	r4, r0
    84f2:	2800      	cmp	r0, #0
    84f4:	d168      	bne.n	85c8 <__gethex+0x120>
    84f6:	9a01      	ldr	r2, [sp, #4]
    84f8:	9903      	ldr	r1, [sp, #12]
    84fa:	4638      	mov	r0, r7
    84fc:	f7fe f83a 	bl	6574 <strncmp>
    8500:	4605      	mov	r5, r0
    8502:	2800      	cmp	r0, #0
    8504:	d163      	bne.n	85ce <__gethex+0x126>
    8506:	9b01      	ldr	r3, [sp, #4]
    8508:	5cf8      	ldrb	r0, [r7, r3]
    850a:	18fe      	adds	r6, r7, r3
    850c:	f7ff ffb6 	bl	847c <__hexdig_fun>
    8510:	2800      	cmp	r0, #0
    8512:	d05e      	beq.n	85d2 <__gethex+0x12a>
    8514:	4633      	mov	r3, r6
    8516:	7818      	ldrb	r0, [r3, #0]
    8518:	2830      	cmp	r0, #48	; 0x30
    851a:	461f      	mov	r7, r3
    851c:	f103 0301 	add.w	r3, r3, #1
    8520:	d0f9      	beq.n	8516 <__gethex+0x6e>
    8522:	f7ff ffab 	bl	847c <__hexdig_fun>
    8526:	fab0 f480 	clz	r4, r0
    852a:	0964      	lsrs	r4, r4, #5
    852c:	4635      	mov	r5, r6
    852e:	f04f 0a01 	mov.w	sl, #1
    8532:	463a      	mov	r2, r7
    8534:	4616      	mov	r6, r2
    8536:	3201      	adds	r2, #1
    8538:	7830      	ldrb	r0, [r6, #0]
    853a:	f7ff ff9f 	bl	847c <__hexdig_fun>
    853e:	2800      	cmp	r0, #0
    8540:	d1f8      	bne.n	8534 <__gethex+0x8c>
    8542:	9a01      	ldr	r2, [sp, #4]
    8544:	9903      	ldr	r1, [sp, #12]
    8546:	4630      	mov	r0, r6
    8548:	f7fe f814 	bl	6574 <strncmp>
    854c:	b950      	cbnz	r0, 8564 <__gethex+0xbc>
    854e:	b955      	cbnz	r5, 8566 <__gethex+0xbe>
    8550:	9b01      	ldr	r3, [sp, #4]
    8552:	18f5      	adds	r5, r6, r3
    8554:	462a      	mov	r2, r5
    8556:	4616      	mov	r6, r2
    8558:	3201      	adds	r2, #1
    855a:	7830      	ldrb	r0, [r6, #0]
    855c:	f7ff ff8e 	bl	847c <__hexdig_fun>
    8560:	2800      	cmp	r0, #0
    8562:	d1f8      	bne.n	8556 <__gethex+0xae>
    8564:	b10d      	cbz	r5, 856a <__gethex+0xc2>
    8566:	1bad      	subs	r5, r5, r6
    8568:	00ad      	lsls	r5, r5, #2
    856a:	7833      	ldrb	r3, [r6, #0]
    856c:	2b50      	cmp	r3, #80	; 0x50
    856e:	d001      	beq.n	8574 <__gethex+0xcc>
    8570:	2b70      	cmp	r3, #112	; 0x70
    8572:	d13c      	bne.n	85ee <__gethex+0x146>
    8574:	7873      	ldrb	r3, [r6, #1]
    8576:	2b2b      	cmp	r3, #43	; 0x2b
    8578:	d02d      	beq.n	85d6 <__gethex+0x12e>
    857a:	2b2d      	cmp	r3, #45	; 0x2d
    857c:	d02f      	beq.n	85de <__gethex+0x136>
    857e:	1c71      	adds	r1, r6, #1
    8580:	f04f 0900 	mov.w	r9, #0
    8584:	7808      	ldrb	r0, [r1, #0]
    8586:	f7ff ff79 	bl	847c <__hexdig_fun>
    858a:	1e43      	subs	r3, r0, #1
    858c:	b2db      	uxtb	r3, r3
    858e:	2b18      	cmp	r3, #24
    8590:	d82d      	bhi.n	85ee <__gethex+0x146>
    8592:	f1a0 0210 	sub.w	r2, r0, #16
    8596:	f811 0f01 	ldrb.w	r0, [r1, #1]!
    859a:	f7ff ff6f 	bl	847c <__hexdig_fun>
    859e:	1e43      	subs	r3, r0, #1
    85a0:	b2db      	uxtb	r3, r3
    85a2:	2b18      	cmp	r3, #24
    85a4:	d91e      	bls.n	85e4 <__gethex+0x13c>
    85a6:	f1b9 0f00 	cmp.w	r9, #0
    85aa:	d000      	beq.n	85ae <__gethex+0x106>
    85ac:	4252      	negs	r2, r2
    85ae:	4415      	add	r5, r2
    85b0:	f8cb 1000 	str.w	r1, [fp]
    85b4:	b1ec      	cbz	r4, 85f2 <__gethex+0x14a>
    85b6:	f1ba 0f00 	cmp.w	sl, #0
    85ba:	bf14      	ite	ne
    85bc:	2700      	movne	r7, #0
    85be:	2706      	moveq	r7, #6
    85c0:	4638      	mov	r0, r7
    85c2:	b00b      	add	sp, #44	; 0x2c
    85c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    85c8:	2400      	movs	r4, #0
    85ca:	4625      	mov	r5, r4
    85cc:	e7b1      	b.n	8532 <__gethex+0x8a>
    85ce:	463e      	mov	r6, r7
    85d0:	4625      	mov	r5, r4
    85d2:	2401      	movs	r4, #1
    85d4:	e7c9      	b.n	856a <__gethex+0xc2>
    85d6:	f04f 0900 	mov.w	r9, #0
    85da:	1cb1      	adds	r1, r6, #2
    85dc:	e7d2      	b.n	8584 <__gethex+0xdc>
    85de:	f04f 0901 	mov.w	r9, #1
    85e2:	e7fa      	b.n	85da <__gethex+0x132>
    85e4:	230a      	movs	r3, #10
    85e6:	fb03 0202 	mla	r2, r3, r2, r0
    85ea:	3a10      	subs	r2, #16
    85ec:	e7d3      	b.n	8596 <__gethex+0xee>
    85ee:	4631      	mov	r1, r6
    85f0:	e7de      	b.n	85b0 <__gethex+0x108>
    85f2:	1bf3      	subs	r3, r6, r7
    85f4:	3b01      	subs	r3, #1
    85f6:	4621      	mov	r1, r4
    85f8:	2b07      	cmp	r3, #7
    85fa:	dc4f      	bgt.n	869c <__gethex+0x1f4>
    85fc:	9802      	ldr	r0, [sp, #8]
    85fe:	f000 fb03 	bl	8c08 <_Balloc>
    8602:	9b01      	ldr	r3, [sp, #4]
    8604:	f100 0914 	add.w	r9, r0, #20
    8608:	f04f 0b00 	mov.w	fp, #0
    860c:	f1c3 0301 	rsb	r3, r3, #1
    8610:	4604      	mov	r4, r0
    8612:	f8cd 9010 	str.w	r9, [sp, #16]
    8616:	46da      	mov	sl, fp
    8618:	9308      	str	r3, [sp, #32]
    861a:	42b7      	cmp	r7, r6
    861c:	d341      	bcc.n	86a2 <__gethex+0x1fa>
    861e:	9804      	ldr	r0, [sp, #16]
    8620:	f840 ab04 	str.w	sl, [r0], #4
    8624:	eba0 0009 	sub.w	r0, r0, r9
    8628:	1080      	asrs	r0, r0, #2
    862a:	6120      	str	r0, [r4, #16]
    862c:	0147      	lsls	r7, r0, #5
    862e:	4650      	mov	r0, sl
    8630:	f000 fbae 	bl	8d90 <__hi0bits>
    8634:	f8d8 6000 	ldr.w	r6, [r8]
    8638:	1a3f      	subs	r7, r7, r0
    863a:	42b7      	cmp	r7, r6
    863c:	dd63      	ble.n	8706 <__gethex+0x25e>
    863e:	1bbf      	subs	r7, r7, r6
    8640:	4639      	mov	r1, r7
    8642:	4620      	mov	r0, r4
    8644:	f000 feb7 	bl	93b6 <__any_on>
    8648:	4682      	mov	sl, r0
    864a:	b1a8      	cbz	r0, 8678 <__gethex+0x1d0>
    864c:	1e7b      	subs	r3, r7, #1
    864e:	1159      	asrs	r1, r3, #5
    8650:	f003 021f 	and.w	r2, r3, #31
    8654:	f04f 0a01 	mov.w	sl, #1
    8658:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
    865c:	fa0a f202 	lsl.w	r2, sl, r2
    8660:	420a      	tst	r2, r1
    8662:	d009      	beq.n	8678 <__gethex+0x1d0>
    8664:	4553      	cmp	r3, sl
    8666:	dd05      	ble.n	8674 <__gethex+0x1cc>
    8668:	1eb9      	subs	r1, r7, #2
    866a:	4620      	mov	r0, r4
    866c:	f000 fea3 	bl	93b6 <__any_on>
    8670:	2800      	cmp	r0, #0
    8672:	d145      	bne.n	8700 <__gethex+0x258>
    8674:	f04f 0a02 	mov.w	sl, #2
    8678:	4639      	mov	r1, r7
    867a:	4620      	mov	r0, r4
    867c:	f7ff fec4 	bl	8408 <rshift>
    8680:	443d      	add	r5, r7
    8682:	f8d8 3008 	ldr.w	r3, [r8, #8]
    8686:	42ab      	cmp	r3, r5
    8688:	da4b      	bge.n	8722 <__gethex+0x27a>
    868a:	4621      	mov	r1, r4
    868c:	9802      	ldr	r0, [sp, #8]
    868e:	f000 faef 	bl	8c70 <_Bfree>
    8692:	9a14      	ldr	r2, [sp, #80]	; 0x50
    8694:	2300      	movs	r3, #0
    8696:	6013      	str	r3, [r2, #0]
    8698:	27a3      	movs	r7, #163	; 0xa3
    869a:	e791      	b.n	85c0 <__gethex+0x118>
    869c:	3101      	adds	r1, #1
    869e:	105b      	asrs	r3, r3, #1
    86a0:	e7aa      	b.n	85f8 <__gethex+0x150>
    86a2:	1e73      	subs	r3, r6, #1
    86a4:	9305      	str	r3, [sp, #20]
    86a6:	9a07      	ldr	r2, [sp, #28]
    86a8:	f816 3c01 	ldrb.w	r3, [r6, #-1]
    86ac:	4293      	cmp	r3, r2
    86ae:	d017      	beq.n	86e0 <__gethex+0x238>
    86b0:	f1bb 0f20 	cmp.w	fp, #32
    86b4:	d106      	bne.n	86c4 <__gethex+0x21c>
    86b6:	9b04      	ldr	r3, [sp, #16]
    86b8:	f843 ab04 	str.w	sl, [r3], #4
    86bc:	f04f 0a00 	mov.w	sl, #0
    86c0:	9304      	str	r3, [sp, #16]
    86c2:	46d3      	mov	fp, sl
    86c4:	f816 0c01 	ldrb.w	r0, [r6, #-1]
    86c8:	f7ff fed8 	bl	847c <__hexdig_fun>
    86cc:	f000 000f 	and.w	r0, r0, #15
    86d0:	fa00 f00b 	lsl.w	r0, r0, fp
    86d4:	ea4a 0a00 	orr.w	sl, sl, r0
    86d8:	f10b 0b04 	add.w	fp, fp, #4
    86dc:	9b05      	ldr	r3, [sp, #20]
    86de:	e00d      	b.n	86fc <__gethex+0x254>
    86e0:	9b05      	ldr	r3, [sp, #20]
    86e2:	9a08      	ldr	r2, [sp, #32]
    86e4:	4413      	add	r3, r2
    86e6:	42bb      	cmp	r3, r7
    86e8:	d3e2      	bcc.n	86b0 <__gethex+0x208>
    86ea:	4618      	mov	r0, r3
    86ec:	9a01      	ldr	r2, [sp, #4]
    86ee:	9903      	ldr	r1, [sp, #12]
    86f0:	9309      	str	r3, [sp, #36]	; 0x24
    86f2:	f7fd ff3f 	bl	6574 <strncmp>
    86f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
    86f8:	2800      	cmp	r0, #0
    86fa:	d1d9      	bne.n	86b0 <__gethex+0x208>
    86fc:	461e      	mov	r6, r3
    86fe:	e78c      	b.n	861a <__gethex+0x172>
    8700:	f04f 0a03 	mov.w	sl, #3
    8704:	e7b8      	b.n	8678 <__gethex+0x1d0>
    8706:	da09      	bge.n	871c <__gethex+0x274>
    8708:	1bf7      	subs	r7, r6, r7
    870a:	4621      	mov	r1, r4
    870c:	463a      	mov	r2, r7
    870e:	9802      	ldr	r0, [sp, #8]
    8710:	f000 fc76 	bl	9000 <__lshift>
    8714:	1bed      	subs	r5, r5, r7
    8716:	4604      	mov	r4, r0
    8718:	f100 0914 	add.w	r9, r0, #20
    871c:	f04f 0a00 	mov.w	sl, #0
    8720:	e7af      	b.n	8682 <__gethex+0x1da>
    8722:	f8d8 3004 	ldr.w	r3, [r8, #4]
    8726:	42ab      	cmp	r3, r5
    8728:	dd6d      	ble.n	8806 <__gethex+0x35e>
    872a:	1b5d      	subs	r5, r3, r5
    872c:	42ae      	cmp	r6, r5
    872e:	dc31      	bgt.n	8794 <__gethex+0x2ec>
    8730:	f8d8 300c 	ldr.w	r3, [r8, #12]
    8734:	2b02      	cmp	r3, #2
    8736:	d022      	beq.n	877e <__gethex+0x2d6>
    8738:	2b03      	cmp	r3, #3
    873a:	d024      	beq.n	8786 <__gethex+0x2de>
    873c:	2b01      	cmp	r3, #1
    873e:	d115      	bne.n	876c <__gethex+0x2c4>
    8740:	42ae      	cmp	r6, r5
    8742:	d113      	bne.n	876c <__gethex+0x2c4>
    8744:	2e01      	cmp	r6, #1
    8746:	d10b      	bne.n	8760 <__gethex+0x2b8>
    8748:	9a06      	ldr	r2, [sp, #24]
    874a:	f8d8 3004 	ldr.w	r3, [r8, #4]
    874e:	6013      	str	r3, [r2, #0]
    8750:	2301      	movs	r3, #1
    8752:	6123      	str	r3, [r4, #16]
    8754:	f8c9 3000 	str.w	r3, [r9]
    8758:	9b14      	ldr	r3, [sp, #80]	; 0x50
    875a:	2762      	movs	r7, #98	; 0x62
    875c:	601c      	str	r4, [r3, #0]
    875e:	e72f      	b.n	85c0 <__gethex+0x118>
    8760:	1e71      	subs	r1, r6, #1
    8762:	4620      	mov	r0, r4
    8764:	f000 fe27 	bl	93b6 <__any_on>
    8768:	2800      	cmp	r0, #0
    876a:	d1ed      	bne.n	8748 <__gethex+0x2a0>
    876c:	4621      	mov	r1, r4
    876e:	9802      	ldr	r0, [sp, #8]
    8770:	f000 fa7e 	bl	8c70 <_Bfree>
    8774:	9a14      	ldr	r2, [sp, #80]	; 0x50
    8776:	2300      	movs	r3, #0
    8778:	6013      	str	r3, [r2, #0]
    877a:	2750      	movs	r7, #80	; 0x50
    877c:	e720      	b.n	85c0 <__gethex+0x118>
    877e:	9b15      	ldr	r3, [sp, #84]	; 0x54
    8780:	2b00      	cmp	r3, #0
    8782:	d1f3      	bne.n	876c <__gethex+0x2c4>
    8784:	e7e0      	b.n	8748 <__gethex+0x2a0>
    8786:	9b15      	ldr	r3, [sp, #84]	; 0x54
    8788:	2b00      	cmp	r3, #0
    878a:	d1dd      	bne.n	8748 <__gethex+0x2a0>
    878c:	e7ee      	b.n	876c <__gethex+0x2c4>
    878e:	bf00      	nop
    8790:	0000b7e0 	.word	0x0000b7e0
    8794:	1e6f      	subs	r7, r5, #1
    8796:	f1ba 0f00 	cmp.w	sl, #0
    879a:	d131      	bne.n	8800 <__gethex+0x358>
    879c:	b127      	cbz	r7, 87a8 <__gethex+0x300>
    879e:	4639      	mov	r1, r7
    87a0:	4620      	mov	r0, r4
    87a2:	f000 fe08 	bl	93b6 <__any_on>
    87a6:	4682      	mov	sl, r0
    87a8:	117a      	asrs	r2, r7, #5
    87aa:	2301      	movs	r3, #1
    87ac:	f007 071f 	and.w	r7, r7, #31
    87b0:	fa03 f707 	lsl.w	r7, r3, r7
    87b4:	f859 3022 	ldr.w	r3, [r9, r2, lsl #2]
    87b8:	4629      	mov	r1, r5
    87ba:	421f      	tst	r7, r3
    87bc:	4620      	mov	r0, r4
    87be:	bf18      	it	ne
    87c0:	f04a 0a02 	orrne.w	sl, sl, #2
    87c4:	1b76      	subs	r6, r6, r5
    87c6:	f7ff fe1f 	bl	8408 <rshift>
    87ca:	f8d8 5004 	ldr.w	r5, [r8, #4]
    87ce:	2702      	movs	r7, #2
    87d0:	f1ba 0f00 	cmp.w	sl, #0
    87d4:	d048      	beq.n	8868 <__gethex+0x3c0>
    87d6:	f8d8 300c 	ldr.w	r3, [r8, #12]
    87da:	2b02      	cmp	r3, #2
    87dc:	d015      	beq.n	880a <__gethex+0x362>
    87de:	2b03      	cmp	r3, #3
    87e0:	d017      	beq.n	8812 <__gethex+0x36a>
    87e2:	2b01      	cmp	r3, #1
    87e4:	d109      	bne.n	87fa <__gethex+0x352>
    87e6:	f01a 0f02 	tst.w	sl, #2
    87ea:	d006      	beq.n	87fa <__gethex+0x352>
    87ec:	f8d9 3000 	ldr.w	r3, [r9]
    87f0:	ea4a 0a03 	orr.w	sl, sl, r3
    87f4:	f01a 0f01 	tst.w	sl, #1
    87f8:	d10e      	bne.n	8818 <__gethex+0x370>
    87fa:	f047 0710 	orr.w	r7, r7, #16
    87fe:	e033      	b.n	8868 <__gethex+0x3c0>
    8800:	f04f 0a01 	mov.w	sl, #1
    8804:	e7d0      	b.n	87a8 <__gethex+0x300>
    8806:	2701      	movs	r7, #1
    8808:	e7e2      	b.n	87d0 <__gethex+0x328>
    880a:	9b15      	ldr	r3, [sp, #84]	; 0x54
    880c:	f1c3 0301 	rsb	r3, r3, #1
    8810:	9315      	str	r3, [sp, #84]	; 0x54
    8812:	9b15      	ldr	r3, [sp, #84]	; 0x54
    8814:	2b00      	cmp	r3, #0
    8816:	d0f0      	beq.n	87fa <__gethex+0x352>
    8818:	f8d4 9010 	ldr.w	r9, [r4, #16]
    881c:	f104 0314 	add.w	r3, r4, #20
    8820:	ea4f 0a89 	mov.w	sl, r9, lsl #2
    8824:	eb03 010a 	add.w	r1, r3, sl
    8828:	f04f 0c00 	mov.w	ip, #0
    882c:	4618      	mov	r0, r3
    882e:	f853 2b04 	ldr.w	r2, [r3], #4
    8832:	f1b2 3fff 	cmp.w	r2, #4294967295	; 0xffffffff
    8836:	d01c      	beq.n	8872 <__gethex+0x3ca>
    8838:	3201      	adds	r2, #1
    883a:	6002      	str	r2, [r0, #0]
    883c:	2f02      	cmp	r7, #2
    883e:	f104 0314 	add.w	r3, r4, #20
    8842:	d138      	bne.n	88b6 <__gethex+0x40e>
    8844:	f8d8 2000 	ldr.w	r2, [r8]
    8848:	3a01      	subs	r2, #1
    884a:	42b2      	cmp	r2, r6
    884c:	d10a      	bne.n	8864 <__gethex+0x3bc>
    884e:	1171      	asrs	r1, r6, #5
    8850:	2201      	movs	r2, #1
    8852:	f006 061f 	and.w	r6, r6, #31
    8856:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
    885a:	fa02 f606 	lsl.w	r6, r2, r6
    885e:	421e      	tst	r6, r3
    8860:	bf18      	it	ne
    8862:	4617      	movne	r7, r2
    8864:	f047 0720 	orr.w	r7, r7, #32
    8868:	9b14      	ldr	r3, [sp, #80]	; 0x50
    886a:	601c      	str	r4, [r3, #0]
    886c:	9b06      	ldr	r3, [sp, #24]
    886e:	601d      	str	r5, [r3, #0]
    8870:	e6a6      	b.n	85c0 <__gethex+0x118>
    8872:	4299      	cmp	r1, r3
    8874:	f843 cc04 	str.w	ip, [r3, #-4]
    8878:	d8d8      	bhi.n	882c <__gethex+0x384>
    887a:	68a3      	ldr	r3, [r4, #8]
    887c:	4599      	cmp	r9, r3
    887e:	db12      	blt.n	88a6 <__gethex+0x3fe>
    8880:	6861      	ldr	r1, [r4, #4]
    8882:	9802      	ldr	r0, [sp, #8]
    8884:	3101      	adds	r1, #1
    8886:	f000 f9bf 	bl	8c08 <_Balloc>
    888a:	6922      	ldr	r2, [r4, #16]
    888c:	3202      	adds	r2, #2
    888e:	f104 010c 	add.w	r1, r4, #12
    8892:	4683      	mov	fp, r0
    8894:	0092      	lsls	r2, r2, #2
    8896:	300c      	adds	r0, #12
    8898:	f7fc fc34 	bl	5104 <memcpy>
    889c:	4621      	mov	r1, r4
    889e:	9802      	ldr	r0, [sp, #8]
    88a0:	f000 f9e6 	bl	8c70 <_Bfree>
    88a4:	465c      	mov	r4, fp
    88a6:	6923      	ldr	r3, [r4, #16]
    88a8:	1c5a      	adds	r2, r3, #1
    88aa:	eb04 0383 	add.w	r3, r4, r3, lsl #2
    88ae:	6122      	str	r2, [r4, #16]
    88b0:	2201      	movs	r2, #1
    88b2:	615a      	str	r2, [r3, #20]
    88b4:	e7c2      	b.n	883c <__gethex+0x394>
    88b6:	6922      	ldr	r2, [r4, #16]
    88b8:	454a      	cmp	r2, r9
    88ba:	dd0b      	ble.n	88d4 <__gethex+0x42c>
    88bc:	2101      	movs	r1, #1
    88be:	4620      	mov	r0, r4
    88c0:	f7ff fda2 	bl	8408 <rshift>
    88c4:	f8d8 3008 	ldr.w	r3, [r8, #8]
    88c8:	3501      	adds	r5, #1
    88ca:	42ab      	cmp	r3, r5
    88cc:	f6ff aedd 	blt.w	868a <__gethex+0x1e2>
    88d0:	2701      	movs	r7, #1
    88d2:	e7c7      	b.n	8864 <__gethex+0x3bc>
    88d4:	f016 061f 	ands.w	r6, r6, #31
    88d8:	d0fa      	beq.n	88d0 <__gethex+0x428>
    88da:	449a      	add	sl, r3
    88dc:	f1c6 0620 	rsb	r6, r6, #32
    88e0:	f85a 0c04 	ldr.w	r0, [sl, #-4]
    88e4:	f000 fa54 	bl	8d90 <__hi0bits>
    88e8:	42b0      	cmp	r0, r6
    88ea:	dbe7      	blt.n	88bc <__gethex+0x414>
    88ec:	e7f0      	b.n	88d0 <__gethex+0x428>
    88ee:	bf00      	nop

000088f0 <L_shift>:
L_shift():
    88f0:	f1c2 0208 	rsb	r2, r2, #8
    88f4:	0092      	lsls	r2, r2, #2
    88f6:	b570      	push	{r4, r5, r6, lr}
    88f8:	f1c2 0620 	rsb	r6, r2, #32
    88fc:	6843      	ldr	r3, [r0, #4]
    88fe:	6804      	ldr	r4, [r0, #0]
    8900:	fa03 f506 	lsl.w	r5, r3, r6
    8904:	432c      	orrs	r4, r5
    8906:	40d3      	lsrs	r3, r2
    8908:	6004      	str	r4, [r0, #0]
    890a:	f840 3f04 	str.w	r3, [r0, #4]!
    890e:	4288      	cmp	r0, r1
    8910:	d3f4      	bcc.n	88fc <L_shift+0xc>
    8912:	bd70      	pop	{r4, r5, r6, pc}

00008914 <__match>:
__match():
    8914:	b530      	push	{r4, r5, lr}
    8916:	6803      	ldr	r3, [r0, #0]
    8918:	3301      	adds	r3, #1
    891a:	f811 4b01 	ldrb.w	r4, [r1], #1
    891e:	b914      	cbnz	r4, 8926 <__match+0x12>
    8920:	6003      	str	r3, [r0, #0]
    8922:	2001      	movs	r0, #1
    8924:	bd30      	pop	{r4, r5, pc}
    8926:	f813 2b01 	ldrb.w	r2, [r3], #1
    892a:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
    892e:	2d19      	cmp	r5, #25
    8930:	bf98      	it	ls
    8932:	3220      	addls	r2, #32
    8934:	42a2      	cmp	r2, r4
    8936:	d0f0      	beq.n	891a <__match+0x6>
    8938:	2000      	movs	r0, #0
    893a:	e7f3      	b.n	8924 <__match+0x10>

0000893c <__hexnan>:
__hexnan():
    893c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8940:	680b      	ldr	r3, [r1, #0]
    8942:	6801      	ldr	r1, [r0, #0]
    8944:	115f      	asrs	r7, r3, #5
    8946:	eb02 0787 	add.w	r7, r2, r7, lsl #2
    894a:	f013 031f 	ands.w	r3, r3, #31
    894e:	b087      	sub	sp, #28
    8950:	bf18      	it	ne
    8952:	3704      	addne	r7, #4
    8954:	2500      	movs	r5, #0
    8956:	1f3e      	subs	r6, r7, #4
    8958:	4682      	mov	sl, r0
    895a:	4690      	mov	r8, r2
    895c:	9301      	str	r3, [sp, #4]
    895e:	f847 5c04 	str.w	r5, [r7, #-4]
    8962:	46b1      	mov	r9, r6
    8964:	4634      	mov	r4, r6
    8966:	9502      	str	r5, [sp, #8]
    8968:	46ab      	mov	fp, r5
    896a:	784a      	ldrb	r2, [r1, #1]
    896c:	1c4b      	adds	r3, r1, #1
    896e:	9303      	str	r3, [sp, #12]
    8970:	b342      	cbz	r2, 89c4 <__hexnan+0x88>
    8972:	4610      	mov	r0, r2
    8974:	9105      	str	r1, [sp, #20]
    8976:	9204      	str	r2, [sp, #16]
    8978:	f7ff fd80 	bl	847c <__hexdig_fun>
    897c:	2800      	cmp	r0, #0
    897e:	d143      	bne.n	8a08 <__hexnan+0xcc>
    8980:	9a04      	ldr	r2, [sp, #16]
    8982:	9905      	ldr	r1, [sp, #20]
    8984:	2a20      	cmp	r2, #32
    8986:	d818      	bhi.n	89ba <__hexnan+0x7e>
    8988:	9b02      	ldr	r3, [sp, #8]
    898a:	459b      	cmp	fp, r3
    898c:	dd13      	ble.n	89b6 <__hexnan+0x7a>
    898e:	454c      	cmp	r4, r9
    8990:	d206      	bcs.n	89a0 <__hexnan+0x64>
    8992:	2d07      	cmp	r5, #7
    8994:	dc04      	bgt.n	89a0 <__hexnan+0x64>
    8996:	462a      	mov	r2, r5
    8998:	4649      	mov	r1, r9
    899a:	4620      	mov	r0, r4
    899c:	f7ff ffa8 	bl	88f0 <L_shift>
    89a0:	4544      	cmp	r4, r8
    89a2:	d944      	bls.n	8a2e <__hexnan+0xf2>
    89a4:	2300      	movs	r3, #0
    89a6:	f1a4 0904 	sub.w	r9, r4, #4
    89aa:	f844 3c04 	str.w	r3, [r4, #-4]
    89ae:	f8cd b008 	str.w	fp, [sp, #8]
    89b2:	464c      	mov	r4, r9
    89b4:	461d      	mov	r5, r3
    89b6:	9903      	ldr	r1, [sp, #12]
    89b8:	e7d7      	b.n	896a <__hexnan+0x2e>
    89ba:	2a29      	cmp	r2, #41	; 0x29
    89bc:	d14a      	bne.n	8a54 <__hexnan+0x118>
    89be:	3102      	adds	r1, #2
    89c0:	f8ca 1000 	str.w	r1, [sl]
    89c4:	f1bb 0f00 	cmp.w	fp, #0
    89c8:	d044      	beq.n	8a54 <__hexnan+0x118>
    89ca:	454c      	cmp	r4, r9
    89cc:	d206      	bcs.n	89dc <__hexnan+0xa0>
    89ce:	2d07      	cmp	r5, #7
    89d0:	dc04      	bgt.n	89dc <__hexnan+0xa0>
    89d2:	462a      	mov	r2, r5
    89d4:	4649      	mov	r1, r9
    89d6:	4620      	mov	r0, r4
    89d8:	f7ff ff8a 	bl	88f0 <L_shift>
    89dc:	4544      	cmp	r4, r8
    89de:	d928      	bls.n	8a32 <__hexnan+0xf6>
    89e0:	4643      	mov	r3, r8
    89e2:	f854 2b04 	ldr.w	r2, [r4], #4
    89e6:	f843 2b04 	str.w	r2, [r3], #4
    89ea:	42a6      	cmp	r6, r4
    89ec:	d2f9      	bcs.n	89e2 <__hexnan+0xa6>
    89ee:	2200      	movs	r2, #0
    89f0:	f843 2b04 	str.w	r2, [r3], #4
    89f4:	429e      	cmp	r6, r3
    89f6:	d2fb      	bcs.n	89f0 <__hexnan+0xb4>
    89f8:	6833      	ldr	r3, [r6, #0]
    89fa:	b91b      	cbnz	r3, 8a04 <__hexnan+0xc8>
    89fc:	4546      	cmp	r6, r8
    89fe:	d127      	bne.n	8a50 <__hexnan+0x114>
    8a00:	2301      	movs	r3, #1
    8a02:	6033      	str	r3, [r6, #0]
    8a04:	2005      	movs	r0, #5
    8a06:	e026      	b.n	8a56 <__hexnan+0x11a>
    8a08:	3501      	adds	r5, #1
    8a0a:	2d08      	cmp	r5, #8
    8a0c:	f10b 0b01 	add.w	fp, fp, #1
    8a10:	dd06      	ble.n	8a20 <__hexnan+0xe4>
    8a12:	4544      	cmp	r4, r8
    8a14:	d9cf      	bls.n	89b6 <__hexnan+0x7a>
    8a16:	2300      	movs	r3, #0
    8a18:	f844 3c04 	str.w	r3, [r4, #-4]
    8a1c:	2501      	movs	r5, #1
    8a1e:	3c04      	subs	r4, #4
    8a20:	6822      	ldr	r2, [r4, #0]
    8a22:	f000 000f 	and.w	r0, r0, #15
    8a26:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
    8a2a:	6020      	str	r0, [r4, #0]
    8a2c:	e7c3      	b.n	89b6 <__hexnan+0x7a>
    8a2e:	2508      	movs	r5, #8
    8a30:	e7c1      	b.n	89b6 <__hexnan+0x7a>
    8a32:	9b01      	ldr	r3, [sp, #4]
    8a34:	2b00      	cmp	r3, #0
    8a36:	d0df      	beq.n	89f8 <__hexnan+0xbc>
    8a38:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    8a3c:	f1c3 0320 	rsb	r3, r3, #32
    8a40:	fa22 f303 	lsr.w	r3, r2, r3
    8a44:	f857 2c04 	ldr.w	r2, [r7, #-4]
    8a48:	401a      	ands	r2, r3
    8a4a:	f847 2c04 	str.w	r2, [r7, #-4]
    8a4e:	e7d3      	b.n	89f8 <__hexnan+0xbc>
    8a50:	3e04      	subs	r6, #4
    8a52:	e7d1      	b.n	89f8 <__hexnan+0xbc>
    8a54:	2004      	movs	r0, #4
    8a56:	b007      	add	sp, #28
    8a58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00008a5c <_localeconv_r>:
_localeconv_r():
    8a5c:	4800      	ldr	r0, [pc, #0]	; (8a60 <_localeconv_r+0x4>)
    8a5e:	4770      	bx	lr
    8a60:	100002b4 	.word	0x100002b4

00008a64 <__swhatbuf_r>:
__swhatbuf_r():
    8a64:	b570      	push	{r4, r5, r6, lr}
    8a66:	460e      	mov	r6, r1
    8a68:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    8a6c:	2900      	cmp	r1, #0
    8a6e:	b096      	sub	sp, #88	; 0x58
    8a70:	4614      	mov	r4, r2
    8a72:	461d      	mov	r5, r3
    8a74:	da07      	bge.n	8a86 <__swhatbuf_r+0x22>
    8a76:	2300      	movs	r3, #0
    8a78:	602b      	str	r3, [r5, #0]
    8a7a:	89b3      	ldrh	r3, [r6, #12]
    8a7c:	061a      	lsls	r2, r3, #24
    8a7e:	d410      	bmi.n	8aa2 <__swhatbuf_r+0x3e>
    8a80:	f44f 6380 	mov.w	r3, #1024	; 0x400
    8a84:	e00e      	b.n	8aa4 <__swhatbuf_r+0x40>
    8a86:	466a      	mov	r2, sp
    8a88:	f000 feb8 	bl	97fc <_fstat_r>
    8a8c:	2800      	cmp	r0, #0
    8a8e:	dbf2      	blt.n	8a76 <__swhatbuf_r+0x12>
    8a90:	9a01      	ldr	r2, [sp, #4]
    8a92:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
    8a96:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
    8a9a:	425a      	negs	r2, r3
    8a9c:	415a      	adcs	r2, r3
    8a9e:	602a      	str	r2, [r5, #0]
    8aa0:	e7ee      	b.n	8a80 <__swhatbuf_r+0x1c>
    8aa2:	2340      	movs	r3, #64	; 0x40
    8aa4:	2000      	movs	r0, #0
    8aa6:	6023      	str	r3, [r4, #0]
    8aa8:	b016      	add	sp, #88	; 0x58
    8aaa:	bd70      	pop	{r4, r5, r6, pc}

00008aac <__smakebuf_r>:
__smakebuf_r():
    8aac:	898b      	ldrh	r3, [r1, #12]
    8aae:	b573      	push	{r0, r1, r4, r5, r6, lr}
    8ab0:	079d      	lsls	r5, r3, #30
    8ab2:	4606      	mov	r6, r0
    8ab4:	460c      	mov	r4, r1
    8ab6:	d507      	bpl.n	8ac8 <__smakebuf_r+0x1c>
    8ab8:	f104 0347 	add.w	r3, r4, #71	; 0x47
    8abc:	6023      	str	r3, [r4, #0]
    8abe:	6123      	str	r3, [r4, #16]
    8ac0:	2301      	movs	r3, #1
    8ac2:	6163      	str	r3, [r4, #20]
    8ac4:	b002      	add	sp, #8
    8ac6:	bd70      	pop	{r4, r5, r6, pc}
    8ac8:	ab01      	add	r3, sp, #4
    8aca:	466a      	mov	r2, sp
    8acc:	f7ff ffca 	bl	8a64 <__swhatbuf_r>
    8ad0:	9900      	ldr	r1, [sp, #0]
    8ad2:	4605      	mov	r5, r0
    8ad4:	4630      	mov	r0, r6
    8ad6:	f7fc fb93 	bl	5200 <_malloc_r>
    8ada:	b948      	cbnz	r0, 8af0 <__smakebuf_r+0x44>
    8adc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    8ae0:	059a      	lsls	r2, r3, #22
    8ae2:	d4ef      	bmi.n	8ac4 <__smakebuf_r+0x18>
    8ae4:	f023 0303 	bic.w	r3, r3, #3
    8ae8:	f043 0302 	orr.w	r3, r3, #2
    8aec:	81a3      	strh	r3, [r4, #12]
    8aee:	e7e3      	b.n	8ab8 <__smakebuf_r+0xc>
    8af0:	4b0d      	ldr	r3, [pc, #52]	; (8b28 <__smakebuf_r+0x7c>)
    8af2:	62b3      	str	r3, [r6, #40]	; 0x28
    8af4:	89a3      	ldrh	r3, [r4, #12]
    8af6:	6020      	str	r0, [r4, #0]
    8af8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    8afc:	81a3      	strh	r3, [r4, #12]
    8afe:	9b00      	ldr	r3, [sp, #0]
    8b00:	6163      	str	r3, [r4, #20]
    8b02:	9b01      	ldr	r3, [sp, #4]
    8b04:	6120      	str	r0, [r4, #16]
    8b06:	b15b      	cbz	r3, 8b20 <__smakebuf_r+0x74>
    8b08:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
    8b0c:	4630      	mov	r0, r6
    8b0e:	f000 fe87 	bl	9820 <_isatty_r>
    8b12:	b128      	cbz	r0, 8b20 <__smakebuf_r+0x74>
    8b14:	89a3      	ldrh	r3, [r4, #12]
    8b16:	f023 0303 	bic.w	r3, r3, #3
    8b1a:	f043 0301 	orr.w	r3, r3, #1
    8b1e:	81a3      	strh	r3, [r4, #12]
    8b20:	89a3      	ldrh	r3, [r4, #12]
    8b22:	431d      	orrs	r5, r3
    8b24:	81a5      	strh	r5, [r4, #12]
    8b26:	e7cd      	b.n	8ac4 <__smakebuf_r+0x18>
    8b28:	00008269 	.word	0x00008269

00008b2c <__ascii_mbtowc>:
__ascii_mbtowc():
    8b2c:	b082      	sub	sp, #8
    8b2e:	b901      	cbnz	r1, 8b32 <__ascii_mbtowc+0x6>
    8b30:	a901      	add	r1, sp, #4
    8b32:	b142      	cbz	r2, 8b46 <__ascii_mbtowc+0x1a>
    8b34:	b14b      	cbz	r3, 8b4a <__ascii_mbtowc+0x1e>
    8b36:	7813      	ldrb	r3, [r2, #0]
    8b38:	600b      	str	r3, [r1, #0]
    8b3a:	7812      	ldrb	r2, [r2, #0]
    8b3c:	1c10      	adds	r0, r2, #0
    8b3e:	bf18      	it	ne
    8b40:	2001      	movne	r0, #1
    8b42:	b002      	add	sp, #8
    8b44:	4770      	bx	lr
    8b46:	4610      	mov	r0, r2
    8b48:	e7fb      	b.n	8b42 <__ascii_mbtowc+0x16>
    8b4a:	f06f 0001 	mvn.w	r0, #1
    8b4e:	e7f8      	b.n	8b42 <__ascii_mbtowc+0x16>

00008b50 <memchr>:
memchr():
    8b50:	f001 01ff 	and.w	r1, r1, #255	; 0xff
    8b54:	2a10      	cmp	r2, #16
    8b56:	db2b      	blt.n	8bb0 <memchr+0x60>
    8b58:	f010 0f07 	tst.w	r0, #7
    8b5c:	d008      	beq.n	8b70 <memchr+0x20>
    8b5e:	f810 3b01 	ldrb.w	r3, [r0], #1
    8b62:	3a01      	subs	r2, #1
    8b64:	428b      	cmp	r3, r1
    8b66:	d02d      	beq.n	8bc4 <memchr+0x74>
    8b68:	f010 0f07 	tst.w	r0, #7
    8b6c:	b342      	cbz	r2, 8bc0 <memchr+0x70>
    8b6e:	d1f6      	bne.n	8b5e <memchr+0xe>
    8b70:	b4f0      	push	{r4, r5, r6, r7}
    8b72:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
    8b76:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
    8b7a:	f022 0407 	bic.w	r4, r2, #7
    8b7e:	f07f 0700 	mvns.w	r7, #0
    8b82:	2300      	movs	r3, #0
    8b84:	e8f0 5602 	ldrd	r5, r6, [r0], #8
    8b88:	3c08      	subs	r4, #8
    8b8a:	ea85 0501 	eor.w	r5, r5, r1
    8b8e:	ea86 0601 	eor.w	r6, r6, r1
    8b92:	fa85 f547 	uadd8	r5, r5, r7
    8b96:	faa3 f587 	sel	r5, r3, r7
    8b9a:	fa86 f647 	uadd8	r6, r6, r7
    8b9e:	faa5 f687 	sel	r6, r5, r7
    8ba2:	b98e      	cbnz	r6, 8bc8 <memchr+0x78>
    8ba4:	d1ee      	bne.n	8b84 <memchr+0x34>
    8ba6:	bcf0      	pop	{r4, r5, r6, r7}
    8ba8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
    8bac:	f002 0207 	and.w	r2, r2, #7
    8bb0:	b132      	cbz	r2, 8bc0 <memchr+0x70>
    8bb2:	f810 3b01 	ldrb.w	r3, [r0], #1
    8bb6:	3a01      	subs	r2, #1
    8bb8:	ea83 0301 	eor.w	r3, r3, r1
    8bbc:	b113      	cbz	r3, 8bc4 <memchr+0x74>
    8bbe:	d1f8      	bne.n	8bb2 <memchr+0x62>
    8bc0:	2000      	movs	r0, #0
    8bc2:	4770      	bx	lr
    8bc4:	3801      	subs	r0, #1
    8bc6:	4770      	bx	lr
    8bc8:	2d00      	cmp	r5, #0
    8bca:	bf06      	itte	eq
    8bcc:	4635      	moveq	r5, r6
    8bce:	3803      	subeq	r0, #3
    8bd0:	3807      	subne	r0, #7
    8bd2:	f015 0f01 	tst.w	r5, #1
    8bd6:	d107      	bne.n	8be8 <memchr+0x98>
    8bd8:	3001      	adds	r0, #1
    8bda:	f415 7f80 	tst.w	r5, #256	; 0x100
    8bde:	bf02      	ittt	eq
    8be0:	3001      	addeq	r0, #1
    8be2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
    8be6:	3001      	addeq	r0, #1
    8be8:	bcf0      	pop	{r4, r5, r6, r7}
    8bea:	3801      	subs	r0, #1
    8bec:	4770      	bx	lr
    8bee:	bf00      	nop

00008bf0 <__malloc_lock>:
__malloc_lock():
    8bf0:	4801      	ldr	r0, [pc, #4]	; (8bf8 <__malloc_lock+0x8>)
    8bf2:	f7fc ba74 	b.w	50de <__retarget_lock_acquire_recursive>
    8bf6:	bf00      	nop
    8bf8:	10000b7c 	.word	0x10000b7c

00008bfc <__malloc_unlock>:
__malloc_unlock():
    8bfc:	4801      	ldr	r0, [pc, #4]	; (8c04 <__malloc_unlock+0x8>)
    8bfe:	f7fc ba6f 	b.w	50e0 <__retarget_lock_release_recursive>
    8c02:	bf00      	nop
    8c04:	10000b7c 	.word	0x10000b7c

00008c08 <_Balloc>:
_Balloc():
    8c08:	b570      	push	{r4, r5, r6, lr}
    8c0a:	6a45      	ldr	r5, [r0, #36]	; 0x24
    8c0c:	4604      	mov	r4, r0
    8c0e:	460e      	mov	r6, r1
    8c10:	b93d      	cbnz	r5, 8c22 <_Balloc+0x1a>
    8c12:	2010      	movs	r0, #16
    8c14:	f7fc fa66 	bl	50e4 <malloc>
    8c18:	e9c0 5501 	strd	r5, r5, [r0, #4]
    8c1c:	6260      	str	r0, [r4, #36]	; 0x24
    8c1e:	6005      	str	r5, [r0, #0]
    8c20:	60c5      	str	r5, [r0, #12]
    8c22:	6a65      	ldr	r5, [r4, #36]	; 0x24
    8c24:	68eb      	ldr	r3, [r5, #12]
    8c26:	b183      	cbz	r3, 8c4a <_Balloc+0x42>
    8c28:	6a63      	ldr	r3, [r4, #36]	; 0x24
    8c2a:	68db      	ldr	r3, [r3, #12]
    8c2c:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
    8c30:	b9b8      	cbnz	r0, 8c62 <_Balloc+0x5a>
    8c32:	2101      	movs	r1, #1
    8c34:	fa01 f506 	lsl.w	r5, r1, r6
    8c38:	1d6a      	adds	r2, r5, #5
    8c3a:	0092      	lsls	r2, r2, #2
    8c3c:	4620      	mov	r0, r4
    8c3e:	f000 fbdb 	bl	93f8 <_calloc_r>
    8c42:	b160      	cbz	r0, 8c5e <_Balloc+0x56>
    8c44:	e9c0 6501 	strd	r6, r5, [r0, #4]
    8c48:	e00e      	b.n	8c68 <_Balloc+0x60>
    8c4a:	2221      	movs	r2, #33	; 0x21
    8c4c:	2104      	movs	r1, #4
    8c4e:	4620      	mov	r0, r4
    8c50:	f000 fbd2 	bl	93f8 <_calloc_r>
    8c54:	6a63      	ldr	r3, [r4, #36]	; 0x24
    8c56:	60e8      	str	r0, [r5, #12]
    8c58:	68db      	ldr	r3, [r3, #12]
    8c5a:	2b00      	cmp	r3, #0
    8c5c:	d1e4      	bne.n	8c28 <_Balloc+0x20>
    8c5e:	2000      	movs	r0, #0
    8c60:	bd70      	pop	{r4, r5, r6, pc}
    8c62:	6802      	ldr	r2, [r0, #0]
    8c64:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
    8c68:	2300      	movs	r3, #0
    8c6a:	e9c0 3303 	strd	r3, r3, [r0, #12]
    8c6e:	e7f7      	b.n	8c60 <_Balloc+0x58>

00008c70 <_Bfree>:
_Bfree():
    8c70:	b570      	push	{r4, r5, r6, lr}
    8c72:	6a44      	ldr	r4, [r0, #36]	; 0x24
    8c74:	4606      	mov	r6, r0
    8c76:	460d      	mov	r5, r1
    8c78:	b93c      	cbnz	r4, 8c8a <_Bfree+0x1a>
    8c7a:	2010      	movs	r0, #16
    8c7c:	f7fc fa32 	bl	50e4 <malloc>
    8c80:	e9c0 4401 	strd	r4, r4, [r0, #4]
    8c84:	6270      	str	r0, [r6, #36]	; 0x24
    8c86:	6004      	str	r4, [r0, #0]
    8c88:	60c4      	str	r4, [r0, #12]
    8c8a:	b13d      	cbz	r5, 8c9c <_Bfree+0x2c>
    8c8c:	6a73      	ldr	r3, [r6, #36]	; 0x24
    8c8e:	686a      	ldr	r2, [r5, #4]
    8c90:	68db      	ldr	r3, [r3, #12]
    8c92:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
    8c96:	6029      	str	r1, [r5, #0]
    8c98:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
    8c9c:	bd70      	pop	{r4, r5, r6, pc}

00008c9e <__multadd>:
__multadd():
    8c9e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    8ca2:	690d      	ldr	r5, [r1, #16]
    8ca4:	461f      	mov	r7, r3
    8ca6:	4606      	mov	r6, r0
    8ca8:	460c      	mov	r4, r1
    8caa:	f101 0c14 	add.w	ip, r1, #20
    8cae:	2300      	movs	r3, #0
    8cb0:	f8dc 0000 	ldr.w	r0, [ip]
    8cb4:	b281      	uxth	r1, r0
    8cb6:	fb02 7101 	mla	r1, r2, r1, r7
    8cba:	0c0f      	lsrs	r7, r1, #16
    8cbc:	0c00      	lsrs	r0, r0, #16
    8cbe:	fb02 7000 	mla	r0, r2, r0, r7
    8cc2:	b289      	uxth	r1, r1
    8cc4:	3301      	adds	r3, #1
    8cc6:	eb01 4100 	add.w	r1, r1, r0, lsl #16
    8cca:	429d      	cmp	r5, r3
    8ccc:	ea4f 4710 	mov.w	r7, r0, lsr #16
    8cd0:	f84c 1b04 	str.w	r1, [ip], #4
    8cd4:	dcec      	bgt.n	8cb0 <__multadd+0x12>
    8cd6:	b1d7      	cbz	r7, 8d0e <__multadd+0x70>
    8cd8:	68a3      	ldr	r3, [r4, #8]
    8cda:	42ab      	cmp	r3, r5
    8cdc:	dc12      	bgt.n	8d04 <__multadd+0x66>
    8cde:	6861      	ldr	r1, [r4, #4]
    8ce0:	4630      	mov	r0, r6
    8ce2:	3101      	adds	r1, #1
    8ce4:	f7ff ff90 	bl	8c08 <_Balloc>
    8ce8:	6922      	ldr	r2, [r4, #16]
    8cea:	3202      	adds	r2, #2
    8cec:	f104 010c 	add.w	r1, r4, #12
    8cf0:	4680      	mov	r8, r0
    8cf2:	0092      	lsls	r2, r2, #2
    8cf4:	300c      	adds	r0, #12
    8cf6:	f7fc fa05 	bl	5104 <memcpy>
    8cfa:	4621      	mov	r1, r4
    8cfc:	4630      	mov	r0, r6
    8cfe:	f7ff ffb7 	bl	8c70 <_Bfree>
    8d02:	4644      	mov	r4, r8
    8d04:	eb04 0385 	add.w	r3, r4, r5, lsl #2
    8d08:	3501      	adds	r5, #1
    8d0a:	615f      	str	r7, [r3, #20]
    8d0c:	6125      	str	r5, [r4, #16]
    8d0e:	4620      	mov	r0, r4
    8d10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00008d14 <__s2b>:
__s2b():
    8d14:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    8d18:	460c      	mov	r4, r1
    8d1a:	4615      	mov	r5, r2
    8d1c:	461f      	mov	r7, r3
    8d1e:	2209      	movs	r2, #9
    8d20:	3308      	adds	r3, #8
    8d22:	4606      	mov	r6, r0
    8d24:	fb93 f3f2 	sdiv	r3, r3, r2
    8d28:	2100      	movs	r1, #0
    8d2a:	2201      	movs	r2, #1
    8d2c:	429a      	cmp	r2, r3
    8d2e:	db20      	blt.n	8d72 <__s2b+0x5e>
    8d30:	4630      	mov	r0, r6
    8d32:	f7ff ff69 	bl	8c08 <_Balloc>
    8d36:	9b08      	ldr	r3, [sp, #32]
    8d38:	6143      	str	r3, [r0, #20]
    8d3a:	2d09      	cmp	r5, #9
    8d3c:	f04f 0301 	mov.w	r3, #1
    8d40:	6103      	str	r3, [r0, #16]
    8d42:	dd19      	ble.n	8d78 <__s2b+0x64>
    8d44:	f104 0909 	add.w	r9, r4, #9
    8d48:	46c8      	mov	r8, r9
    8d4a:	442c      	add	r4, r5
    8d4c:	f818 3b01 	ldrb.w	r3, [r8], #1
    8d50:	4601      	mov	r1, r0
    8d52:	3b30      	subs	r3, #48	; 0x30
    8d54:	220a      	movs	r2, #10
    8d56:	4630      	mov	r0, r6
    8d58:	f7ff ffa1 	bl	8c9e <__multadd>
    8d5c:	45a0      	cmp	r8, r4
    8d5e:	d1f5      	bne.n	8d4c <__s2b+0x38>
    8d60:	f1a5 0408 	sub.w	r4, r5, #8
    8d64:	444c      	add	r4, r9
    8d66:	1b2d      	subs	r5, r5, r4
    8d68:	1963      	adds	r3, r4, r5
    8d6a:	42bb      	cmp	r3, r7
    8d6c:	db07      	blt.n	8d7e <__s2b+0x6a>
    8d6e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    8d72:	0052      	lsls	r2, r2, #1
    8d74:	3101      	adds	r1, #1
    8d76:	e7d9      	b.n	8d2c <__s2b+0x18>
    8d78:	340a      	adds	r4, #10
    8d7a:	2509      	movs	r5, #9
    8d7c:	e7f3      	b.n	8d66 <__s2b+0x52>
    8d7e:	f814 3b01 	ldrb.w	r3, [r4], #1
    8d82:	4601      	mov	r1, r0
    8d84:	3b30      	subs	r3, #48	; 0x30
    8d86:	220a      	movs	r2, #10
    8d88:	4630      	mov	r0, r6
    8d8a:	f7ff ff88 	bl	8c9e <__multadd>
    8d8e:	e7eb      	b.n	8d68 <__s2b+0x54>

00008d90 <__hi0bits>:
__hi0bits():
    8d90:	0c02      	lsrs	r2, r0, #16
    8d92:	0412      	lsls	r2, r2, #16
    8d94:	4603      	mov	r3, r0
    8d96:	b9ca      	cbnz	r2, 8dcc <__hi0bits+0x3c>
    8d98:	0403      	lsls	r3, r0, #16
    8d9a:	2010      	movs	r0, #16
    8d9c:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
    8da0:	bf04      	itt	eq
    8da2:	021b      	lsleq	r3, r3, #8
    8da4:	3008      	addeq	r0, #8
    8da6:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
    8daa:	bf04      	itt	eq
    8dac:	011b      	lsleq	r3, r3, #4
    8dae:	3004      	addeq	r0, #4
    8db0:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
    8db4:	bf04      	itt	eq
    8db6:	009b      	lsleq	r3, r3, #2
    8db8:	3002      	addeq	r0, #2
    8dba:	2b00      	cmp	r3, #0
    8dbc:	db05      	blt.n	8dca <__hi0bits+0x3a>
    8dbe:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
    8dc2:	f100 0001 	add.w	r0, r0, #1
    8dc6:	bf08      	it	eq
    8dc8:	2020      	moveq	r0, #32
    8dca:	4770      	bx	lr
    8dcc:	2000      	movs	r0, #0
    8dce:	e7e5      	b.n	8d9c <__hi0bits+0xc>

00008dd0 <__lo0bits>:
__lo0bits():
    8dd0:	6803      	ldr	r3, [r0, #0]
    8dd2:	f013 0207 	ands.w	r2, r3, #7
    8dd6:	4601      	mov	r1, r0
    8dd8:	d00b      	beq.n	8df2 <__lo0bits+0x22>
    8dda:	07da      	lsls	r2, r3, #31
    8ddc:	d424      	bmi.n	8e28 <__lo0bits+0x58>
    8dde:	0798      	lsls	r0, r3, #30
    8de0:	bf49      	itett	mi
    8de2:	085b      	lsrmi	r3, r3, #1
    8de4:	089b      	lsrpl	r3, r3, #2
    8de6:	2001      	movmi	r0, #1
    8de8:	600b      	strmi	r3, [r1, #0]
    8dea:	bf5c      	itt	pl
    8dec:	600b      	strpl	r3, [r1, #0]
    8dee:	2002      	movpl	r0, #2
    8df0:	4770      	bx	lr
    8df2:	b298      	uxth	r0, r3
    8df4:	b9b0      	cbnz	r0, 8e24 <__lo0bits+0x54>
    8df6:	0c1b      	lsrs	r3, r3, #16
    8df8:	2010      	movs	r0, #16
    8dfa:	f013 0fff 	tst.w	r3, #255	; 0xff
    8dfe:	bf04      	itt	eq
    8e00:	0a1b      	lsreq	r3, r3, #8
    8e02:	3008      	addeq	r0, #8
    8e04:	071a      	lsls	r2, r3, #28
    8e06:	bf04      	itt	eq
    8e08:	091b      	lsreq	r3, r3, #4
    8e0a:	3004      	addeq	r0, #4
    8e0c:	079a      	lsls	r2, r3, #30
    8e0e:	bf04      	itt	eq
    8e10:	089b      	lsreq	r3, r3, #2
    8e12:	3002      	addeq	r0, #2
    8e14:	07da      	lsls	r2, r3, #31
    8e16:	d403      	bmi.n	8e20 <__lo0bits+0x50>
    8e18:	085b      	lsrs	r3, r3, #1
    8e1a:	f100 0001 	add.w	r0, r0, #1
    8e1e:	d005      	beq.n	8e2c <__lo0bits+0x5c>
    8e20:	600b      	str	r3, [r1, #0]
    8e22:	4770      	bx	lr
    8e24:	4610      	mov	r0, r2
    8e26:	e7e8      	b.n	8dfa <__lo0bits+0x2a>
    8e28:	2000      	movs	r0, #0
    8e2a:	4770      	bx	lr
    8e2c:	2020      	movs	r0, #32
    8e2e:	4770      	bx	lr

00008e30 <__i2b>:
__i2b():
    8e30:	b510      	push	{r4, lr}
    8e32:	460c      	mov	r4, r1
    8e34:	2101      	movs	r1, #1
    8e36:	f7ff fee7 	bl	8c08 <_Balloc>
    8e3a:	2201      	movs	r2, #1
    8e3c:	6144      	str	r4, [r0, #20]
    8e3e:	6102      	str	r2, [r0, #16]
    8e40:	bd10      	pop	{r4, pc}

00008e42 <__multiply>:
__multiply():
    8e42:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8e46:	4690      	mov	r8, r2
    8e48:	690a      	ldr	r2, [r1, #16]
    8e4a:	f8d8 3010 	ldr.w	r3, [r8, #16]
    8e4e:	429a      	cmp	r2, r3
    8e50:	bfb8      	it	lt
    8e52:	460b      	movlt	r3, r1
    8e54:	460c      	mov	r4, r1
    8e56:	bfbc      	itt	lt
    8e58:	4644      	movlt	r4, r8
    8e5a:	4698      	movlt	r8, r3
    8e5c:	6927      	ldr	r7, [r4, #16]
    8e5e:	f8d8 9010 	ldr.w	r9, [r8, #16]
    8e62:	68a3      	ldr	r3, [r4, #8]
    8e64:	6861      	ldr	r1, [r4, #4]
    8e66:	eb07 0609 	add.w	r6, r7, r9
    8e6a:	42b3      	cmp	r3, r6
    8e6c:	bfb8      	it	lt
    8e6e:	3101      	addlt	r1, #1
    8e70:	f7ff feca 	bl	8c08 <_Balloc>
    8e74:	f100 0514 	add.w	r5, r0, #20
    8e78:	eb05 0e86 	add.w	lr, r5, r6, lsl #2
    8e7c:	462b      	mov	r3, r5
    8e7e:	2200      	movs	r2, #0
    8e80:	4573      	cmp	r3, lr
    8e82:	d316      	bcc.n	8eb2 <__multiply+0x70>
    8e84:	f104 0314 	add.w	r3, r4, #20
    8e88:	f108 0214 	add.w	r2, r8, #20
    8e8c:	eb03 0787 	add.w	r7, r3, r7, lsl #2
    8e90:	eb02 0389 	add.w	r3, r2, r9, lsl #2
    8e94:	9300      	str	r3, [sp, #0]
    8e96:	9b00      	ldr	r3, [sp, #0]
    8e98:	9201      	str	r2, [sp, #4]
    8e9a:	4293      	cmp	r3, r2
    8e9c:	d80c      	bhi.n	8eb8 <__multiply+0x76>
    8e9e:	2e00      	cmp	r6, #0
    8ea0:	dd03      	ble.n	8eaa <__multiply+0x68>
    8ea2:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
    8ea6:	2b00      	cmp	r3, #0
    8ea8:	d059      	beq.n	8f5e <__multiply+0x11c>
    8eaa:	6106      	str	r6, [r0, #16]
    8eac:	b003      	add	sp, #12
    8eae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8eb2:	f843 2b04 	str.w	r2, [r3], #4
    8eb6:	e7e3      	b.n	8e80 <__multiply+0x3e>
    8eb8:	f8b2 a000 	ldrh.w	sl, [r2]
    8ebc:	f1ba 0f00 	cmp.w	sl, #0
    8ec0:	d023      	beq.n	8f0a <__multiply+0xc8>
    8ec2:	f104 0914 	add.w	r9, r4, #20
    8ec6:	46ac      	mov	ip, r5
    8ec8:	f04f 0800 	mov.w	r8, #0
    8ecc:	f859 1b04 	ldr.w	r1, [r9], #4
    8ed0:	f8dc b000 	ldr.w	fp, [ip]
    8ed4:	b28b      	uxth	r3, r1
    8ed6:	fa1f fb8b 	uxth.w	fp, fp
    8eda:	fb0a b303 	mla	r3, sl, r3, fp
    8ede:	ea4f 4b11 	mov.w	fp, r1, lsr #16
    8ee2:	f8dc 1000 	ldr.w	r1, [ip]
    8ee6:	4443      	add	r3, r8
    8ee8:	ea4f 4811 	mov.w	r8, r1, lsr #16
    8eec:	fb0a 810b 	mla	r1, sl, fp, r8
    8ef0:	eb01 4113 	add.w	r1, r1, r3, lsr #16
    8ef4:	b29b      	uxth	r3, r3
    8ef6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
    8efa:	454f      	cmp	r7, r9
    8efc:	ea4f 4811 	mov.w	r8, r1, lsr #16
    8f00:	f84c 3b04 	str.w	r3, [ip], #4
    8f04:	d8e2      	bhi.n	8ecc <__multiply+0x8a>
    8f06:	f8cc 8000 	str.w	r8, [ip]
    8f0a:	9b01      	ldr	r3, [sp, #4]
    8f0c:	f8b3 9002 	ldrh.w	r9, [r3, #2]
    8f10:	3204      	adds	r2, #4
    8f12:	f1b9 0f00 	cmp.w	r9, #0
    8f16:	d020      	beq.n	8f5a <__multiply+0x118>
    8f18:	682b      	ldr	r3, [r5, #0]
    8f1a:	f104 0814 	add.w	r8, r4, #20
    8f1e:	46ac      	mov	ip, r5
    8f20:	f04f 0a00 	mov.w	sl, #0
    8f24:	f8b8 1000 	ldrh.w	r1, [r8]
    8f28:	f8bc b002 	ldrh.w	fp, [ip, #2]
    8f2c:	fb09 b101 	mla	r1, r9, r1, fp
    8f30:	448a      	add	sl, r1
    8f32:	b29b      	uxth	r3, r3
    8f34:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
    8f38:	f84c 3b04 	str.w	r3, [ip], #4
    8f3c:	f858 3b04 	ldr.w	r3, [r8], #4
    8f40:	f8bc 1000 	ldrh.w	r1, [ip]
    8f44:	0c1b      	lsrs	r3, r3, #16
    8f46:	fb09 1303 	mla	r3, r9, r3, r1
    8f4a:	eb03 431a 	add.w	r3, r3, sl, lsr #16
    8f4e:	4547      	cmp	r7, r8
    8f50:	ea4f 4a13 	mov.w	sl, r3, lsr #16
    8f54:	d8e6      	bhi.n	8f24 <__multiply+0xe2>
    8f56:	f8cc 3000 	str.w	r3, [ip]
    8f5a:	3504      	adds	r5, #4
    8f5c:	e79b      	b.n	8e96 <__multiply+0x54>
    8f5e:	3e01      	subs	r6, #1
    8f60:	e79d      	b.n	8e9e <__multiply+0x5c>
    8f62:	Address 0x0000000000008f62 is out of bounds.


00008f64 <__pow5mult>:
__pow5mult():
    8f64:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    8f68:	4615      	mov	r5, r2
    8f6a:	f012 0203 	ands.w	r2, r2, #3
    8f6e:	4606      	mov	r6, r0
    8f70:	460f      	mov	r7, r1
    8f72:	d007      	beq.n	8f84 <__pow5mult+0x20>
    8f74:	3a01      	subs	r2, #1
    8f76:	4c21      	ldr	r4, [pc, #132]	; (8ffc <__pow5mult+0x98>)
    8f78:	2300      	movs	r3, #0
    8f7a:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
    8f7e:	f7ff fe8e 	bl	8c9e <__multadd>
    8f82:	4607      	mov	r7, r0
    8f84:	10ad      	asrs	r5, r5, #2
    8f86:	d035      	beq.n	8ff4 <__pow5mult+0x90>
    8f88:	6a74      	ldr	r4, [r6, #36]	; 0x24
    8f8a:	b93c      	cbnz	r4, 8f9c <__pow5mult+0x38>
    8f8c:	2010      	movs	r0, #16
    8f8e:	f7fc f8a9 	bl	50e4 <malloc>
    8f92:	e9c0 4401 	strd	r4, r4, [r0, #4]
    8f96:	6270      	str	r0, [r6, #36]	; 0x24
    8f98:	6004      	str	r4, [r0, #0]
    8f9a:	60c4      	str	r4, [r0, #12]
    8f9c:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
    8fa0:	f8d8 4008 	ldr.w	r4, [r8, #8]
    8fa4:	b94c      	cbnz	r4, 8fba <__pow5mult+0x56>
    8fa6:	f240 2171 	movw	r1, #625	; 0x271
    8faa:	4630      	mov	r0, r6
    8fac:	f7ff ff40 	bl	8e30 <__i2b>
    8fb0:	2300      	movs	r3, #0
    8fb2:	f8c8 0008 	str.w	r0, [r8, #8]
    8fb6:	4604      	mov	r4, r0
    8fb8:	6003      	str	r3, [r0, #0]
    8fba:	f04f 0800 	mov.w	r8, #0
    8fbe:	07eb      	lsls	r3, r5, #31
    8fc0:	d50a      	bpl.n	8fd8 <__pow5mult+0x74>
    8fc2:	4639      	mov	r1, r7
    8fc4:	4622      	mov	r2, r4
    8fc6:	4630      	mov	r0, r6
    8fc8:	f7ff ff3b 	bl	8e42 <__multiply>
    8fcc:	4639      	mov	r1, r7
    8fce:	4681      	mov	r9, r0
    8fd0:	4630      	mov	r0, r6
    8fd2:	f7ff fe4d 	bl	8c70 <_Bfree>
    8fd6:	464f      	mov	r7, r9
    8fd8:	106d      	asrs	r5, r5, #1
    8fda:	d00b      	beq.n	8ff4 <__pow5mult+0x90>
    8fdc:	6820      	ldr	r0, [r4, #0]
    8fde:	b938      	cbnz	r0, 8ff0 <__pow5mult+0x8c>
    8fe0:	4622      	mov	r2, r4
    8fe2:	4621      	mov	r1, r4
    8fe4:	4630      	mov	r0, r6
    8fe6:	f7ff ff2c 	bl	8e42 <__multiply>
    8fea:	6020      	str	r0, [r4, #0]
    8fec:	f8c0 8000 	str.w	r8, [r0]
    8ff0:	4604      	mov	r4, r0
    8ff2:	e7e4      	b.n	8fbe <__pow5mult+0x5a>
    8ff4:	4638      	mov	r0, r7
    8ff6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    8ffa:	bf00      	nop
    8ffc:	0000b8e8 	.word	0x0000b8e8

00009000 <__lshift>:
__lshift():
    9000:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    9004:	460c      	mov	r4, r1
    9006:	ea4f 1a62 	mov.w	sl, r2, asr #5
    900a:	6923      	ldr	r3, [r4, #16]
    900c:	6849      	ldr	r1, [r1, #4]
    900e:	eb0a 0903 	add.w	r9, sl, r3
    9012:	68a3      	ldr	r3, [r4, #8]
    9014:	4607      	mov	r7, r0
    9016:	4616      	mov	r6, r2
    9018:	f109 0501 	add.w	r5, r9, #1
    901c:	42ab      	cmp	r3, r5
    901e:	db33      	blt.n	9088 <__lshift+0x88>
    9020:	4638      	mov	r0, r7
    9022:	f7ff fdf1 	bl	8c08 <_Balloc>
    9026:	2300      	movs	r3, #0
    9028:	4680      	mov	r8, r0
    902a:	f100 0114 	add.w	r1, r0, #20
    902e:	f100 0210 	add.w	r2, r0, #16
    9032:	4618      	mov	r0, r3
    9034:	4553      	cmp	r3, sl
    9036:	db2a      	blt.n	908e <__lshift+0x8e>
    9038:	6920      	ldr	r0, [r4, #16]
    903a:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
    903e:	f104 0314 	add.w	r3, r4, #20
    9042:	f016 021f 	ands.w	r2, r6, #31
    9046:	eb01 018a 	add.w	r1, r1, sl, lsl #2
    904a:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
    904e:	d022      	beq.n	9096 <__lshift+0x96>
    9050:	f1c2 0e20 	rsb	lr, r2, #32
    9054:	2000      	movs	r0, #0
    9056:	681e      	ldr	r6, [r3, #0]
    9058:	4096      	lsls	r6, r2
    905a:	4330      	orrs	r0, r6
    905c:	f841 0b04 	str.w	r0, [r1], #4
    9060:	f853 0b04 	ldr.w	r0, [r3], #4
    9064:	459c      	cmp	ip, r3
    9066:	fa20 f00e 	lsr.w	r0, r0, lr
    906a:	d8f4      	bhi.n	9056 <__lshift+0x56>
    906c:	6008      	str	r0, [r1, #0]
    906e:	b108      	cbz	r0, 9074 <__lshift+0x74>
    9070:	f109 0502 	add.w	r5, r9, #2
    9074:	3d01      	subs	r5, #1
    9076:	4638      	mov	r0, r7
    9078:	f8c8 5010 	str.w	r5, [r8, #16]
    907c:	4621      	mov	r1, r4
    907e:	f7ff fdf7 	bl	8c70 <_Bfree>
    9082:	4640      	mov	r0, r8
    9084:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    9088:	3101      	adds	r1, #1
    908a:	005b      	lsls	r3, r3, #1
    908c:	e7c6      	b.n	901c <__lshift+0x1c>
    908e:	f842 0f04 	str.w	r0, [r2, #4]!
    9092:	3301      	adds	r3, #1
    9094:	e7ce      	b.n	9034 <__lshift+0x34>
    9096:	3904      	subs	r1, #4
    9098:	f853 2b04 	ldr.w	r2, [r3], #4
    909c:	f841 2f04 	str.w	r2, [r1, #4]!
    90a0:	459c      	cmp	ip, r3
    90a2:	d8f9      	bhi.n	9098 <__lshift+0x98>
    90a4:	e7e6      	b.n	9074 <__lshift+0x74>

000090a6 <__mcmp>:
__mcmp():
    90a6:	6903      	ldr	r3, [r0, #16]
    90a8:	690a      	ldr	r2, [r1, #16]
    90aa:	1a9b      	subs	r3, r3, r2
    90ac:	b530      	push	{r4, r5, lr}
    90ae:	d10c      	bne.n	90ca <__mcmp+0x24>
    90b0:	0092      	lsls	r2, r2, #2
    90b2:	3014      	adds	r0, #20
    90b4:	3114      	adds	r1, #20
    90b6:	1884      	adds	r4, r0, r2
    90b8:	4411      	add	r1, r2
    90ba:	f854 5d04 	ldr.w	r5, [r4, #-4]!
    90be:	f851 2d04 	ldr.w	r2, [r1, #-4]!
    90c2:	4295      	cmp	r5, r2
    90c4:	d003      	beq.n	90ce <__mcmp+0x28>
    90c6:	d305      	bcc.n	90d4 <__mcmp+0x2e>
    90c8:	2301      	movs	r3, #1
    90ca:	4618      	mov	r0, r3
    90cc:	bd30      	pop	{r4, r5, pc}
    90ce:	42a0      	cmp	r0, r4
    90d0:	d3f3      	bcc.n	90ba <__mcmp+0x14>
    90d2:	e7fa      	b.n	90ca <__mcmp+0x24>
    90d4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    90d8:	e7f7      	b.n	90ca <__mcmp+0x24>

000090da <__mdiff>:
__mdiff():
    90da:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    90de:	460d      	mov	r5, r1
    90e0:	4607      	mov	r7, r0
    90e2:	4611      	mov	r1, r2
    90e4:	4628      	mov	r0, r5
    90e6:	4614      	mov	r4, r2
    90e8:	f7ff ffdd 	bl	90a6 <__mcmp>
    90ec:	1e06      	subs	r6, r0, #0
    90ee:	d108      	bne.n	9102 <__mdiff+0x28>
    90f0:	4631      	mov	r1, r6
    90f2:	4638      	mov	r0, r7
    90f4:	f7ff fd88 	bl	8c08 <_Balloc>
    90f8:	2301      	movs	r3, #1
    90fa:	e9c0 3604 	strd	r3, r6, [r0, #16]
    90fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    9102:	bfa4      	itt	ge
    9104:	4623      	movge	r3, r4
    9106:	462c      	movge	r4, r5
    9108:	4638      	mov	r0, r7
    910a:	6861      	ldr	r1, [r4, #4]
    910c:	bfa6      	itte	ge
    910e:	461d      	movge	r5, r3
    9110:	2600      	movge	r6, #0
    9112:	2601      	movlt	r6, #1
    9114:	f7ff fd78 	bl	8c08 <_Balloc>
    9118:	692b      	ldr	r3, [r5, #16]
    911a:	60c6      	str	r6, [r0, #12]
    911c:	6926      	ldr	r6, [r4, #16]
    911e:	f105 0914 	add.w	r9, r5, #20
    9122:	f104 0214 	add.w	r2, r4, #20
    9126:	eb02 0786 	add.w	r7, r2, r6, lsl #2
    912a:	eb09 0883 	add.w	r8, r9, r3, lsl #2
    912e:	f100 0514 	add.w	r5, r0, #20
    9132:	f04f 0e00 	mov.w	lr, #0
    9136:	f852 ab04 	ldr.w	sl, [r2], #4
    913a:	f859 4b04 	ldr.w	r4, [r9], #4
    913e:	fa1e f18a 	uxtah	r1, lr, sl
    9142:	b2a3      	uxth	r3, r4
    9144:	1ac9      	subs	r1, r1, r3
    9146:	0c23      	lsrs	r3, r4, #16
    9148:	ebc3 431a 	rsb	r3, r3, sl, lsr #16
    914c:	eb03 4321 	add.w	r3, r3, r1, asr #16
    9150:	b289      	uxth	r1, r1
    9152:	ea4f 4e23 	mov.w	lr, r3, asr #16
    9156:	45c8      	cmp	r8, r9
    9158:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
    915c:	4694      	mov	ip, r2
    915e:	f845 3b04 	str.w	r3, [r5], #4
    9162:	d8e8      	bhi.n	9136 <__mdiff+0x5c>
    9164:	45bc      	cmp	ip, r7
    9166:	d304      	bcc.n	9172 <__mdiff+0x98>
    9168:	f855 3d04 	ldr.w	r3, [r5, #-4]!
    916c:	b183      	cbz	r3, 9190 <__mdiff+0xb6>
    916e:	6106      	str	r6, [r0, #16]
    9170:	e7c5      	b.n	90fe <__mdiff+0x24>
    9172:	f85c 1b04 	ldr.w	r1, [ip], #4
    9176:	fa1e f381 	uxtah	r3, lr, r1
    917a:	141a      	asrs	r2, r3, #16
    917c:	eb02 4211 	add.w	r2, r2, r1, lsr #16
    9180:	b29b      	uxth	r3, r3
    9182:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
    9186:	ea4f 4e22 	mov.w	lr, r2, asr #16
    918a:	f845 3b04 	str.w	r3, [r5], #4
    918e:	e7e9      	b.n	9164 <__mdiff+0x8a>
    9190:	3e01      	subs	r6, #1
    9192:	e7e9      	b.n	9168 <__mdiff+0x8e>

00009194 <__ulp>:
__ulp():
    9194:	4b11      	ldr	r3, [pc, #68]	; (91dc <__ulp+0x48>)
    9196:	ee10 2a90 	vmov	r2, s1
    919a:	401a      	ands	r2, r3
    919c:	f1a2 7350 	sub.w	r3, r2, #54525952	; 0x3400000
    91a0:	2b00      	cmp	r3, #0
    91a2:	dd04      	ble.n	91ae <__ulp+0x1a>
    91a4:	2000      	movs	r0, #0
    91a6:	4619      	mov	r1, r3
    91a8:	ec41 0b10 	vmov	d0, r0, r1
    91ac:	4770      	bx	lr
    91ae:	425b      	negs	r3, r3
    91b0:	151b      	asrs	r3, r3, #20
    91b2:	2b13      	cmp	r3, #19
    91b4:	f04f 0000 	mov.w	r0, #0
    91b8:	f04f 0100 	mov.w	r1, #0
    91bc:	dc04      	bgt.n	91c8 <__ulp+0x34>
    91be:	f44f 2200 	mov.w	r2, #524288	; 0x80000
    91c2:	fa42 f103 	asr.w	r1, r2, r3
    91c6:	e7ef      	b.n	91a8 <__ulp+0x14>
    91c8:	3b14      	subs	r3, #20
    91ca:	2b1e      	cmp	r3, #30
    91cc:	bfda      	itte	le
    91ce:	f04f 4200 	movle.w	r2, #2147483648	; 0x80000000
    91d2:	fa22 f303 	lsrle.w	r3, r2, r3
    91d6:	2301      	movgt	r3, #1
    91d8:	4618      	mov	r0, r3
    91da:	e7e5      	b.n	91a8 <__ulp+0x14>
    91dc:	7ff00000 	.word	0x7ff00000

000091e0 <__b2d>:
__b2d():
    91e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    91e2:	6905      	ldr	r5, [r0, #16]
    91e4:	f100 0714 	add.w	r7, r0, #20
    91e8:	eb07 0585 	add.w	r5, r7, r5, lsl #2
    91ec:	1f2e      	subs	r6, r5, #4
    91ee:	f855 4c04 	ldr.w	r4, [r5, #-4]
    91f2:	4620      	mov	r0, r4
    91f4:	f7ff fdcc 	bl	8d90 <__hi0bits>
    91f8:	f1c0 0320 	rsb	r3, r0, #32
    91fc:	280a      	cmp	r0, #10
    91fe:	600b      	str	r3, [r1, #0]
    9200:	f8df c078 	ldr.w	ip, [pc, #120]	; 927c <__b2d+0x9c>
    9204:	dc14      	bgt.n	9230 <__b2d+0x50>
    9206:	f1c0 0e0b 	rsb	lr, r0, #11
    920a:	fa24 f10e 	lsr.w	r1, r4, lr
    920e:	42b7      	cmp	r7, r6
    9210:	ea41 030c 	orr.w	r3, r1, ip
    9214:	bf34      	ite	cc
    9216:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
    921a:	2100      	movcs	r1, #0
    921c:	3015      	adds	r0, #21
    921e:	fa04 f000 	lsl.w	r0, r4, r0
    9222:	fa21 f10e 	lsr.w	r1, r1, lr
    9226:	ea40 0201 	orr.w	r2, r0, r1
    922a:	ec43 2b10 	vmov	d0, r2, r3
    922e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    9230:	42b7      	cmp	r7, r6
    9232:	bf3a      	itte	cc
    9234:	f1a5 0608 	subcc.w	r6, r5, #8
    9238:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
    923c:	2100      	movcs	r1, #0
    923e:	380b      	subs	r0, #11
    9240:	d017      	beq.n	9272 <__b2d+0x92>
    9242:	f1c0 0c20 	rsb	ip, r0, #32
    9246:	fa04 f500 	lsl.w	r5, r4, r0
    924a:	42be      	cmp	r6, r7
    924c:	fa21 f40c 	lsr.w	r4, r1, ip
    9250:	ea45 0504 	orr.w	r5, r5, r4
    9254:	bf8c      	ite	hi
    9256:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
    925a:	2400      	movls	r4, #0
    925c:	f045 537f 	orr.w	r3, r5, #1069547520	; 0x3fc00000
    9260:	fa01 f000 	lsl.w	r0, r1, r0
    9264:	fa24 f40c 	lsr.w	r4, r4, ip
    9268:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
    926c:	ea40 0204 	orr.w	r2, r0, r4
    9270:	e7db      	b.n	922a <__b2d+0x4a>
    9272:	ea44 030c 	orr.w	r3, r4, ip
    9276:	460a      	mov	r2, r1
    9278:	e7d7      	b.n	922a <__b2d+0x4a>
    927a:	bf00      	nop
    927c:	3ff00000 	.word	0x3ff00000

00009280 <__d2b>:
__d2b():
    9280:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    9284:	460e      	mov	r6, r1
    9286:	2101      	movs	r1, #1
    9288:	ec59 8b10 	vmov	r8, r9, d0
    928c:	4615      	mov	r5, r2
    928e:	f7ff fcbb 	bl	8c08 <_Balloc>
    9292:	f3c9 540a 	ubfx	r4, r9, #20, #11
    9296:	4607      	mov	r7, r0
    9298:	f3c9 0313 	ubfx	r3, r9, #0, #20
    929c:	bb2c      	cbnz	r4, 92ea <__d2b+0x6a>
    929e:	9301      	str	r3, [sp, #4]
    92a0:	f1b8 0300 	subs.w	r3, r8, #0
    92a4:	d026      	beq.n	92f4 <__d2b+0x74>
    92a6:	4668      	mov	r0, sp
    92a8:	9300      	str	r3, [sp, #0]
    92aa:	f7ff fd91 	bl	8dd0 <__lo0bits>
    92ae:	9900      	ldr	r1, [sp, #0]
    92b0:	b1f0      	cbz	r0, 92f0 <__d2b+0x70>
    92b2:	9a01      	ldr	r2, [sp, #4]
    92b4:	f1c0 0320 	rsb	r3, r0, #32
    92b8:	fa02 f303 	lsl.w	r3, r2, r3
    92bc:	430b      	orrs	r3, r1
    92be:	40c2      	lsrs	r2, r0
    92c0:	617b      	str	r3, [r7, #20]
    92c2:	9201      	str	r2, [sp, #4]
    92c4:	9b01      	ldr	r3, [sp, #4]
    92c6:	61bb      	str	r3, [r7, #24]
    92c8:	2b00      	cmp	r3, #0
    92ca:	bf14      	ite	ne
    92cc:	2102      	movne	r1, #2
    92ce:	2101      	moveq	r1, #1
    92d0:	6139      	str	r1, [r7, #16]
    92d2:	b1c4      	cbz	r4, 9306 <__d2b+0x86>
    92d4:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
    92d8:	4404      	add	r4, r0
    92da:	6034      	str	r4, [r6, #0]
    92dc:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
    92e0:	6028      	str	r0, [r5, #0]
    92e2:	4638      	mov	r0, r7
    92e4:	b003      	add	sp, #12
    92e6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    92ea:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
    92ee:	e7d6      	b.n	929e <__d2b+0x1e>
    92f0:	6179      	str	r1, [r7, #20]
    92f2:	e7e7      	b.n	92c4 <__d2b+0x44>
    92f4:	a801      	add	r0, sp, #4
    92f6:	f7ff fd6b 	bl	8dd0 <__lo0bits>
    92fa:	9b01      	ldr	r3, [sp, #4]
    92fc:	617b      	str	r3, [r7, #20]
    92fe:	2101      	movs	r1, #1
    9300:	6139      	str	r1, [r7, #16]
    9302:	3020      	adds	r0, #32
    9304:	e7e5      	b.n	92d2 <__d2b+0x52>
    9306:	eb07 0381 	add.w	r3, r7, r1, lsl #2
    930a:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
    930e:	6030      	str	r0, [r6, #0]
    9310:	6918      	ldr	r0, [r3, #16]
    9312:	f7ff fd3d 	bl	8d90 <__hi0bits>
    9316:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
    931a:	e7e1      	b.n	92e0 <__d2b+0x60>

0000931c <__ratio>:
__ratio():
    931c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9320:	4688      	mov	r8, r1
    9322:	4669      	mov	r1, sp
    9324:	4681      	mov	r9, r0
    9326:	f7ff ff5b 	bl	91e0 <__b2d>
    932a:	a901      	add	r1, sp, #4
    932c:	4640      	mov	r0, r8
    932e:	ec57 6b10 	vmov	r6, r7, d0
    9332:	f7ff ff55 	bl	91e0 <__b2d>
    9336:	f8d9 3010 	ldr.w	r3, [r9, #16]
    933a:	f8d8 2010 	ldr.w	r2, [r8, #16]
    933e:	eba3 0c02 	sub.w	ip, r3, r2
    9342:	e9dd 3200 	ldrd	r3, r2, [sp]
    9346:	1a9b      	subs	r3, r3, r2
    9348:	eb03 134c 	add.w	r3, r3, ip, lsl #5
    934c:	ec5b ab10 	vmov	sl, fp, d0
    9350:	2b00      	cmp	r3, #0
    9352:	bfce      	itee	gt
    9354:	463a      	movgt	r2, r7
    9356:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
    935a:	465a      	movle	r2, fp
    935c:	4659      	mov	r1, fp
    935e:	463d      	mov	r5, r7
    9360:	bfd4      	ite	le
    9362:	eb02 5103 	addle.w	r1, r2, r3, lsl #20
    9366:	eb02 5503 	addgt.w	r5, r2, r3, lsl #20
    936a:	4630      	mov	r0, r6
    936c:	ee10 2a10 	vmov	r2, s0
    9370:	460b      	mov	r3, r1
    9372:	4629      	mov	r1, r5
    9374:	f000 fd76 	bl	9e64 <__aeabi_ddiv>
    9378:	ec41 0b10 	vmov	d0, r0, r1
    937c:	b003      	add	sp, #12
    937e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00009382 <__copybits>:
__copybits():
    9382:	3901      	subs	r1, #1
    9384:	b510      	push	{r4, lr}
    9386:	1149      	asrs	r1, r1, #5
    9388:	6914      	ldr	r4, [r2, #16]
    938a:	3101      	adds	r1, #1
    938c:	f102 0314 	add.w	r3, r2, #20
    9390:	eb00 0181 	add.w	r1, r0, r1, lsl #2
    9394:	eb03 0484 	add.w	r4, r3, r4, lsl #2
    9398:	42a3      	cmp	r3, r4
    939a:	4602      	mov	r2, r0
    939c:	d303      	bcc.n	93a6 <__copybits+0x24>
    939e:	2300      	movs	r3, #0
    93a0:	428a      	cmp	r2, r1
    93a2:	d305      	bcc.n	93b0 <__copybits+0x2e>
    93a4:	bd10      	pop	{r4, pc}
    93a6:	f853 2b04 	ldr.w	r2, [r3], #4
    93aa:	f840 2b04 	str.w	r2, [r0], #4
    93ae:	e7f3      	b.n	9398 <__copybits+0x16>
    93b0:	f842 3b04 	str.w	r3, [r2], #4
    93b4:	e7f4      	b.n	93a0 <__copybits+0x1e>

000093b6 <__any_on>:
__any_on():
    93b6:	f100 0214 	add.w	r2, r0, #20
    93ba:	6900      	ldr	r0, [r0, #16]
    93bc:	114b      	asrs	r3, r1, #5
    93be:	4298      	cmp	r0, r3
    93c0:	b510      	push	{r4, lr}
    93c2:	db11      	blt.n	93e8 <__any_on+0x32>
    93c4:	dd0a      	ble.n	93dc <__any_on+0x26>
    93c6:	f011 011f 	ands.w	r1, r1, #31
    93ca:	d007      	beq.n	93dc <__any_on+0x26>
    93cc:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
    93d0:	fa24 f001 	lsr.w	r0, r4, r1
    93d4:	fa00 f101 	lsl.w	r1, r0, r1
    93d8:	428c      	cmp	r4, r1
    93da:	d10b      	bne.n	93f4 <__any_on+0x3e>
    93dc:	eb02 0383 	add.w	r3, r2, r3, lsl #2
    93e0:	4293      	cmp	r3, r2
    93e2:	d803      	bhi.n	93ec <__any_on+0x36>
    93e4:	2000      	movs	r0, #0
    93e6:	bd10      	pop	{r4, pc}
    93e8:	4603      	mov	r3, r0
    93ea:	e7f7      	b.n	93dc <__any_on+0x26>
    93ec:	f853 1d04 	ldr.w	r1, [r3, #-4]!
    93f0:	2900      	cmp	r1, #0
    93f2:	d0f5      	beq.n	93e0 <__any_on+0x2a>
    93f4:	2001      	movs	r0, #1
    93f6:	e7f6      	b.n	93e6 <__any_on+0x30>

000093f8 <_calloc_r>:
_calloc_r():
    93f8:	b538      	push	{r3, r4, r5, lr}
    93fa:	fb02 f401 	mul.w	r4, r2, r1
    93fe:	4621      	mov	r1, r4
    9400:	f7fb fefe 	bl	5200 <_malloc_r>
    9404:	4605      	mov	r5, r0
    9406:	b118      	cbz	r0, 9410 <_calloc_r+0x18>
    9408:	4622      	mov	r2, r4
    940a:	2100      	movs	r1, #0
    940c:	f7fb fea2 	bl	5154 <memset>
    9410:	4628      	mov	r0, r5
    9412:	bd38      	pop	{r3, r4, r5, pc}

00009414 <_realloc_r>:
_realloc_r():
    9414:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    9416:	4607      	mov	r7, r0
    9418:	4614      	mov	r4, r2
    941a:	460e      	mov	r6, r1
    941c:	b921      	cbnz	r1, 9428 <_realloc_r+0x14>
    941e:	4611      	mov	r1, r2
    9420:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    9424:	f7fb beec 	b.w	5200 <_malloc_r>
    9428:	b922      	cbnz	r2, 9434 <_realloc_r+0x20>
    942a:	f7fb fe9b 	bl	5164 <_free_r>
    942e:	4625      	mov	r5, r4
    9430:	4628      	mov	r0, r5
    9432:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    9434:	f000 fa16 	bl	9864 <_malloc_usable_size_r>
    9438:	42a0      	cmp	r0, r4
    943a:	d20f      	bcs.n	945c <_realloc_r+0x48>
    943c:	4621      	mov	r1, r4
    943e:	4638      	mov	r0, r7
    9440:	f7fb fede 	bl	5200 <_malloc_r>
    9444:	4605      	mov	r5, r0
    9446:	2800      	cmp	r0, #0
    9448:	d0f2      	beq.n	9430 <_realloc_r+0x1c>
    944a:	4631      	mov	r1, r6
    944c:	4622      	mov	r2, r4
    944e:	f7fb fe59 	bl	5104 <memcpy>
    9452:	4631      	mov	r1, r6
    9454:	4638      	mov	r0, r7
    9456:	f7fb fe85 	bl	5164 <_free_r>
    945a:	e7e9      	b.n	9430 <_realloc_r+0x1c>
    945c:	4635      	mov	r5, r6
    945e:	e7e7      	b.n	9430 <_realloc_r+0x1c>

00009460 <__ssputs_r>:
__ssputs_r():
    9460:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    9464:	688e      	ldr	r6, [r1, #8]
    9466:	429e      	cmp	r6, r3
    9468:	4682      	mov	sl, r0
    946a:	460c      	mov	r4, r1
    946c:	4691      	mov	r9, r2
    946e:	4698      	mov	r8, r3
    9470:	d838      	bhi.n	94e4 <__ssputs_r+0x84>
    9472:	f8b1 c00c 	ldrh.w	ip, [r1, #12]
    9476:	f41c 6f90 	tst.w	ip, #1152	; 0x480
    947a:	d031      	beq.n	94e0 <__ssputs_r+0x80>
    947c:	6962      	ldr	r2, [r4, #20]
    947e:	6825      	ldr	r5, [r4, #0]
    9480:	6909      	ldr	r1, [r1, #16]
    9482:	eb02 0242 	add.w	r2, r2, r2, lsl #1
    9486:	1a6f      	subs	r7, r5, r1
    9488:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
    948c:	3301      	adds	r3, #1
    948e:	1055      	asrs	r5, r2, #1
    9490:	443b      	add	r3, r7
    9492:	429d      	cmp	r5, r3
    9494:	bf38      	it	cc
    9496:	461d      	movcc	r5, r3
    9498:	f41c 6f80 	tst.w	ip, #1024	; 0x400
    949c:	d030      	beq.n	9500 <__ssputs_r+0xa0>
    949e:	4629      	mov	r1, r5
    94a0:	f7fb feae 	bl	5200 <_malloc_r>
    94a4:	4606      	mov	r6, r0
    94a6:	b950      	cbnz	r0, 94be <__ssputs_r+0x5e>
    94a8:	230c      	movs	r3, #12
    94aa:	f8ca 3000 	str.w	r3, [sl]
    94ae:	89a3      	ldrh	r3, [r4, #12]
    94b0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    94b4:	81a3      	strh	r3, [r4, #12]
    94b6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    94ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    94be:	463a      	mov	r2, r7
    94c0:	6921      	ldr	r1, [r4, #16]
    94c2:	f7fb fe1f 	bl	5104 <memcpy>
    94c6:	89a3      	ldrh	r3, [r4, #12]
    94c8:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
    94cc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    94d0:	81a3      	strh	r3, [r4, #12]
    94d2:	6126      	str	r6, [r4, #16]
    94d4:	6165      	str	r5, [r4, #20]
    94d6:	443e      	add	r6, r7
    94d8:	1bed      	subs	r5, r5, r7
    94da:	6026      	str	r6, [r4, #0]
    94dc:	60a5      	str	r5, [r4, #8]
    94de:	4646      	mov	r6, r8
    94e0:	4546      	cmp	r6, r8
    94e2:	d900      	bls.n	94e6 <__ssputs_r+0x86>
    94e4:	4646      	mov	r6, r8
    94e6:	4632      	mov	r2, r6
    94e8:	4649      	mov	r1, r9
    94ea:	6820      	ldr	r0, [r4, #0]
    94ec:	f7fb fe18 	bl	5120 <memmove>
    94f0:	68a3      	ldr	r3, [r4, #8]
    94f2:	1b9b      	subs	r3, r3, r6
    94f4:	60a3      	str	r3, [r4, #8]
    94f6:	6823      	ldr	r3, [r4, #0]
    94f8:	441e      	add	r6, r3
    94fa:	6026      	str	r6, [r4, #0]
    94fc:	2000      	movs	r0, #0
    94fe:	e7dc      	b.n	94ba <__ssputs_r+0x5a>
    9500:	462a      	mov	r2, r5
    9502:	f7ff ff87 	bl	9414 <_realloc_r>
    9506:	4606      	mov	r6, r0
    9508:	2800      	cmp	r0, #0
    950a:	d1e2      	bne.n	94d2 <__ssputs_r+0x72>
    950c:	6921      	ldr	r1, [r4, #16]
    950e:	4650      	mov	r0, sl
    9510:	f7fb fe28 	bl	5164 <_free_r>
    9514:	e7c8      	b.n	94a8 <__ssputs_r+0x48>
    9516:	Address 0x0000000000009516 is out of bounds.


00009518 <_svfiprintf_r>:
_svfiprintf_r():
    9518:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    951c:	461e      	mov	r6, r3
    951e:	898b      	ldrh	r3, [r1, #12]
    9520:	061b      	lsls	r3, r3, #24
    9522:	b09d      	sub	sp, #116	; 0x74
    9524:	4607      	mov	r7, r0
    9526:	460d      	mov	r5, r1
    9528:	4614      	mov	r4, r2
    952a:	d50e      	bpl.n	954a <_svfiprintf_r+0x32>
    952c:	690b      	ldr	r3, [r1, #16]
    952e:	b963      	cbnz	r3, 954a <_svfiprintf_r+0x32>
    9530:	2140      	movs	r1, #64	; 0x40
    9532:	f7fb fe65 	bl	5200 <_malloc_r>
    9536:	6028      	str	r0, [r5, #0]
    9538:	6128      	str	r0, [r5, #16]
    953a:	b920      	cbnz	r0, 9546 <_svfiprintf_r+0x2e>
    953c:	230c      	movs	r3, #12
    953e:	603b      	str	r3, [r7, #0]
    9540:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    9544:	e0c9      	b.n	96da <_svfiprintf_r+0x1c2>
    9546:	2340      	movs	r3, #64	; 0x40
    9548:	616b      	str	r3, [r5, #20]
    954a:	2300      	movs	r3, #0
    954c:	9309      	str	r3, [sp, #36]	; 0x24
    954e:	2320      	movs	r3, #32
    9550:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
    9554:	f8df 919c 	ldr.w	r9, [pc, #412]	; 96f4 <_svfiprintf_r+0x1dc>
    9558:	9603      	str	r6, [sp, #12]
    955a:	2330      	movs	r3, #48	; 0x30
    955c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
    9560:	f04f 0a01 	mov.w	sl, #1
    9564:	4623      	mov	r3, r4
    9566:	461e      	mov	r6, r3
    9568:	f813 2b01 	ldrb.w	r2, [r3], #1
    956c:	b10a      	cbz	r2, 9572 <_svfiprintf_r+0x5a>
    956e:	2a25      	cmp	r2, #37	; 0x25
    9570:	d1f9      	bne.n	9566 <_svfiprintf_r+0x4e>
    9572:	ebb6 0b04 	subs.w	fp, r6, r4
    9576:	d00b      	beq.n	9590 <_svfiprintf_r+0x78>
    9578:	465b      	mov	r3, fp
    957a:	4622      	mov	r2, r4
    957c:	4629      	mov	r1, r5
    957e:	4638      	mov	r0, r7
    9580:	f7ff ff6e 	bl	9460 <__ssputs_r>
    9584:	3001      	adds	r0, #1
    9586:	f000 80a3 	beq.w	96d0 <_svfiprintf_r+0x1b8>
    958a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    958c:	445b      	add	r3, fp
    958e:	9309      	str	r3, [sp, #36]	; 0x24
    9590:	7833      	ldrb	r3, [r6, #0]
    9592:	2b00      	cmp	r3, #0
    9594:	f000 809c 	beq.w	96d0 <_svfiprintf_r+0x1b8>
    9598:	2300      	movs	r3, #0
    959a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    959e:	e9cd 2305 	strd	r2, r3, [sp, #20]
    95a2:	3601      	adds	r6, #1
    95a4:	9304      	str	r3, [sp, #16]
    95a6:	9307      	str	r3, [sp, #28]
    95a8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
    95ac:	931a      	str	r3, [sp, #104]	; 0x68
    95ae:	4634      	mov	r4, r6
    95b0:	2205      	movs	r2, #5
    95b2:	f814 1b01 	ldrb.w	r1, [r4], #1
    95b6:	484f      	ldr	r0, [pc, #316]	; (96f4 <_svfiprintf_r+0x1dc>)
    95b8:	f7ff faca 	bl	8b50 <memchr>
    95bc:	9b04      	ldr	r3, [sp, #16]
    95be:	b9c0      	cbnz	r0, 95f2 <_svfiprintf_r+0xda>
    95c0:	06d9      	lsls	r1, r3, #27
    95c2:	bf44      	itt	mi
    95c4:	2220      	movmi	r2, #32
    95c6:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
    95ca:	071a      	lsls	r2, r3, #28
    95cc:	bf44      	itt	mi
    95ce:	222b      	movmi	r2, #43	; 0x2b
    95d0:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
    95d4:	7832      	ldrb	r2, [r6, #0]
    95d6:	2a2a      	cmp	r2, #42	; 0x2a
    95d8:	d013      	beq.n	9602 <_svfiprintf_r+0xea>
    95da:	9a07      	ldr	r2, [sp, #28]
    95dc:	4634      	mov	r4, r6
    95de:	2000      	movs	r0, #0
    95e0:	260a      	movs	r6, #10
    95e2:	4621      	mov	r1, r4
    95e4:	f811 3b01 	ldrb.w	r3, [r1], #1
    95e8:	3b30      	subs	r3, #48	; 0x30
    95ea:	2b09      	cmp	r3, #9
    95ec:	d94b      	bls.n	9686 <_svfiprintf_r+0x16e>
    95ee:	b970      	cbnz	r0, 960e <_svfiprintf_r+0xf6>
    95f0:	e014      	b.n	961c <_svfiprintf_r+0x104>
    95f2:	eba0 0009 	sub.w	r0, r0, r9
    95f6:	fa0a f000 	lsl.w	r0, sl, r0
    95fa:	4318      	orrs	r0, r3
    95fc:	9004      	str	r0, [sp, #16]
    95fe:	4626      	mov	r6, r4
    9600:	e7d5      	b.n	95ae <_svfiprintf_r+0x96>
    9602:	9a03      	ldr	r2, [sp, #12]
    9604:	1d11      	adds	r1, r2, #4
    9606:	6812      	ldr	r2, [r2, #0]
    9608:	9103      	str	r1, [sp, #12]
    960a:	2a00      	cmp	r2, #0
    960c:	db01      	blt.n	9612 <_svfiprintf_r+0xfa>
    960e:	9207      	str	r2, [sp, #28]
    9610:	e004      	b.n	961c <_svfiprintf_r+0x104>
    9612:	4252      	negs	r2, r2
    9614:	f043 0302 	orr.w	r3, r3, #2
    9618:	9207      	str	r2, [sp, #28]
    961a:	9304      	str	r3, [sp, #16]
    961c:	7823      	ldrb	r3, [r4, #0]
    961e:	2b2e      	cmp	r3, #46	; 0x2e
    9620:	d10c      	bne.n	963c <_svfiprintf_r+0x124>
    9622:	7863      	ldrb	r3, [r4, #1]
    9624:	2b2a      	cmp	r3, #42	; 0x2a
    9626:	d133      	bne.n	9690 <_svfiprintf_r+0x178>
    9628:	9b03      	ldr	r3, [sp, #12]
    962a:	1d1a      	adds	r2, r3, #4
    962c:	681b      	ldr	r3, [r3, #0]
    962e:	9203      	str	r2, [sp, #12]
    9630:	2b00      	cmp	r3, #0
    9632:	bfb8      	it	lt
    9634:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
    9638:	3402      	adds	r4, #2
    963a:	9305      	str	r3, [sp, #20]
    963c:	4e2e      	ldr	r6, [pc, #184]	; (96f8 <_svfiprintf_r+0x1e0>)
    963e:	7821      	ldrb	r1, [r4, #0]
    9640:	2203      	movs	r2, #3
    9642:	4630      	mov	r0, r6
    9644:	f7ff fa84 	bl	8b50 <memchr>
    9648:	b138      	cbz	r0, 965a <_svfiprintf_r+0x142>
    964a:	2340      	movs	r3, #64	; 0x40
    964c:	1b80      	subs	r0, r0, r6
    964e:	fa03 f000 	lsl.w	r0, r3, r0
    9652:	9b04      	ldr	r3, [sp, #16]
    9654:	4303      	orrs	r3, r0
    9656:	3401      	adds	r4, #1
    9658:	9304      	str	r3, [sp, #16]
    965a:	f814 1b01 	ldrb.w	r1, [r4], #1
    965e:	4827      	ldr	r0, [pc, #156]	; (96fc <_svfiprintf_r+0x1e4>)
    9660:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
    9664:	2206      	movs	r2, #6
    9666:	f7ff fa73 	bl	8b50 <memchr>
    966a:	2800      	cmp	r0, #0
    966c:	d038      	beq.n	96e0 <_svfiprintf_r+0x1c8>
    966e:	4b24      	ldr	r3, [pc, #144]	; (9700 <_svfiprintf_r+0x1e8>)
    9670:	bb13      	cbnz	r3, 96b8 <_svfiprintf_r+0x1a0>
    9672:	9b03      	ldr	r3, [sp, #12]
    9674:	3307      	adds	r3, #7
    9676:	f023 0307 	bic.w	r3, r3, #7
    967a:	3308      	adds	r3, #8
    967c:	9303      	str	r3, [sp, #12]
    967e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    9680:	4443      	add	r3, r8
    9682:	9309      	str	r3, [sp, #36]	; 0x24
    9684:	e76e      	b.n	9564 <_svfiprintf_r+0x4c>
    9686:	fb06 3202 	mla	r2, r6, r2, r3
    968a:	2001      	movs	r0, #1
    968c:	460c      	mov	r4, r1
    968e:	e7a8      	b.n	95e2 <_svfiprintf_r+0xca>
    9690:	2300      	movs	r3, #0
    9692:	3401      	adds	r4, #1
    9694:	9305      	str	r3, [sp, #20]
    9696:	4619      	mov	r1, r3
    9698:	260a      	movs	r6, #10
    969a:	4620      	mov	r0, r4
    969c:	f810 2b01 	ldrb.w	r2, [r0], #1
    96a0:	3a30      	subs	r2, #48	; 0x30
    96a2:	2a09      	cmp	r2, #9
    96a4:	d903      	bls.n	96ae <_svfiprintf_r+0x196>
    96a6:	2b00      	cmp	r3, #0
    96a8:	d0c8      	beq.n	963c <_svfiprintf_r+0x124>
    96aa:	9105      	str	r1, [sp, #20]
    96ac:	e7c6      	b.n	963c <_svfiprintf_r+0x124>
    96ae:	fb06 2101 	mla	r1, r6, r1, r2
    96b2:	2301      	movs	r3, #1
    96b4:	4604      	mov	r4, r0
    96b6:	e7f0      	b.n	969a <_svfiprintf_r+0x182>
    96b8:	ab03      	add	r3, sp, #12
    96ba:	9300      	str	r3, [sp, #0]
    96bc:	462a      	mov	r2, r5
    96be:	4b11      	ldr	r3, [pc, #68]	; (9704 <_svfiprintf_r+0x1ec>)
    96c0:	a904      	add	r1, sp, #16
    96c2:	4638      	mov	r0, r7
    96c4:	f7fb ffd8 	bl	5678 <_printf_float>
    96c8:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
    96cc:	4680      	mov	r8, r0
    96ce:	d1d6      	bne.n	967e <_svfiprintf_r+0x166>
    96d0:	89ab      	ldrh	r3, [r5, #12]
    96d2:	065b      	lsls	r3, r3, #25
    96d4:	f53f af34 	bmi.w	9540 <_svfiprintf_r+0x28>
    96d8:	9809      	ldr	r0, [sp, #36]	; 0x24
    96da:	b01d      	add	sp, #116	; 0x74
    96dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    96e0:	ab03      	add	r3, sp, #12
    96e2:	9300      	str	r3, [sp, #0]
    96e4:	462a      	mov	r2, r5
    96e6:	4b07      	ldr	r3, [pc, #28]	; (9704 <_svfiprintf_r+0x1ec>)
    96e8:	a904      	add	r1, sp, #16
    96ea:	4638      	mov	r0, r7
    96ec:	f7fc fa64 	bl	5bb8 <_printf_i>
    96f0:	e7ea      	b.n	96c8 <_svfiprintf_r+0x1b0>
    96f2:	bf00      	nop
    96f4:	0000b6d4 	.word	0x0000b6d4
    96f8:	0000b6da 	.word	0x0000b6da
    96fc:	0000b6de 	.word	0x0000b6de
    9700:	00005679 	.word	0x00005679
    9704:	00009461 	.word	0x00009461

00009708 <nan>:
nan():
    9708:	ed9f 0b01 	vldr	d0, [pc, #4]	; 9710 <nan+0x8>
    970c:	4770      	bx	lr
    970e:	bf00      	nop
    9710:	00000000 	.word	0x00000000
    9714:	7ff80000 	.word	0x7ff80000

00009718 <__sread>:
__sread():
    9718:	b510      	push	{r4, lr}
    971a:	460c      	mov	r4, r1
    971c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    9720:	f000 f8a8 	bl	9874 <_read_r>
    9724:	2800      	cmp	r0, #0
    9726:	bfab      	itete	ge
    9728:	6d63      	ldrge	r3, [r4, #84]	; 0x54
    972a:	89a3      	ldrhlt	r3, [r4, #12]
    972c:	181b      	addge	r3, r3, r0
    972e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
    9732:	bfac      	ite	ge
    9734:	6563      	strge	r3, [r4, #84]	; 0x54
    9736:	81a3      	strhlt	r3, [r4, #12]
    9738:	bd10      	pop	{r4, pc}

0000973a <__swrite>:
__swrite():
    973a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    973e:	461f      	mov	r7, r3
    9740:	898b      	ldrh	r3, [r1, #12]
    9742:	05db      	lsls	r3, r3, #23
    9744:	4605      	mov	r5, r0
    9746:	460c      	mov	r4, r1
    9748:	4616      	mov	r6, r2
    974a:	d505      	bpl.n	9758 <__swrite+0x1e>
    974c:	2302      	movs	r3, #2
    974e:	2200      	movs	r2, #0
    9750:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    9754:	f000 f874 	bl	9840 <_lseek_r>
    9758:	89a3      	ldrh	r3, [r4, #12]
    975a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
    975e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
    9762:	81a3      	strh	r3, [r4, #12]
    9764:	4632      	mov	r2, r6
    9766:	463b      	mov	r3, r7
    9768:	4628      	mov	r0, r5
    976a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    976e:	f000 b823 	b.w	97b8 <_write_r>

00009772 <__sseek>:
__sseek():
    9772:	b510      	push	{r4, lr}
    9774:	460c      	mov	r4, r1
    9776:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    977a:	f000 f861 	bl	9840 <_lseek_r>
    977e:	1c43      	adds	r3, r0, #1
    9780:	89a3      	ldrh	r3, [r4, #12]
    9782:	bf15      	itete	ne
    9784:	6560      	strne	r0, [r4, #84]	; 0x54
    9786:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
    978a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
    978e:	81a3      	strheq	r3, [r4, #12]
    9790:	bf18      	it	ne
    9792:	81a3      	strhne	r3, [r4, #12]
    9794:	bd10      	pop	{r4, pc}

00009796 <__sclose>:
__sclose():
    9796:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    979a:	f000 b81f 	b.w	97dc <_close_r>

0000979e <__ascii_wctomb>:
__ascii_wctomb():
    979e:	b149      	cbz	r1, 97b4 <__ascii_wctomb+0x16>
    97a0:	2aff      	cmp	r2, #255	; 0xff
    97a2:	bf85      	ittet	hi
    97a4:	238a      	movhi	r3, #138	; 0x8a
    97a6:	6003      	strhi	r3, [r0, #0]
    97a8:	700a      	strbls	r2, [r1, #0]
    97aa:	f04f 30ff 	movhi.w	r0, #4294967295	; 0xffffffff
    97ae:	bf98      	it	ls
    97b0:	2001      	movls	r0, #1
    97b2:	4770      	bx	lr
    97b4:	4608      	mov	r0, r1
    97b6:	4770      	bx	lr

000097b8 <_write_r>:
_write_r():
    97b8:	b538      	push	{r3, r4, r5, lr}
    97ba:	4c07      	ldr	r4, [pc, #28]	; (97d8 <_write_r+0x20>)
    97bc:	4605      	mov	r5, r0
    97be:	4608      	mov	r0, r1
    97c0:	4611      	mov	r1, r2
    97c2:	2200      	movs	r2, #0
    97c4:	6022      	str	r2, [r4, #0]
    97c6:	461a      	mov	r2, r3
    97c8:	f7f8 fcc6 	bl	2158 <_write>
    97cc:	1c43      	adds	r3, r0, #1
    97ce:	d102      	bne.n	97d6 <_write_r+0x1e>
    97d0:	6823      	ldr	r3, [r4, #0]
    97d2:	b103      	cbz	r3, 97d6 <_write_r+0x1e>
    97d4:	602b      	str	r3, [r5, #0]
    97d6:	bd38      	pop	{r3, r4, r5, pc}
    97d8:	10000b84 	.word	0x10000b84

000097dc <_close_r>:
_close_r():
    97dc:	b538      	push	{r3, r4, r5, lr}
    97de:	4c06      	ldr	r4, [pc, #24]	; (97f8 <_close_r+0x1c>)
    97e0:	2300      	movs	r3, #0
    97e2:	4605      	mov	r5, r0
    97e4:	4608      	mov	r0, r1
    97e6:	6023      	str	r3, [r4, #0]
    97e8:	f000 fd90 	bl	a30c <_close>
    97ec:	1c43      	adds	r3, r0, #1
    97ee:	d102      	bne.n	97f6 <_close_r+0x1a>
    97f0:	6823      	ldr	r3, [r4, #0]
    97f2:	b103      	cbz	r3, 97f6 <_close_r+0x1a>
    97f4:	602b      	str	r3, [r5, #0]
    97f6:	bd38      	pop	{r3, r4, r5, pc}
    97f8:	10000b84 	.word	0x10000b84

000097fc <_fstat_r>:
_fstat_r():
    97fc:	b538      	push	{r3, r4, r5, lr}
    97fe:	4c07      	ldr	r4, [pc, #28]	; (981c <_fstat_r+0x20>)
    9800:	2300      	movs	r3, #0
    9802:	4605      	mov	r5, r0
    9804:	4608      	mov	r0, r1
    9806:	4611      	mov	r1, r2
    9808:	6023      	str	r3, [r4, #0]
    980a:	f000 fd87 	bl	a31c <_fstat>
    980e:	1c43      	adds	r3, r0, #1
    9810:	d102      	bne.n	9818 <_fstat_r+0x1c>
    9812:	6823      	ldr	r3, [r4, #0]
    9814:	b103      	cbz	r3, 9818 <_fstat_r+0x1c>
    9816:	602b      	str	r3, [r5, #0]
    9818:	bd38      	pop	{r3, r4, r5, pc}
    981a:	bf00      	nop
    981c:	10000b84 	.word	0x10000b84

00009820 <_isatty_r>:
_isatty_r():
    9820:	b538      	push	{r3, r4, r5, lr}
    9822:	4c06      	ldr	r4, [pc, #24]	; (983c <_isatty_r+0x1c>)
    9824:	2300      	movs	r3, #0
    9826:	4605      	mov	r5, r0
    9828:	4608      	mov	r0, r1
    982a:	6023      	str	r3, [r4, #0]
    982c:	f7f8 fc80 	bl	2130 <_isatty>
    9830:	1c43      	adds	r3, r0, #1
    9832:	d102      	bne.n	983a <_isatty_r+0x1a>
    9834:	6823      	ldr	r3, [r4, #0]
    9836:	b103      	cbz	r3, 983a <_isatty_r+0x1a>
    9838:	602b      	str	r3, [r5, #0]
    983a:	bd38      	pop	{r3, r4, r5, pc}
    983c:	10000b84 	.word	0x10000b84

00009840 <_lseek_r>:
_lseek_r():
    9840:	b538      	push	{r3, r4, r5, lr}
    9842:	4c07      	ldr	r4, [pc, #28]	; (9860 <_lseek_r+0x20>)
    9844:	4605      	mov	r5, r0
    9846:	4608      	mov	r0, r1
    9848:	4611      	mov	r1, r2
    984a:	2200      	movs	r2, #0
    984c:	6022      	str	r2, [r4, #0]
    984e:	461a      	mov	r2, r3
    9850:	f000 fd6c 	bl	a32c <_lseek>
    9854:	1c43      	adds	r3, r0, #1
    9856:	d102      	bne.n	985e <_lseek_r+0x1e>
    9858:	6823      	ldr	r3, [r4, #0]
    985a:	b103      	cbz	r3, 985e <_lseek_r+0x1e>
    985c:	602b      	str	r3, [r5, #0]
    985e:	bd38      	pop	{r3, r4, r5, pc}
    9860:	10000b84 	.word	0x10000b84

00009864 <_malloc_usable_size_r>:
_malloc_usable_size_r():
    9864:	f851 3c04 	ldr.w	r3, [r1, #-4]
    9868:	1f18      	subs	r0, r3, #4
    986a:	2b00      	cmp	r3, #0
    986c:	bfbc      	itt	lt
    986e:	580b      	ldrlt	r3, [r1, r0]
    9870:	18c0      	addlt	r0, r0, r3
    9872:	4770      	bx	lr

00009874 <_read_r>:
_read_r():
    9874:	b538      	push	{r3, r4, r5, lr}
    9876:	4c07      	ldr	r4, [pc, #28]	; (9894 <_read_r+0x20>)
    9878:	4605      	mov	r5, r0
    987a:	4608      	mov	r0, r1
    987c:	4611      	mov	r1, r2
    987e:	2200      	movs	r2, #0
    9880:	6022      	str	r2, [r4, #0]
    9882:	461a      	mov	r2, r3
    9884:	f7f8 fca0 	bl	21c8 <_read>
    9888:	1c43      	adds	r3, r0, #1
    988a:	d102      	bne.n	9892 <_read_r+0x1e>
    988c:	6823      	ldr	r3, [r4, #0]
    988e:	b103      	cbz	r3, 9892 <_read_r+0x1e>
    9890:	602b      	str	r3, [r5, #0]
    9892:	bd38      	pop	{r3, r4, r5, pc}
    9894:	10000b84 	.word	0x10000b84

00009898 <__aeabi_drsub>:
__aeabi_drsub():
    9898:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
    989c:	e002      	b.n	98a4 <__adddf3>
    989e:	bf00      	nop

000098a0 <__aeabi_dsub>:
__subdf3():
    98a0:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

000098a4 <__adddf3>:
__aeabi_dadd():
    98a4:	b530      	push	{r4, r5, lr}
    98a6:	ea4f 0441 	mov.w	r4, r1, lsl #1
    98aa:	ea4f 0543 	mov.w	r5, r3, lsl #1
    98ae:	ea94 0f05 	teq	r4, r5
    98b2:	bf08      	it	eq
    98b4:	ea90 0f02 	teqeq	r0, r2
    98b8:	bf1f      	itttt	ne
    98ba:	ea54 0c00 	orrsne.w	ip, r4, r0
    98be:	ea55 0c02 	orrsne.w	ip, r5, r2
    98c2:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
    98c6:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
    98ca:	f000 80e2 	beq.w	9a92 <__adddf3+0x1ee>
    98ce:	ea4f 5454 	mov.w	r4, r4, lsr #21
    98d2:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
    98d6:	bfb8      	it	lt
    98d8:	426d      	neglt	r5, r5
    98da:	dd0c      	ble.n	98f6 <__adddf3+0x52>
    98dc:	442c      	add	r4, r5
    98de:	ea80 0202 	eor.w	r2, r0, r2
    98e2:	ea81 0303 	eor.w	r3, r1, r3
    98e6:	ea82 0000 	eor.w	r0, r2, r0
    98ea:	ea83 0101 	eor.w	r1, r3, r1
    98ee:	ea80 0202 	eor.w	r2, r0, r2
    98f2:	ea81 0303 	eor.w	r3, r1, r3
    98f6:	2d36      	cmp	r5, #54	; 0x36
    98f8:	bf88      	it	hi
    98fa:	bd30      	pophi	{r4, r5, pc}
    98fc:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
    9900:	ea4f 3101 	mov.w	r1, r1, lsl #12
    9904:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
    9908:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
    990c:	d002      	beq.n	9914 <__adddf3+0x70>
    990e:	4240      	negs	r0, r0
    9910:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
    9914:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
    9918:	ea4f 3303 	mov.w	r3, r3, lsl #12
    991c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
    9920:	d002      	beq.n	9928 <__adddf3+0x84>
    9922:	4252      	negs	r2, r2
    9924:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
    9928:	ea94 0f05 	teq	r4, r5
    992c:	f000 80a7 	beq.w	9a7e <__adddf3+0x1da>
    9930:	f1a4 0401 	sub.w	r4, r4, #1
    9934:	f1d5 0e20 	rsbs	lr, r5, #32
    9938:	db0d      	blt.n	9956 <__adddf3+0xb2>
    993a:	fa02 fc0e 	lsl.w	ip, r2, lr
    993e:	fa22 f205 	lsr.w	r2, r2, r5
    9942:	1880      	adds	r0, r0, r2
    9944:	f141 0100 	adc.w	r1, r1, #0
    9948:	fa03 f20e 	lsl.w	r2, r3, lr
    994c:	1880      	adds	r0, r0, r2
    994e:	fa43 f305 	asr.w	r3, r3, r5
    9952:	4159      	adcs	r1, r3
    9954:	e00e      	b.n	9974 <__adddf3+0xd0>
    9956:	f1a5 0520 	sub.w	r5, r5, #32
    995a:	f10e 0e20 	add.w	lr, lr, #32
    995e:	2a01      	cmp	r2, #1
    9960:	fa03 fc0e 	lsl.w	ip, r3, lr
    9964:	bf28      	it	cs
    9966:	f04c 0c02 	orrcs.w	ip, ip, #2
    996a:	fa43 f305 	asr.w	r3, r3, r5
    996e:	18c0      	adds	r0, r0, r3
    9970:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
    9974:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
    9978:	d507      	bpl.n	998a <__adddf3+0xe6>
    997a:	f04f 0e00 	mov.w	lr, #0
    997e:	f1dc 0c00 	rsbs	ip, ip, #0
    9982:	eb7e 0000 	sbcs.w	r0, lr, r0
    9986:	eb6e 0101 	sbc.w	r1, lr, r1
    998a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
    998e:	d31b      	bcc.n	99c8 <__adddf3+0x124>
    9990:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
    9994:	d30c      	bcc.n	99b0 <__adddf3+0x10c>
    9996:	0849      	lsrs	r1, r1, #1
    9998:	ea5f 0030 	movs.w	r0, r0, rrx
    999c:	ea4f 0c3c 	mov.w	ip, ip, rrx
    99a0:	f104 0401 	add.w	r4, r4, #1
    99a4:	ea4f 5244 	mov.w	r2, r4, lsl #21
    99a8:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
    99ac:	f080 809a 	bcs.w	9ae4 <__adddf3+0x240>
    99b0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
    99b4:	bf08      	it	eq
    99b6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
    99ba:	f150 0000 	adcs.w	r0, r0, #0
    99be:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
    99c2:	ea41 0105 	orr.w	r1, r1, r5
    99c6:	bd30      	pop	{r4, r5, pc}
    99c8:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
    99cc:	4140      	adcs	r0, r0
    99ce:	eb41 0101 	adc.w	r1, r1, r1
    99d2:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
    99d6:	f1a4 0401 	sub.w	r4, r4, #1
    99da:	d1e9      	bne.n	99b0 <__adddf3+0x10c>
    99dc:	f091 0f00 	teq	r1, #0
    99e0:	bf04      	itt	eq
    99e2:	4601      	moveq	r1, r0
    99e4:	2000      	moveq	r0, #0
    99e6:	fab1 f381 	clz	r3, r1
    99ea:	bf08      	it	eq
    99ec:	3320      	addeq	r3, #32
    99ee:	f1a3 030b 	sub.w	r3, r3, #11
    99f2:	f1b3 0220 	subs.w	r2, r3, #32
    99f6:	da0c      	bge.n	9a12 <__adddf3+0x16e>
    99f8:	320c      	adds	r2, #12
    99fa:	dd08      	ble.n	9a0e <__adddf3+0x16a>
    99fc:	f102 0c14 	add.w	ip, r2, #20
    9a00:	f1c2 020c 	rsb	r2, r2, #12
    9a04:	fa01 f00c 	lsl.w	r0, r1, ip
    9a08:	fa21 f102 	lsr.w	r1, r1, r2
    9a0c:	e00c      	b.n	9a28 <__adddf3+0x184>
    9a0e:	f102 0214 	add.w	r2, r2, #20
    9a12:	bfd8      	it	le
    9a14:	f1c2 0c20 	rsble	ip, r2, #32
    9a18:	fa01 f102 	lsl.w	r1, r1, r2
    9a1c:	fa20 fc0c 	lsr.w	ip, r0, ip
    9a20:	bfdc      	itt	le
    9a22:	ea41 010c 	orrle.w	r1, r1, ip
    9a26:	4090      	lslle	r0, r2
    9a28:	1ae4      	subs	r4, r4, r3
    9a2a:	bfa2      	ittt	ge
    9a2c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
    9a30:	4329      	orrge	r1, r5
    9a32:	bd30      	popge	{r4, r5, pc}
    9a34:	ea6f 0404 	mvn.w	r4, r4
    9a38:	3c1f      	subs	r4, #31
    9a3a:	da1c      	bge.n	9a76 <__adddf3+0x1d2>
    9a3c:	340c      	adds	r4, #12
    9a3e:	dc0e      	bgt.n	9a5e <__adddf3+0x1ba>
    9a40:	f104 0414 	add.w	r4, r4, #20
    9a44:	f1c4 0220 	rsb	r2, r4, #32
    9a48:	fa20 f004 	lsr.w	r0, r0, r4
    9a4c:	fa01 f302 	lsl.w	r3, r1, r2
    9a50:	ea40 0003 	orr.w	r0, r0, r3
    9a54:	fa21 f304 	lsr.w	r3, r1, r4
    9a58:	ea45 0103 	orr.w	r1, r5, r3
    9a5c:	bd30      	pop	{r4, r5, pc}
    9a5e:	f1c4 040c 	rsb	r4, r4, #12
    9a62:	f1c4 0220 	rsb	r2, r4, #32
    9a66:	fa20 f002 	lsr.w	r0, r0, r2
    9a6a:	fa01 f304 	lsl.w	r3, r1, r4
    9a6e:	ea40 0003 	orr.w	r0, r0, r3
    9a72:	4629      	mov	r1, r5
    9a74:	bd30      	pop	{r4, r5, pc}
    9a76:	fa21 f004 	lsr.w	r0, r1, r4
    9a7a:	4629      	mov	r1, r5
    9a7c:	bd30      	pop	{r4, r5, pc}
    9a7e:	f094 0f00 	teq	r4, #0
    9a82:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
    9a86:	bf06      	itte	eq
    9a88:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
    9a8c:	3401      	addeq	r4, #1
    9a8e:	3d01      	subne	r5, #1
    9a90:	e74e      	b.n	9930 <__adddf3+0x8c>
    9a92:	ea7f 5c64 	mvns.w	ip, r4, asr #21
    9a96:	bf18      	it	ne
    9a98:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
    9a9c:	d029      	beq.n	9af2 <__adddf3+0x24e>
    9a9e:	ea94 0f05 	teq	r4, r5
    9aa2:	bf08      	it	eq
    9aa4:	ea90 0f02 	teqeq	r0, r2
    9aa8:	d005      	beq.n	9ab6 <__adddf3+0x212>
    9aaa:	ea54 0c00 	orrs.w	ip, r4, r0
    9aae:	bf04      	itt	eq
    9ab0:	4619      	moveq	r1, r3
    9ab2:	4610      	moveq	r0, r2
    9ab4:	bd30      	pop	{r4, r5, pc}
    9ab6:	ea91 0f03 	teq	r1, r3
    9aba:	bf1e      	ittt	ne
    9abc:	2100      	movne	r1, #0
    9abe:	2000      	movne	r0, #0
    9ac0:	bd30      	popne	{r4, r5, pc}
    9ac2:	ea5f 5c54 	movs.w	ip, r4, lsr #21
    9ac6:	d105      	bne.n	9ad4 <__adddf3+0x230>
    9ac8:	0040      	lsls	r0, r0, #1
    9aca:	4149      	adcs	r1, r1
    9acc:	bf28      	it	cs
    9ace:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
    9ad2:	bd30      	pop	{r4, r5, pc}
    9ad4:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
    9ad8:	bf3c      	itt	cc
    9ada:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
    9ade:	bd30      	popcc	{r4, r5, pc}
    9ae0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
    9ae4:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
    9ae8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
    9aec:	f04f 0000 	mov.w	r0, #0
    9af0:	bd30      	pop	{r4, r5, pc}
    9af2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
    9af6:	bf1a      	itte	ne
    9af8:	4619      	movne	r1, r3
    9afa:	4610      	movne	r0, r2
    9afc:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
    9b00:	bf1c      	itt	ne
    9b02:	460b      	movne	r3, r1
    9b04:	4602      	movne	r2, r0
    9b06:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
    9b0a:	bf06      	itte	eq
    9b0c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
    9b10:	ea91 0f03 	teqeq	r1, r3
    9b14:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
    9b18:	bd30      	pop	{r4, r5, pc}
    9b1a:	bf00      	nop

00009b1c <__aeabi_ui2d>:
__floatunsidf():
    9b1c:	f090 0f00 	teq	r0, #0
    9b20:	bf04      	itt	eq
    9b22:	2100      	moveq	r1, #0
    9b24:	4770      	bxeq	lr
    9b26:	b530      	push	{r4, r5, lr}
    9b28:	f44f 6480 	mov.w	r4, #1024	; 0x400
    9b2c:	f104 0432 	add.w	r4, r4, #50	; 0x32
    9b30:	f04f 0500 	mov.w	r5, #0
    9b34:	f04f 0100 	mov.w	r1, #0
    9b38:	e750      	b.n	99dc <__adddf3+0x138>
    9b3a:	bf00      	nop

00009b3c <__aeabi_i2d>:
__aeabi_i2d():
    9b3c:	f090 0f00 	teq	r0, #0
    9b40:	bf04      	itt	eq
    9b42:	2100      	moveq	r1, #0
    9b44:	4770      	bxeq	lr
    9b46:	b530      	push	{r4, r5, lr}
    9b48:	f44f 6480 	mov.w	r4, #1024	; 0x400
    9b4c:	f104 0432 	add.w	r4, r4, #50	; 0x32
    9b50:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
    9b54:	bf48      	it	mi
    9b56:	4240      	negmi	r0, r0
    9b58:	f04f 0100 	mov.w	r1, #0
    9b5c:	e73e      	b.n	99dc <__adddf3+0x138>
    9b5e:	bf00      	nop

00009b60 <__aeabi_f2d>:
__aeabi_f2d():
    9b60:	0042      	lsls	r2, r0, #1
    9b62:	ea4f 01e2 	mov.w	r1, r2, asr #3
    9b66:	ea4f 0131 	mov.w	r1, r1, rrx
    9b6a:	ea4f 7002 	mov.w	r0, r2, lsl #28
    9b6e:	bf1f      	itttt	ne
    9b70:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
    9b74:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
    9b78:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
    9b7c:	4770      	bxne	lr
    9b7e:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
    9b82:	bf08      	it	eq
    9b84:	4770      	bxeq	lr
    9b86:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
    9b8a:	bf04      	itt	eq
    9b8c:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
    9b90:	4770      	bxeq	lr
    9b92:	b530      	push	{r4, r5, lr}
    9b94:	f44f 7460 	mov.w	r4, #896	; 0x380
    9b98:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
    9b9c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
    9ba0:	e71c      	b.n	99dc <__adddf3+0x138>
    9ba2:	bf00      	nop

00009ba4 <__aeabi_ul2d>:
__floatundidf():
    9ba4:	ea50 0201 	orrs.w	r2, r0, r1
    9ba8:	bf08      	it	eq
    9baa:	4770      	bxeq	lr
    9bac:	b530      	push	{r4, r5, lr}
    9bae:	f04f 0500 	mov.w	r5, #0
    9bb2:	e00a      	b.n	9bca <__aeabi_l2d+0x16>

00009bb4 <__aeabi_l2d>:
__aeabi_l2d():
    9bb4:	ea50 0201 	orrs.w	r2, r0, r1
    9bb8:	bf08      	it	eq
    9bba:	4770      	bxeq	lr
    9bbc:	b530      	push	{r4, r5, lr}
    9bbe:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
    9bc2:	d502      	bpl.n	9bca <__aeabi_l2d+0x16>
    9bc4:	4240      	negs	r0, r0
    9bc6:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
    9bca:	f44f 6480 	mov.w	r4, #1024	; 0x400
    9bce:	f104 0432 	add.w	r4, r4, #50	; 0x32
    9bd2:	ea5f 5c91 	movs.w	ip, r1, lsr #22
    9bd6:	f43f aed8 	beq.w	998a <__adddf3+0xe6>
    9bda:	f04f 0203 	mov.w	r2, #3
    9bde:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
    9be2:	bf18      	it	ne
    9be4:	3203      	addne	r2, #3
    9be6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
    9bea:	bf18      	it	ne
    9bec:	3203      	addne	r2, #3
    9bee:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
    9bf2:	f1c2 0320 	rsb	r3, r2, #32
    9bf6:	fa00 fc03 	lsl.w	ip, r0, r3
    9bfa:	fa20 f002 	lsr.w	r0, r0, r2
    9bfe:	fa01 fe03 	lsl.w	lr, r1, r3
    9c02:	ea40 000e 	orr.w	r0, r0, lr
    9c06:	fa21 f102 	lsr.w	r1, r1, r2
    9c0a:	4414      	add	r4, r2
    9c0c:	e6bd      	b.n	998a <__adddf3+0xe6>
    9c0e:	bf00      	nop

00009c10 <__aeabi_dmul>:
__muldf3():
    9c10:	b570      	push	{r4, r5, r6, lr}
    9c12:	f04f 0cff 	mov.w	ip, #255	; 0xff
    9c16:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
    9c1a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
    9c1e:	bf1d      	ittte	ne
    9c20:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
    9c24:	ea94 0f0c 	teqne	r4, ip
    9c28:	ea95 0f0c 	teqne	r5, ip
    9c2c:	f000 f8de 	bleq	9dec <__aeabi_dmul+0x1dc>
    9c30:	442c      	add	r4, r5
    9c32:	ea81 0603 	eor.w	r6, r1, r3
    9c36:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
    9c3a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
    9c3e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
    9c42:	bf18      	it	ne
    9c44:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
    9c48:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    9c4c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
    9c50:	d038      	beq.n	9cc4 <__aeabi_dmul+0xb4>
    9c52:	fba0 ce02 	umull	ip, lr, r0, r2
    9c56:	f04f 0500 	mov.w	r5, #0
    9c5a:	fbe1 e502 	umlal	lr, r5, r1, r2
    9c5e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
    9c62:	fbe0 e503 	umlal	lr, r5, r0, r3
    9c66:	f04f 0600 	mov.w	r6, #0
    9c6a:	fbe1 5603 	umlal	r5, r6, r1, r3
    9c6e:	f09c 0f00 	teq	ip, #0
    9c72:	bf18      	it	ne
    9c74:	f04e 0e01 	orrne.w	lr, lr, #1
    9c78:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
    9c7c:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
    9c80:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
    9c84:	d204      	bcs.n	9c90 <__aeabi_dmul+0x80>
    9c86:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
    9c8a:	416d      	adcs	r5, r5
    9c8c:	eb46 0606 	adc.w	r6, r6, r6
    9c90:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
    9c94:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
    9c98:	ea4f 20c5 	mov.w	r0, r5, lsl #11
    9c9c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
    9ca0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
    9ca4:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
    9ca8:	bf88      	it	hi
    9caa:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
    9cae:	d81e      	bhi.n	9cee <__aeabi_dmul+0xde>
    9cb0:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
    9cb4:	bf08      	it	eq
    9cb6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
    9cba:	f150 0000 	adcs.w	r0, r0, #0
    9cbe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
    9cc2:	bd70      	pop	{r4, r5, r6, pc}
    9cc4:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
    9cc8:	ea46 0101 	orr.w	r1, r6, r1
    9ccc:	ea40 0002 	orr.w	r0, r0, r2
    9cd0:	ea81 0103 	eor.w	r1, r1, r3
    9cd4:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
    9cd8:	bfc2      	ittt	gt
    9cda:	ebd4 050c 	rsbsgt	r5, r4, ip
    9cde:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
    9ce2:	bd70      	popgt	{r4, r5, r6, pc}
    9ce4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    9ce8:	f04f 0e00 	mov.w	lr, #0
    9cec:	3c01      	subs	r4, #1
    9cee:	f300 80ab 	bgt.w	9e48 <__aeabi_dmul+0x238>
    9cf2:	f114 0f36 	cmn.w	r4, #54	; 0x36
    9cf6:	bfde      	ittt	le
    9cf8:	2000      	movle	r0, #0
    9cfa:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
    9cfe:	bd70      	pople	{r4, r5, r6, pc}
    9d00:	f1c4 0400 	rsb	r4, r4, #0
    9d04:	3c20      	subs	r4, #32
    9d06:	da35      	bge.n	9d74 <__aeabi_dmul+0x164>
    9d08:	340c      	adds	r4, #12
    9d0a:	dc1b      	bgt.n	9d44 <__aeabi_dmul+0x134>
    9d0c:	f104 0414 	add.w	r4, r4, #20
    9d10:	f1c4 0520 	rsb	r5, r4, #32
    9d14:	fa00 f305 	lsl.w	r3, r0, r5
    9d18:	fa20 f004 	lsr.w	r0, r0, r4
    9d1c:	fa01 f205 	lsl.w	r2, r1, r5
    9d20:	ea40 0002 	orr.w	r0, r0, r2
    9d24:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
    9d28:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
    9d2c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
    9d30:	fa21 f604 	lsr.w	r6, r1, r4
    9d34:	eb42 0106 	adc.w	r1, r2, r6
    9d38:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
    9d3c:	bf08      	it	eq
    9d3e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
    9d42:	bd70      	pop	{r4, r5, r6, pc}
    9d44:	f1c4 040c 	rsb	r4, r4, #12
    9d48:	f1c4 0520 	rsb	r5, r4, #32
    9d4c:	fa00 f304 	lsl.w	r3, r0, r4
    9d50:	fa20 f005 	lsr.w	r0, r0, r5
    9d54:	fa01 f204 	lsl.w	r2, r1, r4
    9d58:	ea40 0002 	orr.w	r0, r0, r2
    9d5c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    9d60:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
    9d64:	f141 0100 	adc.w	r1, r1, #0
    9d68:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
    9d6c:	bf08      	it	eq
    9d6e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
    9d72:	bd70      	pop	{r4, r5, r6, pc}
    9d74:	f1c4 0520 	rsb	r5, r4, #32
    9d78:	fa00 f205 	lsl.w	r2, r0, r5
    9d7c:	ea4e 0e02 	orr.w	lr, lr, r2
    9d80:	fa20 f304 	lsr.w	r3, r0, r4
    9d84:	fa01 f205 	lsl.w	r2, r1, r5
    9d88:	ea43 0302 	orr.w	r3, r3, r2
    9d8c:	fa21 f004 	lsr.w	r0, r1, r4
    9d90:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    9d94:	fa21 f204 	lsr.w	r2, r1, r4
    9d98:	ea20 0002 	bic.w	r0, r0, r2
    9d9c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
    9da0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
    9da4:	bf08      	it	eq
    9da6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
    9daa:	bd70      	pop	{r4, r5, r6, pc}
    9dac:	f094 0f00 	teq	r4, #0
    9db0:	d10f      	bne.n	9dd2 <__aeabi_dmul+0x1c2>
    9db2:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
    9db6:	0040      	lsls	r0, r0, #1
    9db8:	eb41 0101 	adc.w	r1, r1, r1
    9dbc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
    9dc0:	bf08      	it	eq
    9dc2:	3c01      	subeq	r4, #1
    9dc4:	d0f7      	beq.n	9db6 <__aeabi_dmul+0x1a6>
    9dc6:	ea41 0106 	orr.w	r1, r1, r6
    9dca:	f095 0f00 	teq	r5, #0
    9dce:	bf18      	it	ne
    9dd0:	4770      	bxne	lr
    9dd2:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
    9dd6:	0052      	lsls	r2, r2, #1
    9dd8:	eb43 0303 	adc.w	r3, r3, r3
    9ddc:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
    9de0:	bf08      	it	eq
    9de2:	3d01      	subeq	r5, #1
    9de4:	d0f7      	beq.n	9dd6 <__aeabi_dmul+0x1c6>
    9de6:	ea43 0306 	orr.w	r3, r3, r6
    9dea:	4770      	bx	lr
    9dec:	ea94 0f0c 	teq	r4, ip
    9df0:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
    9df4:	bf18      	it	ne
    9df6:	ea95 0f0c 	teqne	r5, ip
    9dfa:	d00c      	beq.n	9e16 <__aeabi_dmul+0x206>
    9dfc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
    9e00:	bf18      	it	ne
    9e02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
    9e06:	d1d1      	bne.n	9dac <__aeabi_dmul+0x19c>
    9e08:	ea81 0103 	eor.w	r1, r1, r3
    9e0c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    9e10:	f04f 0000 	mov.w	r0, #0
    9e14:	bd70      	pop	{r4, r5, r6, pc}
    9e16:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
    9e1a:	bf06      	itte	eq
    9e1c:	4610      	moveq	r0, r2
    9e1e:	4619      	moveq	r1, r3
    9e20:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
    9e24:	d019      	beq.n	9e5a <__aeabi_dmul+0x24a>
    9e26:	ea94 0f0c 	teq	r4, ip
    9e2a:	d102      	bne.n	9e32 <__aeabi_dmul+0x222>
    9e2c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
    9e30:	d113      	bne.n	9e5a <__aeabi_dmul+0x24a>
    9e32:	ea95 0f0c 	teq	r5, ip
    9e36:	d105      	bne.n	9e44 <__aeabi_dmul+0x234>
    9e38:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
    9e3c:	bf1c      	itt	ne
    9e3e:	4610      	movne	r0, r2
    9e40:	4619      	movne	r1, r3
    9e42:	d10a      	bne.n	9e5a <__aeabi_dmul+0x24a>
    9e44:	ea81 0103 	eor.w	r1, r1, r3
    9e48:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    9e4c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
    9e50:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
    9e54:	f04f 0000 	mov.w	r0, #0
    9e58:	bd70      	pop	{r4, r5, r6, pc}
    9e5a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
    9e5e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
    9e62:	bd70      	pop	{r4, r5, r6, pc}

00009e64 <__aeabi_ddiv>:
__divdf3():
    9e64:	b570      	push	{r4, r5, r6, lr}
    9e66:	f04f 0cff 	mov.w	ip, #255	; 0xff
    9e6a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
    9e6e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
    9e72:	bf1d      	ittte	ne
    9e74:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
    9e78:	ea94 0f0c 	teqne	r4, ip
    9e7c:	ea95 0f0c 	teqne	r5, ip
    9e80:	f000 f8a7 	bleq	9fd2 <__aeabi_ddiv+0x16e>
    9e84:	eba4 0405 	sub.w	r4, r4, r5
    9e88:	ea81 0e03 	eor.w	lr, r1, r3
    9e8c:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
    9e90:	ea4f 3101 	mov.w	r1, r1, lsl #12
    9e94:	f000 8088 	beq.w	9fa8 <__aeabi_ddiv+0x144>
    9e98:	ea4f 3303 	mov.w	r3, r3, lsl #12
    9e9c:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
    9ea0:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
    9ea4:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
    9ea8:	ea4f 2202 	mov.w	r2, r2, lsl #8
    9eac:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
    9eb0:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
    9eb4:	ea4f 2600 	mov.w	r6, r0, lsl #8
    9eb8:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
    9ebc:	429d      	cmp	r5, r3
    9ebe:	bf08      	it	eq
    9ec0:	4296      	cmpeq	r6, r2
    9ec2:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
    9ec6:	f504 7440 	add.w	r4, r4, #768	; 0x300
    9eca:	d202      	bcs.n	9ed2 <__aeabi_ddiv+0x6e>
    9ecc:	085b      	lsrs	r3, r3, #1
    9ece:	ea4f 0232 	mov.w	r2, r2, rrx
    9ed2:	1ab6      	subs	r6, r6, r2
    9ed4:	eb65 0503 	sbc.w	r5, r5, r3
    9ed8:	085b      	lsrs	r3, r3, #1
    9eda:	ea4f 0232 	mov.w	r2, r2, rrx
    9ede:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
    9ee2:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
    9ee6:	ebb6 0e02 	subs.w	lr, r6, r2
    9eea:	eb75 0e03 	sbcs.w	lr, r5, r3
    9eee:	bf22      	ittt	cs
    9ef0:	1ab6      	subcs	r6, r6, r2
    9ef2:	4675      	movcs	r5, lr
    9ef4:	ea40 000c 	orrcs.w	r0, r0, ip
    9ef8:	085b      	lsrs	r3, r3, #1
    9efa:	ea4f 0232 	mov.w	r2, r2, rrx
    9efe:	ebb6 0e02 	subs.w	lr, r6, r2
    9f02:	eb75 0e03 	sbcs.w	lr, r5, r3
    9f06:	bf22      	ittt	cs
    9f08:	1ab6      	subcs	r6, r6, r2
    9f0a:	4675      	movcs	r5, lr
    9f0c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
    9f10:	085b      	lsrs	r3, r3, #1
    9f12:	ea4f 0232 	mov.w	r2, r2, rrx
    9f16:	ebb6 0e02 	subs.w	lr, r6, r2
    9f1a:	eb75 0e03 	sbcs.w	lr, r5, r3
    9f1e:	bf22      	ittt	cs
    9f20:	1ab6      	subcs	r6, r6, r2
    9f22:	4675      	movcs	r5, lr
    9f24:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
    9f28:	085b      	lsrs	r3, r3, #1
    9f2a:	ea4f 0232 	mov.w	r2, r2, rrx
    9f2e:	ebb6 0e02 	subs.w	lr, r6, r2
    9f32:	eb75 0e03 	sbcs.w	lr, r5, r3
    9f36:	bf22      	ittt	cs
    9f38:	1ab6      	subcs	r6, r6, r2
    9f3a:	4675      	movcs	r5, lr
    9f3c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
    9f40:	ea55 0e06 	orrs.w	lr, r5, r6
    9f44:	d018      	beq.n	9f78 <__aeabi_ddiv+0x114>
    9f46:	ea4f 1505 	mov.w	r5, r5, lsl #4
    9f4a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
    9f4e:	ea4f 1606 	mov.w	r6, r6, lsl #4
    9f52:	ea4f 03c3 	mov.w	r3, r3, lsl #3
    9f56:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
    9f5a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
    9f5e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
    9f62:	d1c0      	bne.n	9ee6 <__aeabi_ddiv+0x82>
    9f64:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
    9f68:	d10b      	bne.n	9f82 <__aeabi_ddiv+0x11e>
    9f6a:	ea41 0100 	orr.w	r1, r1, r0
    9f6e:	f04f 0000 	mov.w	r0, #0
    9f72:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
    9f76:	e7b6      	b.n	9ee6 <__aeabi_ddiv+0x82>
    9f78:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
    9f7c:	bf04      	itt	eq
    9f7e:	4301      	orreq	r1, r0
    9f80:	2000      	moveq	r0, #0
    9f82:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
    9f86:	bf88      	it	hi
    9f88:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
    9f8c:	f63f aeaf 	bhi.w	9cee <__aeabi_dmul+0xde>
    9f90:	ebb5 0c03 	subs.w	ip, r5, r3
    9f94:	bf04      	itt	eq
    9f96:	ebb6 0c02 	subseq.w	ip, r6, r2
    9f9a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
    9f9e:	f150 0000 	adcs.w	r0, r0, #0
    9fa2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
    9fa6:	bd70      	pop	{r4, r5, r6, pc}
    9fa8:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
    9fac:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
    9fb0:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
    9fb4:	bfc2      	ittt	gt
    9fb6:	ebd4 050c 	rsbsgt	r5, r4, ip
    9fba:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
    9fbe:	bd70      	popgt	{r4, r5, r6, pc}
    9fc0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    9fc4:	f04f 0e00 	mov.w	lr, #0
    9fc8:	3c01      	subs	r4, #1
    9fca:	e690      	b.n	9cee <__aeabi_dmul+0xde>
    9fcc:	ea45 0e06 	orr.w	lr, r5, r6
    9fd0:	e68d      	b.n	9cee <__aeabi_dmul+0xde>
    9fd2:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
    9fd6:	ea94 0f0c 	teq	r4, ip
    9fda:	bf08      	it	eq
    9fdc:	ea95 0f0c 	teqeq	r5, ip
    9fe0:	f43f af3b 	beq.w	9e5a <__aeabi_dmul+0x24a>
    9fe4:	ea94 0f0c 	teq	r4, ip
    9fe8:	d10a      	bne.n	a000 <__aeabi_ddiv+0x19c>
    9fea:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
    9fee:	f47f af34 	bne.w	9e5a <__aeabi_dmul+0x24a>
    9ff2:	ea95 0f0c 	teq	r5, ip
    9ff6:	f47f af25 	bne.w	9e44 <__aeabi_dmul+0x234>
    9ffa:	4610      	mov	r0, r2
    9ffc:	4619      	mov	r1, r3
    9ffe:	e72c      	b.n	9e5a <__aeabi_dmul+0x24a>
    a000:	ea95 0f0c 	teq	r5, ip
    a004:	d106      	bne.n	a014 <__aeabi_ddiv+0x1b0>
    a006:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
    a00a:	f43f aefd 	beq.w	9e08 <__aeabi_dmul+0x1f8>
    a00e:	4610      	mov	r0, r2
    a010:	4619      	mov	r1, r3
    a012:	e722      	b.n	9e5a <__aeabi_dmul+0x24a>
    a014:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
    a018:	bf18      	it	ne
    a01a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
    a01e:	f47f aec5 	bne.w	9dac <__aeabi_dmul+0x19c>
    a022:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
    a026:	f47f af0d 	bne.w	9e44 <__aeabi_dmul+0x234>
    a02a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
    a02e:	f47f aeeb 	bne.w	9e08 <__aeabi_dmul+0x1f8>
    a032:	e712      	b.n	9e5a <__aeabi_dmul+0x24a>

0000a034 <__gedf2>:
__gedf2():
    a034:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
    a038:	e006      	b.n	a048 <__cmpdf2+0x4>
    a03a:	bf00      	nop

0000a03c <__ledf2>:
__ledf2():
    a03c:	f04f 0c01 	mov.w	ip, #1
    a040:	e002      	b.n	a048 <__cmpdf2+0x4>
    a042:	bf00      	nop

0000a044 <__cmpdf2>:
__nedf2():
    a044:	f04f 0c01 	mov.w	ip, #1
    a048:	f84d cd04 	str.w	ip, [sp, #-4]!
    a04c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
    a050:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    a054:	ea4f 0c43 	mov.w	ip, r3, lsl #1
    a058:	bf18      	it	ne
    a05a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
    a05e:	d01b      	beq.n	a098 <__cmpdf2+0x54>
    a060:	b001      	add	sp, #4
    a062:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
    a066:	bf0c      	ite	eq
    a068:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
    a06c:	ea91 0f03 	teqne	r1, r3
    a070:	bf02      	ittt	eq
    a072:	ea90 0f02 	teqeq	r0, r2
    a076:	2000      	moveq	r0, #0
    a078:	4770      	bxeq	lr
    a07a:	f110 0f00 	cmn.w	r0, #0
    a07e:	ea91 0f03 	teq	r1, r3
    a082:	bf58      	it	pl
    a084:	4299      	cmppl	r1, r3
    a086:	bf08      	it	eq
    a088:	4290      	cmpeq	r0, r2
    a08a:	bf2c      	ite	cs
    a08c:	17d8      	asrcs	r0, r3, #31
    a08e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
    a092:	f040 0001 	orr.w	r0, r0, #1
    a096:	4770      	bx	lr
    a098:	ea4f 0c41 	mov.w	ip, r1, lsl #1
    a09c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    a0a0:	d102      	bne.n	a0a8 <__cmpdf2+0x64>
    a0a2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
    a0a6:	d107      	bne.n	a0b8 <__cmpdf2+0x74>
    a0a8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
    a0ac:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    a0b0:	d1d6      	bne.n	a060 <__cmpdf2+0x1c>
    a0b2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
    a0b6:	d0d3      	beq.n	a060 <__cmpdf2+0x1c>
    a0b8:	f85d 0b04 	ldr.w	r0, [sp], #4
    a0bc:	4770      	bx	lr
    a0be:	bf00      	nop

0000a0c0 <__aeabi_cdrcmple>:
__aeabi_cdrcmple():
    a0c0:	4684      	mov	ip, r0
    a0c2:	4610      	mov	r0, r2
    a0c4:	4662      	mov	r2, ip
    a0c6:	468c      	mov	ip, r1
    a0c8:	4619      	mov	r1, r3
    a0ca:	4663      	mov	r3, ip
    a0cc:	e000      	b.n	a0d0 <__aeabi_cdcmpeq>
    a0ce:	bf00      	nop

0000a0d0 <__aeabi_cdcmpeq>:
__aeabi_cdcmpeq():
    a0d0:	b501      	push	{r0, lr}
    a0d2:	f7ff ffb7 	bl	a044 <__cmpdf2>
    a0d6:	2800      	cmp	r0, #0
    a0d8:	bf48      	it	mi
    a0da:	f110 0f00 	cmnmi.w	r0, #0
    a0de:	bd01      	pop	{r0, pc}

0000a0e0 <__aeabi_dcmpeq>:
__aeabi_dcmpeq():
    a0e0:	f84d ed08 	str.w	lr, [sp, #-8]!
    a0e4:	f7ff fff4 	bl	a0d0 <__aeabi_cdcmpeq>
    a0e8:	bf0c      	ite	eq
    a0ea:	2001      	moveq	r0, #1
    a0ec:	2000      	movne	r0, #0
    a0ee:	f85d fb08 	ldr.w	pc, [sp], #8
    a0f2:	bf00      	nop

0000a0f4 <__aeabi_dcmplt>:
__aeabi_dcmplt():
    a0f4:	f84d ed08 	str.w	lr, [sp, #-8]!
    a0f8:	f7ff ffea 	bl	a0d0 <__aeabi_cdcmpeq>
    a0fc:	bf34      	ite	cc
    a0fe:	2001      	movcc	r0, #1
    a100:	2000      	movcs	r0, #0
    a102:	f85d fb08 	ldr.w	pc, [sp], #8
    a106:	bf00      	nop

0000a108 <__aeabi_dcmple>:
__aeabi_dcmple():
    a108:	f84d ed08 	str.w	lr, [sp, #-8]!
    a10c:	f7ff ffe0 	bl	a0d0 <__aeabi_cdcmpeq>
    a110:	bf94      	ite	ls
    a112:	2001      	movls	r0, #1
    a114:	2000      	movhi	r0, #0
    a116:	f85d fb08 	ldr.w	pc, [sp], #8
    a11a:	bf00      	nop

0000a11c <__aeabi_dcmpge>:
__aeabi_dcmpge():
    a11c:	f84d ed08 	str.w	lr, [sp, #-8]!
    a120:	f7ff ffce 	bl	a0c0 <__aeabi_cdrcmple>
    a124:	bf94      	ite	ls
    a126:	2001      	movls	r0, #1
    a128:	2000      	movhi	r0, #0
    a12a:	f85d fb08 	ldr.w	pc, [sp], #8
    a12e:	bf00      	nop

0000a130 <__aeabi_dcmpgt>:
__aeabi_dcmpgt():
    a130:	f84d ed08 	str.w	lr, [sp, #-8]!
    a134:	f7ff ffc4 	bl	a0c0 <__aeabi_cdrcmple>
    a138:	bf34      	ite	cc
    a13a:	2001      	movcc	r0, #1
    a13c:	2000      	movcs	r0, #0
    a13e:	f85d fb08 	ldr.w	pc, [sp], #8
    a142:	bf00      	nop

0000a144 <__aeabi_dcmpun>:
__unorddf2():
    a144:	ea4f 0c41 	mov.w	ip, r1, lsl #1
    a148:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    a14c:	d102      	bne.n	a154 <__aeabi_dcmpun+0x10>
    a14e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
    a152:	d10a      	bne.n	a16a <__aeabi_dcmpun+0x26>
    a154:	ea4f 0c43 	mov.w	ip, r3, lsl #1
    a158:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    a15c:	d102      	bne.n	a164 <__aeabi_dcmpun+0x20>
    a15e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
    a162:	d102      	bne.n	a16a <__aeabi_dcmpun+0x26>
    a164:	f04f 0000 	mov.w	r0, #0
    a168:	4770      	bx	lr
    a16a:	f04f 0001 	mov.w	r0, #1
    a16e:	4770      	bx	lr

0000a170 <__aeabi_d2iz>:
__aeabi_d2iz():
    a170:	ea4f 0241 	mov.w	r2, r1, lsl #1
    a174:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
    a178:	d215      	bcs.n	a1a6 <__aeabi_d2iz+0x36>
    a17a:	d511      	bpl.n	a1a0 <__aeabi_d2iz+0x30>
    a17c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
    a180:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
    a184:	d912      	bls.n	a1ac <__aeabi_d2iz+0x3c>
    a186:	ea4f 23c1 	mov.w	r3, r1, lsl #11
    a18a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
    a18e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
    a192:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
    a196:	fa23 f002 	lsr.w	r0, r3, r2
    a19a:	bf18      	it	ne
    a19c:	4240      	negne	r0, r0
    a19e:	4770      	bx	lr
    a1a0:	f04f 0000 	mov.w	r0, #0
    a1a4:	4770      	bx	lr
    a1a6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
    a1aa:	d105      	bne.n	a1b8 <__aeabi_d2iz+0x48>
    a1ac:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
    a1b0:	bf08      	it	eq
    a1b2:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
    a1b6:	4770      	bx	lr
    a1b8:	f04f 0000 	mov.w	r0, #0
    a1bc:	4770      	bx	lr
    a1be:	bf00      	nop

0000a1c0 <__aeabi_d2uiz>:
__aeabi_d2uiz():
    a1c0:	004a      	lsls	r2, r1, #1
    a1c2:	d211      	bcs.n	a1e8 <__aeabi_d2uiz+0x28>
    a1c4:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
    a1c8:	d211      	bcs.n	a1ee <__aeabi_d2uiz+0x2e>
    a1ca:	d50d      	bpl.n	a1e8 <__aeabi_d2uiz+0x28>
    a1cc:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
    a1d0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
    a1d4:	d40e      	bmi.n	a1f4 <__aeabi_d2uiz+0x34>
    a1d6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
    a1da:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
    a1de:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
    a1e2:	fa23 f002 	lsr.w	r0, r3, r2
    a1e6:	4770      	bx	lr
    a1e8:	f04f 0000 	mov.w	r0, #0
    a1ec:	4770      	bx	lr
    a1ee:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
    a1f2:	d102      	bne.n	a1fa <__aeabi_d2uiz+0x3a>
    a1f4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    a1f8:	4770      	bx	lr
    a1fa:	f04f 0000 	mov.w	r0, #0
    a1fe:	4770      	bx	lr

0000a200 <__aeabi_d2f>:
__truncdfsf2():
    a200:	ea4f 0241 	mov.w	r2, r1, lsl #1
    a204:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
    a208:	bf24      	itt	cs
    a20a:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
    a20e:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
    a212:	d90d      	bls.n	a230 <__aeabi_d2f+0x30>
    a214:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
    a218:	ea4f 02c0 	mov.w	r2, r0, lsl #3
    a21c:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
    a220:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
    a224:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
    a228:	bf08      	it	eq
    a22a:	f020 0001 	biceq.w	r0, r0, #1
    a22e:	4770      	bx	lr
    a230:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
    a234:	d121      	bne.n	a27a <__aeabi_d2f+0x7a>
    a236:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
    a23a:	bfbc      	itt	lt
    a23c:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
    a240:	4770      	bxlt	lr
    a242:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    a246:	ea4f 5252 	mov.w	r2, r2, lsr #21
    a24a:	f1c2 0218 	rsb	r2, r2, #24
    a24e:	f1c2 0c20 	rsb	ip, r2, #32
    a252:	fa10 f30c 	lsls.w	r3, r0, ip
    a256:	fa20 f002 	lsr.w	r0, r0, r2
    a25a:	bf18      	it	ne
    a25c:	f040 0001 	orrne.w	r0, r0, #1
    a260:	ea4f 23c1 	mov.w	r3, r1, lsl #11
    a264:	ea4f 23d3 	mov.w	r3, r3, lsr #11
    a268:	fa03 fc0c 	lsl.w	ip, r3, ip
    a26c:	ea40 000c 	orr.w	r0, r0, ip
    a270:	fa23 f302 	lsr.w	r3, r3, r2
    a274:	ea4f 0343 	mov.w	r3, r3, lsl #1
    a278:	e7cc      	b.n	a214 <__aeabi_d2f+0x14>
    a27a:	ea7f 5362 	mvns.w	r3, r2, asr #21
    a27e:	d107      	bne.n	a290 <__aeabi_d2f+0x90>
    a280:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
    a284:	bf1e      	ittt	ne
    a286:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
    a28a:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
    a28e:	4770      	bxne	lr
    a290:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
    a294:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
    a298:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
    a29c:	4770      	bx	lr
    a29e:	bf00      	nop

0000a2a0 <__aeabi_d2lz>:
__fixdfdi():
    a2a0:	b538      	push	{r3, r4, r5, lr}
    a2a2:	2200      	movs	r2, #0
    a2a4:	2300      	movs	r3, #0
    a2a6:	4604      	mov	r4, r0
    a2a8:	460d      	mov	r5, r1
    a2aa:	f7ff ff23 	bl	a0f4 <__aeabi_dcmplt>
    a2ae:	b928      	cbnz	r0, a2bc <__aeabi_d2lz+0x1c>
    a2b0:	4620      	mov	r0, r4
    a2b2:	4629      	mov	r1, r5
    a2b4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    a2b8:	f000 b80a 	b.w	a2d0 <__aeabi_d2ulz>
    a2bc:	4620      	mov	r0, r4
    a2be:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
    a2c2:	f000 f805 	bl	a2d0 <__aeabi_d2ulz>
    a2c6:	4240      	negs	r0, r0
    a2c8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
    a2cc:	bd38      	pop	{r3, r4, r5, pc}
    a2ce:	bf00      	nop

0000a2d0 <__aeabi_d2ulz>:
__fixunsdfdi():
    a2d0:	b5d0      	push	{r4, r6, r7, lr}
    a2d2:	2200      	movs	r2, #0
    a2d4:	4b0b      	ldr	r3, [pc, #44]	; (a304 <__aeabi_d2ulz+0x34>)
    a2d6:	4606      	mov	r6, r0
    a2d8:	460f      	mov	r7, r1
    a2da:	f7ff fc99 	bl	9c10 <__aeabi_dmul>
    a2de:	f7ff ff6f 	bl	a1c0 <__aeabi_d2uiz>
    a2e2:	4604      	mov	r4, r0
    a2e4:	f7ff fc1a 	bl	9b1c <__aeabi_ui2d>
    a2e8:	2200      	movs	r2, #0
    a2ea:	4b07      	ldr	r3, [pc, #28]	; (a308 <__aeabi_d2ulz+0x38>)
    a2ec:	f7ff fc90 	bl	9c10 <__aeabi_dmul>
    a2f0:	4602      	mov	r2, r0
    a2f2:	460b      	mov	r3, r1
    a2f4:	4630      	mov	r0, r6
    a2f6:	4639      	mov	r1, r7
    a2f8:	f7ff fad2 	bl	98a0 <__aeabi_dsub>
    a2fc:	f7ff ff60 	bl	a1c0 <__aeabi_d2uiz>
    a300:	4621      	mov	r1, r4
    a302:	bdd0      	pop	{r4, r6, r7, pc}
    a304:	3df00000 	.word	0x3df00000
    a308:	41f00000 	.word	0x41f00000

0000a30c <_close>:
_close():
    a30c:	4b02      	ldr	r3, [pc, #8]	; (a318 <_close+0xc>)
    a30e:	2258      	movs	r2, #88	; 0x58
    a310:	601a      	str	r2, [r3, #0]
    a312:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    a316:	4770      	bx	lr
    a318:	10000b84 	.word	0x10000b84

0000a31c <_fstat>:
_fstat():
    a31c:	4b02      	ldr	r3, [pc, #8]	; (a328 <_fstat+0xc>)
    a31e:	2258      	movs	r2, #88	; 0x58
    a320:	601a      	str	r2, [r3, #0]
    a322:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    a326:	4770      	bx	lr
    a328:	10000b84 	.word	0x10000b84

0000a32c <_lseek>:
_lseek():
    a32c:	4b02      	ldr	r3, [pc, #8]	; (a338 <_lseek+0xc>)
    a32e:	2258      	movs	r2, #88	; 0x58
    a330:	601a      	str	r2, [r3, #0]
    a332:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    a336:	4770      	bx	lr
    a338:	10000b84 	.word	0x10000b84

0000a33c <__FUNCTION__.8190>:
    a33c:	72746e65 6f705f79 00746e69 2873250a     entry_point..%s(
    a34c:	57203a29 494e5241 203a474e 736e6553     ): WARNING: Sens
    a35c:	6520726f 726f7272 6e6f2073 69687420     or errors on thi
    a36c:	6f622073 0a647261 73250a00 203a2928     s board...%s(): 
    a37c:	65746e45 676e6972 69616d20 0a29286e     Entering main().
    a38c:	52524500 203a524f 6e69616d 73202928     .ERROR: main() s
    a39c:	6c756f68 656e2064 20726576 75746572     hould never retu
    a3ac:	202c6e72 676f7270 206d6172 20736168     rn, program has 
    a3bc:	6e656562 6c616820 00646574 78656e55     been halted.Unex
    a3cc:	74636570 43206465 65205550 70656378     pected CPU excep
    a3dc:	6e6f6974 75250020 6e692820 72726574     tion .%u (interr
    a3ec:	29747075 73616820 63636f20 64657275     upt) has occured
    a3fc:	646e6120 65687420 6f727020 6d617267      and the program
    a40c:	6c697720 6f6e206c 61682077 000a746c      will now halt..
    a41c:	65637845 6f697470 7061206e 72616570     Exception appear
    a42c:	6f742073 20656220 27732527 6944000a     s to be '%s'..Di
    a43c:	6f792064 65722075 74736967 74207265     d you register t
    a44c:	69206568 7265746e 74707572 726f6320     he interrupt cor
    a45c:	74636572 7520796c 676e6973 63706c20     rectly using lpc
    a46c:	7265705f 65687069 736c6172 4120682e     _peripherals.h A
    a47c:	003f4950 61747365 72006b63 74657365     PI?.estack.reset
    a48c:	494d4e00 72616800 61662064 00746c75     .NMI.hard fault.
    a49c:	6f6d656d 66207972 746c7561 73756200     memory fault.bus
    a4ac:	75616620 7500746c 65676173 75616620      fault.usage fau
    a4bc:	7200746c 72657365 00646576 736f7472     lt.reserved.rtos
    a4cc:	62656400 ff006775                       .debug..

0000a4d4 <table.8042>:
    a4d4:	0000a480 0000a487 0000a48d 0000a491     ................
    a4e4:	0000a49c 0000a4a9 0000a4b3 0000a4bf     ................
    a4f4:	0000a4bf 0000a4bf 0000a4bf 0000a4c8     ................
    a504:	0000a4cd 0000a4bf 0000a4c8 0000a4c8     ................
    a514:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    a524:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    a534:	2d2d2d2d 2d2d2d2d 2d2d2d0a 4157202d     --------.---- WA
    a544:	4e494e52 57203a47 72632065 65687361     RNING: We crashe
    a554:	72702064 6f697665 796c7375 2d2d2d20     d previously ---
    a564:	20000a2d 3a435020 25783020 586c3830     -..  PC: 0x%08lX
    a574:	2020000a 203a524c 30257830 0a586c38     ..  LR: 0x%08lX.
    a584:	53502000 30203a52 38302578 000a586c     . PSR: 0x%08lX..
    a594:	30522020 7830203a 6c383025 20000a58       R0: 0x%08lX.. 
    a5a4:	3a315220 25783020 586c3830 2020000a      R1: 0x%08lX..  
    a5b4:	203a3252 30257830 0a586c38 52202000     R2: 0x%08lX..  R
    a5c4:	30203a33 38302578 000a586c 4620200a     3: 0x%08lX...  F
    a5d4:	20646e69 20656874 736c2e2a 69662074     ind the *.lst fi
    a5e4:	6920656c 6f79206e 5f207275 6c697562     le in your _buil
    a5f4:	69642064 74636572 2c79726f 646e6120     d directory, and
    a604:	6f6f6c20 0a70756b 68742020 43502065      lookup.  the PC
    a614:	6c617620 74206575 6f6c206f 65746163      value to locate
    a624:	69687720 66206863 74636e75 206e6f69      which function 
    a634:	73756163 74206465 2e736968 5420200a     caused this..  T
    a644:	4c206568 68732052 646c756f 20656220     he LR should be 
    a654:	20656874 65727027 756f6976 66202773     the 'previous' f
    a664:	74636e75 206e6f69 74616874 73617720     unction that was
    a674:	6e757220 676e696e 20200a2e 522d3052      running..  R0-R
    a684:	72612033 61702065 656d6172 73726574     3 are parameters
    a694:	206f7420 636e7566 6e6f6974 000a2e73      to functions...

0000a6a4 <ExCvt>:
    a6a4:	41459a80 808f418e 49454545 8f8e4949     ..EA.A..EEEIII..
    a6b4:	4f929290 55554f99 9b9a9959 9f9e9d9c     ...O.OUUY.......
    a6c4:	554f4941 a7a6a5a5 abaaa9a8 afaeadac     AIOU............
    a6d4:	b3b2b1b0 b7b6b5b4 bbbab9b8 bfbebdbc     ................
    a6e4:	c3c2c1c0 c7c6c5c4 cbcac9c8 cfcecdcc     ................
    a6f4:	d3d2d1d0 d7d6d5d4 dbdad9d8 dfdedddc     ................
    a704:	e3e2e1e0 e7e6e5e4 ebeae9e8 efeeedec     ................
    a714:	f3f2f1f0 f7f6f5f4 fbfaf9f8 fffefdfc     ................

0000a724 <LfnOfs>:
    a724:	07050301 12100e09 1c181614 5441461e     .............FAT
    a734:	54414600 22003233 3e3c3a2a 007f7c3f     .FAT32."*:<>?|..
    a744:	3d3b2c2b ff005d5b                       +,;=[]..

0000a74c <cvt1.8022>:
    a74c:	031a0061 031700e0 030700f8 000100ff     a...............
    a75c:	01000178 01320130 01390106 014a0110     x...0.2...9...J.
    a76c:	0179012e 01800106 0243004d 01820181     ..y.....M.C.....
    a77c:	01840182 01860184 01870187 018a0189     ................
    a78c:	018b018b 018e018d 0190018f 01910191     ................
    a79c:	01940193 019601f6 01980197 023d0198     ..............=.
    a7ac:	019c019b 0220019d 01a0019f 01a201a0     ...... .........
    a7bc:	01a401a2 01a601a4 01a701a7 01aa01a9     ................
    a7cc:	01ac01ab 01ae01ac 01af01af 01b201b1     ................
    a7dc:	01b301b3 01b501b5 01b801b7 01ba01b8     ................
    a7ec:	01bc01bb 01be01bc 01c001f7 01c201c1     ................
    a7fc:	01c401c3 01c401c5 01c801c7 01ca01c7     ................
    a80c:	01ca01cb 011001cd 000101dd 01de018e     ................
    a81c:	01f30112 01f10003 01f401f4 012801f8     ..............(.
    a82c:	01120222 0009023a 023b2c65 023d023b     "...:...e,;.;.=.
    a83c:	023f2c66 02410240 02460241 0253010a     f,?.@.A.A.F...S.
    a84c:	01810040 02550186 018a0189 018f0258     @.....U.....X...
    a85c:	0190025a 025d025c 025f025e 02610193     Z...\.].^._...a.
    a86c:	01940262 02650264 02670266 01960197     b...d.e.f.g.....
    a87c:	2c62026a 026d026c 019c026e 02710270     j.b,l.m.n...p.q.
    a88c:	0273019d 019f0274 02770276 02790278     ..s.t...v.w.x.y.
    a89c:	027b027a 2c64027c 027f027e 028101a6     z.{.|.d,~.......
    a8ac:	01a90282 02850284 02870286 024401ae     ..............D.
    a8bc:	01b201b1 028d0245 028f028e 02910290     ....E...........
    a8cc:	037b01b7 03fd0003 03ff03fe 000403ac     ..{.............
    a8dc:	03880386 038a0389 031103b1 000203c2     ................
    a8ec:	03a303a3 030803c4 000303cc 038e038c     ................
    a8fc:	03d8038f 03f20118 03f9000a 03f403f3     ................
    a90c:	03f603f5 03f703f7 03fa03f9 043003fa     ..............0.
    a91c:	04500320 04600710 048a0122 04c10136      .P...`."...6...
    a92c:	04cf010e 04c00001 014404d0 04260561     ..........D.a.&.
	...

0000a93e <cvt2.8023>:
    a93e:	00011d7d 1e002c63 1ea00196 1f00015a     }...c,......Z...
    a94e:	1f100608 1f200606 1f300608 1f400608     ...... ...0...@.
    a95e:	1f510606 1f590007 1f5b1f52 1f5d1f54     ..Q...Y.R.[.T.].
    a96e:	1f5f1f56 06081f60 000e1f70 1fbb1fba     V._.`...p.......
    a97e:	1fc91fc8 1fcb1fca 1fdb1fda 1ff91ff8     ................
    a98e:	1feb1fea 1ffb1ffa 06081f80 06081f90     ................
    a99e:	06081fa0 00041fb0 1fb91fb8 1fbc1fb2     ................
    a9ae:	00011fcc 1fd01fc3 1fe00602 1fe50602     ................
    a9be:	1fec0001 00011ff3 214e1ffc 21320001     ..........N!..2!
    a9ce:	02102170 00012184 24d02183 2c30051a     p!...!...!.$..0,
    a9de:	2c60042f 2c670102 2c750106 2c800102     /.`,..g,..u,...,
    a9ee:	2d000164 ff410826 0000031a              d..-&.A.....

0000a9fa <uc437>:
    a9fa:	00fc00c7 00e200e9 00e000e4 00e700e5     ................
    aa0a:	00eb00ea 00ef00e8 00ec00ee 00c500c4     ................
    aa1a:	00e600c9 00f400c6 00f200f6 00f900fb     ................
    aa2a:	00d600ff 00a200dc 00a500a3 019220a7     ............. ..
    aa3a:	00ed00e1 00fa00f3 00d100f1 00ba00aa     ................
    aa4a:	231000bf 00bd00ac 00a100bc 00bb00ab     ...#............
    aa5a:	25922591 25022593 25612524 25562562     .%.%.%.%$%a%b%V%
    aa6a:	25632555 25572551 255c255d 2510255b     U%c%Q%W%]%\%[%.%
    aa7a:	25342514 251c252c 253c2500 255f255e     .%4%,%.%.%<%^%_%
    aa8a:	2554255a 25662569 25502560 2567256c     Z%T%i%f%`%P%l%g%
    aa9a:	25642568 25592565 25522558 256b2553     h%d%e%Y%X%R%S%k%
    aaaa:	2518256a 2588250c 258c2584 25802590     j%.%.%.%.%.%.%.%
    aaba:	00df03b1 03c00393 03c303a3 03c400b5     ................
    aaca:	039803a6 03b403a9 03c6221e 222903b5     ........."....)"
    aada:	00b12261 22642265 23212320 224800f7     a"..e"d" #!#..H"
    aaea:	221900b0 221a00b7 00b2207f 00a025a0     ..."...". ...%..
    aafa:	4f525245 43203a52 206c6c61 5f206f74     ERROR: Call to _
    ab0a:	64616572 77202928 20687469 75206e61     read() with an u
    ab1a:	7075736e 74726f70 68206465 6c646e61     nsupported handl
    ab2a:	52450065 3a524f52 6c614320 6f74206c     e.ERROR: Call to
    ab3a:	72775f20 28657469 69772029 61206874      _write() with a
    ab4a:	6e75206e 70707573 6574726f 61682064     n unsupported ha
    ab5a:	656c646e                                 ndle.

0000ab5f <__FUNCTION__.9191>:
    ab5f:	69726570 72656870 5f736c61 74696e69     peripherals_init
    ab6f:	20445300 64726163 756f6d20 6465746e     .SD card mounted
    ab7f:	63757320 73736563 6c6c7566 57000a79      successfully..W
    ab8f:	494e5241 203a474e 63204453 20647261     ARNING: SD card 
    ab9f:	6c756f63 6f6e2064 65622074 756f6d20     could not be mou
    abaf:	6465746e 2d2d000a 2d2d2d2d 2d2d2d2d     nted..----------
    abbf:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    abcf:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    abdf:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    abef:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    abff:	2d2d2d2d 0a002d2d 250a7325 3a292873     ------..%s.%s():
    ac0f:	776f4c20 76656c20 73206c65 74726174      Low level start
    ac1f:	250a7075 49000a73 73204332 6576616c     up.%s..I2C slave
    ac2f:	74656420 65746365 74612064 64646120      detected at add
    ac3f:	73736572 7830203a 58323025 616e000a     ress: 0x%02X..na
    ac4f:	742e656d 53007478 20746e65 676e6f73     me.txt.Sent song
    ac5f:	656d616e 6f43000a 6e646c75 73207427     name..Couldn't s
    ac6f:	20646e65 676e6f73 656d616e 206f7420     end songname to 
    ac7f:	75657571 43000a65 7200494c 65646165     queue..CLI.reade
    ac8f:	6c700072 72657961 61745300 6e697472     r.player.Startin
    ac9f:	54522067 7300534f 5f676e6f 656d616e     g RTOS.song_name
    acaf:	7220715f 69656365 65206576 726f7272     _q receive error
    acbf:	706d000a 61645f33 715f6174 6e657320     ..mp3_data_q sen
    accf:	72652064 0a726f72 52524500 203a524f     d error..ERROR: 
    acdf:	6c696146 74206465 6572206f 64206461     Failed to read d
    acef:	20617461 66206f74 00656c69 4f525245     ata to file.ERRO
    acff:	46203a52 656c6961 6f742064 65706f20     R: Failed to ope
    ad0f:	25203a6e 6d000a73 645f3370 5f617461     n: %s..mp3_data_
    ad1f:	65722071 76696563 72652065 0a726f72     q receive error.
    ad2f:	65724600 4f545265 53412053 54524553     .FreeRTOS ASSERT
    ad3f:	6f202928 72756363 20646572 69646e69     () occurred indi
    ad4f:	69746163 6120676e 7265206e 20726f72     cating an error 
    ad5f:	646e6f63 6f697469 6874206e 73207461     condition that s
    ad6f:	6c756f68 454e2064 20524556 70706168     hould NEVER happ
    ad7f:	20006e65 6944202d 6f792064 61632075     en. - Did you ca
    ad8f:	61206c6c 6f6c6220 6e696b63 50412067     ll a blocking AP
    ad9f:	726f2049 6e6f6e20 6f724620 5253496d     I or non FromISR
    adaf:	41202928 69204950 6469736e 6e612065     () API inside an
    adbf:	52534920 2d20003f 64694420 756f7920      ISR?. - Did you
    adcf:	726f6620 20746567 75206f74 66206573      forget to use f
    addf:	6e697270 73286674 72656474 69202972     printf(stderr) i
    adef:	6e61206e 52534920 6548003f 69206572     n an ISR?.Here i
    adff:	68742073 696c2065 6f20656e 6f632066     s the line of co
    ae0f:	74206564 20746168 746c6168 74206465     de that halted t
    ae1f:	43206568 203a5550 70417600 63696c70     he CPU: .vApplic
    ae2f:	6f697461 6c614d6e 46636f6c 656c6961     ationMallocFaile
    ae3f:	6f6f4864 2029286b 6c6c6163 203b6465     dHook() called; 
    ae4f:	6d206f6e 2065726f 204d4152 6f6d656d     no more RAM memo
    ae5f:	73007972 6b636174 65766f20 6f6c6672     ry.stack overflo
    ae6f:	79622077 69687420 61742073 003a6b73     w by this task:.
    ae7f:	72437875 63697469 654e6c61 6e697473     uxCriticalNestin
    ae8f:	3d3d2067 55307e20 2028004c 74726f70     g == ~0UL.( port
    ae9f:	4349564e 544e495f 5254435f 45525f4c     NVIC_INT_CTRL_RE
    aeaf:	20262047 74726f70 54434556 49544341     G & portVECTACTI
    aebf:	4d5f4556 204b5341 3d3d2029 75003020     VE_MASK ) == 0.u
    aecf:	69724378 61636974 73654e6c 676e6974     xCriticalNesting
    aedf:	43637500 65727275 7250746e 69726f69     .ucCurrentPriori
    aeef:	3e207974 6375203d 5378614d 61437379     ty >= ucMaxSysCa
    aeff:	72506c6c 69726f69 28007974 726f7020     llPriority.( por
    af0f:	52494174 525f5243 26204745 726f7020     tAIRCR_REG & por
    af1f:	49525074 5449524f 52475f59 5f50554f     tPRIORITY_GROUP_
    af2f:	4b53414d 3c202920 6c75203d 5078614d     MASK ) <= ulMaxP
    af3f:	52474952 5650554f 65756c61 726f7000     RIGROUPValue.por
    af4f:	55504374 21204449 6f70203d 4f437472     tCPUID != portCO
    af5f:	58455452 5f374d5f 31703072 0044495f     RTEX_M7_r0p1_ID.
    af6f:	74726f70 49555043 3d212044 726f7020     portCPUID != por
    af7f:	524f4374 5f584554 725f374d 5f307030     tCORTEX_M7_r0p0_
    af8f:	28004449 726f7020 58414d74 4952505f     ID.( portMAX_PRI
    af9f:	554f5247 49425f50 2d205354 4d6c7520     GROUP_BITS - ulM
    afaf:	52507861 4f524749 61565055 2065756c     axPRIGROUPValue 
    afbf:	3d3d2029 4e5f5f20 5f434956 4f495250     ) == __NVIC_PRIO
    afcf:	5449425f 78750053 75657551 6e654c65     _BITS.uxQueueLen
    afdf:	20687467 2028203e 73614255 70795465     gth > ( UBaseTyp
    afef:	20745f65 00302029 74537870 63697461     e_t ) 0.pxStatic
    afff:	75657551 3d212065 4c554e20 2821004c     Queue != NULL.!(
    b00f:	70202820 75516375 53657565 61726f74      ( pucQueueStora
    b01f:	21206567 554e203d 29204c4c 20262620     ge != NULL ) && 
    b02f:	78752028 6d657449 657a6953 203d3d20     ( uxItemSize == 
    b03f:	20292030 28210029 70202820 75516375     0 ) ).!( ( pucQu
    b04f:	53657565 61726f74 3d206567 554e203d     eueStorage == NU
    b05f:	29204c4c 20262620 78752028 6d657449     LL ) && ( uxItem
    b06f:	657a6953 203d2120 20292030 53780029     Size != 0 ) ).xS
    b07f:	20657a69 73203d3d 6f657a69 51202866     ize == sizeof( Q
    b08f:	65756575 2920745f 51787000 65756575     ueue_t ).pxQueue
    b09f:	20282100 76702028 6d657449 75516f54     .!( ( pvItemToQu
    b0af:	20657565 4e203d3d 204c4c55 26262029     eue == NULL ) &&
    b0bf:	70202820 65755178 3e2d6575 74497875      ( pxQueue->uxIt
    b0cf:	69536d65 2120657a 2028203d 73614255     emSize != ( UBas
    b0df:	70795465 20745f65 55302029 29202920     eType_t ) 0U ) )
    b0ef:	20282100 43782028 5079706f 7469736f     .!( ( xCopyPosit
    b0ff:	206e6f69 71203d3d 65756575 5245564f     ion == queueOVER
    b10f:	54495257 20292045 28202626 51787020     WRITE ) && ( pxQ
    b11f:	65756575 78753e2d 676e654c 21206874     ueue->uxLength !
    b12f:	2031203d 00292029 28202821 61547820     = 1 ) ).!( ( xTa
    b13f:	65476b73 68635374 6c756465 74537265     skGetSchedulerSt
    b14f:	28657461 3d3d2029 73617420 4843536b     ate() == taskSCH
    b15f:	4c554445 535f5245 45505355 4445444e     EDULER_SUSPENDED
    b16f:	26202920 20282026 63695478 6f54736b      ) && ( xTicksTo
    b17f:	74696157 203d2120 20292030 78700029     Wait != 0 ) ).px
    b18f:	75657551 753e2d65 65744978 7a69536d     Queue->uxItemSiz
    b19f:	3d3d2065 21003020 20282028 75517870     e == 0.!( ( pxQu
    b1af:	2d657565 5178753e 65756575 65707954     eue->uxQueueType
    b1bf:	203d3d20 75657571 45555165 495f4555      == queueQUEUE_I
    b1cf:	554d5f53 20584554 26262029 70202820     S_MUTEX ) && ( p
    b1df:	65755178 3e2d6575 53782e75 70616d65     xQueue->u.xSemap
    b1ef:	65726f68 754d782e 48786574 65646c6f     hore.xMutexHolde
    b1ff:	3d212072 4c554e20 2029204c 20280029     r != NULL ) ).( 
    b20f:	75517870 20657565 28210029 28202820     pxQueue ).!( ( (
    b21f:	42767020 65666675 20292072 4e203d3d      pvBuffer ) == N
    b22f:	204c4c55 26262029 28202820 51787020     ULL ) && ( ( pxQ
    b23f:	65756575 3e2d2920 74497875 69536d65     ueue )->uxItemSi
    b24f:	2120657a 2028203d 73614255 70795465     ze != ( UBaseTyp
    b25f:	20745f65 55302029 29202920 20282100     e_t ) 0U ) ).!( 
    b26f:	76702028 66667542 3d207265 554e203d     ( pvBuffer == NU
    b27f:	29204c4c 20262620 78702028 75657551     LL ) && ( pxQueu
    b28f:	753e2d65 65744978 7a69536d 3d212065     e->uxItemSize !=
    b29f:	55202820 65736142 65707954 2920745f      ( UBaseType_t )
    b2af:	20553020 00292029 686e4978 74697265      0U ) ).xInherit
    b2bf:	65636e61 7563634f 64657272 203d3d20     anceOccurred == 
    b2cf:	41466470 0045534c 72507870 6f697665     pdFALSE.pxPrevio
    b2df:	61577375 6954656b 2800656d 69547820     usWakeTime.( xTi
    b2ef:	6e49656d 6d657263 20746e65 5530203e     meIncrement > 0U
    b2ff:	75002920 68635378 6c756465 75537265      ).uxSchedulerSu
    b30f:	6e657073 20646564 30203d3d 45787000     spended == 0.pxE
    b31f:	746e6576 7473694c 54787000 21204243     ventList.pxTCB !
    b32f:	7870203d 72727543 54746e65 70004243     = pxCurrentTCB.p
    b33f:	6d695478 74754f65 4c444900 696c0045     xTimeOut.IDLE.li
    b34f:	55437473 4e455252 494c5f54 4c5f5453     stCURRENT_LIST_L
    b35f:	54474e45 26202848 78702028 64616552     ENGTH( &( pxRead
    b36f:	73615479 694c736b 5b737473 54787520     yTasksLists[ uxT
    b37f:	7250706f 69726f69 5d207974 29202920     opPriority ] ) )
    b38f:	30203e20 54787000 736b6369 61576f54      > 0.pxTicksToWa
    b39f:	70007469 74537875 426b6361 65666675     it.puxStackBuffe
    b3af:	3d212072 4c554e20 7870004c 6b736154     r != NULL.pxTask
    b3bf:	66667542 21207265 554e203d 78004c4c     Buffer != NULL.x
    b3cf:	657a6953 203d3d20 657a6973 2028666f     Size == sizeof( 
    b3df:	5f424354 00292074 696c2028 494c7473     TCB_t ).( listLI
    b3ef:	495f5453 4d455f53 28595450 44787020     ST_IS_EMPTY( pxD
    b3ff:	79616c65 61546465 694c6b73 29207473     elayedTaskList )
    b40f:	70002920 42435478 203d3d20 75437870      ).pxTCB == pxCu
    b41f:	6e657272 42435474 54787000 3e2d4243     rrentTCB.pxTCB->
    b42f:	754d7875 65786574 6c654873 78700064     uxMutexesHeld.px
    b43f:	6c626e55 656b636f 42435464 53787500     UnblockedTCB.uxS
    b44f:	64656863 72656c75 70737553 65646e65     chedulerSuspende
    b45f:	ffff0064                                 d....

0000b464 <gpio_memory_map>:
    b464:	20098000 20098020 20098040 20098060     ...  .. @.. `.. 
    b474:	20098080 200980a0                       ... ... 

0000b47c <hw_timers>:
    b47c:	40004000 00000001 0000b4ac 40008000     .@.@...........@
    b48c:	00000002 0000b4b2 40090000 00000003     ...........@....
    b49c:	0000b4b8 40094000 00000004 0000b4be     .....@.@........
    b4ac:	545f5748 57480030 0031545f 545f5748     HW_T0.HW_T1.HW_T
    b4bc:	57480032 0033545f 000045fd 000045f1     2.HW_T3..E...E..
    b4cc:	000045e5 57482020 61745320 203a6574     .E..  HW State: 
    b4dc:	30257830 49005832 003a4332 72617453     0x%02X.I2C:.Star
    b4ec:	676e6974 61727420 6566736e 69772072     ting transfer wi
    b4fc:	64206874 63697665 64612065 73657264     th device addres
    b50c:	30203a73 32302578 20200058 696e6946     s: 0x%02X.  Fini
    b51c:	64656873 74697720 74732068 3a657461     shed with state:
    b52c:	25783020 00583230 30633269 63326900      0x%02X.i2c0.i2c
    b53c:	32690031                                 1.i2c2.

0000b543 <lpc_peripheral_pconp_bit_map>:
    b543:	16020100 18040317 13070619 0a15001a     ................
    b553:	00000000 000c0000 001d0d00 00000000     ................
    b563:	00000000 00000014 00000000 00000000     ................
	...
    b59b:	61550e00 00307472 74726155 61550031     ..Uart0.Uart1.Ua
    b5ab:	00327472 74726155 ffff0033               rt2.Uart3....

0000b5b8 <uart__isrs>:
    b5b8:	00004a01 000049f5 000049e9 000049dd     .J...I...I...I..

0000b5c8 <uart_peripheral_ids>:
    b5c8:	08070605                                ....

0000b5cc <_ctype_>:
    b5cc:	20202000 20202020 28282020 20282828     .         ((((( 
    b5dc:	20202020 20202020 20202020 20202020                     
    b5ec:	10108820 10101010 10101010 10101010      ...............
    b5fc:	04040410 04040404 10040404 10101010     ................
    b60c:	41411010 41414141 01010101 01010101     ..AAAAAA........
    b61c:	01010101 01010101 01010101 10101010     ................
    b62c:	42421010 42424242 02020202 02020202     ..BBBBBB........
    b63c:	02020202 02020202 02020202 10101010     ................
    b64c:	00000020 00000000 00000000 00000000      ...............
	...
    b6cc:	ffffff00                                ....

0000b6d0 <_global_impure_ptr>:
    b6d0:	10000160 2b302d23 6c680020 6665004c     `...#-0+ .hlL.ef
    b6e0:	47464567 464e4900 666e6900 4e414e00     gEFG.INF.inf.NAN
    b6f0:	6e616e00 32313000 36353433 41393837     .nan.0123456789A
    b700:	45444342 31300046 35343332 39383736     BCDEF.0123456789
    b710:	64636261 65006665 00646c25              abcdef.e%ld.

0000b71c <fpi.7522>:
    b71c:	00000035 fffffbce 000003cb 00000001     5...............
    b72c:	00000000                                ....

0000b730 <fpinan.7558>:
    b730:	00000034 fffffbce 000003cb 00000001     4...............
    b740:	00000000 ffffffff                       ........

0000b748 <tinytens>:
    b748:	97d889bc 3c9cd2b2 d5a8a733 3949f623     .......<3...#.I9
    b758:	44f4a73d 32a50ffd cf8c979d 255bba08     =..D...2......[%
    b768:	64ac6f43 11680628 69666e49 7974696e     Co.d(.h.Infinity
    b778:	4e614e00 ffffff00                       .NaN....

0000b780 <__sf_fake_stderr>:
	...

0000b7a0 <__sf_fake_stdin>:
	...

0000b7c0 <__sf_fake_stdout>:
	...

0000b7e0 <_C_numeric_locale>:
    b7e0:	0000b7ec 0000a439 100001c0 0043002e     ....9.........C.
    b7f0:	49534f50 ffff0058                       POSIX...

0000b7f8 <__mprec_bigtens>:
    b7f8:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
    b808:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
    b818:	7f73bf3c 75154fdd                       <.s..O.u

0000b820 <__mprec_tens>:
    b820:	00000000 3ff00000 00000000 40240000     .......?......$@
    b830:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
    b840:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
    b850:	00000000 412e8480 00000000 416312d0     .......A......cA
    b860:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
    b870:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
    b880:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
    b890:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
    b8a0:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
    b8b0:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
    b8c0:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
    b8d0:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
    b8e0:	79d99db4 44ea7843                       ...yCx.D

0000b8e8 <p05.7444>:
    b8e8:	00000005 00000019 0000007d              ........}...
